function Gk(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var iC = {}, NP = {
  get exports() {
    return iC;
  },
  set exports(t) {
    iC = t;
  }
}, qd = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var RT, L3;
function Ah() {
  if (L3)
    return RT;
  L3 = 1;
  var t = Object.getOwnPropertySymbols, e = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function i() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var l = {}, c = 0; c < 10; c++)
        l["_" + String.fromCharCode(c)] = c;
      var h = Object.getOwnPropertyNames(l).map(function(v) {
        return l[v];
      });
      if (h.join("") !== "0123456789")
        return !1;
      var g = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(v) {
        g[v] = v;
      }), Object.keys(Object.assign({}, g)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return RT = i() ? Object.assign : function(s, l) {
    for (var c, h = r(s), g, v = 1; v < arguments.length; v++) {
      c = Object(arguments[v]);
      for (var C in c)
        e.call(c, C) && (h[C] = c[C]);
      if (t) {
        g = t(c);
        for (var S = 0; S < g.length; S++)
          n.call(c, g[S]) && (h[g[S]] = c[g[S]]);
      }
    }
    return h;
  }, RT;
}
var va = {}, wP = {
  get exports() {
    return va;
  },
  set exports(t) {
    va = t;
  }
}, un = {};
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var I3;
function OP() {
  if (I3)
    return un;
  I3 = 1;
  var t = Ah(), e = 60103, n = 60106;
  un.Fragment = 60107, un.StrictMode = 60108, un.Profiler = 60114;
  var r = 60109, i = 60110, s = 60112;
  un.Suspense = 60113;
  var l = 60115, c = 60116;
  if (typeof Symbol == "function" && Symbol.for) {
    var h = Symbol.for;
    e = h("react.element"), n = h("react.portal"), un.Fragment = h("react.fragment"), un.StrictMode = h("react.strict_mode"), un.Profiler = h("react.profiler"), r = h("react.provider"), i = h("react.context"), s = h("react.forward_ref"), un.Suspense = h("react.suspense"), l = h("react.memo"), c = h("react.lazy");
  }
  var g = typeof Symbol == "function" && Symbol.iterator;
  function v(te) {
    return te === null || typeof te != "object" ? null : (te = g && te[g] || te["@@iterator"], typeof te == "function" ? te : null);
  }
  function C(te) {
    for (var he = "https://reactjs.org/docs/error-decoder.html?invariant=" + te, De = 1; De < arguments.length; De++)
      he += "&args[]=" + encodeURIComponent(arguments[De]);
    return "Minified React error #" + te + "; visit " + he + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var S = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, b = {};
  function N(te, he, De) {
    this.props = te, this.context = he, this.refs = b, this.updater = De || S;
  }
  N.prototype.isReactComponent = {}, N.prototype.setState = function(te, he) {
    if (typeof te != "object" && typeof te != "function" && te != null)
      throw Error(C(85));
    this.updater.enqueueSetState(this, te, he, "setState");
  }, N.prototype.forceUpdate = function(te) {
    this.updater.enqueueForceUpdate(this, te, "forceUpdate");
  };
  function O() {
  }
  O.prototype = N.prototype;
  function L(te, he, De) {
    this.props = te, this.context = he, this.refs = b, this.updater = De || S;
  }
  var P = L.prototype = new O();
  P.constructor = L, t(P, N.prototype), P.isPureReactComponent = !0;
  var Y = { current: null }, j = Object.prototype.hasOwnProperty, oe = { key: !0, ref: !0, __self: !0, __source: !0 };
  function ee(te, he, De) {
    var We, I = {}, F = null, we = null;
    if (he != null)
      for (We in he.ref !== void 0 && (we = he.ref), he.key !== void 0 && (F = "" + he.key), he)
        j.call(he, We) && !oe.hasOwnProperty(We) && (I[We] = he[We]);
    var Je = arguments.length - 2;
    if (Je === 1)
      I.children = De;
    else if (1 < Je) {
      for (var Ze = Array(Je), rt = 0; rt < Je; rt++)
        Ze[rt] = arguments[rt + 2];
      I.children = Ze;
    }
    if (te && te.defaultProps)
      for (We in Je = te.defaultProps, Je)
        I[We] === void 0 && (I[We] = Je[We]);
    return { $$typeof: e, type: te, key: F, ref: we, props: I, _owner: Y.current };
  }
  function z(te, he) {
    return { $$typeof: e, type: te.type, key: he, ref: te.ref, props: te.props, _owner: te._owner };
  }
  function H(te) {
    return typeof te == "object" && te !== null && te.$$typeof === e;
  }
  function Z(te) {
    var he = { "=": "=0", ":": "=2" };
    return "$" + te.replace(/[=:]/g, function(De) {
      return he[De];
    });
  }
  var me = /\/+/g;
  function Ie(te, he) {
    return typeof te == "object" && te !== null && te.key != null ? Z("" + te.key) : he.toString(36);
  }
  function fe(te, he, De, We, I) {
    var F = typeof te;
    (F === "undefined" || F === "boolean") && (te = null);
    var we = !1;
    if (te === null)
      we = !0;
    else
      switch (F) {
        case "string":
        case "number":
          we = !0;
          break;
        case "object":
          switch (te.$$typeof) {
            case e:
            case n:
              we = !0;
          }
      }
    if (we)
      return we = te, I = I(we), te = We === "" ? "." + Ie(we, 0) : We, Array.isArray(I) ? (De = "", te != null && (De = te.replace(me, "$&/") + "/"), fe(I, he, De, "", function(rt) {
        return rt;
      })) : I != null && (H(I) && (I = z(I, De + (!I.key || we && we.key === I.key ? "" : ("" + I.key).replace(me, "$&/") + "/") + te)), he.push(I)), 1;
    if (we = 0, We = We === "" ? "." : We + ":", Array.isArray(te))
      for (var Je = 0; Je < te.length; Je++) {
        F = te[Je];
        var Ze = We + Ie(F, Je);
        we += fe(F, he, De, Ze, I);
      }
    else if (Ze = v(te), typeof Ze == "function")
      for (te = Ze.call(te), Je = 0; !(F = te.next()).done; )
        F = F.value, Ze = We + Ie(F, Je++), we += fe(F, he, De, Ze, I);
    else if (F === "object")
      throw he = "" + te, Error(C(31, he === "[object Object]" ? "object with keys {" + Object.keys(te).join(", ") + "}" : he));
    return we;
  }
  function pe(te, he, De) {
    if (te == null)
      return te;
    var We = [], I = 0;
    return fe(te, We, "", "", function(F) {
      return he.call(De, F, I++);
    }), We;
  }
  function Ce(te) {
    if (te._status === -1) {
      var he = te._result;
      he = he(), te._status = 0, te._result = he, he.then(function(De) {
        te._status === 0 && (De = De.default, te._status = 1, te._result = De);
      }, function(De) {
        te._status === 0 && (te._status = 2, te._result = De);
      });
    }
    if (te._status === 1)
      return te._result;
    throw te._result;
  }
  var Be = { current: null };
  function J() {
    var te = Be.current;
    if (te === null)
      throw Error(C(321));
    return te;
  }
  var lt = { ReactCurrentDispatcher: Be, ReactCurrentBatchConfig: { transition: 0 }, ReactCurrentOwner: Y, IsSomeRendererActing: { current: !1 }, assign: t };
  return un.Children = { map: pe, forEach: function(te, he, De) {
    pe(te, function() {
      he.apply(this, arguments);
    }, De);
  }, count: function(te) {
    var he = 0;
    return pe(te, function() {
      he++;
    }), he;
  }, toArray: function(te) {
    return pe(te, function(he) {
      return he;
    }) || [];
  }, only: function(te) {
    if (!H(te))
      throw Error(C(143));
    return te;
  } }, un.Component = N, un.PureComponent = L, un.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lt, un.cloneElement = function(te, he, De) {
    if (te == null)
      throw Error(C(267, te));
    var We = t({}, te.props), I = te.key, F = te.ref, we = te._owner;
    if (he != null) {
      if (he.ref !== void 0 && (F = he.ref, we = Y.current), he.key !== void 0 && (I = "" + he.key), te.type && te.type.defaultProps)
        var Je = te.type.defaultProps;
      for (Ze in he)
        j.call(he, Ze) && !oe.hasOwnProperty(Ze) && (We[Ze] = he[Ze] === void 0 && Je !== void 0 ? Je[Ze] : he[Ze]);
    }
    var Ze = arguments.length - 2;
    if (Ze === 1)
      We.children = De;
    else if (1 < Ze) {
      Je = Array(Ze);
      for (var rt = 0; rt < Ze; rt++)
        Je[rt] = arguments[rt + 2];
      We.children = Je;
    }
    return {
      $$typeof: e,
      type: te.type,
      key: I,
      ref: F,
      props: We,
      _owner: we
    };
  }, un.createContext = function(te, he) {
    return he === void 0 && (he = null), te = { $$typeof: i, _calculateChangedBits: he, _currentValue: te, _currentValue2: te, _threadCount: 0, Provider: null, Consumer: null }, te.Provider = { $$typeof: r, _context: te }, te.Consumer = te;
  }, un.createElement = ee, un.createFactory = function(te) {
    var he = ee.bind(null, te);
    return he.type = te, he;
  }, un.createRef = function() {
    return { current: null };
  }, un.forwardRef = function(te) {
    return { $$typeof: s, render: te };
  }, un.isValidElement = H, un.lazy = function(te) {
    return { $$typeof: c, _payload: { _status: -1, _result: te }, _init: Ce };
  }, un.memo = function(te, he) {
    return { $$typeof: l, type: te, compare: he === void 0 ? null : he };
  }, un.useCallback = function(te, he) {
    return J().useCallback(te, he);
  }, un.useContext = function(te, he) {
    return J().useContext(te, he);
  }, un.useDebugValue = function() {
  }, un.useEffect = function(te, he) {
    return J().useEffect(te, he);
  }, un.useImperativeHandle = function(te, he, De) {
    return J().useImperativeHandle(te, he, De);
  }, un.useLayoutEffect = function(te, he) {
    return J().useLayoutEffect(te, he);
  }, un.useMemo = function(te, he) {
    return J().useMemo(te, he);
  }, un.useReducer = function(te, he, De) {
    return J().useReducer(te, he, De);
  }, un.useRef = function(te) {
    return J().useRef(te);
  }, un.useState = function(te) {
    return J().useState(te);
  }, un.version = "17.0.2", un;
}
var DT = {};
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var P3;
function RP() {
  return P3 || (P3 = 1, function(t) {
    process.env.NODE_ENV !== "production" && function() {
      var e = Ah(), n = "17.0.2", r = 60103, i = 60106;
      t.Fragment = 60107, t.StrictMode = 60108, t.Profiler = 60114;
      var s = 60109, l = 60110, c = 60112;
      t.Suspense = 60113;
      var h = 60120, g = 60115, v = 60116, C = 60121, S = 60122, b = 60117, N = 60129, O = 60131;
      if (typeof Symbol == "function" && Symbol.for) {
        var L = Symbol.for;
        r = L("react.element"), i = L("react.portal"), t.Fragment = L("react.fragment"), t.StrictMode = L("react.strict_mode"), t.Profiler = L("react.profiler"), s = L("react.provider"), l = L("react.context"), c = L("react.forward_ref"), t.Suspense = L("react.suspense"), h = L("react.suspense_list"), g = L("react.memo"), v = L("react.lazy"), C = L("react.block"), S = L("react.server.block"), b = L("react.fundamental"), L("react.scope"), L("react.opaque.id"), N = L("react.debug_trace_mode"), L("react.offscreen"), O = L("react.legacy_hidden");
      }
      var P = typeof Symbol == "function" && Symbol.iterator, Y = "@@iterator";
      function j(D) {
        if (D === null || typeof D != "object")
          return null;
        var Q = P && D[P] || D[Y];
        return typeof Q == "function" ? Q : null;
      }
      var oe = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, ee = {
        transition: 0
      }, z = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, H = {}, Z = null;
      function me(D) {
        Z = D;
      }
      H.setExtraStackFrame = function(D) {
        Z = D;
      }, H.getCurrentStack = null, H.getStackAddendum = function() {
        var D = "";
        Z && (D += Z);
        var Q = H.getCurrentStack;
        return Q && (D += Q() || ""), D;
      };
      var Ie = {
        current: !1
      }, fe = {
        ReactCurrentDispatcher: oe,
        ReactCurrentBatchConfig: ee,
        ReactCurrentOwner: z,
        IsSomeRendererActing: Ie,
        // Used by renderers to avoid bundling object-assign twice in UMD bundles:
        assign: e
      };
      fe.ReactDebugCurrentFrame = H;
      function pe(D) {
        {
          for (var Q = arguments.length, ce = new Array(Q > 1 ? Q - 1 : 0), ye = 1; ye < Q; ye++)
            ce[ye - 1] = arguments[ye];
          Be("warn", D, ce);
        }
      }
      function Ce(D) {
        {
          for (var Q = arguments.length, ce = new Array(Q > 1 ? Q - 1 : 0), ye = 1; ye < Q; ye++)
            ce[ye - 1] = arguments[ye];
          Be("error", D, ce);
        }
      }
      function Be(D, Q, ce) {
        {
          var ye = fe.ReactDebugCurrentFrame, je = ye.getStackAddendum();
          je !== "" && (Q += "%s", ce = ce.concat([je]));
          var Ct = ce.map(function(dt) {
            return "" + dt;
          });
          Ct.unshift("Warning: " + Q), Function.prototype.apply.call(console[D], console, Ct);
        }
      }
      var J = {};
      function lt(D, Q) {
        {
          var ce = D.constructor, ye = ce && (ce.displayName || ce.name) || "ReactClass", je = ye + "." + Q;
          if (J[je])
            return;
          Ce("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", Q, ye), J[je] = !0;
        }
      }
      var te = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(D) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(D, Q, ce) {
          lt(D, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(D, Q, ce, ye) {
          lt(D, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(D, Q, ce, ye) {
          lt(D, "setState");
        }
      }, he = {};
      Object.freeze(he);
      function De(D, Q, ce) {
        this.props = D, this.context = Q, this.refs = he, this.updater = ce || te;
      }
      De.prototype.isReactComponent = {}, De.prototype.setState = function(D, Q) {
        if (!(typeof D == "object" || typeof D == "function" || D == null))
          throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, D, Q, "setState");
      }, De.prototype.forceUpdate = function(D) {
        this.updater.enqueueForceUpdate(this, D, "forceUpdate");
      };
      {
        var We = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, I = function(D, Q) {
          Object.defineProperty(De.prototype, D, {
            get: function() {
              pe("%s(...) is deprecated in plain JavaScript React classes. %s", Q[0], Q[1]);
            }
          });
        };
        for (var F in We)
          We.hasOwnProperty(F) && I(F, We[F]);
      }
      function we() {
      }
      we.prototype = De.prototype;
      function Je(D, Q, ce) {
        this.props = D, this.context = Q, this.refs = he, this.updater = ce || te;
      }
      var Ze = Je.prototype = new we();
      Ze.constructor = Je, e(Ze, De.prototype), Ze.isPureReactComponent = !0;
      function rt() {
        var D = {
          current: null
        };
        return Object.seal(D), D;
      }
      function Yt(D, Q, ce) {
        var ye = Q.displayName || Q.name || "";
        return D.displayName || (ye !== "" ? ce + "(" + ye + ")" : ce);
      }
      function Lt(D) {
        return D.displayName || "Context";
      }
      function It(D) {
        if (D == null)
          return null;
        if (typeof D.tag == "number" && Ce("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."), typeof D == "function")
          return D.displayName || D.name || null;
        if (typeof D == "string")
          return D;
        switch (D) {
          case t.Fragment:
            return "Fragment";
          case i:
            return "Portal";
          case t.Profiler:
            return "Profiler";
          case t.StrictMode:
            return "StrictMode";
          case t.Suspense:
            return "Suspense";
          case h:
            return "SuspenseList";
        }
        if (typeof D == "object")
          switch (D.$$typeof) {
            case l:
              var Q = D;
              return Lt(Q) + ".Consumer";
            case s:
              var ce = D;
              return Lt(ce._context) + ".Provider";
            case c:
              return Yt(D, D.render, "ForwardRef");
            case g:
              return It(D.type);
            case C:
              return It(D._render);
            case v: {
              var ye = D, je = ye._payload, Ct = ye._init;
              try {
                return It(Ct(je));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var En = Object.prototype.hasOwnProperty, an = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, Xt, Hr, ur;
      ur = {};
      function wn(D) {
        if (En.call(D, "ref")) {
          var Q = Object.getOwnPropertyDescriptor(D, "ref").get;
          if (Q && Q.isReactWarning)
            return !1;
        }
        return D.ref !== void 0;
      }
      function zr(D) {
        if (En.call(D, "key")) {
          var Q = Object.getOwnPropertyDescriptor(D, "key").get;
          if (Q && Q.isReactWarning)
            return !1;
        }
        return D.key !== void 0;
      }
      function qr(D, Q) {
        var ce = function() {
          Xt || (Xt = !0, Ce("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Q));
        };
        ce.isReactWarning = !0, Object.defineProperty(D, "key", {
          get: ce,
          configurable: !0
        });
      }
      function cr(D, Q) {
        var ce = function() {
          Hr || (Hr = !0, Ce("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Q));
        };
        ce.isReactWarning = !0, Object.defineProperty(D, "ref", {
          get: ce,
          configurable: !0
        });
      }
      function yo(D) {
        if (typeof D.ref == "string" && z.current && D.__self && z.current.stateNode !== D.__self) {
          var Q = It(z.current.type);
          ur[Q] || (Ce('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Q, D.ref), ur[Q] = !0);
        }
      }
      var fr = function(D, Q, ce, ye, je, Ct, dt) {
        var pt = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: r,
          // Built-in properties that belong on the element
          type: D,
          key: Q,
          ref: ce,
          props: dt,
          // Record the component responsible for creating this element.
          _owner: Ct
        };
        return pt._store = {}, Object.defineProperty(pt._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(pt, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: ye
        }), Object.defineProperty(pt, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: je
        }), Object.freeze && (Object.freeze(pt.props), Object.freeze(pt)), pt;
      };
      function ni(D, Q, ce) {
        var ye, je = {}, Ct = null, dt = null, pt = null, ut = null;
        if (Q != null) {
          wn(Q) && (dt = Q.ref, yo(Q)), zr(Q) && (Ct = "" + Q.key), pt = Q.__self === void 0 ? null : Q.__self, ut = Q.__source === void 0 ? null : Q.__source;
          for (ye in Q)
            En.call(Q, ye) && !an.hasOwnProperty(ye) && (je[ye] = Q[ye]);
        }
        var sn = arguments.length - 2;
        if (sn === 1)
          je.children = ce;
        else if (sn > 1) {
          for (var kn = Array(sn), Fn = 0; Fn < sn; Fn++)
            kn[Fn] = arguments[Fn + 2];
          Object.freeze && Object.freeze(kn), je.children = kn;
        }
        if (D && D.defaultProps) {
          var Yn = D.defaultProps;
          for (ye in Yn)
            je[ye] === void 0 && (je[ye] = Yn[ye]);
        }
        if (Ct || dt) {
          var Nr = typeof D == "function" ? D.displayName || D.name || "Unknown" : D;
          Ct && qr(je, Nr), dt && cr(je, Nr);
        }
        return fr(D, Ct, dt, pt, ut, z.current, je);
      }
      function vo(D, Q) {
        var ce = fr(D.type, Q, D.ref, D._self, D._source, D._owner, D.props);
        return ce;
      }
      function Ci(D, Q, ce) {
        if (D == null)
          throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + D + ".");
        var ye, je = e({}, D.props), Ct = D.key, dt = D.ref, pt = D._self, ut = D._source, sn = D._owner;
        if (Q != null) {
          wn(Q) && (dt = Q.ref, sn = z.current), zr(Q) && (Ct = "" + Q.key);
          var kn;
          D.type && D.type.defaultProps && (kn = D.type.defaultProps);
          for (ye in Q)
            En.call(Q, ye) && !an.hasOwnProperty(ye) && (Q[ye] === void 0 && kn !== void 0 ? je[ye] = kn[ye] : je[ye] = Q[ye]);
        }
        var Fn = arguments.length - 2;
        if (Fn === 1)
          je.children = ce;
        else if (Fn > 1) {
          for (var Yn = Array(Fn), Nr = 0; Nr < Fn; Nr++)
            Yn[Nr] = arguments[Nr + 2];
          je.children = Yn;
        }
        return fr(D.type, Ct, dt, pt, ut, sn, je);
      }
      function ir(D) {
        return typeof D == "object" && D !== null && D.$$typeof === r;
      }
      var jr = ".", gn = ":";
      function le(D) {
        var Q = /[=:]/g, ce = {
          "=": "=0",
          ":": "=2"
        }, ye = D.replace(Q, function(je) {
          return ce[je];
        });
        return "$" + ye;
      }
      var Re = !1, at = /\/+/g;
      function Bt(D) {
        return D.replace(at, "$&/");
      }
      function be(D, Q) {
        return typeof D == "object" && D !== null && D.key != null ? le("" + D.key) : Q.toString(36);
      }
      function ze(D, Q, ce, ye, je) {
        var Ct = typeof D;
        (Ct === "undefined" || Ct === "boolean") && (D = null);
        var dt = !1;
        if (D === null)
          dt = !0;
        else
          switch (Ct) {
            case "string":
            case "number":
              dt = !0;
              break;
            case "object":
              switch (D.$$typeof) {
                case r:
                case i:
                  dt = !0;
              }
          }
        if (dt) {
          var pt = D, ut = je(pt), sn = ye === "" ? jr + be(pt, 0) : ye;
          if (Array.isArray(ut)) {
            var kn = "";
            sn != null && (kn = Bt(sn) + "/"), ze(ut, Q, kn, "", function(Fc) {
              return Fc;
            });
          } else
            ut != null && (ir(ut) && (ut = vo(
              ut,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              ce + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
              (ut.key && (!pt || pt.key !== ut.key) ? (
                // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                Bt("" + ut.key) + "/"
              ) : "") + sn
            )), Q.push(ut));
          return 1;
        }
        var Fn, Yn, Nr = 0, wr = ye === "" ? jr : ye + gn;
        if (Array.isArray(D))
          for (var Bi = 0; Bi < D.length; Bi++)
            Fn = D[Bi], Yn = wr + be(Fn, Bi), Nr += ze(Fn, Q, ce, Yn, je);
        else {
          var ys = j(D);
          if (typeof ys == "function") {
            var vs = D;
            ys === vs.entries && (Re || pe("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), Re = !0);
            for (var Vo = ys.call(vs), Pc, Lh = 0; !(Pc = Vo.next()).done; )
              Fn = Pc.value, Yn = wr + be(Fn, Lh++), Nr += ze(Fn, Q, ce, Yn, je);
          } else if (Ct === "object") {
            var fu = "" + D;
            throw Error("Objects are not valid as a React child (found: " + (fu === "[object Object]" ? "object with keys {" + Object.keys(D).join(", ") + "}" : fu) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Nr;
      }
      function st(D, Q, ce) {
        if (D == null)
          return D;
        var ye = [], je = 0;
        return ze(D, ye, "", "", function(Ct) {
          return Q.call(ce, Ct, je++);
        }), ye;
      }
      function Ot(D) {
        var Q = 0;
        return st(D, function() {
          Q++;
        }), Q;
      }
      function en(D, Q, ce) {
        st(D, function() {
          Q.apply(this, arguments);
        }, ce);
      }
      function tn(D) {
        return st(D, function(Q) {
          return Q;
        }) || [];
      }
      function Tt(D) {
        if (!ir(D))
          throw Error("React.Children.only expected to receive a single React element child.");
        return D;
      }
      function On(D, Q) {
        Q === void 0 ? Q = null : Q !== null && typeof Q != "function" && Ce("createContext: Expected the optional second argument to be a function. Instead received: %s", Q);
        var ce = {
          $$typeof: l,
          _calculateChangedBits: Q,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: D,
          _currentValue2: D,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null
        };
        ce.Provider = {
          $$typeof: s,
          _context: ce
        };
        var ye = !1, je = !1, Ct = !1;
        {
          var dt = {
            $$typeof: l,
            _context: ce,
            _calculateChangedBits: ce._calculateChangedBits
          };
          Object.defineProperties(dt, {
            Provider: {
              get: function() {
                return je || (je = !0, Ce("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), ce.Provider;
              },
              set: function(pt) {
                ce.Provider = pt;
              }
            },
            _currentValue: {
              get: function() {
                return ce._currentValue;
              },
              set: function(pt) {
                ce._currentValue = pt;
              }
            },
            _currentValue2: {
              get: function() {
                return ce._currentValue2;
              },
              set: function(pt) {
                ce._currentValue2 = pt;
              }
            },
            _threadCount: {
              get: function() {
                return ce._threadCount;
              },
              set: function(pt) {
                ce._threadCount = pt;
              }
            },
            Consumer: {
              get: function() {
                return ye || (ye = !0, Ce("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), ce.Consumer;
              }
            },
            displayName: {
              get: function() {
                return ce.displayName;
              },
              set: function(pt) {
                Ct || (pe("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", pt), Ct = !0);
              }
            }
          }), ce.Consumer = dt;
        }
        return ce._currentRenderer = null, ce._currentRenderer2 = null, ce;
      }
      var Gt = -1, Vr = 0, us = 1, Yi = 2;
      function Eo(D) {
        if (D._status === Gt) {
          var Q = D._result, ce = Q(), ye = D;
          ye._status = Vr, ye._result = ce, ce.then(function(je) {
            if (D._status === Vr) {
              var Ct = je.default;
              Ct === void 0 && Ce(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, je);
              var dt = D;
              dt._status = us, dt._result = Ct;
            }
          }, function(je) {
            if (D._status === Vr) {
              var Ct = D;
              Ct._status = Yi, Ct._result = je;
            }
          });
        }
        if (D._status === us)
          return D._result;
        throw D._result;
      }
      function Uo(D) {
        var Q = {
          // We use these fields to store the result.
          _status: -1,
          _result: D
        }, ce = {
          $$typeof: v,
          _payload: Q,
          _init: Eo
        };
        {
          var ye, je;
          Object.defineProperties(ce, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return ye;
              },
              set: function(Ct) {
                Ce("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), ye = Ct, Object.defineProperty(ce, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return je;
              },
              set: function(Ct) {
                Ce("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), je = Ct, Object.defineProperty(ce, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return ce;
      }
      function Ii(D) {
        D != null && D.$$typeof === g ? Ce("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof D != "function" ? Ce("forwardRef requires a render function but was given %s.", D === null ? "null" : typeof D) : D.length !== 0 && D.length !== 2 && Ce("forwardRef render functions accept exactly two parameters: props and ref. %s", D.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), D != null && (D.defaultProps != null || D.propTypes != null) && Ce("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var Q = {
          $$typeof: c,
          render: D
        };
        {
          var ce;
          Object.defineProperty(Q, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ce;
            },
            set: function(ye) {
              ce = ye, D.displayName == null && (D.displayName = ye);
            }
          });
        }
        return Q;
      }
      var $r = !1;
      function Gr(D) {
        return !!(typeof D == "string" || typeof D == "function" || D === t.Fragment || D === t.Profiler || D === N || D === t.StrictMode || D === t.Suspense || D === h || D === O || $r || typeof D == "object" && D !== null && (D.$$typeof === v || D.$$typeof === g || D.$$typeof === s || D.$$typeof === l || D.$$typeof === c || D.$$typeof === b || D.$$typeof === C || D[0] === S));
      }
      function To(D, Q) {
        Gr(D) || Ce("memo: The first argument must be a component. Instead received: %s", D === null ? "null" : typeof D);
        var ce = {
          $$typeof: g,
          type: D,
          compare: Q === void 0 ? null : Q
        };
        {
          var ye;
          Object.defineProperty(ce, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ye;
            },
            set: function(je) {
              ye = je, D.displayName == null && (D.displayName = je);
            }
          });
        }
        return ce;
      }
      function Pn() {
        var D = oe.current;
        if (D === null)
          throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return D;
      }
      function xa(D, Q) {
        var ce = Pn();
        if (Q !== void 0 && Ce("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s", Q, typeof Q == "number" && Array.isArray(arguments[2]) ? `

Did you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks` : ""), D._context !== void 0) {
          var ye = D._context;
          ye.Consumer === D ? Ce("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : ye.Provider === D && Ce("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return ce.useContext(D, Q);
      }
      function G(D) {
        var Q = Pn();
        return Q.useState(D);
      }
      function _e(D, Q, ce) {
        var ye = Pn();
        return ye.useReducer(D, Q, ce);
      }
      function qe(D) {
        var Q = Pn();
        return Q.useRef(D);
      }
      function ct(D, Q) {
        var ce = Pn();
        return ce.useEffect(D, Q);
      }
      function Ut(D, Q) {
        var ce = Pn();
        return ce.useLayoutEffect(D, Q);
      }
      function ht(D, Q) {
        var ce = Pn();
        return ce.useCallback(D, Q);
      }
      function Ht(D, Q) {
        var ce = Pn();
        return ce.useMemo(D, Q);
      }
      function qt(D, Q, ce) {
        var ye = Pn();
        return ye.useImperativeHandle(D, Q, ce);
      }
      function mn(D, Q) {
        {
          var ce = Pn();
          return ce.useDebugValue(D, Q);
        }
      }
      var Jt = 0, dn, ri, Wr, Co, dr, hl, Mc;
      function Lc() {
      }
      Lc.__reactDisabledLog = !0;
      function Qi() {
        {
          if (Jt === 0) {
            dn = console.log, ri = console.info, Wr = console.warn, Co = console.error, dr = console.group, hl = console.groupCollapsed, Mc = console.groupEnd;
            var D = {
              configurable: !0,
              enumerable: !0,
              value: Lc,
              writable: !0
            };
            Object.defineProperties(console, {
              info: D,
              log: D,
              warn: D,
              error: D,
              group: D,
              groupCollapsed: D,
              groupEnd: D
            });
          }
          Jt++;
        }
      }
      function hr() {
        {
          if (Jt--, Jt === 0) {
            var D = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: e({}, D, {
                value: dn
              }),
              info: e({}, D, {
                value: ri
              }),
              warn: e({}, D, {
                value: Wr
              }),
              error: e({}, D, {
                value: Co
              }),
              group: e({}, D, {
                value: dr
              }),
              groupCollapsed: e({}, D, {
                value: hl
              }),
              groupEnd: e({}, D, {
                value: Mc
              })
            });
          }
          Jt < 0 && Ce("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var cs = fe.ReactCurrentDispatcher, fs;
      function Pi(D, Q, ce) {
        {
          if (fs === void 0)
            try {
              throw Error();
            } catch (je) {
              var ye = je.stack.trim().match(/\n( *(at )?)/);
              fs = ye && ye[1] || "";
            }
          return `
` + fs + D;
        }
      }
      var ds = !1, Ho;
      {
        var Af = typeof WeakMap == "function" ? WeakMap : Map;
        Ho = new Af();
      }
      function hs(D, Q) {
        if (!D || ds)
          return "";
        {
          var ce = Ho.get(D);
          if (ce !== void 0)
            return ce;
        }
        var ye;
        ds = !0;
        var je = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var Ct;
        Ct = cs.current, cs.current = null, Qi();
        try {
          if (Q) {
            var dt = function() {
              throw Error();
            };
            if (Object.defineProperty(dt.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(dt, []);
              } catch (wr) {
                ye = wr;
              }
              Reflect.construct(D, [], dt);
            } else {
              try {
                dt.call();
              } catch (wr) {
                ye = wr;
              }
              D.call(dt.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (wr) {
              ye = wr;
            }
            D();
          }
        } catch (wr) {
          if (wr && ye && typeof wr.stack == "string") {
            for (var pt = wr.stack.split(`
`), ut = ye.stack.split(`
`), sn = pt.length - 1, kn = ut.length - 1; sn >= 1 && kn >= 0 && pt[sn] !== ut[kn]; )
              kn--;
            for (; sn >= 1 && kn >= 0; sn--, kn--)
              if (pt[sn] !== ut[kn]) {
                if (sn !== 1 || kn !== 1)
                  do
                    if (sn--, kn--, kn < 0 || pt[sn] !== ut[kn]) {
                      var Fn = `
` + pt[sn].replace(" at new ", " at ");
                      return typeof D == "function" && Ho.set(D, Fn), Fn;
                    }
                  while (sn >= 1 && kn >= 0);
                break;
              }
          }
        } finally {
          ds = !1, cs.current = Ct, hr(), Error.prepareStackTrace = je;
        }
        var Yn = D ? D.displayName || D.name : "", Nr = Yn ? Pi(Yn) : "";
        return typeof D == "function" && Ho.set(D, Nr), Nr;
      }
      function Ic(D, Q, ce) {
        return hs(D, !1);
      }
      function ps(D) {
        var Q = D.prototype;
        return !!(Q && Q.isReactComponent);
      }
      function ms(D, Q, ce) {
        if (D == null)
          return "";
        if (typeof D == "function")
          return hs(D, ps(D));
        if (typeof D == "string")
          return Pi(D);
        switch (D) {
          case t.Suspense:
            return Pi("Suspense");
          case h:
            return Pi("SuspenseList");
        }
        if (typeof D == "object")
          switch (D.$$typeof) {
            case c:
              return Ic(D.render);
            case g:
              return ms(D.type, Q, ce);
            case C:
              return Ic(D._render);
            case v: {
              var ye = D, je = ye._payload, Ct = ye._init;
              try {
                return ms(Ct(je), Q, ce);
              } catch {
              }
            }
          }
        return "";
      }
      var ii = {}, So = fe.ReactDebugCurrentFrame;
      function Si(D) {
        if (D) {
          var Q = D._owner, ce = ms(D.type, D._source, Q ? Q.type : null);
          So.setExtraStackFrame(ce);
        } else
          So.setExtraStackFrame(null);
      }
      function zo(D, Q, ce, ye, je) {
        {
          var Ct = Function.call.bind(Object.prototype.hasOwnProperty);
          for (var dt in D)
            if (Ct(D, dt)) {
              var pt = void 0;
              try {
                if (typeof D[dt] != "function") {
                  var ut = Error((ye || "React class") + ": " + ce + " type `" + dt + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof D[dt] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw ut.name = "Invariant Violation", ut;
                }
                pt = D[dt](Q, dt, ye, ce, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (sn) {
                pt = sn;
              }
              pt && !(pt instanceof Error) && (Si(je), Ce("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", ye || "React class", ce, dt, typeof pt), Si(null)), pt instanceof Error && !(pt.message in ii) && (ii[pt.message] = !0, Si(je), Ce("Failed %s type: %s", ce, pt.message), Si(null));
            }
        }
      }
      function Fi(D) {
        if (D) {
          var Q = D._owner, ce = ms(D.type, D._source, Q ? Q.type : null);
          me(ce);
        } else
          me(null);
      }
      var He;
      He = !1;
      function _a() {
        if (z.current) {
          var D = It(z.current.type);
          if (D)
            return `

Check the render method of \`` + D + "`.";
        }
        return "";
      }
      function _r(D) {
        if (D !== void 0) {
          var Q = D.fileName.replace(/^.*[\\\/]/, ""), ce = D.lineNumber;
          return `

Check your code at ` + Q + ":" + ce + ".";
        }
        return "";
      }
      function qo(D) {
        return D != null ? _r(D.__source) : "";
      }
      var ka = {};
      function pl(D) {
        var Q = _a();
        if (!Q) {
          var ce = typeof D == "string" ? D : D.displayName || D.name;
          ce && (Q = `

Check the top-level render call using <` + ce + ">.");
        }
        return Q;
      }
      function kr(D, Q) {
        if (!(!D._store || D._store.validated || D.key != null)) {
          D._store.validated = !0;
          var ce = pl(Q);
          if (!ka[ce]) {
            ka[ce] = !0;
            var ye = "";
            D && D._owner && D._owner !== z.current && (ye = " It was passed a child from " + It(D._owner.type) + "."), Fi(D), Ce('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', ce, ye), Fi(null);
          }
        }
      }
      function $n(D, Q) {
        if (typeof D == "object") {
          if (Array.isArray(D))
            for (var ce = 0; ce < D.length; ce++) {
              var ye = D[ce];
              ir(ye) && kr(ye, Q);
            }
          else if (ir(D))
            D._store && (D._store.validated = !0);
          else if (D) {
            var je = j(D);
            if (typeof je == "function" && je !== D.entries)
              for (var Ct = je.call(D), dt; !(dt = Ct.next()).done; )
                ir(dt.value) && kr(dt.value, Q);
          }
        }
      }
      function Kr(D) {
        {
          var Q = D.type;
          if (Q == null || typeof Q == "string")
            return;
          var ce;
          if (typeof Q == "function")
            ce = Q.propTypes;
          else if (typeof Q == "object" && (Q.$$typeof === c || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          Q.$$typeof === g))
            ce = Q.propTypes;
          else
            return;
          if (ce) {
            var ye = It(Q);
            zo(ce, D.props, "prop", ye, D);
          } else if (Q.PropTypes !== void 0 && !He) {
            He = !0;
            var je = It(Q);
            Ce("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", je || "Unknown");
          }
          typeof Q.getDefaultProps == "function" && !Q.getDefaultProps.isReactClassApproved && Ce("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function xf(D) {
        {
          for (var Q = Object.keys(D.props), ce = 0; ce < Q.length; ce++) {
            var ye = Q[ce];
            if (ye !== "children" && ye !== "key") {
              Fi(D), Ce("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", ye), Fi(null);
              break;
            }
          }
          D.ref !== null && (Fi(D), Ce("Invalid attribute `ref` supplied to `React.Fragment`."), Fi(null));
        }
      }
      function oi(D, Q, ce) {
        var ye = Gr(D);
        if (!ye) {
          var je = "";
          (D === void 0 || typeof D == "object" && D !== null && Object.keys(D).length === 0) && (je += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Ct = qo(Q);
          Ct ? je += Ct : je += _a();
          var dt;
          D === null ? dt = "null" : Array.isArray(D) ? dt = "array" : D !== void 0 && D.$$typeof === r ? (dt = "<" + (It(D.type) || "Unknown") + " />", je = " Did you accidentally export a JSX literal instead of a component?") : dt = typeof D, Ce("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", dt, je);
        }
        var pt = ni.apply(this, arguments);
        if (pt == null)
          return pt;
        if (ye)
          for (var ut = 2; ut < arguments.length; ut++)
            $n(arguments[ut], D);
        return D === t.Fragment ? xf(pt) : Kr(pt), pt;
      }
      var ai = !1;
      function _f(D) {
        var Q = oi.bind(null, D);
        return Q.type = D, ai || (ai = !0, pe("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(Q, "type", {
          enumerable: !1,
          get: function() {
            return pe("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: D
            }), D;
          }
        }), Q;
      }
      function gs(D, Q, ce) {
        for (var ye = Ci.apply(this, arguments), je = 2; je < arguments.length; je++)
          $n(arguments[je], ye.type);
        return Kr(ye), ye;
      }
      try {
        var jo = Object.freeze({});
      } catch {
      }
      var uu = oi, kf = gs, cu = _f, Nf = {
        map: st,
        forEach: en,
        count: Ot,
        toArray: tn,
        only: Tt
      };
      t.Children = Nf, t.Component = De, t.PureComponent = Je, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = fe, t.cloneElement = kf, t.createContext = On, t.createElement = uu, t.createFactory = cu, t.createRef = rt, t.forwardRef = Ii, t.isValidElement = ir, t.lazy = Uo, t.memo = To, t.useCallback = ht, t.useContext = xa, t.useDebugValue = mn, t.useEffect = ct, t.useImperativeHandle = qt, t.useLayoutEffect = Ut, t.useMemo = Ht, t.useReducer = _e, t.useRef = qe, t.useState = G, t.version = n;
    }();
  }(DT)), DT;
}
(function(t) {
  process.env.NODE_ENV === "production" ? t.exports = OP() : t.exports = RP();
})(wP);
const Za = /* @__PURE__ */ Gk(va);
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var F3;
function DP() {
  if (F3)
    return qd;
  F3 = 1, Ah();
  var t = va, e = 60103;
  if (qd.Fragment = 60107, typeof Symbol == "function" && Symbol.for) {
    var n = Symbol.for;
    e = n("react.element"), qd.Fragment = n("react.fragment");
  }
  var r = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, i = Object.prototype.hasOwnProperty, s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function l(c, h, g) {
    var v, C = {}, S = null, b = null;
    g !== void 0 && (S = "" + g), h.key !== void 0 && (S = "" + h.key), h.ref !== void 0 && (b = h.ref);
    for (v in h)
      i.call(h, v) && !s.hasOwnProperty(v) && (C[v] = h[v]);
    if (c && c.defaultProps)
      for (v in h = c.defaultProps, h)
        C[v] === void 0 && (C[v] = h[v]);
    return { $$typeof: e, type: c, key: S, ref: b, props: C, _owner: r.current };
  }
  return qd.jsx = l, qd.jsxs = l, qd;
}
var MT = {};
/** @license React v17.0.2
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var B3;
function MP() {
  return B3 || (B3 = 1, function(t) {
    process.env.NODE_ENV !== "production" && function() {
      var e = va, n = Ah(), r = 60103, i = 60106;
      t.Fragment = 60107;
      var s = 60108, l = 60114, c = 60109, h = 60110, g = 60112, v = 60113, C = 60120, S = 60115, b = 60116, N = 60121, O = 60122, L = 60117, P = 60129, Y = 60131;
      if (typeof Symbol == "function" && Symbol.for) {
        var j = Symbol.for;
        r = j("react.element"), i = j("react.portal"), t.Fragment = j("react.fragment"), s = j("react.strict_mode"), l = j("react.profiler"), c = j("react.provider"), h = j("react.context"), g = j("react.forward_ref"), v = j("react.suspense"), C = j("react.suspense_list"), S = j("react.memo"), b = j("react.lazy"), N = j("react.block"), O = j("react.server.block"), L = j("react.fundamental"), j("react.scope"), j("react.opaque.id"), P = j("react.debug_trace_mode"), j("react.offscreen"), Y = j("react.legacy_hidden");
      }
      var oe = typeof Symbol == "function" && Symbol.iterator, ee = "@@iterator";
      function z(G) {
        if (G === null || typeof G != "object")
          return null;
        var _e = oe && G[oe] || G[ee];
        return typeof _e == "function" ? _e : null;
      }
      var H = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function Z(G) {
        {
          for (var _e = arguments.length, qe = new Array(_e > 1 ? _e - 1 : 0), ct = 1; ct < _e; ct++)
            qe[ct - 1] = arguments[ct];
          me("error", G, qe);
        }
      }
      function me(G, _e, qe) {
        {
          var ct = H.ReactDebugCurrentFrame, Ut = ct.getStackAddendum();
          Ut !== "" && (_e += "%s", qe = qe.concat([Ut]));
          var ht = qe.map(function(Ht) {
            return "" + Ht;
          });
          ht.unshift("Warning: " + _e), Function.prototype.apply.call(console[G], console, ht);
        }
      }
      var Ie = !1;
      function fe(G) {
        return !!(typeof G == "string" || typeof G == "function" || G === t.Fragment || G === l || G === P || G === s || G === v || G === C || G === Y || Ie || typeof G == "object" && G !== null && (G.$$typeof === b || G.$$typeof === S || G.$$typeof === c || G.$$typeof === h || G.$$typeof === g || G.$$typeof === L || G.$$typeof === N || G[0] === O));
      }
      function pe(G, _e, qe) {
        var ct = _e.displayName || _e.name || "";
        return G.displayName || (ct !== "" ? qe + "(" + ct + ")" : qe);
      }
      function Ce(G) {
        return G.displayName || "Context";
      }
      function Be(G) {
        if (G == null)
          return null;
        if (typeof G.tag == "number" && Z("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."), typeof G == "function")
          return G.displayName || G.name || null;
        if (typeof G == "string")
          return G;
        switch (G) {
          case t.Fragment:
            return "Fragment";
          case i:
            return "Portal";
          case l:
            return "Profiler";
          case s:
            return "StrictMode";
          case v:
            return "Suspense";
          case C:
            return "SuspenseList";
        }
        if (typeof G == "object")
          switch (G.$$typeof) {
            case h:
              var _e = G;
              return Ce(_e) + ".Consumer";
            case c:
              var qe = G;
              return Ce(qe._context) + ".Provider";
            case g:
              return pe(G, G.render, "ForwardRef");
            case S:
              return Be(G.type);
            case N:
              return Be(G._render);
            case b: {
              var ct = G, Ut = ct._payload, ht = ct._init;
              try {
                return Be(ht(Ut));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var J = 0, lt, te, he, De, We, I, F;
      function we() {
      }
      we.__reactDisabledLog = !0;
      function Je() {
        {
          if (J === 0) {
            lt = console.log, te = console.info, he = console.warn, De = console.error, We = console.group, I = console.groupCollapsed, F = console.groupEnd;
            var G = {
              configurable: !0,
              enumerable: !0,
              value: we,
              writable: !0
            };
            Object.defineProperties(console, {
              info: G,
              log: G,
              warn: G,
              error: G,
              group: G,
              groupCollapsed: G,
              groupEnd: G
            });
          }
          J++;
        }
      }
      function Ze() {
        {
          if (J--, J === 0) {
            var G = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: n({}, G, {
                value: lt
              }),
              info: n({}, G, {
                value: te
              }),
              warn: n({}, G, {
                value: he
              }),
              error: n({}, G, {
                value: De
              }),
              group: n({}, G, {
                value: We
              }),
              groupCollapsed: n({}, G, {
                value: I
              }),
              groupEnd: n({}, G, {
                value: F
              })
            });
          }
          J < 0 && Z("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var rt = H.ReactCurrentDispatcher, Yt;
      function Lt(G, _e, qe) {
        {
          if (Yt === void 0)
            try {
              throw Error();
            } catch (Ut) {
              var ct = Ut.stack.trim().match(/\n( *(at )?)/);
              Yt = ct && ct[1] || "";
            }
          return `
` + Yt + G;
        }
      }
      var It = !1, En;
      {
        var an = typeof WeakMap == "function" ? WeakMap : Map;
        En = new an();
      }
      function Xt(G, _e) {
        if (!G || It)
          return "";
        {
          var qe = En.get(G);
          if (qe !== void 0)
            return qe;
        }
        var ct;
        It = !0;
        var Ut = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var ht;
        ht = rt.current, rt.current = null, Je();
        try {
          if (_e) {
            var Ht = function() {
              throw Error();
            };
            if (Object.defineProperty(Ht.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Ht, []);
              } catch (dr) {
                ct = dr;
              }
              Reflect.construct(G, [], Ht);
            } else {
              try {
                Ht.call();
              } catch (dr) {
                ct = dr;
              }
              G.call(Ht.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (dr) {
              ct = dr;
            }
            G();
          }
        } catch (dr) {
          if (dr && ct && typeof dr.stack == "string") {
            for (var qt = dr.stack.split(`
`), mn = ct.stack.split(`
`), Jt = qt.length - 1, dn = mn.length - 1; Jt >= 1 && dn >= 0 && qt[Jt] !== mn[dn]; )
              dn--;
            for (; Jt >= 1 && dn >= 0; Jt--, dn--)
              if (qt[Jt] !== mn[dn]) {
                if (Jt !== 1 || dn !== 1)
                  do
                    if (Jt--, dn--, dn < 0 || qt[Jt] !== mn[dn]) {
                      var ri = `
` + qt[Jt].replace(" at new ", " at ");
                      return typeof G == "function" && En.set(G, ri), ri;
                    }
                  while (Jt >= 1 && dn >= 0);
                break;
              }
          }
        } finally {
          It = !1, rt.current = ht, Ze(), Error.prepareStackTrace = Ut;
        }
        var Wr = G ? G.displayName || G.name : "", Co = Wr ? Lt(Wr) : "";
        return typeof G == "function" && En.set(G, Co), Co;
      }
      function Hr(G, _e, qe) {
        return Xt(G, !1);
      }
      function ur(G) {
        var _e = G.prototype;
        return !!(_e && _e.isReactComponent);
      }
      function wn(G, _e, qe) {
        if (G == null)
          return "";
        if (typeof G == "function")
          return Xt(G, ur(G));
        if (typeof G == "string")
          return Lt(G);
        switch (G) {
          case v:
            return Lt("Suspense");
          case C:
            return Lt("SuspenseList");
        }
        if (typeof G == "object")
          switch (G.$$typeof) {
            case g:
              return Hr(G.render);
            case S:
              return wn(G.type, _e, qe);
            case N:
              return Hr(G._render);
            case b: {
              var ct = G, Ut = ct._payload, ht = ct._init;
              try {
                return wn(ht(Ut), _e, qe);
              } catch {
              }
            }
          }
        return "";
      }
      var zr = {}, qr = H.ReactDebugCurrentFrame;
      function cr(G) {
        if (G) {
          var _e = G._owner, qe = wn(G.type, G._source, _e ? _e.type : null);
          qr.setExtraStackFrame(qe);
        } else
          qr.setExtraStackFrame(null);
      }
      function yo(G, _e, qe, ct, Ut) {
        {
          var ht = Function.call.bind(Object.prototype.hasOwnProperty);
          for (var Ht in G)
            if (ht(G, Ht)) {
              var qt = void 0;
              try {
                if (typeof G[Ht] != "function") {
                  var mn = Error((ct || "React class") + ": " + qe + " type `" + Ht + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof G[Ht] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw mn.name = "Invariant Violation", mn;
                }
                qt = G[Ht](_e, Ht, ct, qe, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Jt) {
                qt = Jt;
              }
              qt && !(qt instanceof Error) && (cr(Ut), Z("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", ct || "React class", qe, Ht, typeof qt), cr(null)), qt instanceof Error && !(qt.message in zr) && (zr[qt.message] = !0, cr(Ut), Z("Failed %s type: %s", qe, qt.message), cr(null));
            }
        }
      }
      var fr = H.ReactCurrentOwner, ni = Object.prototype.hasOwnProperty, vo = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, Ci, ir, jr;
      jr = {};
      function gn(G) {
        if (ni.call(G, "ref")) {
          var _e = Object.getOwnPropertyDescriptor(G, "ref").get;
          if (_e && _e.isReactWarning)
            return !1;
        }
        return G.ref !== void 0;
      }
      function le(G) {
        if (ni.call(G, "key")) {
          var _e = Object.getOwnPropertyDescriptor(G, "key").get;
          if (_e && _e.isReactWarning)
            return !1;
        }
        return G.key !== void 0;
      }
      function Re(G, _e) {
        if (typeof G.ref == "string" && fr.current && _e && fr.current.stateNode !== _e) {
          var qe = Be(fr.current.type);
          jr[qe] || (Z('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Be(fr.current.type), G.ref), jr[qe] = !0);
        }
      }
      function at(G, _e) {
        {
          var qe = function() {
            Ci || (Ci = !0, Z("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", _e));
          };
          qe.isReactWarning = !0, Object.defineProperty(G, "key", {
            get: qe,
            configurable: !0
          });
        }
      }
      function Bt(G, _e) {
        {
          var qe = function() {
            ir || (ir = !0, Z("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", _e));
          };
          qe.isReactWarning = !0, Object.defineProperty(G, "ref", {
            get: qe,
            configurable: !0
          });
        }
      }
      var be = function(G, _e, qe, ct, Ut, ht, Ht) {
        var qt = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: r,
          // Built-in properties that belong on the element
          type: G,
          key: _e,
          ref: qe,
          props: Ht,
          // Record the component responsible for creating this element.
          _owner: ht
        };
        return qt._store = {}, Object.defineProperty(qt._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(qt, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: ct
        }), Object.defineProperty(qt, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: Ut
        }), Object.freeze && (Object.freeze(qt.props), Object.freeze(qt)), qt;
      };
      function ze(G, _e, qe, ct, Ut) {
        {
          var ht, Ht = {}, qt = null, mn = null;
          qe !== void 0 && (qt = "" + qe), le(_e) && (qt = "" + _e.key), gn(_e) && (mn = _e.ref, Re(_e, Ut));
          for (ht in _e)
            ni.call(_e, ht) && !vo.hasOwnProperty(ht) && (Ht[ht] = _e[ht]);
          if (G && G.defaultProps) {
            var Jt = G.defaultProps;
            for (ht in Jt)
              Ht[ht] === void 0 && (Ht[ht] = Jt[ht]);
          }
          if (qt || mn) {
            var dn = typeof G == "function" ? G.displayName || G.name || "Unknown" : G;
            qt && at(Ht, dn), mn && Bt(Ht, dn);
          }
          return be(G, qt, mn, Ut, ct, fr.current, Ht);
        }
      }
      var st = H.ReactCurrentOwner, Ot = H.ReactDebugCurrentFrame;
      function en(G) {
        if (G) {
          var _e = G._owner, qe = wn(G.type, G._source, _e ? _e.type : null);
          Ot.setExtraStackFrame(qe);
        } else
          Ot.setExtraStackFrame(null);
      }
      var tn;
      tn = !1;
      function Tt(G) {
        return typeof G == "object" && G !== null && G.$$typeof === r;
      }
      function On() {
        {
          if (st.current) {
            var G = Be(st.current.type);
            if (G)
              return `

Check the render method of \`` + G + "`.";
          }
          return "";
        }
      }
      function Gt(G) {
        {
          if (G !== void 0) {
            var _e = G.fileName.replace(/^.*[\\\/]/, ""), qe = G.lineNumber;
            return `

Check your code at ` + _e + ":" + qe + ".";
          }
          return "";
        }
      }
      var Vr = {};
      function us(G) {
        {
          var _e = On();
          if (!_e) {
            var qe = typeof G == "string" ? G : G.displayName || G.name;
            qe && (_e = `

Check the top-level render call using <` + qe + ">.");
          }
          return _e;
        }
      }
      function Yi(G, _e) {
        {
          if (!G._store || G._store.validated || G.key != null)
            return;
          G._store.validated = !0;
          var qe = us(_e);
          if (Vr[qe])
            return;
          Vr[qe] = !0;
          var ct = "";
          G && G._owner && G._owner !== st.current && (ct = " It was passed a child from " + Be(G._owner.type) + "."), en(G), Z('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', qe, ct), en(null);
        }
      }
      function Eo(G, _e) {
        {
          if (typeof G != "object")
            return;
          if (Array.isArray(G))
            for (var qe = 0; qe < G.length; qe++) {
              var ct = G[qe];
              Tt(ct) && Yi(ct, _e);
            }
          else if (Tt(G))
            G._store && (G._store.validated = !0);
          else if (G) {
            var Ut = z(G);
            if (typeof Ut == "function" && Ut !== G.entries)
              for (var ht = Ut.call(G), Ht; !(Ht = ht.next()).done; )
                Tt(Ht.value) && Yi(Ht.value, _e);
          }
        }
      }
      function Uo(G) {
        {
          var _e = G.type;
          if (_e == null || typeof _e == "string")
            return;
          var qe;
          if (typeof _e == "function")
            qe = _e.propTypes;
          else if (typeof _e == "object" && (_e.$$typeof === g || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          _e.$$typeof === S))
            qe = _e.propTypes;
          else
            return;
          if (qe) {
            var ct = Be(_e);
            yo(qe, G.props, "prop", ct, G);
          } else if (_e.PropTypes !== void 0 && !tn) {
            tn = !0;
            var Ut = Be(_e);
            Z("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", Ut || "Unknown");
          }
          typeof _e.getDefaultProps == "function" && !_e.getDefaultProps.isReactClassApproved && Z("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Ii(G) {
        {
          for (var _e = Object.keys(G.props), qe = 0; qe < _e.length; qe++) {
            var ct = _e[qe];
            if (ct !== "children" && ct !== "key") {
              en(G), Z("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", ct), en(null);
              break;
            }
          }
          G.ref !== null && (en(G), Z("Invalid attribute `ref` supplied to `React.Fragment`."), en(null));
        }
      }
      function $r(G, _e, qe, ct, Ut, ht) {
        {
          var Ht = fe(G);
          if (!Ht) {
            var qt = "";
            (G === void 0 || typeof G == "object" && G !== null && Object.keys(G).length === 0) && (qt += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
            var mn = Gt(Ut);
            mn ? qt += mn : qt += On();
            var Jt;
            G === null ? Jt = "null" : Array.isArray(G) ? Jt = "array" : G !== void 0 && G.$$typeof === r ? (Jt = "<" + (Be(G.type) || "Unknown") + " />", qt = " Did you accidentally export a JSX literal instead of a component?") : Jt = typeof G, Z("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Jt, qt);
          }
          var dn = ze(G, _e, qe, Ut, ht);
          if (dn == null)
            return dn;
          if (Ht) {
            var ri = _e.children;
            if (ri !== void 0)
              if (ct)
                if (Array.isArray(ri)) {
                  for (var Wr = 0; Wr < ri.length; Wr++)
                    Eo(ri[Wr], G);
                  Object.freeze && Object.freeze(ri);
                } else
                  Z("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
              else
                Eo(ri, G);
          }
          return G === t.Fragment ? Ii(dn) : Uo(dn), dn;
        }
      }
      function Gr(G, _e, qe) {
        return $r(G, _e, qe, !0);
      }
      function To(G, _e, qe) {
        return $r(G, _e, qe, !1);
      }
      var Pn = To, xa = Gr;
      t.jsx = Pn, t.jsxs = xa;
    }();
  }(MT)), MT;
}
(function(t) {
  process.env.NODE_ENV === "production" ? t.exports = DP() : t.exports = MP();
})(NP);
const Wk = iC.jsx;
function mi(t) {
  this.content = t;
}
mi.prototype = {
  constructor: mi,
  find: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      if (this.content[e] === t)
        return e;
    return -1;
  },
  // :: (string) → ?any
  // Retrieve the value stored under `key`, or return undefined when
  // no such key exists.
  get: function(t) {
    var e = this.find(t);
    return e == -1 ? void 0 : this.content[e + 1];
  },
  // :: (string, any, ?string) → OrderedMap
  // Create a new map by replacing the value of `key` with a new
  // value, or adding a binding to the end of the map. If `newKey` is
  // given, the key of the binding will be replaced with that key.
  update: function(t, e, n) {
    var r = n && n != t ? this.remove(n) : this, i = r.find(t), s = r.content.slice();
    return i == -1 ? s.push(n || t, e) : (s[i + 1] = e, n && (s[i] = n)), new mi(s);
  },
  // :: (string) → OrderedMap
  // Return a map with the given key removed, if it existed.
  remove: function(t) {
    var e = this.find(t);
    if (e == -1)
      return this;
    var n = this.content.slice();
    return n.splice(e, 2), new mi(n);
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the start of the map.
  addToStart: function(t, e) {
    return new mi([t, e].concat(this.remove(t).content));
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the end of the map.
  addToEnd: function(t, e) {
    var n = this.remove(t).content.slice();
    return n.push(t, e), new mi(n);
  },
  // :: (string, string, any) → OrderedMap
  // Add a key after the given key. If `place` is not found, the new
  // key is added to the end.
  addBefore: function(t, e, n) {
    var r = this.remove(e), i = r.content.slice(), s = r.find(t);
    return i.splice(s == -1 ? i.length : s, 0, e, n), new mi(i);
  },
  // :: ((key: string, value: any))
  // Call the given function for each key/value pair in the map, in
  // order.
  forEach: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      t(this.content[e], this.content[e + 1]);
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by prepending the keys in this map that don't
  // appear in `map` before the keys in `map`.
  prepend: function(t) {
    return t = mi.from(t), t.size ? new mi(t.content.concat(this.subtract(t).content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by appending the keys in this map that don't
  // appear in `map` after the keys in `map`.
  append: function(t) {
    return t = mi.from(t), t.size ? new mi(this.subtract(t).content.concat(t.content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a map containing all the keys in this map that don't
  // appear in `map`.
  subtract: function(t) {
    var e = this;
    t = mi.from(t);
    for (var n = 0; n < t.content.length; n += 2)
      e = e.remove(t.content[n]);
    return e;
  },
  // :: () → Object
  // Turn ordered map into a plain object.
  toObject: function() {
    var t = {};
    return this.forEach(function(e, n) {
      t[e] = n;
    }), t;
  },
  // :: number
  // The amount of keys in this map.
  get size() {
    return this.content.length >> 1;
  }
};
mi.from = function(t) {
  if (t instanceof mi)
    return t;
  var e = [];
  if (t)
    for (var n in t)
      e.push(n, t[n]);
  return new mi(e);
};
function Kk(t, e, n) {
  for (let r = 0; ; r++) {
    if (r == t.childCount || r == e.childCount)
      return t.childCount == e.childCount ? null : n;
    let i = t.child(r), s = e.child(r);
    if (i == s) {
      n += i.nodeSize;
      continue;
    }
    if (!i.sameMarkup(s))
      return n;
    if (i.isText && i.text != s.text) {
      for (let l = 0; i.text[l] == s.text[l]; l++)
        n++;
      return n;
    }
    if (i.content.size || s.content.size) {
      let l = Kk(i.content, s.content, n + 1);
      if (l != null)
        return l;
    }
    n += i.nodeSize;
  }
}
function Yk(t, e, n, r) {
  for (let i = t.childCount, s = e.childCount; ; ) {
    if (i == 0 || s == 0)
      return i == s ? null : { a: n, b: r };
    let l = t.child(--i), c = e.child(--s), h = l.nodeSize;
    if (l == c) {
      n -= h, r -= h;
      continue;
    }
    if (!l.sameMarkup(c))
      return { a: n, b: r };
    if (l.isText && l.text != c.text) {
      let g = 0, v = Math.min(l.text.length, c.text.length);
      for (; g < v && l.text[l.text.length - g - 1] == c.text[c.text.length - g - 1]; )
        g++, n--, r--;
      return { a: n, b: r };
    }
    if (l.content.size || c.content.size) {
      let g = Yk(l.content, c.content, n - 1, r - 1);
      if (g)
        return g;
    }
    n -= h, r -= h;
  }
}
class Oe {
  /**
  @internal
  */
  constructor(e, n) {
    if (this.content = e, this.size = n || 0, n == null)
      for (let r = 0; r < e.length; r++)
        this.size += e[r].nodeSize;
  }
  /**
  Invoke a callback for all descendant nodes between the given two
  positions (relative to start of this fragment). Doesn't descend
  into a node when the callback returns `false`.
  */
  nodesBetween(e, n, r, i = 0, s) {
    for (let l = 0, c = 0; c < n; l++) {
      let h = this.content[l], g = c + h.nodeSize;
      if (g > e && r(h, i + c, s || null, l) !== !1 && h.content.size) {
        let v = c + 1;
        h.nodesBetween(Math.max(0, e - v), Math.min(h.content.size, n - v), r, i + v);
      }
      c = g;
    }
  }
  /**
  Call the given callback for every descendant node. `pos` will be
  relative to the start of the fragment. The callback may return
  `false` to prevent traversal of a given node's children.
  */
  descendants(e) {
    this.nodesBetween(0, this.size, e);
  }
  /**
  Extract the text between `from` and `to`. See the same method on
  [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).
  */
  textBetween(e, n, r, i) {
    let s = "", l = !0;
    return this.nodesBetween(e, n, (c, h) => {
      c.isText ? (s += c.text.slice(Math.max(e, h) - h, n - h), l = !r) : c.isLeaf ? (i ? s += typeof i == "function" ? i(c) : i : c.type.spec.leafText && (s += c.type.spec.leafText(c)), l = !r) : !l && c.isBlock && (s += r, l = !0);
    }, 0), s;
  }
  /**
  Create a new fragment containing the combined content of this
  fragment and the other.
  */
  append(e) {
    if (!e.size)
      return this;
    if (!this.size)
      return e;
    let n = this.lastChild, r = e.firstChild, i = this.content.slice(), s = 0;
    for (n.isText && n.sameMarkup(r) && (i[i.length - 1] = n.withText(n.text + r.text), s = 1); s < e.content.length; s++)
      i.push(e.content[s]);
    return new Oe(i, this.size + e.size);
  }
  /**
  Cut out the sub-fragment between the two given positions.
  */
  cut(e, n = this.size) {
    if (e == 0 && n == this.size)
      return this;
    let r = [], i = 0;
    if (n > e)
      for (let s = 0, l = 0; l < n; s++) {
        let c = this.content[s], h = l + c.nodeSize;
        h > e && ((l < e || h > n) && (c.isText ? c = c.cut(Math.max(0, e - l), Math.min(c.text.length, n - l)) : c = c.cut(Math.max(0, e - l - 1), Math.min(c.content.size, n - l - 1))), r.push(c), i += c.nodeSize), l = h;
      }
    return new Oe(r, i);
  }
  /**
  @internal
  */
  cutByIndex(e, n) {
    return e == n ? Oe.empty : e == 0 && n == this.content.length ? this : new Oe(this.content.slice(e, n));
  }
  /**
  Create a new fragment in which the node at the given index is
  replaced by the given node.
  */
  replaceChild(e, n) {
    let r = this.content[e];
    if (r == n)
      return this;
    let i = this.content.slice(), s = this.size + n.nodeSize - r.nodeSize;
    return i[e] = n, new Oe(i, s);
  }
  /**
  Create a new fragment by prepending the given node to this
  fragment.
  */
  addToStart(e) {
    return new Oe([e].concat(this.content), this.size + e.nodeSize);
  }
  /**
  Create a new fragment by appending the given node to this
  fragment.
  */
  addToEnd(e) {
    return new Oe(this.content.concat(e), this.size + e.nodeSize);
  }
  /**
  Compare this fragment to another one.
  */
  eq(e) {
    if (this.content.length != e.content.length)
      return !1;
    for (let n = 0; n < this.content.length; n++)
      if (!this.content[n].eq(e.content[n]))
        return !1;
    return !0;
  }
  /**
  The first child of the fragment, or `null` if it is empty.
  */
  get firstChild() {
    return this.content.length ? this.content[0] : null;
  }
  /**
  The last child of the fragment, or `null` if it is empty.
  */
  get lastChild() {
    return this.content.length ? this.content[this.content.length - 1] : null;
  }
  /**
  The number of child nodes in this fragment.
  */
  get childCount() {
    return this.content.length;
  }
  /**
  Get the child node at the given index. Raise an error when the
  index is out of range.
  */
  child(e) {
    let n = this.content[e];
    if (!n)
      throw new RangeError("Index " + e + " out of range for " + this);
    return n;
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content[e] || null;
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    for (let n = 0, r = 0; n < this.content.length; n++) {
      let i = this.content[n];
      e(i, r, n), r += i.nodeSize;
    }
  }
  /**
  Find the first position at which this fragment and another
  fragment differ, or `null` if they are the same.
  */
  findDiffStart(e, n = 0) {
    return Kk(this, e, n);
  }
  /**
  Find the first position, searching from the end, at which this
  fragment and the given fragment differ, or `null` if they are
  the same. Since this position will not be the same in both
  nodes, an object with two separate positions is returned.
  */
  findDiffEnd(e, n = this.size, r = e.size) {
    return Yk(this, e, n, r);
  }
  /**
  Find the index and inner offset corresponding to a given relative
  position in this fragment. The result object will be reused
  (overwritten) the next time the function is called. (Not public.)
  */
  findIndex(e, n = -1) {
    if (e == 0)
      return d9(0, e);
    if (e == this.size)
      return d9(this.content.length, e);
    if (e > this.size || e < 0)
      throw new RangeError(`Position ${e} outside of fragment (${this})`);
    for (let r = 0, i = 0; ; r++) {
      let s = this.child(r), l = i + s.nodeSize;
      if (l >= e)
        return l == e || n > 0 ? d9(r + 1, l) : d9(r, i);
      i = l;
    }
  }
  /**
  Return a debugging string that describes this fragment.
  */
  toString() {
    return "<" + this.toStringInner() + ">";
  }
  /**
  @internal
  */
  toStringInner() {
    return this.content.join(", ");
  }
  /**
  Create a JSON-serializeable representation of this fragment.
  */
  toJSON() {
    return this.content.length ? this.content.map((e) => e.toJSON()) : null;
  }
  /**
  Deserialize a fragment from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return Oe.empty;
    if (!Array.isArray(n))
      throw new RangeError("Invalid input for Fragment.fromJSON");
    return new Oe(n.map(e.nodeFromJSON));
  }
  /**
  Build a fragment from an array of nodes. Ensures that adjacent
  text nodes with the same marks are joined together.
  */
  static fromArray(e) {
    if (!e.length)
      return Oe.empty;
    let n, r = 0;
    for (let i = 0; i < e.length; i++) {
      let s = e[i];
      r += s.nodeSize, i && s.isText && e[i - 1].sameMarkup(s) ? (n || (n = e.slice(0, i)), n[n.length - 1] = s.withText(n[n.length - 1].text + s.text)) : n && n.push(s);
    }
    return new Oe(n || e, r);
  }
  /**
  Create a fragment from something that can be interpreted as a
  set of nodes. For `null`, it returns the empty fragment. For a
  fragment, the fragment itself. For a node or array of nodes, a
  fragment containing those nodes.
  */
  static from(e) {
    if (!e)
      return Oe.empty;
    if (e instanceof Oe)
      return e;
    if (Array.isArray(e))
      return this.fromArray(e);
    if (e.attrs)
      return new Oe([e], e.nodeSize);
    throw new RangeError("Can not convert " + e + " to a Fragment" + (e.nodesBetween ? " (looks like multiple versions of prosemirror-model were loaded)" : ""));
  }
}
Oe.empty = new Oe([], 0);
const LT = { index: 0, offset: 0 };
function d9(t, e) {
  return LT.index = t, LT.offset = e, LT;
}
function ty(t, e) {
  if (t === e)
    return !0;
  if (!(t && typeof t == "object") || !(e && typeof e == "object"))
    return !1;
  let n = Array.isArray(t);
  if (Array.isArray(e) != n)
    return !1;
  if (n) {
    if (t.length != e.length)
      return !1;
    for (let r = 0; r < t.length; r++)
      if (!ty(t[r], e[r]))
        return !1;
  } else {
    for (let r in t)
      if (!(r in e) || !ty(t[r], e[r]))
        return !1;
    for (let r in e)
      if (!(r in t))
        return !1;
  }
  return !0;
}
let _n = class oC {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.attrs = n;
  }
  /**
  Given a set of marks, create a new set which contains this one as
  well, in the right position. If this mark is already in the set,
  the set itself is returned. If any marks that are set to be
  [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,
  those are replaced by this one.
  */
  addToSet(e) {
    let n, r = !1;
    for (let i = 0; i < e.length; i++) {
      let s = e[i];
      if (this.eq(s))
        return e;
      if (this.type.excludes(s.type))
        n || (n = e.slice(0, i));
      else {
        if (s.type.excludes(this.type))
          return e;
        !r && s.type.rank > this.type.rank && (n || (n = e.slice(0, i)), n.push(this), r = !0), n && n.push(s);
      }
    }
    return n || (n = e.slice()), r || n.push(this), n;
  }
  /**
  Remove this mark from the given set, returning a new set. If this
  mark is not in the set, the set itself is returned.
  */
  removeFromSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return e.slice(0, n).concat(e.slice(n + 1));
    return e;
  }
  /**
  Test whether this mark is in the given set of marks.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return !0;
    return !1;
  }
  /**
  Test whether this mark has the same type and attributes as
  another mark.
  */
  eq(e) {
    return this == e || this.type == e.type && ty(this.attrs, e.attrs);
  }
  /**
  Convert this mark to a JSON-serializeable representation.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return e;
  }
  /**
  Deserialize a mark from JSON.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Mark.fromJSON");
    let r = e.marks[n.type];
    if (!r)
      throw new RangeError(`There is no mark type ${n.type} in this schema`);
    return r.create(n.attrs);
  }
  /**
  Test whether two sets of marks are identical.
  */
  static sameSet(e, n) {
    if (e == n)
      return !0;
    if (e.length != n.length)
      return !1;
    for (let r = 0; r < e.length; r++)
      if (!e[r].eq(n[r]))
        return !1;
    return !0;
  }
  /**
  Create a properly sorted mark set from null, a single mark, or an
  unsorted array of marks.
  */
  static setFrom(e) {
    if (!e || Array.isArray(e) && e.length == 0)
      return oC.none;
    if (e instanceof oC)
      return [e];
    let n = e.slice();
    return n.sort((r, i) => r.type.rank - i.type.rank), n;
  }
};
_n.none = [];
class ny extends Error {
}
class Xe {
  /**
  Create a slice. When specifying a non-zero open depth, you must
  make sure that there are nodes of at least that depth at the
  appropriate side of the fragment—i.e. if the fragment is an
  empty paragraph node, `openStart` and `openEnd` can't be greater
  than 1.
  
  It is not necessary for the content of open nodes to conform to
  the schema's content constraints, though it should be a valid
  start/end/middle for such a node, depending on which sides are
  open.
  */
  constructor(e, n, r) {
    this.content = e, this.openStart = n, this.openEnd = r;
  }
  /**
  The size this slice would add when inserted into a document.
  */
  get size() {
    return this.content.size - this.openStart - this.openEnd;
  }
  /**
  @internal
  */
  insertAt(e, n) {
    let r = Xk(this.content, e + this.openStart, n);
    return r && new Xe(r, this.openStart, this.openEnd);
  }
  /**
  @internal
  */
  removeBetween(e, n) {
    return new Xe(Qk(this.content, e + this.openStart, n + this.openStart), this.openStart, this.openEnd);
  }
  /**
  Tests whether this slice is equal to another slice.
  */
  eq(e) {
    return this.content.eq(e.content) && this.openStart == e.openStart && this.openEnd == e.openEnd;
  }
  /**
  @internal
  */
  toString() {
    return this.content + "(" + this.openStart + "," + this.openEnd + ")";
  }
  /**
  Convert a slice to a JSON-serializable representation.
  */
  toJSON() {
    if (!this.content.size)
      return null;
    let e = { content: this.content.toJSON() };
    return this.openStart > 0 && (e.openStart = this.openStart), this.openEnd > 0 && (e.openEnd = this.openEnd), e;
  }
  /**
  Deserialize a slice from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return Xe.empty;
    let r = n.openStart || 0, i = n.openEnd || 0;
    if (typeof r != "number" || typeof i != "number")
      throw new RangeError("Invalid input for Slice.fromJSON");
    return new Xe(Oe.fromJSON(e, n.content), r, i);
  }
  /**
  Create a slice from a fragment by taking the maximum possible
  open value on both side of the fragment.
  */
  static maxOpen(e, n = !0) {
    let r = 0, i = 0;
    for (let s = e.firstChild; s && !s.isLeaf && (n || !s.type.spec.isolating); s = s.firstChild)
      r++;
    for (let s = e.lastChild; s && !s.isLeaf && (n || !s.type.spec.isolating); s = s.lastChild)
      i++;
    return new Xe(e, r, i);
  }
}
Xe.empty = new Xe(Oe.empty, 0, 0);
function Qk(t, e, n) {
  let { index: r, offset: i } = t.findIndex(e), s = t.maybeChild(r), { index: l, offset: c } = t.findIndex(n);
  if (i == e || s.isText) {
    if (c != n && !t.child(l).isText)
      throw new RangeError("Removing non-flat range");
    return t.cut(0, e).append(t.cut(n));
  }
  if (r != l)
    throw new RangeError("Removing non-flat range");
  return t.replaceChild(r, s.copy(Qk(s.content, e - i - 1, n - i - 1)));
}
function Xk(t, e, n, r) {
  let { index: i, offset: s } = t.findIndex(e), l = t.maybeChild(i);
  if (s == e || l.isText)
    return r && !r.canReplace(i, i, n) ? null : t.cut(0, e).append(n).append(t.cut(e));
  let c = Xk(l.content, e - s - 1, n);
  return c && t.replaceChild(i, l.copy(c));
}
function LP(t, e, n) {
  if (n.openStart > t.depth)
    throw new ny("Inserted content deeper than insertion position");
  if (t.depth - n.openStart != e.depth - n.openEnd)
    throw new ny("Inconsistent open depths");
  return Jk(t, e, n, 0);
}
function Jk(t, e, n, r) {
  let i = t.index(r), s = t.node(r);
  if (i == e.index(r) && r < t.depth - n.openStart) {
    let l = Jk(t, e, n, r + 1);
    return s.copy(s.content.replaceChild(i, l));
  } else if (n.content.size)
    if (!n.openStart && !n.openEnd && t.depth == r && e.depth == r) {
      let l = t.parent, c = l.content;
      return ff(l, c.cut(0, t.parentOffset).append(n.content).append(c.cut(e.parentOffset)));
    } else {
      let { start: l, end: c } = IP(n, t);
      return ff(s, e7(t, l, c, e, r));
    }
  else
    return ff(s, ry(t, e, r));
}
function Zk(t, e) {
  if (!e.type.compatibleContent(t.type))
    throw new ny("Cannot join " + e.type.name + " onto " + t.type.name);
}
function aC(t, e, n) {
  let r = t.node(n);
  return Zk(r, e.node(n)), r;
}
function cf(t, e) {
  let n = e.length - 1;
  n >= 0 && t.isText && t.sameMarkup(e[n]) ? e[n] = t.withText(e[n].text + t.text) : e.push(t);
}
function $m(t, e, n, r) {
  let i = (e || t).node(n), s = 0, l = e ? e.index(n) : i.childCount;
  t && (s = t.index(n), t.depth > n ? s++ : t.textOffset && (cf(t.nodeAfter, r), s++));
  for (let c = s; c < l; c++)
    cf(i.child(c), r);
  e && e.depth == n && e.textOffset && cf(e.nodeBefore, r);
}
function ff(t, e) {
  return t.type.checkContent(e), t.copy(e);
}
function e7(t, e, n, r, i) {
  let s = t.depth > i && aC(t, e, i + 1), l = r.depth > i && aC(n, r, i + 1), c = [];
  return $m(null, t, i, c), s && l && e.index(i) == n.index(i) ? (Zk(s, l), cf(ff(s, e7(t, e, n, r, i + 1)), c)) : (s && cf(ff(s, ry(t, e, i + 1)), c), $m(e, n, i, c), l && cf(ff(l, ry(n, r, i + 1)), c)), $m(r, null, i, c), new Oe(c);
}
function ry(t, e, n) {
  let r = [];
  if ($m(null, t, n, r), t.depth > n) {
    let i = aC(t, e, n + 1);
    cf(ff(i, ry(t, e, n + 1)), r);
  }
  return $m(e, null, n, r), new Oe(r);
}
function IP(t, e) {
  let n = e.depth - t.openStart, i = e.node(n).copy(t.content);
  for (let s = n - 1; s >= 0; s--)
    i = e.node(s).copy(Oe.from(i));
  return {
    start: i.resolveNoCache(t.openStart + n),
    end: i.resolveNoCache(i.content.size - t.openEnd - n)
  };
}
class s0 {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.pos = e, this.path = n, this.parentOffset = r, this.depth = n.length / 3 - 1;
  }
  /**
  @internal
  */
  resolveDepth(e) {
    return e == null ? this.depth : e < 0 ? this.depth + e : e;
  }
  /**
  The parent node that the position points into. Note that even if
  a position points into a text node, that node is not considered
  the parent—text nodes are ‘flat’ in this model, and have no content.
  */
  get parent() {
    return this.node(this.depth);
  }
  /**
  The root node in which the position was resolved.
  */
  get doc() {
    return this.node(0);
  }
  /**
  The ancestor node at the given level. `p.node(p.depth)` is the
  same as `p.parent`.
  */
  node(e) {
    return this.path[this.resolveDepth(e) * 3];
  }
  /**
  The index into the ancestor at the given level. If this points
  at the 3rd node in the 2nd paragraph on the top level, for
  example, `p.index(0)` is 1 and `p.index(1)` is 2.
  */
  index(e) {
    return this.path[this.resolveDepth(e) * 3 + 1];
  }
  /**
  The index pointing after this position into the ancestor at the
  given level.
  */
  indexAfter(e) {
    return e = this.resolveDepth(e), this.index(e) + (e == this.depth && !this.textOffset ? 0 : 1);
  }
  /**
  The (absolute) position at the start of the node at the given
  level.
  */
  start(e) {
    return e = this.resolveDepth(e), e == 0 ? 0 : this.path[e * 3 - 1] + 1;
  }
  /**
  The (absolute) position at the end of the node at the given
  level.
  */
  end(e) {
    return e = this.resolveDepth(e), this.start(e) + this.node(e).content.size;
  }
  /**
  The (absolute) position directly before the wrapping node at the
  given level, or, when `depth` is `this.depth + 1`, the original
  position.
  */
  before(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position before the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1];
  }
  /**
  The (absolute) position directly after the wrapping node at the
  given level, or the original position when `depth` is `this.depth + 1`.
  */
  after(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position after the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1] + this.path[e * 3].nodeSize;
  }
  /**
  When this position points into a text node, this returns the
  distance between the position and the start of the text node.
  Will be zero for positions that point between nodes.
  */
  get textOffset() {
    return this.pos - this.path[this.path.length - 1];
  }
  /**
  Get the node directly after the position, if any. If the position
  points into a text node, only the part of that node after the
  position is returned.
  */
  get nodeAfter() {
    let e = this.parent, n = this.index(this.depth);
    if (n == e.childCount)
      return null;
    let r = this.pos - this.path[this.path.length - 1], i = e.child(n);
    return r ? e.child(n).cut(r) : i;
  }
  /**
  Get the node directly before the position, if any. If the
  position points into a text node, only the part of that node
  before the position is returned.
  */
  get nodeBefore() {
    let e = this.index(this.depth), n = this.pos - this.path[this.path.length - 1];
    return n ? this.parent.child(e).cut(0, n) : e == 0 ? null : this.parent.child(e - 1);
  }
  /**
  Get the position at the given index in the parent node at the
  given depth (which defaults to `this.depth`).
  */
  posAtIndex(e, n) {
    n = this.resolveDepth(n);
    let r = this.path[n * 3], i = n == 0 ? 0 : this.path[n * 3 - 1] + 1;
    for (let s = 0; s < e; s++)
      i += r.child(s).nodeSize;
    return i;
  }
  /**
  Get the marks at this position, factoring in the surrounding
  marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the
  position is at the start of a non-empty node, the marks of the
  node after it (if any) are returned.
  */
  marks() {
    let e = this.parent, n = this.index();
    if (e.content.size == 0)
      return _n.none;
    if (this.textOffset)
      return e.child(n).marks;
    let r = e.maybeChild(n - 1), i = e.maybeChild(n);
    if (!r) {
      let c = r;
      r = i, i = c;
    }
    let s = r.marks;
    for (var l = 0; l < s.length; l++)
      s[l].type.spec.inclusive === !1 && (!i || !s[l].isInSet(i.marks)) && (s = s[l--].removeFromSet(s));
    return s;
  }
  /**
  Get the marks after the current position, if any, except those
  that are non-inclusive and not present at position `$end`. This
  is mostly useful for getting the set of marks to preserve after a
  deletion. Will return `null` if this position is at the end of
  its parent node or its parent node isn't a textblock (in which
  case no marks should be preserved).
  */
  marksAcross(e) {
    let n = this.parent.maybeChild(this.index());
    if (!n || !n.isInline)
      return null;
    let r = n.marks, i = e.parent.maybeChild(e.index());
    for (var s = 0; s < r.length; s++)
      r[s].type.spec.inclusive === !1 && (!i || !r[s].isInSet(i.marks)) && (r = r[s--].removeFromSet(r));
    return r;
  }
  /**
  The depth up to which this position and the given (non-resolved)
  position share the same parent nodes.
  */
  sharedDepth(e) {
    for (let n = this.depth; n > 0; n--)
      if (this.start(n) <= e && this.end(n) >= e)
        return n;
    return 0;
  }
  /**
  Returns a range based on the place where this position and the
  given position diverge around block content. If both point into
  the same textblock, for example, a range around that textblock
  will be returned. If they point into different blocks, the range
  around those blocks in their shared ancestor is returned. You can
  pass in an optional predicate that will be called with a parent
  node to see if a range into that parent is acceptable.
  */
  blockRange(e = this, n) {
    if (e.pos < this.pos)
      return e.blockRange(this);
    for (let r = this.depth - (this.parent.inlineContent || this.pos == e.pos ? 1 : 0); r >= 0; r--)
      if (e.pos <= this.end(r) && (!n || n(this.node(r))))
        return new iy(this, e, r);
    return null;
  }
  /**
  Query whether the given position shares the same parent node.
  */
  sameParent(e) {
    return this.pos - this.parentOffset == e.pos - e.parentOffset;
  }
  /**
  Return the greater of this and the given position.
  */
  max(e) {
    return e.pos > this.pos ? e : this;
  }
  /**
  Return the smaller of this and the given position.
  */
  min(e) {
    return e.pos < this.pos ? e : this;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 1; n <= this.depth; n++)
      e += (e ? "/" : "") + this.node(n).type.name + "_" + this.index(n - 1);
    return e + ":" + this.parentOffset;
  }
  /**
  @internal
  */
  static resolve(e, n) {
    if (!(n >= 0 && n <= e.content.size))
      throw new RangeError("Position " + n + " out of range");
    let r = [], i = 0, s = n;
    for (let l = e; ; ) {
      let { index: c, offset: h } = l.content.findIndex(s), g = s - h;
      if (r.push(l, c, i + h), !g || (l = l.child(c), l.isText))
        break;
      s = g - 1, i += h + 1;
    }
    return new s0(n, r, s);
  }
  /**
  @internal
  */
  static resolveCached(e, n) {
    for (let i = 0; i < IT.length; i++) {
      let s = IT[i];
      if (s.pos == n && s.doc == e)
        return s;
    }
    let r = IT[PT] = s0.resolve(e, n);
    return PT = (PT + 1) % PP, r;
  }
}
let IT = [], PT = 0, PP = 12;
class iy {
  /**
  Construct a node range. `$from` and `$to` should point into the
  same node until at least the given `depth`, since a node range
  denotes an adjacent set of nodes in a single parent node.
  */
  constructor(e, n, r) {
    this.$from = e, this.$to = n, this.depth = r;
  }
  /**
  The position at the start of the range.
  */
  get start() {
    return this.$from.before(this.depth + 1);
  }
  /**
  The position at the end of the range.
  */
  get end() {
    return this.$to.after(this.depth + 1);
  }
  /**
  The parent node that the range points into.
  */
  get parent() {
    return this.$from.node(this.depth);
  }
  /**
  The start index of the range in the parent node.
  */
  get startIndex() {
    return this.$from.index(this.depth);
  }
  /**
  The end index of the range in the parent node.
  */
  get endIndex() {
    return this.$to.indexAfter(this.depth);
  }
}
const FP = /* @__PURE__ */ Object.create(null);
let Tc = class sC {
  /**
  @internal
  */
  constructor(e, n, r, i = _n.none) {
    this.type = e, this.attrs = n, this.marks = i, this.content = r || Oe.empty;
  }
  /**
  The size of this node, as defined by the integer-based [indexing
  scheme](/docs/guide/#doc.indexing). For text nodes, this is the
  amount of characters. For other leaf nodes, it is one. For
  non-leaf nodes, it is the size of the content plus two (the
  start and end token).
  */
  get nodeSize() {
    return this.isLeaf ? 1 : 2 + this.content.size;
  }
  /**
  The number of children that the node has.
  */
  get childCount() {
    return this.content.childCount;
  }
  /**
  Get the child node at the given index. Raises an error when the
  index is out of range.
  */
  child(e) {
    return this.content.child(e);
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content.maybeChild(e);
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    this.content.forEach(e);
  }
  /**
  Invoke a callback for all descendant nodes recursively between
  the given two positions that are relative to start of this
  node's content. The callback is invoked with the node, its
  parent-relative position, its parent node, and its child index.
  When the callback returns false for a given node, that node's
  children will not be recursed over. The last parameter can be
  used to specify a starting position to count from.
  */
  nodesBetween(e, n, r, i = 0) {
    this.content.nodesBetween(e, n, r, i, this);
  }
  /**
  Call the given callback for every descendant node. Doesn't
  descend into a node when the callback returns `false`.
  */
  descendants(e) {
    this.nodesBetween(0, this.content.size, e);
  }
  /**
  Concatenates all the text nodes found in this fragment and its
  children.
  */
  get textContent() {
    return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, "");
  }
  /**
  Get all text between positions `from` and `to`. When
  `blockSeparator` is given, it will be inserted to separate text
  from different block nodes. If `leafText` is given, it'll be
  inserted for every non-text leaf node encountered, otherwise
  [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.
  */
  textBetween(e, n, r, i) {
    return this.content.textBetween(e, n, r, i);
  }
  /**
  Returns this node's first child, or `null` if there are no
  children.
  */
  get firstChild() {
    return this.content.firstChild;
  }
  /**
  Returns this node's last child, or `null` if there are no
  children.
  */
  get lastChild() {
    return this.content.lastChild;
  }
  /**
  Test whether two nodes represent the same piece of document.
  */
  eq(e) {
    return this == e || this.sameMarkup(e) && this.content.eq(e.content);
  }
  /**
  Compare the markup (type, attributes, and marks) of this node to
  those of another. Returns `true` if both have the same markup.
  */
  sameMarkup(e) {
    return this.hasMarkup(e.type, e.attrs, e.marks);
  }
  /**
  Check whether this node's markup correspond to the given type,
  attributes, and marks.
  */
  hasMarkup(e, n, r) {
    return this.type == e && ty(this.attrs, n || e.defaultAttrs || FP) && _n.sameSet(this.marks, r || _n.none);
  }
  /**
  Create a new node with the same markup as this node, containing
  the given content (or empty, if no content is given).
  */
  copy(e = null) {
    return e == this.content ? this : new sC(this.type, this.attrs, e, this.marks);
  }
  /**
  Create a copy of this node, with the given set of marks instead
  of the node's own marks.
  */
  mark(e) {
    return e == this.marks ? this : new sC(this.type, this.attrs, this.content, e);
  }
  /**
  Create a copy of this node with only the content between the
  given positions. If `to` is not given, it defaults to the end of
  the node.
  */
  cut(e, n = this.content.size) {
    return e == 0 && n == this.content.size ? this : this.copy(this.content.cut(e, n));
  }
  /**
  Cut out the part of the document between the given positions, and
  return it as a `Slice` object.
  */
  slice(e, n = this.content.size, r = !1) {
    if (e == n)
      return Xe.empty;
    let i = this.resolve(e), s = this.resolve(n), l = r ? 0 : i.sharedDepth(n), c = i.start(l), g = i.node(l).content.cut(i.pos - c, s.pos - c);
    return new Xe(g, i.depth - l, s.depth - l);
  }
  /**
  Replace the part of the document between the given positions with
  the given slice. The slice must 'fit', meaning its open sides
  must be able to connect to the surrounding content, and its
  content nodes must be valid children for the node they are placed
  into. If any of this is violated, an error of type
  [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.
  */
  replace(e, n, r) {
    return LP(this.resolve(e), this.resolve(n), r);
  }
  /**
  Find the node directly after the given position.
  */
  nodeAt(e) {
    for (let n = this; ; ) {
      let { index: r, offset: i } = n.content.findIndex(e);
      if (n = n.maybeChild(r), !n)
        return null;
      if (i == e || n.isText)
        return n;
      e -= i + 1;
    }
  }
  /**
  Find the (direct) child node after the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childAfter(e) {
    let { index: n, offset: r } = this.content.findIndex(e);
    return { node: this.content.maybeChild(n), index: n, offset: r };
  }
  /**
  Find the (direct) child node before the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childBefore(e) {
    if (e == 0)
      return { node: null, index: 0, offset: 0 };
    let { index: n, offset: r } = this.content.findIndex(e);
    if (r < e)
      return { node: this.content.child(n), index: n, offset: r };
    let i = this.content.child(n - 1);
    return { node: i, index: n - 1, offset: r - i.nodeSize };
  }
  /**
  Resolve the given position in the document, returning an
  [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.
  */
  resolve(e) {
    return s0.resolveCached(this, e);
  }
  /**
  @internal
  */
  resolveNoCache(e) {
    return s0.resolve(this, e);
  }
  /**
  Test whether a given mark or mark type occurs in this document
  between the two given positions.
  */
  rangeHasMark(e, n, r) {
    let i = !1;
    return n > e && this.nodesBetween(e, n, (s) => (r.isInSet(s.marks) && (i = !0), !i)), i;
  }
  /**
  True when this is a block (non-inline node)
  */
  get isBlock() {
    return this.type.isBlock;
  }
  /**
  True when this is a textblock node, a block node with inline
  content.
  */
  get isTextblock() {
    return this.type.isTextblock;
  }
  /**
  True when this node allows inline content.
  */
  get inlineContent() {
    return this.type.inlineContent;
  }
  /**
  True when this is an inline node (a text node or a node that can
  appear among text).
  */
  get isInline() {
    return this.type.isInline;
  }
  /**
  True when this is a text node.
  */
  get isText() {
    return this.type.isText;
  }
  /**
  True when this is a leaf node.
  */
  get isLeaf() {
    return this.type.isLeaf;
  }
  /**
  True when this is an atom, i.e. when it does not have directly
  editable content. This is usually the same as `isLeaf`, but can
  be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)
  on a node's spec (typically used when the node is displayed as
  an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).
  */
  get isAtom() {
    return this.type.isAtom;
  }
  /**
  Return a string representation of this node for debugging
  purposes.
  */
  toString() {
    if (this.type.spec.toDebugString)
      return this.type.spec.toDebugString(this);
    let e = this.type.name;
    return this.content.size && (e += "(" + this.content.toStringInner() + ")"), t7(this.marks, e);
  }
  /**
  Get the content match in this node at the given index.
  */
  contentMatchAt(e) {
    let n = this.type.contentMatch.matchFragment(this.content, 0, e);
    if (!n)
      throw new Error("Called contentMatchAt on a node with invalid content");
    return n;
  }
  /**
  Test whether replacing the range between `from` and `to` (by
  child index) with the given replacement fragment (which defaults
  to the empty fragment) would leave the node's content valid. You
  can optionally pass `start` and `end` indices into the
  replacement fragment.
  */
  canReplace(e, n, r = Oe.empty, i = 0, s = r.childCount) {
    let l = this.contentMatchAt(e).matchFragment(r, i, s), c = l && l.matchFragment(this.content, n);
    if (!c || !c.validEnd)
      return !1;
    for (let h = i; h < s; h++)
      if (!this.type.allowsMarks(r.child(h).marks))
        return !1;
    return !0;
  }
  /**
  Test whether replacing the range `from` to `to` (by index) with
  a node of the given type would leave the node's content valid.
  */
  canReplaceWith(e, n, r, i) {
    if (i && !this.type.allowsMarks(i))
      return !1;
    let s = this.contentMatchAt(e).matchType(r), l = s && s.matchFragment(this.content, n);
    return l ? l.validEnd : !1;
  }
  /**
  Test whether the given node's content could be appended to this
  node. If that node is empty, this will only return true if there
  is at least one node type that can appear in both nodes (to avoid
  merging completely incompatible nodes).
  */
  canAppend(e) {
    return e.content.size ? this.canReplace(this.childCount, this.childCount, e.content) : this.type.compatibleContent(e.type);
  }
  /**
  Check whether this node and its descendants conform to the
  schema, and raise error when they do not.
  */
  check() {
    this.type.checkContent(this.content);
    let e = _n.none;
    for (let n = 0; n < this.marks.length; n++)
      e = this.marks[n].addToSet(e);
    if (!_n.sameSet(e, this.marks))
      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map((n) => n.type.name)}`);
    this.content.forEach((n) => n.check());
  }
  /**
  Return a JSON-serializeable representation of this node.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return this.content.size && (e.content = this.content.toJSON()), this.marks.length && (e.marks = this.marks.map((n) => n.toJSON())), e;
  }
  /**
  Deserialize a node from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Node.fromJSON");
    let r = null;
    if (n.marks) {
      if (!Array.isArray(n.marks))
        throw new RangeError("Invalid mark data for Node.fromJSON");
      r = n.marks.map(e.markFromJSON);
    }
    if (n.type == "text") {
      if (typeof n.text != "string")
        throw new RangeError("Invalid text node in JSON");
      return e.text(n.text, r);
    }
    let i = Oe.fromJSON(e, n.content);
    return e.nodeType(n.type).create(n.attrs, i, r);
  }
};
Tc.prototype.text = void 0;
class oy extends Tc {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    if (super(e, n, null, i), !r)
      throw new RangeError("Empty text nodes are not allowed");
    this.text = r;
  }
  toString() {
    return this.type.spec.toDebugString ? this.type.spec.toDebugString(this) : t7(this.marks, JSON.stringify(this.text));
  }
  get textContent() {
    return this.text;
  }
  textBetween(e, n) {
    return this.text.slice(e, n);
  }
  get nodeSize() {
    return this.text.length;
  }
  mark(e) {
    return e == this.marks ? this : new oy(this.type, this.attrs, this.text, e);
  }
  withText(e) {
    return e == this.text ? this : new oy(this.type, this.attrs, e, this.marks);
  }
  cut(e = 0, n = this.text.length) {
    return e == 0 && n == this.text.length ? this : this.withText(this.text.slice(e, n));
  }
  eq(e) {
    return this.sameMarkup(e) && this.text == e.text;
  }
  toJSON() {
    let e = super.toJSON();
    return e.text = this.text, e;
  }
}
function t7(t, e) {
  for (let n = t.length - 1; n >= 0; n--)
    e = t[n].type.name + "(" + e + ")";
  return e;
}
class pf {
  /**
  @internal
  */
  constructor(e) {
    this.validEnd = e, this.next = [], this.wrapCache = [];
  }
  /**
  @internal
  */
  static parse(e, n) {
    let r = new BP(e, n);
    if (r.next == null)
      return pf.empty;
    let i = n7(r);
    r.next && r.err("Unexpected trailing text");
    let s = $P(VP(i));
    return GP(s, r), s;
  }
  /**
  Match a node type, returning a match after that node if
  successful.
  */
  matchType(e) {
    for (let n = 0; n < this.next.length; n++)
      if (this.next[n].type == e)
        return this.next[n].next;
    return null;
  }
  /**
  Try to match a fragment. Returns the resulting match when
  successful.
  */
  matchFragment(e, n = 0, r = e.childCount) {
    let i = this;
    for (let s = n; i && s < r; s++)
      i = i.matchType(e.child(s).type);
    return i;
  }
  /**
  @internal
  */
  get inlineContent() {
    return this.next.length != 0 && this.next[0].type.isInline;
  }
  /**
  Get the first matching node type at this match position that can
  be generated.
  */
  get defaultType() {
    for (let e = 0; e < this.next.length; e++) {
      let { type: n } = this.next[e];
      if (!(n.isText || n.hasRequiredAttrs()))
        return n;
    }
    return null;
  }
  /**
  @internal
  */
  compatible(e) {
    for (let n = 0; n < this.next.length; n++)
      for (let r = 0; r < e.next.length; r++)
        if (this.next[n].type == e.next[r].type)
          return !0;
    return !1;
  }
  /**
  Try to match the given fragment, and if that fails, see if it can
  be made to match by inserting nodes in front of it. When
  successful, return a fragment of inserted nodes (which may be
  empty if nothing had to be inserted). When `toEnd` is true, only
  return a fragment if the resulting match goes to the end of the
  content expression.
  */
  fillBefore(e, n = !1, r = 0) {
    let i = [this];
    function s(l, c) {
      let h = l.matchFragment(e, r);
      if (h && (!n || h.validEnd))
        return Oe.from(c.map((g) => g.createAndFill()));
      for (let g = 0; g < l.next.length; g++) {
        let { type: v, next: C } = l.next[g];
        if (!(v.isText || v.hasRequiredAttrs()) && i.indexOf(C) == -1) {
          i.push(C);
          let S = s(C, c.concat(v));
          if (S)
            return S;
        }
      }
      return null;
    }
    return s(this, []);
  }
  /**
  Find a set of wrapping node types that would allow a node of the
  given type to appear at this position. The result may be empty
  (when it fits directly) and will be null when no such wrapping
  exists.
  */
  findWrapping(e) {
    for (let r = 0; r < this.wrapCache.length; r += 2)
      if (this.wrapCache[r] == e)
        return this.wrapCache[r + 1];
    let n = this.computeWrapping(e);
    return this.wrapCache.push(e, n), n;
  }
  /**
  @internal
  */
  computeWrapping(e) {
    let n = /* @__PURE__ */ Object.create(null), r = [{ match: this, type: null, via: null }];
    for (; r.length; ) {
      let i = r.shift(), s = i.match;
      if (s.matchType(e)) {
        let l = [];
        for (let c = i; c.type; c = c.via)
          l.push(c.type);
        return l.reverse();
      }
      for (let l = 0; l < s.next.length; l++) {
        let { type: c, next: h } = s.next[l];
        !c.isLeaf && !c.hasRequiredAttrs() && !(c.name in n) && (!i.type || h.validEnd) && (r.push({ match: c.contentMatch, type: c, via: i }), n[c.name] = !0);
      }
    }
    return null;
  }
  /**
  The number of outgoing edges this node has in the finite
  automaton that describes the content expression.
  */
  get edgeCount() {
    return this.next.length;
  }
  /**
  Get the _n_​th outgoing edge from this node in the finite
  automaton that describes the content expression.
  */
  edge(e) {
    if (e >= this.next.length)
      throw new RangeError(`There's no ${e}th edge in this content match`);
    return this.next[e];
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    function n(r) {
      e.push(r);
      for (let i = 0; i < r.next.length; i++)
        e.indexOf(r.next[i].next) == -1 && n(r.next[i].next);
    }
    return n(this), e.map((r, i) => {
      let s = i + (r.validEnd ? "*" : " ") + " ";
      for (let l = 0; l < r.next.length; l++)
        s += (l ? ", " : "") + r.next[l].type.name + "->" + e.indexOf(r.next[l].next);
      return s;
    }).join(`
`);
  }
}
pf.empty = new pf(!0);
class BP {
  constructor(e, n) {
    this.string = e, this.nodeTypes = n, this.inline = null, this.pos = 0, this.tokens = e.split(/\s*(?=\b|\W|$)/), this.tokens[this.tokens.length - 1] == "" && this.tokens.pop(), this.tokens[0] == "" && this.tokens.shift();
  }
  get next() {
    return this.tokens[this.pos];
  }
  eat(e) {
    return this.next == e && (this.pos++ || !0);
  }
  err(e) {
    throw new SyntaxError(e + " (in content expression '" + this.string + "')");
  }
}
function n7(t) {
  let e = [];
  do
    e.push(UP(t));
  while (t.eat("|"));
  return e.length == 1 ? e[0] : { type: "choice", exprs: e };
}
function UP(t) {
  let e = [];
  do
    e.push(HP(t));
  while (t.next && t.next != ")" && t.next != "|");
  return e.length == 1 ? e[0] : { type: "seq", exprs: e };
}
function HP(t) {
  let e = jP(t);
  for (; ; )
    if (t.eat("+"))
      e = { type: "plus", expr: e };
    else if (t.eat("*"))
      e = { type: "star", expr: e };
    else if (t.eat("?"))
      e = { type: "opt", expr: e };
    else if (t.eat("{"))
      e = zP(t, e);
    else
      break;
  return e;
}
function U3(t) {
  /\D/.test(t.next) && t.err("Expected number, got '" + t.next + "'");
  let e = Number(t.next);
  return t.pos++, e;
}
function zP(t, e) {
  let n = U3(t), r = n;
  return t.eat(",") && (t.next != "}" ? r = U3(t) : r = -1), t.eat("}") || t.err("Unclosed braced range"), { type: "range", min: n, max: r, expr: e };
}
function qP(t, e) {
  let n = t.nodeTypes, r = n[e];
  if (r)
    return [r];
  let i = [];
  for (let s in n) {
    let l = n[s];
    l.groups.indexOf(e) > -1 && i.push(l);
  }
  return i.length == 0 && t.err("No node type or group '" + e + "' found"), i;
}
function jP(t) {
  if (t.eat("(")) {
    let e = n7(t);
    return t.eat(")") || t.err("Missing closing paren"), e;
  } else if (/\W/.test(t.next))
    t.err("Unexpected token '" + t.next + "'");
  else {
    let e = qP(t, t.next).map((n) => (t.inline == null ? t.inline = n.isInline : t.inline != n.isInline && t.err("Mixing inline and block content"), { type: "name", value: n }));
    return t.pos++, e.length == 1 ? e[0] : { type: "choice", exprs: e };
  }
}
function VP(t) {
  let e = [[]];
  return i(s(t, 0), n()), e;
  function n() {
    return e.push([]) - 1;
  }
  function r(l, c, h) {
    let g = { term: h, to: c };
    return e[l].push(g), g;
  }
  function i(l, c) {
    l.forEach((h) => h.to = c);
  }
  function s(l, c) {
    if (l.type == "choice")
      return l.exprs.reduce((h, g) => h.concat(s(g, c)), []);
    if (l.type == "seq")
      for (let h = 0; ; h++) {
        let g = s(l.exprs[h], c);
        if (h == l.exprs.length - 1)
          return g;
        i(g, c = n());
      }
    else if (l.type == "star") {
      let h = n();
      return r(c, h), i(s(l.expr, h), h), [r(h)];
    } else if (l.type == "plus") {
      let h = n();
      return i(s(l.expr, c), h), i(s(l.expr, h), h), [r(h)];
    } else {
      if (l.type == "opt")
        return [r(c)].concat(s(l.expr, c));
      if (l.type == "range") {
        let h = c;
        for (let g = 0; g < l.min; g++) {
          let v = n();
          i(s(l.expr, h), v), h = v;
        }
        if (l.max == -1)
          i(s(l.expr, h), h);
        else
          for (let g = l.min; g < l.max; g++) {
            let v = n();
            r(h, v), i(s(l.expr, h), v), h = v;
          }
        return [r(h)];
      } else {
        if (l.type == "name")
          return [r(c, void 0, l.value)];
        throw new Error("Unknown expr type");
      }
    }
  }
}
function r7(t, e) {
  return e - t;
}
function H3(t, e) {
  let n = [];
  return r(e), n.sort(r7);
  function r(i) {
    let s = t[i];
    if (s.length == 1 && !s[0].term)
      return r(s[0].to);
    n.push(i);
    for (let l = 0; l < s.length; l++) {
      let { term: c, to: h } = s[l];
      !c && n.indexOf(h) == -1 && r(h);
    }
  }
}
function $P(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return n(H3(t, 0));
  function n(r) {
    let i = [];
    r.forEach((l) => {
      t[l].forEach(({ term: c, to: h }) => {
        if (!c)
          return;
        let g;
        for (let v = 0; v < i.length; v++)
          i[v][0] == c && (g = i[v][1]);
        H3(t, h).forEach((v) => {
          g || i.push([c, g = []]), g.indexOf(v) == -1 && g.push(v);
        });
      });
    });
    let s = e[r.join(",")] = new pf(r.indexOf(t.length - 1) > -1);
    for (let l = 0; l < i.length; l++) {
      let c = i[l][1].sort(r7);
      s.next.push({ type: i[l][0], next: e[c.join(",")] || n(c) });
    }
    return s;
  }
}
function GP(t, e) {
  for (let n = 0, r = [t]; n < r.length; n++) {
    let i = r[n], s = !i.validEnd, l = [];
    for (let c = 0; c < i.next.length; c++) {
      let { type: h, next: g } = i.next[c];
      l.push(h.name), s && !(h.isText || h.hasRequiredAttrs()) && (s = !1), r.indexOf(g) == -1 && r.push(g);
    }
    s && e.err("Only non-generatable nodes (" + l.join(", ") + ") in a required position (see https://prosemirror.net/docs/guide/#generatable)");
  }
}
function i7(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let r = t[n];
    if (!r.hasDefault)
      return null;
    e[n] = r.default;
  }
  return e;
}
function o7(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let r in t) {
    let i = e && e[r];
    if (i === void 0) {
      let s = t[r];
      if (s.hasDefault)
        i = s.default;
      else
        throw new RangeError("No value supplied for attribute " + r);
    }
    n[r] = i;
  }
  return n;
}
function a7(t) {
  let e = /* @__PURE__ */ Object.create(null);
  if (t)
    for (let n in t)
      e[n] = new WP(t[n]);
  return e;
}
let z3 = class s7 {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.name = e, this.schema = n, this.spec = r, this.markSet = null, this.groups = r.group ? r.group.split(" ") : [], this.attrs = a7(r.attrs), this.defaultAttrs = i7(this.attrs), this.contentMatch = null, this.inlineContent = null, this.isBlock = !(r.inline || e == "text"), this.isText = e == "text";
  }
  /**
  True if this is an inline type.
  */
  get isInline() {
    return !this.isBlock;
  }
  /**
  True if this is a textblock type, a block that contains inline
  content.
  */
  get isTextblock() {
    return this.isBlock && this.inlineContent;
  }
  /**
  True for node types that allow no content.
  */
  get isLeaf() {
    return this.contentMatch == pf.empty;
  }
  /**
  True when this node is an atom, i.e. when it does not have
  directly editable content.
  */
  get isAtom() {
    return this.isLeaf || !!this.spec.atom;
  }
  /**
  The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.
  */
  get whitespace() {
    return this.spec.whitespace || (this.spec.code ? "pre" : "normal");
  }
  /**
  Tells you whether this node type has any required attributes.
  */
  hasRequiredAttrs() {
    for (let e in this.attrs)
      if (this.attrs[e].isRequired)
        return !0;
    return !1;
  }
  /**
  Indicates whether this node allows some of the same content as
  the given node type.
  */
  compatibleContent(e) {
    return this == e || this.contentMatch.compatible(e.contentMatch);
  }
  /**
  @internal
  */
  computeAttrs(e) {
    return !e && this.defaultAttrs ? this.defaultAttrs : o7(this.attrs, e);
  }
  /**
  Create a `Node` of this type. The given attributes are
  checked and defaulted (you can pass `null` to use the type's
  defaults entirely, if no required attributes exist). `content`
  may be a `Fragment`, a node, an array of nodes, or
  `null`. Similarly `marks` may be `null` to default to the empty
  set of marks.
  */
  create(e = null, n, r) {
    if (this.isText)
      throw new Error("NodeType.create can't construct text nodes");
    return new Tc(this, this.computeAttrs(e), Oe.from(n), _n.setFrom(r));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content
  against the node type's content restrictions, and throw an error
  if it doesn't match.
  */
  createChecked(e = null, n, r) {
    return n = Oe.from(n), this.checkContent(n), new Tc(this, this.computeAttrs(e), n, _n.setFrom(r));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is
  necessary to add nodes to the start or end of the given fragment
  to make it fit the node. If no fitting wrapping can be found,
  return null. Note that, due to the fact that required nodes can
  always be created, this will always succeed if you pass null or
  `Fragment.empty` as content.
  */
  createAndFill(e = null, n, r) {
    if (e = this.computeAttrs(e), n = Oe.from(n), n.size) {
      let l = this.contentMatch.fillBefore(n);
      if (!l)
        return null;
      n = l.append(n);
    }
    let i = this.contentMatch.matchFragment(n), s = i && i.fillBefore(Oe.empty, !0);
    return s ? new Tc(this, e, n.append(s), _n.setFrom(r)) : null;
  }
  /**
  Returns true if the given fragment is valid content for this node
  type with the given attributes.
  */
  validContent(e) {
    let n = this.contentMatch.matchFragment(e);
    if (!n || !n.validEnd)
      return !1;
    for (let r = 0; r < e.childCount; r++)
      if (!this.allowsMarks(e.child(r).marks))
        return !1;
    return !0;
  }
  /**
  Throws a RangeError if the given fragment is not valid content for this
  node type.
  @internal
  */
  checkContent(e) {
    if (!this.validContent(e))
      throw new RangeError(`Invalid content for node ${this.name}: ${e.toString().slice(0, 50)}`);
  }
  /**
  Check whether the given mark type is allowed in this node.
  */
  allowsMarkType(e) {
    return this.markSet == null || this.markSet.indexOf(e) > -1;
  }
  /**
  Test whether the given set of marks are allowed in this node.
  */
  allowsMarks(e) {
    if (this.markSet == null)
      return !0;
    for (let n = 0; n < e.length; n++)
      if (!this.allowsMarkType(e[n].type))
        return !1;
    return !0;
  }
  /**
  Removes the marks that are not allowed in this node from the given set.
  */
  allowedMarks(e) {
    if (this.markSet == null)
      return e;
    let n;
    for (let r = 0; r < e.length; r++)
      this.allowsMarkType(e[r].type) ? n && n.push(e[r]) : n || (n = e.slice(0, r));
    return n ? n.length ? n : _n.none : e;
  }
  /**
  @internal
  */
  static compile(e, n) {
    let r = /* @__PURE__ */ Object.create(null);
    e.forEach((s, l) => r[s] = new s7(s, n, l));
    let i = n.spec.topNode || "doc";
    if (!r[i])
      throw new RangeError("Schema is missing its top node type ('" + i + "')");
    if (!r.text)
      throw new RangeError("Every schema needs a 'text' type");
    for (let s in r.text.attrs)
      throw new RangeError("The text node type should not have attributes");
    return r;
  }
};
class WP {
  constructor(e) {
    this.hasDefault = Object.prototype.hasOwnProperty.call(e, "default"), this.default = e.default;
  }
  get isRequired() {
    return !this.hasDefault;
  }
}
class Vy {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    this.name = e, this.rank = n, this.schema = r, this.spec = i, this.attrs = a7(i.attrs), this.excluded = null;
    let s = i7(this.attrs);
    this.instance = s ? new _n(this, s) : null;
  }
  /**
  Create a mark of this type. `attrs` may be `null` or an object
  containing only some of the mark's attributes. The others, if
  they have defaults, will be added.
  */
  create(e = null) {
    return !e && this.instance ? this.instance : new _n(this, o7(this.attrs, e));
  }
  /**
  @internal
  */
  static compile(e, n) {
    let r = /* @__PURE__ */ Object.create(null), i = 0;
    return e.forEach((s, l) => r[s] = new Vy(s, i++, n, l)), r;
  }
  /**
  When there is a mark of this type in the given set, a new set
  without it is returned. Otherwise, the input set is returned.
  */
  removeFromSet(e) {
    for (var n = 0; n < e.length; n++)
      e[n].type == this && (e = e.slice(0, n).concat(e.slice(n + 1)), n--);
    return e;
  }
  /**
  Tests whether there is a mark of this type in the given set.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (e[n].type == this)
        return e[n];
  }
  /**
  Queries whether a given mark type is
  [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.
  */
  excludes(e) {
    return this.excluded.indexOf(e) > -1;
  }
}
let KP = class {
  /**
  Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).
  */
  constructor(e) {
    this.cached = /* @__PURE__ */ Object.create(null);
    let n = this.spec = {};
    for (let i in e)
      n[i] = e[i];
    n.nodes = mi.from(e.nodes), n.marks = mi.from(e.marks || {}), this.nodes = z3.compile(this.spec.nodes, this), this.marks = Vy.compile(this.spec.marks, this);
    let r = /* @__PURE__ */ Object.create(null);
    for (let i in this.nodes) {
      if (i in this.marks)
        throw new RangeError(i + " can not be both a node and a mark");
      let s = this.nodes[i], l = s.spec.content || "", c = s.spec.marks;
      s.contentMatch = r[l] || (r[l] = pf.parse(l, this.nodes)), s.inlineContent = s.contentMatch.inlineContent, s.markSet = c == "_" ? null : c ? q3(this, c.split(" ")) : c == "" || !s.inlineContent ? [] : null;
    }
    for (let i in this.marks) {
      let s = this.marks[i], l = s.spec.excludes;
      s.excluded = l == null ? [s] : l == "" ? [] : q3(this, l.split(" "));
    }
    this.nodeFromJSON = this.nodeFromJSON.bind(this), this.markFromJSON = this.markFromJSON.bind(this), this.topNodeType = this.nodes[this.spec.topNode || "doc"], this.cached.wrappings = /* @__PURE__ */ Object.create(null);
  }
  /**
  Create a node in this schema. The `type` may be a string or a
  `NodeType` instance. Attributes will be extended with defaults,
  `content` may be a `Fragment`, `null`, a `Node`, or an array of
  nodes.
  */
  node(e, n = null, r, i) {
    if (typeof e == "string")
      e = this.nodeType(e);
    else if (e instanceof z3) {
      if (e.schema != this)
        throw new RangeError("Node type from different schema used (" + e.name + ")");
    } else
      throw new RangeError("Invalid node type: " + e);
    return e.createChecked(n, r, i);
  }
  /**
  Create a text node in the schema. Empty text nodes are not
  allowed.
  */
  text(e, n) {
    let r = this.nodes.text;
    return new oy(r, r.defaultAttrs, e, _n.setFrom(n));
  }
  /**
  Create a mark with the given type and attributes.
  */
  mark(e, n) {
    return typeof e == "string" && (e = this.marks[e]), e.create(n);
  }
  /**
  Deserialize a node from its JSON representation. This method is
  bound.
  */
  nodeFromJSON(e) {
    return Tc.fromJSON(this, e);
  }
  /**
  Deserialize a mark from its JSON representation. This method is
  bound.
  */
  markFromJSON(e) {
    return _n.fromJSON(this, e);
  }
  /**
  @internal
  */
  nodeType(e) {
    let n = this.nodes[e];
    if (!n)
      throw new RangeError("Unknown node type: " + e);
    return n;
  }
};
function q3(t, e) {
  let n = [];
  for (let r = 0; r < e.length; r++) {
    let i = e[r], s = t.marks[i], l = s;
    if (s)
      n.push(s);
    else
      for (let c in t.marks) {
        let h = t.marks[c];
        (i == "_" || h.spec.group && h.spec.group.split(" ").indexOf(i) > -1) && n.push(l = h);
      }
    if (!l)
      throw new SyntaxError("Unknown mark type: '" + e[r] + "'");
  }
  return n;
}
class mf {
  /**
  Create a parser that targets the given schema, using the given
  parsing rules.
  */
  constructor(e, n) {
    this.schema = e, this.rules = n, this.tags = [], this.styles = [], n.forEach((r) => {
      r.tag ? this.tags.push(r) : r.style && this.styles.push(r);
    }), this.normalizeLists = !this.tags.some((r) => {
      if (!/^(ul|ol)\b/.test(r.tag) || !r.node)
        return !1;
      let i = e.nodes[r.node];
      return i.contentMatch.matchType(i);
    });
  }
  /**
  Parse a document from the content of a DOM node.
  */
  parse(e, n = {}) {
    let r = new V3(this, n, !1);
    return r.addAll(e, n.from, n.to), r.finish();
  }
  /**
  Parses the content of the given DOM node, like
  [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of
  options. But unlike that method, which produces a whole node,
  this one returns a slice that is open at the sides, meaning that
  the schema constraints aren't applied to the start of nodes to
  the left of the input and the end of nodes at the end.
  */
  parseSlice(e, n = {}) {
    let r = new V3(this, n, !0);
    return r.addAll(e, n.from, n.to), Xe.maxOpen(r.finish());
  }
  /**
  @internal
  */
  matchTag(e, n, r) {
    for (let i = r ? this.tags.indexOf(r) + 1 : 0; i < this.tags.length; i++) {
      let s = this.tags[i];
      if (XP(e, s.tag) && (s.namespace === void 0 || e.namespaceURI == s.namespace) && (!s.context || n.matchesContext(s.context))) {
        if (s.getAttrs) {
          let l = s.getAttrs(e);
          if (l === !1)
            continue;
          s.attrs = l || void 0;
        }
        return s;
      }
    }
  }
  /**
  @internal
  */
  matchStyle(e, n, r, i) {
    for (let s = i ? this.styles.indexOf(i) + 1 : 0; s < this.styles.length; s++) {
      let l = this.styles[s], c = l.style;
      if (!(c.indexOf(e) != 0 || l.context && !r.matchesContext(l.context) || // Test that the style string either precisely matches the prop,
      // or has an '=' sign after the prop, followed by the given
      // value.
      c.length > e.length && (c.charCodeAt(e.length) != 61 || c.slice(e.length + 1) != n))) {
        if (l.getAttrs) {
          let h = l.getAttrs(n);
          if (h === !1)
            continue;
          l.attrs = h || void 0;
        }
        return l;
      }
    }
  }
  /**
  @internal
  */
  static schemaRules(e) {
    let n = [];
    function r(i) {
      let s = i.priority == null ? 50 : i.priority, l = 0;
      for (; l < n.length; l++) {
        let c = n[l];
        if ((c.priority == null ? 50 : c.priority) < s)
          break;
      }
      n.splice(l, 0, i);
    }
    for (let i in e.marks) {
      let s = e.marks[i].spec.parseDOM;
      s && s.forEach((l) => {
        r(l = $3(l)), l.mark || l.ignore || l.clearMark || (l.mark = i);
      });
    }
    for (let i in e.nodes) {
      let s = e.nodes[i].spec.parseDOM;
      s && s.forEach((l) => {
        r(l = $3(l)), l.node || l.ignore || l.mark || (l.node = i);
      });
    }
    return n;
  }
  /**
  Construct a DOM parser using the parsing rules listed in a
  schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by
  [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).
  */
  static fromSchema(e) {
    return e.cached.domParser || (e.cached.domParser = new mf(e, mf.schemaRules(e)));
  }
}
const l7 = {
  address: !0,
  article: !0,
  aside: !0,
  blockquote: !0,
  canvas: !0,
  dd: !0,
  div: !0,
  dl: !0,
  fieldset: !0,
  figcaption: !0,
  figure: !0,
  footer: !0,
  form: !0,
  h1: !0,
  h2: !0,
  h3: !0,
  h4: !0,
  h5: !0,
  h6: !0,
  header: !0,
  hgroup: !0,
  hr: !0,
  li: !0,
  noscript: !0,
  ol: !0,
  output: !0,
  p: !0,
  pre: !0,
  section: !0,
  table: !0,
  tfoot: !0,
  ul: !0
}, YP = {
  head: !0,
  noscript: !0,
  object: !0,
  script: !0,
  style: !0,
  title: !0
}, u7 = { ol: !0, ul: !0 }, ay = 1, sy = 2, Gm = 4;
function j3(t, e, n) {
  return e != null ? (e ? ay : 0) | (e === "full" ? sy : 0) : t && t.whitespace == "pre" ? ay | sy : n & ~Gm;
}
class h9 {
  constructor(e, n, r, i, s, l, c) {
    this.type = e, this.attrs = n, this.marks = r, this.pendingMarks = i, this.solid = s, this.options = c, this.content = [], this.activeMarks = _n.none, this.stashMarks = [], this.match = l || (c & Gm ? null : e.contentMatch);
  }
  findWrapping(e) {
    if (!this.match) {
      if (!this.type)
        return [];
      let n = this.type.contentMatch.fillBefore(Oe.from(e));
      if (n)
        this.match = this.type.contentMatch.matchFragment(n);
      else {
        let r = this.type.contentMatch, i;
        return (i = r.findWrapping(e.type)) ? (this.match = r, i) : null;
      }
    }
    return this.match.findWrapping(e.type);
  }
  finish(e) {
    if (!(this.options & ay)) {
      let r = this.content[this.content.length - 1], i;
      if (r && r.isText && (i = /[ \t\r\n\u000c]+$/.exec(r.text))) {
        let s = r;
        r.text.length == i[0].length ? this.content.pop() : this.content[this.content.length - 1] = s.withText(s.text.slice(0, s.text.length - i[0].length));
      }
    }
    let n = Oe.from(this.content);
    return !e && this.match && (n = n.append(this.match.fillBefore(Oe.empty, !0))), this.type ? this.type.create(this.attrs, n, this.marks) : n;
  }
  popFromStashMark(e) {
    for (let n = this.stashMarks.length - 1; n >= 0; n--)
      if (e.eq(this.stashMarks[n]))
        return this.stashMarks.splice(n, 1)[0];
  }
  applyPending(e) {
    for (let n = 0, r = this.pendingMarks; n < r.length; n++) {
      let i = r[n];
      (this.type ? this.type.allowsMarkType(i.type) : ZP(i.type, e)) && !i.isInSet(this.activeMarks) && (this.activeMarks = i.addToSet(this.activeMarks), this.pendingMarks = i.removeFromSet(this.pendingMarks));
    }
  }
  inlineContext(e) {
    return this.type ? this.type.inlineContent : this.content.length ? this.content[0].isInline : e.parentNode && !l7.hasOwnProperty(e.parentNode.nodeName.toLowerCase());
  }
}
class V3 {
  constructor(e, n, r) {
    this.parser = e, this.options = n, this.isOpen = r, this.open = 0;
    let i = n.topNode, s, l = j3(null, n.preserveWhitespace, 0) | (r ? Gm : 0);
    i ? s = new h9(i.type, i.attrs, _n.none, _n.none, !0, n.topMatch || i.type.contentMatch, l) : r ? s = new h9(null, null, _n.none, _n.none, !0, null, l) : s = new h9(e.schema.topNodeType, null, _n.none, _n.none, !0, null, l), this.nodes = [s], this.find = n.findPositions, this.needsBlock = !1;
  }
  get top() {
    return this.nodes[this.open];
  }
  // Add a DOM node to the content. Text is inserted as text node,
  // otherwise, the node is passed to `addElement` or, if it has a
  // `style` attribute, `addElementWithStyles`.
  addDOM(e) {
    if (e.nodeType == 3)
      this.addTextNode(e);
    else if (e.nodeType == 1) {
      let n = e.getAttribute("style");
      if (!n)
        this.addElement(e);
      else {
        let r = this.readStyles(JP(n));
        if (!r)
          return;
        let [i, s] = r, l = this.top;
        for (let c = 0; c < s.length; c++)
          this.removePendingMark(s[c], l);
        for (let c = 0; c < i.length; c++)
          this.addPendingMark(i[c]);
        this.addElement(e);
        for (let c = 0; c < i.length; c++)
          this.removePendingMark(i[c], l);
        for (let c = 0; c < s.length; c++)
          this.addPendingMark(s[c]);
      }
    }
  }
  addTextNode(e) {
    let n = e.nodeValue, r = this.top;
    if (r.options & sy || r.inlineContext(e) || /[^ \t\r\n\u000c]/.test(n)) {
      if (r.options & ay)
        r.options & sy ? n = n.replace(/\r\n?/g, `
`) : n = n.replace(/\r?\n|\r/g, " ");
      else if (n = n.replace(/[ \t\r\n\u000c]+/g, " "), /^[ \t\r\n\u000c]/.test(n) && this.open == this.nodes.length - 1) {
        let i = r.content[r.content.length - 1], s = e.previousSibling;
        (!i || s && s.nodeName == "BR" || i.isText && /[ \t\r\n\u000c]$/.test(i.text)) && (n = n.slice(1));
      }
      n && this.insertNode(this.parser.schema.text(n)), this.findInText(e);
    } else
      this.findInside(e);
  }
  // Try to find a handler for the given tag and use that to parse. If
  // none is found, the element's content nodes are added directly.
  addElement(e, n) {
    let r = e.nodeName.toLowerCase(), i;
    u7.hasOwnProperty(r) && this.parser.normalizeLists && QP(e);
    let s = this.options.ruleFromNode && this.options.ruleFromNode(e) || (i = this.parser.matchTag(e, this, n));
    if (s ? s.ignore : YP.hasOwnProperty(r))
      this.findInside(e), this.ignoreFallback(e);
    else if (!s || s.skip || s.closeParent) {
      s && s.closeParent ? this.open = Math.max(0, this.open - 1) : s && s.skip.nodeType && (e = s.skip);
      let l, c = this.top, h = this.needsBlock;
      if (l7.hasOwnProperty(r))
        c.content.length && c.content[0].isInline && this.open && (this.open--, c = this.top), l = !0, c.type || (this.needsBlock = !0);
      else if (!e.firstChild) {
        this.leafFallback(e);
        return;
      }
      this.addAll(e), l && this.sync(c), this.needsBlock = h;
    } else
      this.addElementByRule(e, s, s.consuming === !1 ? i : void 0);
  }
  // Called for leaf DOM nodes that would otherwise be ignored
  leafFallback(e) {
    e.nodeName == "BR" && this.top.type && this.top.type.inlineContent && this.addTextNode(e.ownerDocument.createTextNode(`
`));
  }
  // Called for ignored nodes
  ignoreFallback(e) {
    e.nodeName == "BR" && (!this.top.type || !this.top.type.inlineContent) && this.findPlace(this.parser.schema.text("-"));
  }
  // Run any style parser associated with the node's styles. Either
  // return an array of marks, or null to indicate some of the styles
  // had a rule with `ignore` set.
  readStyles(e) {
    let n = _n.none, r = _n.none;
    e:
      for (let i = 0; i < e.length; i += 2)
        for (let s = void 0; ; ) {
          let l = this.parser.matchStyle(e[i], e[i + 1], this, s);
          if (!l)
            continue e;
          if (l.ignore)
            return null;
          if (l.clearMark ? this.top.pendingMarks.forEach((c) => {
            l.clearMark(c) && (r = c.addToSet(r));
          }) : n = this.parser.schema.marks[l.mark].create(l.attrs).addToSet(n), l.consuming === !1)
            s = l;
          else
            break;
        }
    return [n, r];
  }
  // Look up a handler for the given node. If none are found, return
  // false. Otherwise, apply it, use its return value to drive the way
  // the node's content is wrapped, and return true.
  addElementByRule(e, n, r) {
    let i, s, l;
    n.node ? (s = this.parser.schema.nodes[n.node], s.isLeaf ? this.insertNode(s.create(n.attrs)) || this.leafFallback(e) : i = this.enter(s, n.attrs || null, n.preserveWhitespace)) : (l = this.parser.schema.marks[n.mark].create(n.attrs), this.addPendingMark(l));
    let c = this.top;
    if (s && s.isLeaf)
      this.findInside(e);
    else if (r)
      this.addElement(e, r);
    else if (n.getContent)
      this.findInside(e), n.getContent(e, this.parser.schema).forEach((h) => this.insertNode(h));
    else {
      let h = e;
      typeof n.contentElement == "string" ? h = e.querySelector(n.contentElement) : typeof n.contentElement == "function" ? h = n.contentElement(e) : n.contentElement && (h = n.contentElement), this.findAround(e, h, !0), this.addAll(h);
    }
    i && this.sync(c) && this.open--, l && this.removePendingMark(l, c);
  }
  // Add all child nodes between `startIndex` and `endIndex` (or the
  // whole node, if not given). If `sync` is passed, use it to
  // synchronize after every block element.
  addAll(e, n, r) {
    let i = n || 0;
    for (let s = n ? e.childNodes[n] : e.firstChild, l = r == null ? null : e.childNodes[r]; s != l; s = s.nextSibling, ++i)
      this.findAtPoint(e, i), this.addDOM(s);
    this.findAtPoint(e, i);
  }
  // Try to find a way to fit the given node type into the current
  // context. May add intermediate wrappers and/or leave non-solid
  // nodes that we're in.
  findPlace(e) {
    let n, r;
    for (let i = this.open; i >= 0; i--) {
      let s = this.nodes[i], l = s.findWrapping(e);
      if (l && (!n || n.length > l.length) && (n = l, r = s, !l.length) || s.solid)
        break;
    }
    if (!n)
      return !1;
    this.sync(r);
    for (let i = 0; i < n.length; i++)
      this.enterInner(n[i], null, !1);
    return !0;
  }
  // Try to insert the given node, adjusting the context when needed.
  insertNode(e) {
    if (e.isInline && this.needsBlock && !this.top.type) {
      let n = this.textblockFromContext();
      n && this.enterInner(n);
    }
    if (this.findPlace(e)) {
      this.closeExtra();
      let n = this.top;
      n.applyPending(e.type), n.match && (n.match = n.match.matchType(e.type));
      let r = n.activeMarks;
      for (let i = 0; i < e.marks.length; i++)
        (!n.type || n.type.allowsMarkType(e.marks[i].type)) && (r = e.marks[i].addToSet(r));
      return n.content.push(e.mark(r)), !0;
    }
    return !1;
  }
  // Try to start a node of the given type, adjusting the context when
  // necessary.
  enter(e, n, r) {
    let i = this.findPlace(e.create(n));
    return i && this.enterInner(e, n, !0, r), i;
  }
  // Open a node of the given type
  enterInner(e, n = null, r = !1, i) {
    this.closeExtra();
    let s = this.top;
    s.applyPending(e), s.match = s.match && s.match.matchType(e);
    let l = j3(e, i, s.options);
    s.options & Gm && s.content.length == 0 && (l |= Gm), this.nodes.push(new h9(e, n, s.activeMarks, s.pendingMarks, r, null, l)), this.open++;
  }
  // Make sure all nodes above this.open are finished and added to
  // their parents
  closeExtra(e = !1) {
    let n = this.nodes.length - 1;
    if (n > this.open) {
      for (; n > this.open; n--)
        this.nodes[n - 1].content.push(this.nodes[n].finish(e));
      this.nodes.length = this.open + 1;
    }
  }
  finish() {
    return this.open = 0, this.closeExtra(this.isOpen), this.nodes[0].finish(this.isOpen || this.options.topOpen);
  }
  sync(e) {
    for (let n = this.open; n >= 0; n--)
      if (this.nodes[n] == e)
        return this.open = n, !0;
    return !1;
  }
  get currentPos() {
    this.closeExtra();
    let e = 0;
    for (let n = this.open; n >= 0; n--) {
      let r = this.nodes[n].content;
      for (let i = r.length - 1; i >= 0; i--)
        e += r[i].nodeSize;
      n && e++;
    }
    return e;
  }
  findAtPoint(e, n) {
    if (this.find)
      for (let r = 0; r < this.find.length; r++)
        this.find[r].node == e && this.find[r].offset == n && (this.find[r].pos = this.currentPos);
  }
  findInside(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].pos == null && e.nodeType == 1 && e.contains(this.find[n].node) && (this.find[n].pos = this.currentPos);
  }
  findAround(e, n, r) {
    if (e != n && this.find)
      for (let i = 0; i < this.find.length; i++)
        this.find[i].pos == null && e.nodeType == 1 && e.contains(this.find[i].node) && n.compareDocumentPosition(this.find[i].node) & (r ? 2 : 4) && (this.find[i].pos = this.currentPos);
  }
  findInText(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].node == e && (this.find[n].pos = this.currentPos - (e.nodeValue.length - this.find[n].offset));
  }
  // Determines whether the given context string matches this context.
  matchesContext(e) {
    if (e.indexOf("|") > -1)
      return e.split(/\s*\|\s*/).some(this.matchesContext, this);
    let n = e.split("/"), r = this.options.context, i = !this.isOpen && (!r || r.parent.type == this.nodes[0].type), s = -(r ? r.depth + 1 : 0) + (i ? 0 : 1), l = (c, h) => {
      for (; c >= 0; c--) {
        let g = n[c];
        if (g == "") {
          if (c == n.length - 1 || c == 0)
            continue;
          for (; h >= s; h--)
            if (l(c - 1, h))
              return !0;
          return !1;
        } else {
          let v = h > 0 || h == 0 && i ? this.nodes[h].type : r && h >= s ? r.node(h - s).type : null;
          if (!v || v.name != g && v.groups.indexOf(g) == -1)
            return !1;
          h--;
        }
      }
      return !0;
    };
    return l(n.length - 1, this.open);
  }
  textblockFromContext() {
    let e = this.options.context;
    if (e)
      for (let n = e.depth; n >= 0; n--) {
        let r = e.node(n).contentMatchAt(e.indexAfter(n)).defaultType;
        if (r && r.isTextblock && r.defaultAttrs)
          return r;
      }
    for (let n in this.parser.schema.nodes) {
      let r = this.parser.schema.nodes[n];
      if (r.isTextblock && r.defaultAttrs)
        return r;
    }
  }
  addPendingMark(e) {
    let n = eF(e, this.top.pendingMarks);
    n && this.top.stashMarks.push(n), this.top.pendingMarks = e.addToSet(this.top.pendingMarks);
  }
  removePendingMark(e, n) {
    for (let r = this.open; r >= 0; r--) {
      let i = this.nodes[r];
      if (i.pendingMarks.lastIndexOf(e) > -1)
        i.pendingMarks = e.removeFromSet(i.pendingMarks);
      else {
        i.activeMarks = e.removeFromSet(i.activeMarks);
        let l = i.popFromStashMark(e);
        l && i.type && i.type.allowsMarkType(l.type) && (i.activeMarks = l.addToSet(i.activeMarks));
      }
      if (i == n)
        break;
    }
  }
}
function QP(t) {
  for (let e = t.firstChild, n = null; e; e = e.nextSibling) {
    let r = e.nodeType == 1 ? e.nodeName.toLowerCase() : null;
    r && u7.hasOwnProperty(r) && n ? (n.appendChild(e), e = n) : r == "li" ? n = e : r && (n = null);
  }
}
function XP(t, e) {
  return (t.matches || t.msMatchesSelector || t.webkitMatchesSelector || t.mozMatchesSelector).call(t, e);
}
function JP(t) {
  let e = /\s*([\w-]+)\s*:\s*([^;]+)/g, n, r = [];
  for (; n = e.exec(t); )
    r.push(n[1], n[2].trim());
  return r;
}
function $3(t) {
  let e = {};
  for (let n in t)
    e[n] = t[n];
  return e;
}
function ZP(t, e) {
  let n = e.schema.nodes;
  for (let r in n) {
    let i = n[r];
    if (!i.allowsMarkType(t))
      continue;
    let s = [], l = (c) => {
      s.push(c);
      for (let h = 0; h < c.edgeCount; h++) {
        let { type: g, next: v } = c.edge(h);
        if (g == e || s.indexOf(v) < 0 && l(v))
          return !0;
      }
    };
    if (l(i.contentMatch))
      return !0;
  }
}
function eF(t, e) {
  for (let n = 0; n < e.length; n++)
    if (t.eq(e[n]))
      return e[n];
}
class ns {
  /**
  Create a serializer. `nodes` should map node names to functions
  that take a node and return a description of the corresponding
  DOM. `marks` does the same for mark names, but also gets an
  argument that tells it whether the mark's content is block or
  inline content (for typical use, it'll always be inline). A mark
  serializer may be `null` to indicate that marks of that type
  should not be serialized.
  */
  constructor(e, n) {
    this.nodes = e, this.marks = n;
  }
  /**
  Serialize the content of this fragment to a DOM fragment. When
  not in the browser, the `document` option, containing a DOM
  document, should be passed so that the serializer can create
  nodes.
  */
  serializeFragment(e, n = {}, r) {
    r || (r = FT(n).createDocumentFragment());
    let i = r, s = [];
    return e.forEach((l) => {
      if (s.length || l.marks.length) {
        let c = 0, h = 0;
        for (; c < s.length && h < l.marks.length; ) {
          let g = l.marks[h];
          if (!this.marks[g.type.name]) {
            h++;
            continue;
          }
          if (!g.eq(s[c][0]) || g.type.spec.spanning === !1)
            break;
          c++, h++;
        }
        for (; c < s.length; )
          i = s.pop()[1];
        for (; h < l.marks.length; ) {
          let g = l.marks[h++], v = this.serializeMark(g, l.isInline, n);
          v && (s.push([g, i]), i.appendChild(v.dom), i = v.contentDOM || v.dom);
        }
      }
      i.appendChild(this.serializeNodeInner(l, n));
    }), r;
  }
  /**
  @internal
  */
  serializeNodeInner(e, n) {
    let { dom: r, contentDOM: i } = ns.renderSpec(FT(n), this.nodes[e.type.name](e));
    if (i) {
      if (e.isLeaf)
        throw new RangeError("Content hole not allowed in a leaf node spec");
      this.serializeFragment(e.content, n, i);
    }
    return r;
  }
  /**
  Serialize this node to a DOM node. This can be useful when you
  need to serialize a part of a document, as opposed to the whole
  document. To serialize a whole document, use
  [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on
  its [content](https://prosemirror.net/docs/ref/#model.Node.content).
  */
  serializeNode(e, n = {}) {
    let r = this.serializeNodeInner(e, n);
    for (let i = e.marks.length - 1; i >= 0; i--) {
      let s = this.serializeMark(e.marks[i], e.isInline, n);
      s && ((s.contentDOM || s.dom).appendChild(r), r = s.dom);
    }
    return r;
  }
  /**
  @internal
  */
  serializeMark(e, n, r = {}) {
    let i = this.marks[e.type.name];
    return i && ns.renderSpec(FT(r), i(e, n));
  }
  /**
  Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If
  the spec has a hole (zero) in it, `contentDOM` will point at the
  node with the hole.
  */
  static renderSpec(e, n, r = null) {
    if (typeof n == "string")
      return { dom: e.createTextNode(n) };
    if (n.nodeType != null)
      return { dom: n };
    if (n.dom && n.dom.nodeType != null)
      return n;
    let i = n[0], s = i.indexOf(" ");
    s > 0 && (r = i.slice(0, s), i = i.slice(s + 1));
    let l, c = r ? e.createElementNS(r, i) : e.createElement(i), h = n[1], g = 1;
    if (h && typeof h == "object" && h.nodeType == null && !Array.isArray(h)) {
      g = 2;
      for (let v in h)
        if (h[v] != null) {
          let C = v.indexOf(" ");
          C > 0 ? c.setAttributeNS(v.slice(0, C), v.slice(C + 1), h[v]) : c.setAttribute(v, h[v]);
        }
    }
    for (let v = g; v < n.length; v++) {
      let C = n[v];
      if (C === 0) {
        if (v < n.length - 1 || v > g)
          throw new RangeError("Content hole must be the only child of its parent node");
        return { dom: c, contentDOM: c };
      } else {
        let { dom: S, contentDOM: b } = ns.renderSpec(e, C, r);
        if (c.appendChild(S), b) {
          if (l)
            throw new RangeError("Multiple content holes");
          l = b;
        }
      }
    }
    return { dom: c, contentDOM: l };
  }
  /**
  Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)
  properties in a schema's node and mark specs.
  */
  static fromSchema(e) {
    return e.cached.domSerializer || (e.cached.domSerializer = new ns(this.nodesFromSchema(e), this.marksFromSchema(e)));
  }
  /**
  Gather the serializers in a schema's node specs into an object.
  This can be useful as a base to build a custom serializer from.
  */
  static nodesFromSchema(e) {
    let n = G3(e.nodes);
    return n.text || (n.text = (r) => r.text), n;
  }
  /**
  Gather the serializers in a schema's mark specs into an object.
  */
  static marksFromSchema(e) {
    return G3(e.marks);
  }
}
function G3(t) {
  let e = {};
  for (let n in t) {
    let r = t[n].spec.toDOM;
    r && (e[n] = r);
  }
  return e;
}
function FT(t) {
  return t.document || window.document;
}
const c7 = 65535, f7 = Math.pow(2, 16);
function tF(t, e) {
  return t + e * f7;
}
function W3(t) {
  return t & c7;
}
function nF(t) {
  return (t - (t & c7)) / f7;
}
const d7 = 1, h7 = 2, U9 = 4, p7 = 8;
class lC {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.pos = e, this.delInfo = n, this.recover = r;
  }
  /**
  Tells you whether the position was deleted, that is, whether the
  step removed the token on the side queried (via the `assoc`)
  argument from the document.
  */
  get deleted() {
    return (this.delInfo & p7) > 0;
  }
  /**
  Tells you whether the token before the mapped position was deleted.
  */
  get deletedBefore() {
    return (this.delInfo & (d7 | U9)) > 0;
  }
  /**
  True when the token after the mapped position was deleted.
  */
  get deletedAfter() {
    return (this.delInfo & (h7 | U9)) > 0;
  }
  /**
  Tells whether any of the steps mapped through deletes across the
  position (including both the token before and after the
  position).
  */
  get deletedAcross() {
    return (this.delInfo & U9) > 0;
  }
}
class ma {
  /**
  Create a position map. The modifications to the document are
  represented as an array of numbers, in which each group of three
  represents a modified chunk as `[start, oldSize, newSize]`.
  */
  constructor(e, n = !1) {
    if (this.ranges = e, this.inverted = n, !e.length && ma.empty)
      return ma.empty;
  }
  /**
  @internal
  */
  recover(e) {
    let n = 0, r = W3(e);
    if (!this.inverted)
      for (let i = 0; i < r; i++)
        n += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];
    return this.ranges[r * 3] + n + nF(e);
  }
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  map(e, n = 1) {
    return this._map(e, n, !0);
  }
  /**
  @internal
  */
  _map(e, n, r) {
    let i = 0, s = this.inverted ? 2 : 1, l = this.inverted ? 1 : 2;
    for (let c = 0; c < this.ranges.length; c += 3) {
      let h = this.ranges[c] - (this.inverted ? i : 0);
      if (h > e)
        break;
      let g = this.ranges[c + s], v = this.ranges[c + l], C = h + g;
      if (e <= C) {
        let S = g ? e == h ? -1 : e == C ? 1 : n : n, b = h + i + (S < 0 ? 0 : v);
        if (r)
          return b;
        let N = e == (n < 0 ? h : C) ? null : tF(c / 3, e - h), O = e == h ? h7 : e == C ? d7 : U9;
        return (n < 0 ? e != h : e != C) && (O |= p7), new lC(b, O, N);
      }
      i += v - g;
    }
    return r ? e + i : new lC(e + i, 0, null);
  }
  /**
  @internal
  */
  touches(e, n) {
    let r = 0, i = W3(n), s = this.inverted ? 2 : 1, l = this.inverted ? 1 : 2;
    for (let c = 0; c < this.ranges.length; c += 3) {
      let h = this.ranges[c] - (this.inverted ? r : 0);
      if (h > e)
        break;
      let g = this.ranges[c + s], v = h + g;
      if (e <= v && c == i * 3)
        return !0;
      r += this.ranges[c + l] - g;
    }
    return !1;
  }
  /**
  Calls the given function on each of the changed ranges included in
  this map.
  */
  forEach(e) {
    let n = this.inverted ? 2 : 1, r = this.inverted ? 1 : 2;
    for (let i = 0, s = 0; i < this.ranges.length; i += 3) {
      let l = this.ranges[i], c = l - (this.inverted ? s : 0), h = l + (this.inverted ? 0 : s), g = this.ranges[i + n], v = this.ranges[i + r];
      e(c, c + g, h, h + v), s += v - g;
    }
  }
  /**
  Create an inverted version of this map. The result can be used to
  map positions in the post-step document to the pre-step document.
  */
  invert() {
    return new ma(this.ranges, !this.inverted);
  }
  /**
  @internal
  */
  toString() {
    return (this.inverted ? "-" : "") + JSON.stringify(this.ranges);
  }
  /**
  Create a map that moves all positions by offset `n` (which may be
  negative). This can be useful when applying steps meant for a
  sub-document to a larger document, or vice-versa.
  */
  static offset(e) {
    return e == 0 ? ma.empty : new ma(e < 0 ? [0, -e, 0] : [0, 0, e]);
  }
}
ma.empty = new ma([]);
class ch {
  /**
  Create a new mapping with the given position maps.
  */
  constructor(e = [], n, r = 0, i = e.length) {
    this.maps = e, this.mirror = n, this.from = r, this.to = i;
  }
  /**
  Create a mapping that maps only through a part of this one.
  */
  slice(e = 0, n = this.maps.length) {
    return new ch(this.maps, this.mirror, e, n);
  }
  /**
  @internal
  */
  copy() {
    return new ch(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);
  }
  /**
  Add a step map to the end of this mapping. If `mirrors` is
  given, it should be the index of the step map that is the mirror
  image of this one.
  */
  appendMap(e, n) {
    this.to = this.maps.push(e), n != null && this.setMirror(this.maps.length - 1, n);
  }
  /**
  Add all the step maps in a given mapping to this one (preserving
  mirroring information).
  */
  appendMapping(e) {
    for (let n = 0, r = this.maps.length; n < e.maps.length; n++) {
      let i = e.getMirror(n);
      this.appendMap(e.maps[n], i != null && i < n ? r + i : void 0);
    }
  }
  /**
  Finds the offset of the step map that mirrors the map at the
  given offset, in this mapping (as per the second argument to
  `appendMap`).
  */
  getMirror(e) {
    if (this.mirror) {
      for (let n = 0; n < this.mirror.length; n++)
        if (this.mirror[n] == e)
          return this.mirror[n + (n % 2 ? -1 : 1)];
    }
  }
  /**
  @internal
  */
  setMirror(e, n) {
    this.mirror || (this.mirror = []), this.mirror.push(e, n);
  }
  /**
  Append the inverse of the given mapping to this one.
  */
  appendMappingInverted(e) {
    for (let n = e.maps.length - 1, r = this.maps.length + e.maps.length; n >= 0; n--) {
      let i = e.getMirror(n);
      this.appendMap(e.maps[n].invert(), i != null && i > n ? r - i - 1 : void 0);
    }
  }
  /**
  Create an inverted version of this mapping.
  */
  invert() {
    let e = new ch();
    return e.appendMappingInverted(this), e;
  }
  /**
  Map a position through this mapping.
  */
  map(e, n = 1) {
    if (this.mirror)
      return this._map(e, n, !0);
    for (let r = this.from; r < this.to; r++)
      e = this.maps[r].map(e, n);
    return e;
  }
  /**
  Map a position through this mapping, returning a mapping
  result.
  */
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  /**
  @internal
  */
  _map(e, n, r) {
    let i = 0;
    for (let s = this.from; s < this.to; s++) {
      let l = this.maps[s], c = l.mapResult(e, n);
      if (c.recover != null) {
        let h = this.getMirror(s);
        if (h != null && h > s && h < this.to) {
          s = h, e = this.maps[h].recover(c.recover);
          continue;
        }
      }
      i |= c.delInfo, e = c.pos;
    }
    return r ? e : new lC(e, i, null);
  }
}
const BT = /* @__PURE__ */ Object.create(null);
class mo {
  /**
  Get the step map that represents the changes made by this step,
  and which can be used to transform between positions in the old
  and the new document.
  */
  getMap() {
    return ma.empty;
  }
  /**
  Try to merge this step with another one, to be applied directly
  after it. Returns the merged step when possible, null if the
  steps can't be merged.
  */
  merge(e) {
    return null;
  }
  /**
  Deserialize a step from its JSON representation. Will call
  through to the step class' own implementation of this method.
  */
  static fromJSON(e, n) {
    if (!n || !n.stepType)
      throw new RangeError("Invalid input for Step.fromJSON");
    let r = BT[n.stepType];
    if (!r)
      throw new RangeError(`No step type ${n.stepType} defined`);
    return r.fromJSON(e, n);
  }
  /**
  To be able to serialize steps to JSON, each step needs a string
  ID to attach to its JSON representation. Use this method to
  register an ID for your step classes. Try to pick something
  that's unlikely to clash with steps from other modules.
  */
  static jsonID(e, n) {
    if (e in BT)
      throw new RangeError("Duplicate use of step JSON ID " + e);
    return BT[e] = n, n.prototype.jsonID = e, n;
  }
}
class Fr {
  /**
  @internal
  */
  constructor(e, n) {
    this.doc = e, this.failed = n;
  }
  /**
  Create a successful step result.
  */
  static ok(e) {
    return new Fr(e, null);
  }
  /**
  Create a failed step result.
  */
  static fail(e) {
    return new Fr(null, e);
  }
  /**
  Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given
  arguments. Create a successful result if it succeeds, and a
  failed one if it throws a `ReplaceError`.
  */
  static fromReplace(e, n, r, i) {
    try {
      return Fr.ok(e.replace(n, r, i));
    } catch (s) {
      if (s instanceof ny)
        return Fr.fail(s.message);
      throw s;
    }
  }
}
function GC(t, e, n) {
  let r = [];
  for (let i = 0; i < t.childCount; i++) {
    let s = t.child(i);
    s.content.size && (s = s.copy(GC(s.content, e, s))), s.isInline && (s = e(s, n, i)), r.push(s);
  }
  return Oe.fromArray(r);
}
class yc extends mo {
  /**
  Create a mark step.
  */
  constructor(e, n, r) {
    super(), this.from = e, this.to = n, this.mark = r;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), r = e.resolve(this.from), i = r.node(r.sharedDepth(this.to)), s = new Xe(GC(n.content, (l, c) => !l.isAtom || !c.type.allowsMarkType(this.mark.type) ? l : l.mark(this.mark.addToSet(l.marks)), i), n.openStart, n.openEnd);
    return Fr.fromReplace(e, this.from, this.to, s);
  }
  invert() {
    return new ul(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return n.deleted && r.deleted || n.pos >= r.pos ? null : new yc(n.pos, r.pos, this.mark);
  }
  merge(e) {
    return e instanceof yc && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new yc(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "addMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for AddMarkStep.fromJSON");
    return new yc(n.from, n.to, e.markFromJSON(n.mark));
  }
}
mo.jsonID("addMark", yc);
class ul extends mo {
  /**
  Create a mark-removing step.
  */
  constructor(e, n, r) {
    super(), this.from = e, this.to = n, this.mark = r;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), r = new Xe(GC(n.content, (i) => i.mark(this.mark.removeFromSet(i.marks)), e), n.openStart, n.openEnd);
    return Fr.fromReplace(e, this.from, this.to, r);
  }
  invert() {
    return new yc(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return n.deleted && r.deleted || n.pos >= r.pos ? null : new ul(n.pos, r.pos, this.mark);
  }
  merge(e) {
    return e instanceof ul && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new ul(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "removeMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for RemoveMarkStep.fromJSON");
    return new ul(n.from, n.to, e.markFromJSON(n.mark));
  }
}
mo.jsonID("removeMark", ul);
class vc extends mo {
  /**
  Create a node mark step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return Fr.fail("No node at mark step's position");
    let r = n.type.create(n.attrs, null, this.mark.addToSet(n.marks));
    return Fr.fromReplace(e, this.pos, this.pos + 1, new Xe(Oe.from(r), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    if (n) {
      let r = this.mark.addToSet(n.marks);
      if (r.length == n.marks.length) {
        for (let i = 0; i < n.marks.length; i++)
          if (!n.marks[i].isInSet(r))
            return new vc(this.pos, n.marks[i]);
        return new vc(this.pos, this.mark);
      }
    }
    return new yh(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new vc(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "addNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for AddNodeMarkStep.fromJSON");
    return new vc(n.pos, e.markFromJSON(n.mark));
  }
}
mo.jsonID("addNodeMark", vc);
class yh extends mo {
  /**
  Create a mark-removing step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return Fr.fail("No node at mark step's position");
    let r = n.type.create(n.attrs, null, this.mark.removeFromSet(n.marks));
    return Fr.fromReplace(e, this.pos, this.pos + 1, new Xe(Oe.from(r), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    return !n || !this.mark.isInSet(n.marks) ? this : new vc(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new yh(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "removeNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for RemoveNodeMarkStep.fromJSON");
    return new yh(n.pos, e.markFromJSON(n.mark));
  }
}
mo.jsonID("removeNodeMark", yh);
class Ri extends mo {
  /**
  The given `slice` should fit the 'gap' between `from` and
  `to`—the depths must line up, and the surrounding nodes must be
  able to be joined with the open sides of the slice. When
  `structure` is true, the step will fail if the content between
  from and to is not just a sequence of closing and then opening
  tokens (this is to guard against rebased replace steps
  overwriting something they weren't supposed to).
  */
  constructor(e, n, r, i = !1) {
    super(), this.from = e, this.to = n, this.slice = r, this.structure = i;
  }
  apply(e) {
    return this.structure && uC(e, this.from, this.to) ? Fr.fail("Structure replace would overwrite content") : Fr.fromReplace(e, this.from, this.to, this.slice);
  }
  getMap() {
    return new ma([this.from, this.to - this.from, this.slice.size]);
  }
  invert(e) {
    return new Ri(this.from, this.from + this.slice.size, e.slice(this.from, this.to));
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return n.deletedAcross && r.deletedAcross ? null : new Ri(n.pos, Math.max(n.pos, r.pos), this.slice);
  }
  merge(e) {
    if (!(e instanceof Ri) || e.structure || this.structure)
      return null;
    if (this.from + this.slice.size == e.from && !this.slice.openEnd && !e.slice.openStart) {
      let n = this.slice.size + e.slice.size == 0 ? Xe.empty : new Xe(this.slice.content.append(e.slice.content), this.slice.openStart, e.slice.openEnd);
      return new Ri(this.from, this.to + (e.to - e.from), n, this.structure);
    } else if (e.to == this.from && !this.slice.openStart && !e.slice.openEnd) {
      let n = this.slice.size + e.slice.size == 0 ? Xe.empty : new Xe(e.slice.content.append(this.slice.content), e.slice.openStart, this.slice.openEnd);
      return new Ri(e.from, this.to, n, this.structure);
    } else
      return null;
  }
  toJSON() {
    let e = { stepType: "replace", from: this.from, to: this.to };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for ReplaceStep.fromJSON");
    return new Ri(n.from, n.to, Xe.fromJSON(e, n.slice), !!n.structure);
  }
}
mo.jsonID("replace", Ri);
class ei extends mo {
  /**
  Create a replace-around step with the given range and gap.
  `insert` should be the point in the slice into which the content
  of the gap should be moved. `structure` has the same meaning as
  it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.
  */
  constructor(e, n, r, i, s, l, c = !1) {
    super(), this.from = e, this.to = n, this.gapFrom = r, this.gapTo = i, this.slice = s, this.insert = l, this.structure = c;
  }
  apply(e) {
    if (this.structure && (uC(e, this.from, this.gapFrom) || uC(e, this.gapTo, this.to)))
      return Fr.fail("Structure gap-replace would overwrite content");
    let n = e.slice(this.gapFrom, this.gapTo);
    if (n.openStart || n.openEnd)
      return Fr.fail("Gap is not a flat range");
    let r = this.slice.insertAt(this.insert, n.content);
    return r ? Fr.fromReplace(e, this.from, this.to, r) : Fr.fail("Content does not fit in gap");
  }
  getMap() {
    return new ma([
      this.from,
      this.gapFrom - this.from,
      this.insert,
      this.gapTo,
      this.to - this.gapTo,
      this.slice.size - this.insert
    ]);
  }
  invert(e) {
    let n = this.gapTo - this.gapFrom;
    return new ei(this.from, this.from + this.slice.size + n, this.from + this.insert, this.from + this.insert + n, e.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1), i = e.map(this.gapFrom, -1), s = e.map(this.gapTo, 1);
    return n.deletedAcross && r.deletedAcross || i < n.pos || s > r.pos ? null : new ei(n.pos, r.pos, i, s, this.slice, this.insert, this.structure);
  }
  toJSON() {
    let e = {
      stepType: "replaceAround",
      from: this.from,
      to: this.to,
      gapFrom: this.gapFrom,
      gapTo: this.gapTo,
      insert: this.insert
    };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number" || typeof n.gapFrom != "number" || typeof n.gapTo != "number" || typeof n.insert != "number")
      throw new RangeError("Invalid input for ReplaceAroundStep.fromJSON");
    return new ei(n.from, n.to, n.gapFrom, n.gapTo, Xe.fromJSON(e, n.slice), n.insert, !!n.structure);
  }
}
mo.jsonID("replaceAround", ei);
function uC(t, e, n) {
  let r = t.resolve(e), i = n - e, s = r.depth;
  for (; i > 0 && s > 0 && r.indexAfter(s) == r.node(s).childCount; )
    s--, i--;
  if (i > 0) {
    let l = r.node(s).maybeChild(r.indexAfter(s));
    for (; i > 0; ) {
      if (!l || l.isLeaf)
        return !0;
      l = l.firstChild, i--;
    }
  }
  return !1;
}
function rF(t, e, n, r) {
  let i = [], s = [], l, c;
  t.doc.nodesBetween(e, n, (h, g, v) => {
    if (!h.isInline)
      return;
    let C = h.marks;
    if (!r.isInSet(C) && v.type.allowsMarkType(r.type)) {
      let S = Math.max(g, e), b = Math.min(g + h.nodeSize, n), N = r.addToSet(C);
      for (let O = 0; O < C.length; O++)
        C[O].isInSet(N) || (l && l.to == S && l.mark.eq(C[O]) ? l.to = b : i.push(l = new ul(S, b, C[O])));
      c && c.to == S ? c.to = b : s.push(c = new yc(S, b, r));
    }
  }), i.forEach((h) => t.step(h)), s.forEach((h) => t.step(h));
}
function iF(t, e, n, r) {
  let i = [], s = 0;
  t.doc.nodesBetween(e, n, (l, c) => {
    if (!l.isInline)
      return;
    s++;
    let h = null;
    if (r instanceof Vy) {
      let g = l.marks, v;
      for (; v = r.isInSet(g); )
        (h || (h = [])).push(v), g = v.removeFromSet(g);
    } else
      r ? r.isInSet(l.marks) && (h = [r]) : h = l.marks;
    if (h && h.length) {
      let g = Math.min(c + l.nodeSize, n);
      for (let v = 0; v < h.length; v++) {
        let C = h[v], S;
        for (let b = 0; b < i.length; b++) {
          let N = i[b];
          N.step == s - 1 && C.eq(i[b].style) && (S = N);
        }
        S ? (S.to = g, S.step = s) : i.push({ style: C, from: Math.max(c, e), to: g, step: s });
      }
    }
  }), i.forEach((l) => t.step(new ul(l.from, l.to, l.style)));
}
function oF(t, e, n, r = n.contentMatch) {
  let i = t.doc.nodeAt(e), s = [], l = e + 1;
  for (let c = 0; c < i.childCount; c++) {
    let h = i.child(c), g = l + h.nodeSize, v = r.matchType(h.type);
    if (!v)
      s.push(new Ri(l, g, Xe.empty));
    else {
      r = v;
      for (let C = 0; C < h.marks.length; C++)
        n.allowsMarkType(h.marks[C].type) || t.step(new ul(l, g, h.marks[C]));
    }
    l = g;
  }
  if (!r.validEnd) {
    let c = r.fillBefore(Oe.empty, !0);
    t.replace(l, l, new Xe(c, 0, 0));
  }
  for (let c = s.length - 1; c >= 0; c--)
    t.step(s[c]);
}
function aF(t, e, n) {
  return (e == 0 || t.canReplace(e, t.childCount)) && (n == t.childCount || t.canReplace(0, n));
}
function xh(t) {
  let n = t.parent.content.cutByIndex(t.startIndex, t.endIndex);
  for (let r = t.depth; ; --r) {
    let i = t.$from.node(r), s = t.$from.index(r), l = t.$to.indexAfter(r);
    if (r < t.depth && i.canReplace(s, l, n))
      return r;
    if (r == 0 || i.type.spec.isolating || !aF(i, s, l))
      break;
  }
  return null;
}
function sF(t, e, n) {
  let { $from: r, $to: i, depth: s } = e, l = r.before(s + 1), c = i.after(s + 1), h = l, g = c, v = Oe.empty, C = 0;
  for (let N = s, O = !1; N > n; N--)
    O || r.index(N) > 0 ? (O = !0, v = Oe.from(r.node(N).copy(v)), C++) : h--;
  let S = Oe.empty, b = 0;
  for (let N = s, O = !1; N > n; N--)
    O || i.after(N + 1) < i.end(N) ? (O = !0, S = Oe.from(i.node(N).copy(S)), b++) : g++;
  t.step(new ei(h, g, l, c, new Xe(v.append(S), C, b), v.size - C, !0));
}
function WC(t, e, n = null, r = t) {
  let i = lF(t, e), s = i && uF(r, e);
  return s ? i.map(K3).concat({ type: e, attrs: n }).concat(s.map(K3)) : null;
}
function K3(t) {
  return { type: t, attrs: null };
}
function lF(t, e) {
  let { parent: n, startIndex: r, endIndex: i } = t, s = n.contentMatchAt(r).findWrapping(e);
  if (!s)
    return null;
  let l = s.length ? s[0] : e;
  return n.canReplaceWith(r, i, l) ? s : null;
}
function uF(t, e) {
  let { parent: n, startIndex: r, endIndex: i } = t, s = n.child(r), l = e.contentMatch.findWrapping(s.type);
  if (!l)
    return null;
  let h = (l.length ? l[l.length - 1] : e).contentMatch;
  for (let g = r; h && g < i; g++)
    h = h.matchType(n.child(g).type);
  return !h || !h.validEnd ? null : l;
}
function cF(t, e, n) {
  let r = Oe.empty;
  for (let l = n.length - 1; l >= 0; l--) {
    if (r.size) {
      let c = n[l].type.contentMatch.matchFragment(r);
      if (!c || !c.validEnd)
        throw new RangeError("Wrapper type given to Transform.wrap does not form valid content of its parent wrapper");
    }
    r = Oe.from(n[l].type.create(n[l].attrs, r));
  }
  let i = e.start, s = e.end;
  t.step(new ei(i, s, i, s, new Xe(r, 0, 0), n.length, !0));
}
function fF(t, e, n, r, i) {
  if (!r.isTextblock)
    throw new RangeError("Type given to setBlockType should be a textblock");
  let s = t.steps.length;
  t.doc.nodesBetween(e, n, (l, c) => {
    if (l.isTextblock && !l.hasMarkup(r, i) && dF(t.doc, t.mapping.slice(s).map(c), r)) {
      t.clearIncompatible(t.mapping.slice(s).map(c, 1), r);
      let h = t.mapping.slice(s), g = h.map(c, 1), v = h.map(c + l.nodeSize, 1);
      return t.step(new ei(g, v, g + 1, v - 1, new Xe(Oe.from(r.create(i, null, l.marks)), 0, 0), 1, !0)), !1;
    }
  });
}
function dF(t, e, n) {
  let r = t.resolve(e), i = r.index();
  return r.parent.canReplaceWith(i, i + 1, n);
}
function hF(t, e, n, r, i) {
  let s = t.doc.nodeAt(e);
  if (!s)
    throw new RangeError("No node at given position");
  n || (n = s.type);
  let l = n.create(r, null, i || s.marks);
  if (s.isLeaf)
    return t.replaceWith(e, e + s.nodeSize, l);
  if (!n.validContent(s.content))
    throw new RangeError("Invalid content for node type " + n.name);
  t.step(new ei(e, e + s.nodeSize, e + 1, e + s.nodeSize - 1, new Xe(Oe.from(l), 0, 0), 1, !0));
}
function fh(t, e, n = 1, r) {
  let i = t.resolve(e), s = i.depth - n, l = r && r[r.length - 1] || i.parent;
  if (s < 0 || i.parent.type.spec.isolating || !i.parent.canReplace(i.index(), i.parent.childCount) || !l.type.validContent(i.parent.content.cutByIndex(i.index(), i.parent.childCount)))
    return !1;
  for (let g = i.depth - 1, v = n - 2; g > s; g--, v--) {
    let C = i.node(g), S = i.index(g);
    if (C.type.spec.isolating)
      return !1;
    let b = C.content.cutByIndex(S, C.childCount), N = r && r[v] || C;
    if (N != C && (b = b.replaceChild(0, N.type.create(N.attrs))), !C.canReplace(S + 1, C.childCount) || !N.type.validContent(b))
      return !1;
  }
  let c = i.indexAfter(s), h = r && r[0];
  return i.node(s).canReplaceWith(c, c, h ? h.type : i.node(s + 1).type);
}
function pF(t, e, n = 1, r) {
  let i = t.doc.resolve(e), s = Oe.empty, l = Oe.empty;
  for (let c = i.depth, h = i.depth - n, g = n - 1; c > h; c--, g--) {
    s = Oe.from(i.node(c).copy(s));
    let v = r && r[g];
    l = Oe.from(v ? v.type.create(v.attrs, l) : i.node(c).copy(l));
  }
  t.step(new Ri(e, e, new Xe(s.append(l), n, n), !0));
}
function Nc(t, e) {
  let n = t.resolve(e), r = n.index();
  return m7(n.nodeBefore, n.nodeAfter) && n.parent.canReplace(r, r + 1);
}
function m7(t, e) {
  return !!(t && e && !t.isLeaf && t.canAppend(e));
}
function g7(t, e, n = -1) {
  let r = t.resolve(e);
  for (let i = r.depth; ; i--) {
    let s, l, c = r.index(i);
    if (i == r.depth ? (s = r.nodeBefore, l = r.nodeAfter) : n > 0 ? (s = r.node(i + 1), c++, l = r.node(i).maybeChild(c)) : (s = r.node(i).maybeChild(c - 1), l = r.node(i + 1)), s && !s.isTextblock && m7(s, l) && r.node(i).canReplace(c, c + 1))
      return e;
    if (i == 0)
      break;
    e = n < 0 ? r.before(i) : r.after(i);
  }
}
function mF(t, e, n) {
  let r = new Ri(e - n, e + n, Xe.empty, !0);
  t.step(r);
}
function gF(t, e, n) {
  let r = t.resolve(e);
  if (r.parent.canReplaceWith(r.index(), r.index(), n))
    return e;
  if (r.parentOffset == 0)
    for (let i = r.depth - 1; i >= 0; i--) {
      let s = r.index(i);
      if (r.node(i).canReplaceWith(s, s, n))
        return r.before(i + 1);
      if (s > 0)
        return null;
    }
  if (r.parentOffset == r.parent.content.size)
    for (let i = r.depth - 1; i >= 0; i--) {
      let s = r.indexAfter(i);
      if (r.node(i).canReplaceWith(s, s, n))
        return r.after(i + 1);
      if (s < r.node(i).childCount)
        return null;
    }
  return null;
}
function yF(t, e, n) {
  let r = t.resolve(e);
  if (!n.content.size)
    return e;
  let i = n.content;
  for (let s = 0; s < n.openStart; s++)
    i = i.firstChild.content;
  for (let s = 1; s <= (n.openStart == 0 && n.size ? 2 : 1); s++)
    for (let l = r.depth; l >= 0; l--) {
      let c = l == r.depth ? 0 : r.pos <= (r.start(l + 1) + r.end(l + 1)) / 2 ? -1 : 1, h = r.index(l) + (c > 0 ? 1 : 0), g = r.node(l), v = !1;
      if (s == 1)
        v = g.canReplace(h, h, i);
      else {
        let C = g.contentMatchAt(h).findWrapping(i.firstChild.type);
        v = C && g.canReplaceWith(h, h, C[0]);
      }
      if (v)
        return c == 0 ? r.pos : c < 0 ? r.before(l + 1) : r.after(l + 1);
    }
  return null;
}
function KC(t, e, n = e, r = Xe.empty) {
  if (e == n && !r.size)
    return null;
  let i = t.resolve(e), s = t.resolve(n);
  return y7(i, s, r) ? new Ri(e, n, r) : new vF(i, s, r).fit();
}
function y7(t, e, n) {
  return !n.openStart && !n.openEnd && t.start() == e.start() && t.parent.canReplace(t.index(), e.index(), n.content);
}
class vF {
  constructor(e, n, r) {
    this.$from = e, this.$to = n, this.unplaced = r, this.frontier = [], this.placed = Oe.empty;
    for (let i = 0; i <= e.depth; i++) {
      let s = e.node(i);
      this.frontier.push({
        type: s.type,
        match: s.contentMatchAt(e.indexAfter(i))
      });
    }
    for (let i = e.depth; i > 0; i--)
      this.placed = Oe.from(e.node(i).copy(this.placed));
  }
  get depth() {
    return this.frontier.length - 1;
  }
  fit() {
    for (; this.unplaced.size; ) {
      let g = this.findFittable();
      g ? this.placeNodes(g) : this.openMore() || this.dropNode();
    }
    let e = this.mustMoveInline(), n = this.placed.size - this.depth - this.$from.depth, r = this.$from, i = this.close(e < 0 ? this.$to : r.doc.resolve(e));
    if (!i)
      return null;
    let s = this.placed, l = r.depth, c = i.depth;
    for (; l && c && s.childCount == 1; )
      s = s.firstChild.content, l--, c--;
    let h = new Xe(s, l, c);
    return e > -1 ? new ei(r.pos, e, this.$to.pos, this.$to.end(), h, n) : h.size || r.pos != this.$to.pos ? new Ri(r.pos, i.pos, h) : null;
  }
  // Find a position on the start spine of `this.unplaced` that has
  // content that can be moved somewhere on the frontier. Returns two
  // depths, one for the slice and one for the frontier.
  findFittable() {
    let e = this.unplaced.openStart;
    for (let n = this.unplaced.content, r = 0, i = this.unplaced.openEnd; r < e; r++) {
      let s = n.firstChild;
      if (n.childCount > 1 && (i = 0), s.type.spec.isolating && i <= r) {
        e = r;
        break;
      }
      n = s.content;
    }
    for (let n = 1; n <= 2; n++)
      for (let r = n == 1 ? e : this.unplaced.openStart; r >= 0; r--) {
        let i, s = null;
        r ? (s = UT(this.unplaced.content, r - 1).firstChild, i = s.content) : i = this.unplaced.content;
        let l = i.firstChild;
        for (let c = this.depth; c >= 0; c--) {
          let { type: h, match: g } = this.frontier[c], v, C = null;
          if (n == 1 && (l ? g.matchType(l.type) || (C = g.fillBefore(Oe.from(l), !1)) : s && h.compatibleContent(s.type)))
            return { sliceDepth: r, frontierDepth: c, parent: s, inject: C };
          if (n == 2 && l && (v = g.findWrapping(l.type)))
            return { sliceDepth: r, frontierDepth: c, parent: s, wrap: v };
          if (s && g.matchType(s.type))
            break;
        }
      }
  }
  openMore() {
    let { content: e, openStart: n, openEnd: r } = this.unplaced, i = UT(e, n);
    return !i.childCount || i.firstChild.isLeaf ? !1 : (this.unplaced = new Xe(e, n + 1, Math.max(r, i.size + n >= e.size - r ? n + 1 : 0)), !0);
  }
  dropNode() {
    let { content: e, openStart: n, openEnd: r } = this.unplaced, i = UT(e, n);
    if (i.childCount <= 1 && n > 0) {
      let s = e.size - n <= n + i.size;
      this.unplaced = new Xe(zm(e, n - 1, 1), n - 1, s ? n - 1 : r);
    } else
      this.unplaced = new Xe(zm(e, n, 1), n, r);
  }
  // Move content from the unplaced slice at `sliceDepth` to the
  // frontier node at `frontierDepth`. Close that frontier node when
  // applicable.
  placeNodes({ sliceDepth: e, frontierDepth: n, parent: r, inject: i, wrap: s }) {
    for (; this.depth > n; )
      this.closeFrontierNode();
    if (s)
      for (let O = 0; O < s.length; O++)
        this.openFrontierNode(s[O]);
    let l = this.unplaced, c = r ? r.content : l.content, h = l.openStart - e, g = 0, v = [], { match: C, type: S } = this.frontier[n];
    if (i) {
      for (let O = 0; O < i.childCount; O++)
        v.push(i.child(O));
      C = C.matchFragment(i);
    }
    let b = c.size + e - (l.content.size - l.openEnd);
    for (; g < c.childCount; ) {
      let O = c.child(g), L = C.matchType(O.type);
      if (!L)
        break;
      g++, (g > 1 || h == 0 || O.content.size) && (C = L, v.push(v7(O.mark(S.allowedMarks(O.marks)), g == 1 ? h : 0, g == c.childCount ? b : -1)));
    }
    let N = g == c.childCount;
    N || (b = -1), this.placed = qm(this.placed, n, Oe.from(v)), this.frontier[n].match = C, N && b < 0 && r && r.type == this.frontier[this.depth].type && this.frontier.length > 1 && this.closeFrontierNode();
    for (let O = 0, L = c; O < b; O++) {
      let P = L.lastChild;
      this.frontier.push({ type: P.type, match: P.contentMatchAt(P.childCount) }), L = P.content;
    }
    this.unplaced = N ? e == 0 ? Xe.empty : new Xe(zm(l.content, e - 1, 1), e - 1, b < 0 ? l.openEnd : e - 1) : new Xe(zm(l.content, e, g), l.openStart, l.openEnd);
  }
  mustMoveInline() {
    if (!this.$to.parent.isTextblock)
      return -1;
    let e = this.frontier[this.depth], n;
    if (!e.type.isTextblock || !HT(this.$to, this.$to.depth, e.type, e.match, !1) || this.$to.depth == this.depth && (n = this.findCloseLevel(this.$to)) && n.depth == this.depth)
      return -1;
    let { depth: r } = this.$to, i = this.$to.after(r);
    for (; r > 1 && i == this.$to.end(--r); )
      ++i;
    return i;
  }
  findCloseLevel(e) {
    e:
      for (let n = Math.min(this.depth, e.depth); n >= 0; n--) {
        let { match: r, type: i } = this.frontier[n], s = n < e.depth && e.end(n + 1) == e.pos + (e.depth - (n + 1)), l = HT(e, n, i, r, s);
        if (l) {
          for (let c = n - 1; c >= 0; c--) {
            let { match: h, type: g } = this.frontier[c], v = HT(e, c, g, h, !0);
            if (!v || v.childCount)
              continue e;
          }
          return { depth: n, fit: l, move: s ? e.doc.resolve(e.after(n + 1)) : e };
        }
      }
  }
  close(e) {
    let n = this.findCloseLevel(e);
    if (!n)
      return null;
    for (; this.depth > n.depth; )
      this.closeFrontierNode();
    n.fit.childCount && (this.placed = qm(this.placed, n.depth, n.fit)), e = n.move;
    for (let r = n.depth + 1; r <= e.depth; r++) {
      let i = e.node(r), s = i.type.contentMatch.fillBefore(i.content, !0, e.index(r));
      this.openFrontierNode(i.type, i.attrs, s);
    }
    return e;
  }
  openFrontierNode(e, n = null, r) {
    let i = this.frontier[this.depth];
    i.match = i.match.matchType(e), this.placed = qm(this.placed, this.depth, Oe.from(e.create(n, r))), this.frontier.push({ type: e, match: e.contentMatch });
  }
  closeFrontierNode() {
    let n = this.frontier.pop().match.fillBefore(Oe.empty, !0);
    n.childCount && (this.placed = qm(this.placed, this.frontier.length, n));
  }
}
function zm(t, e, n) {
  return e == 0 ? t.cutByIndex(n, t.childCount) : t.replaceChild(0, t.firstChild.copy(zm(t.firstChild.content, e - 1, n)));
}
function qm(t, e, n) {
  return e == 0 ? t.append(n) : t.replaceChild(t.childCount - 1, t.lastChild.copy(qm(t.lastChild.content, e - 1, n)));
}
function UT(t, e) {
  for (let n = 0; n < e; n++)
    t = t.firstChild.content;
  return t;
}
function v7(t, e, n) {
  if (e <= 0)
    return t;
  let r = t.content;
  return e > 1 && (r = r.replaceChild(0, v7(r.firstChild, e - 1, r.childCount == 1 ? n - 1 : 0))), e > 0 && (r = t.type.contentMatch.fillBefore(r).append(r), n <= 0 && (r = r.append(t.type.contentMatch.matchFragment(r).fillBefore(Oe.empty, !0)))), t.copy(r);
}
function HT(t, e, n, r, i) {
  let s = t.node(e), l = i ? t.indexAfter(e) : t.index(e);
  if (l == s.childCount && !n.compatibleContent(s.type))
    return null;
  let c = r.fillBefore(s.content, !0, l);
  return c && !EF(n, s.content, l) ? c : null;
}
function EF(t, e, n) {
  for (let r = n; r < e.childCount; r++)
    if (!t.allowsMarks(e.child(r).marks))
      return !0;
  return !1;
}
function TF(t) {
  return t.spec.defining || t.spec.definingForContent;
}
function CF(t, e, n, r) {
  if (!r.size)
    return t.deleteRange(e, n);
  let i = t.doc.resolve(e), s = t.doc.resolve(n);
  if (y7(i, s, r))
    return t.step(new Ri(e, n, r));
  let l = T7(i, t.doc.resolve(n));
  l[l.length - 1] == 0 && l.pop();
  let c = -(i.depth + 1);
  l.unshift(c);
  for (let S = i.depth, b = i.pos - 1; S > 0; S--, b--) {
    let N = i.node(S).type.spec;
    if (N.defining || N.definingAsContext || N.isolating)
      break;
    l.indexOf(S) > -1 ? c = S : i.before(S) == b && l.splice(1, 0, -S);
  }
  let h = l.indexOf(c), g = [], v = r.openStart;
  for (let S = r.content, b = 0; ; b++) {
    let N = S.firstChild;
    if (g.push(N), b == r.openStart)
      break;
    S = N.content;
  }
  for (let S = v - 1; S >= 0; S--) {
    let b = g[S].type, N = TF(b);
    if (N && i.node(h).type != b)
      v = S;
    else if (N || !b.isTextblock)
      break;
  }
  for (let S = r.openStart; S >= 0; S--) {
    let b = (S + v + 1) % (r.openStart + 1), N = g[b];
    if (N)
      for (let O = 0; O < l.length; O++) {
        let L = l[(O + h) % l.length], P = !0;
        L < 0 && (P = !1, L = -L);
        let Y = i.node(L - 1), j = i.index(L - 1);
        if (Y.canReplaceWith(j, j, N.type, N.marks))
          return t.replace(i.before(L), P ? s.after(L) : n, new Xe(E7(r.content, 0, r.openStart, b), b, r.openEnd));
      }
  }
  let C = t.steps.length;
  for (let S = l.length - 1; S >= 0 && (t.replace(e, n, r), !(t.steps.length > C)); S--) {
    let b = l[S];
    b < 0 || (e = i.before(b), n = s.after(b));
  }
}
function E7(t, e, n, r, i) {
  if (e < n) {
    let s = t.firstChild;
    t = t.replaceChild(0, s.copy(E7(s.content, e + 1, n, r, s)));
  }
  if (e > r) {
    let s = i.contentMatchAt(0), l = s.fillBefore(t).append(t);
    t = l.append(s.matchFragment(l).fillBefore(Oe.empty, !0));
  }
  return t;
}
function SF(t, e, n, r) {
  if (!r.isInline && e == n && t.doc.resolve(e).parent.content.size) {
    let i = gF(t.doc, e, r.type);
    i != null && (e = n = i);
  }
  t.replaceRange(e, n, new Xe(Oe.from(r), 0, 0));
}
function bF(t, e, n) {
  let r = t.doc.resolve(e), i = t.doc.resolve(n), s = T7(r, i);
  for (let l = 0; l < s.length; l++) {
    let c = s[l], h = l == s.length - 1;
    if (h && c == 0 || r.node(c).type.contentMatch.validEnd)
      return t.delete(r.start(c), i.end(c));
    if (c > 0 && (h || r.node(c - 1).canReplace(r.index(c - 1), i.indexAfter(c - 1))))
      return t.delete(r.before(c), i.after(c));
  }
  for (let l = 1; l <= r.depth && l <= i.depth; l++)
    if (e - r.start(l) == r.depth - l && n > r.end(l) && i.end(l) - n != i.depth - l)
      return t.delete(r.before(l), n);
  t.delete(e, n);
}
function T7(t, e) {
  let n = [], r = Math.min(t.depth, e.depth);
  for (let i = r; i >= 0; i--) {
    let s = t.start(i);
    if (s < t.pos - (t.depth - i) || e.end(i) > e.pos + (e.depth - i) || t.node(i).type.spec.isolating || e.node(i).type.spec.isolating)
      break;
    (s == e.start(i) || i == t.depth && i == e.depth && t.parent.inlineContent && e.parent.inlineContent && i && e.start(i - 1) == s - 1) && n.push(i);
  }
  return n;
}
class dh extends mo {
  /**
  Construct an attribute step.
  */
  constructor(e, n, r) {
    super(), this.pos = e, this.attr = n, this.value = r;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return Fr.fail("No node at attribute step's position");
    let r = /* @__PURE__ */ Object.create(null);
    for (let s in n.attrs)
      r[s] = n.attrs[s];
    r[this.attr] = this.value;
    let i = n.type.create(r, null, n.marks);
    return Fr.fromReplace(e, this.pos, this.pos + 1, new Xe(Oe.from(i), 0, n.isLeaf ? 0 : 1));
  }
  getMap() {
    return ma.empty;
  }
  invert(e) {
    return new dh(this.pos, this.attr, e.nodeAt(this.pos).attrs[this.attr]);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new dh(n.pos, this.attr, this.value);
  }
  toJSON() {
    return { stepType: "attr", pos: this.pos, attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.pos != "number" || typeof n.attr != "string")
      throw new RangeError("Invalid input for AttrStep.fromJSON");
    return new dh(n.pos, n.attr, n.value);
  }
}
mo.jsonID("attr", dh);
let vh = class extends Error {
};
vh = function t(e) {
  let n = Error.call(this, e);
  return n.__proto__ = t.prototype, n;
};
vh.prototype = Object.create(Error.prototype);
vh.prototype.constructor = vh;
vh.prototype.name = "TransformError";
class C7 {
  /**
  Create a transform that starts with the given document.
  */
  constructor(e) {
    this.doc = e, this.steps = [], this.docs = [], this.mapping = new ch();
  }
  /**
  The starting document.
  */
  get before() {
    return this.docs.length ? this.docs[0] : this.doc;
  }
  /**
  Apply a new step in this transform, saving the result. Throws an
  error when the step fails.
  */
  step(e) {
    let n = this.maybeStep(e);
    if (n.failed)
      throw new vh(n.failed);
    return this;
  }
  /**
  Try to apply a step in this transformation, ignoring it if it
  fails. Returns the step result.
  */
  maybeStep(e) {
    let n = e.apply(this.doc);
    return n.failed || this.addStep(e, n.doc), n;
  }
  /**
  True when the document has been changed (when there are any
  steps).
  */
  get docChanged() {
    return this.steps.length > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    this.docs.push(this.doc), this.steps.push(e), this.mapping.appendMap(e.getMap()), this.doc = n;
  }
  /**
  Replace the part of the document between `from` and `to` with the
  given `slice`.
  */
  replace(e, n = e, r = Xe.empty) {
    let i = KC(this.doc, e, n, r);
    return i && this.step(i), this;
  }
  /**
  Replace the given range with the given content, which may be a
  fragment, node, or array of nodes.
  */
  replaceWith(e, n, r) {
    return this.replace(e, n, new Xe(Oe.from(r), 0, 0));
  }
  /**
  Delete the content between the given positions.
  */
  delete(e, n) {
    return this.replace(e, n, Xe.empty);
  }
  /**
  Insert the given content at the given position.
  */
  insert(e, n) {
    return this.replaceWith(e, e, n);
  }
  /**
  Replace a range of the document with a given slice, using
  `from`, `to`, and the slice's
  [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather
  than fixed start and end points. This method may grow the
  replaced area or close open nodes in the slice in order to get a
  fit that is more in line with WYSIWYG expectations, by dropping
  fully covered parent nodes of the replaced region when they are
  marked [non-defining as
  context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an
  open parent node from the slice that _is_ marked as [defining
  its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).
  
  This is the method, for example, to handle paste. The similar
  [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more
  primitive tool which will _not_ move the start and end of its given
  range, and is useful in situations where you need more precise
  control over what happens.
  */
  replaceRange(e, n, r) {
    return CF(this, e, n, r), this;
  }
  /**
  Replace the given range with a node, but use `from` and `to` as
  hints, rather than precise positions. When from and to are the same
  and are at the start or end of a parent node in which the given
  node doesn't fit, this method may _move_ them out towards a parent
  that does allow the given node to be placed. When the given range
  completely covers a parent node, this method may completely replace
  that parent node.
  */
  replaceRangeWith(e, n, r) {
    return SF(this, e, n, r), this;
  }
  /**
  Delete the given range, expanding it to cover fully covered
  parent nodes until a valid replace is found.
  */
  deleteRange(e, n) {
    return bF(this, e, n), this;
  }
  /**
  Split the content in the given range off from its parent, if there
  is sibling content before or after it, and move it up the tree to
  the depth specified by `target`. You'll probably want to use
  [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make
  sure the lift is valid.
  */
  lift(e, n) {
    return sF(this, e, n), this;
  }
  /**
  Join the blocks around the given position. If depth is 2, their
  last and first siblings are also joined, and so on.
  */
  join(e, n = 1) {
    return mF(this, e, n), this;
  }
  /**
  Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.
  The wrappers are assumed to be valid in this position, and should
  probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).
  */
  wrap(e, n) {
    return cF(this, e, n), this;
  }
  /**
  Set the type of all textblocks (partly) between `from` and `to` to
  the given node type with the given attributes.
  */
  setBlockType(e, n = e, r, i = null) {
    return fF(this, e, n, r, i), this;
  }
  /**
  Change the type, attributes, and/or marks of the node at `pos`.
  When `type` isn't given, the existing node type is preserved,
  */
  setNodeMarkup(e, n, r = null, i) {
    return hF(this, e, n, r, i), this;
  }
  /**
  Set a single attribute on a given node to a new value.
  */
  setNodeAttribute(e, n, r) {
    return this.step(new dh(e, n, r)), this;
  }
  /**
  Add a mark to the node at position `pos`.
  */
  addNodeMark(e, n) {
    return this.step(new vc(e, n)), this;
  }
  /**
  Remove a mark (or a mark of the given type) from the node at
  position `pos`.
  */
  removeNodeMark(e, n) {
    if (!(n instanceof _n)) {
      let r = this.doc.nodeAt(e);
      if (!r)
        throw new RangeError("No node at position " + e);
      if (n = n.isInSet(r.marks), !n)
        return this;
    }
    return this.step(new yh(e, n)), this;
  }
  /**
  Split the node at the given position, and optionally, if `depth` is
  greater than one, any number of nodes above that. By default, the
  parts split off will inherit the node type of the original node.
  This can be changed by passing an array of types and attributes to
  use after the split.
  */
  split(e, n = 1, r) {
    return pF(this, e, n, r), this;
  }
  /**
  Add the given mark to the inline content between `from` and `to`.
  */
  addMark(e, n, r) {
    return rF(this, e, n, r), this;
  }
  /**
  Remove marks from inline nodes between `from` and `to`. When
  `mark` is a single mark, remove precisely that mark. When it is
  a mark type, remove all marks of that type. When it is null,
  remove all marks of any type.
  */
  removeMark(e, n, r) {
    return iF(this, e, n, r), this;
  }
  /**
  Removes all marks and nodes from the content of the node at
  `pos` that don't match the given new parent node type. Accepts
  an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as
  third argument.
  */
  clearIncompatible(e, n, r) {
    return oF(this, e, n, r), this;
  }
}
const zT = /* @__PURE__ */ Object.create(null);
class $t {
  /**
  Initialize a selection with the head and anchor and ranges. If no
  ranges are given, constructs a single range across `$anchor` and
  `$head`.
  */
  constructor(e, n, r) {
    this.$anchor = e, this.$head = n, this.ranges = r || [new AF(e.min(n), e.max(n))];
  }
  /**
  The selection's anchor, as an unresolved position.
  */
  get anchor() {
    return this.$anchor.pos;
  }
  /**
  The selection's head.
  */
  get head() {
    return this.$head.pos;
  }
  /**
  The lower bound of the selection's main range.
  */
  get from() {
    return this.$from.pos;
  }
  /**
  The upper bound of the selection's main range.
  */
  get to() {
    return this.$to.pos;
  }
  /**
  The resolved lower  bound of the selection's main range.
  */
  get $from() {
    return this.ranges[0].$from;
  }
  /**
  The resolved upper bound of the selection's main range.
  */
  get $to() {
    return this.ranges[0].$to;
  }
  /**
  Indicates whether the selection contains any content.
  */
  get empty() {
    let e = this.ranges;
    for (let n = 0; n < e.length; n++)
      if (e[n].$from.pos != e[n].$to.pos)
        return !1;
    return !0;
  }
  /**
  Get the content of this selection as a slice.
  */
  content() {
    return this.$from.doc.slice(this.from, this.to, !0);
  }
  /**
  Replace the selection with a slice or, if no slice is given,
  delete the selection. Will append to the given transaction.
  */
  replace(e, n = Xe.empty) {
    let r = n.content.lastChild, i = null;
    for (let c = 0; c < n.openEnd; c++)
      i = r, r = r.lastChild;
    let s = e.steps.length, l = this.ranges;
    for (let c = 0; c < l.length; c++) {
      let { $from: h, $to: g } = l[c], v = e.mapping.slice(s);
      e.replaceRange(v.map(h.pos), v.map(g.pos), c ? Xe.empty : n), c == 0 && X3(e, s, (r ? r.isInline : i && i.isTextblock) ? -1 : 1);
    }
  }
  /**
  Replace the selection with the given node, appending the changes
  to the given transaction.
  */
  replaceWith(e, n) {
    let r = e.steps.length, i = this.ranges;
    for (let s = 0; s < i.length; s++) {
      let { $from: l, $to: c } = i[s], h = e.mapping.slice(r), g = h.map(l.pos), v = h.map(c.pos);
      s ? e.deleteRange(g, v) : (e.replaceRangeWith(g, v, n), X3(e, r, n.isInline ? -1 : 1));
    }
  }
  /**
  Find a valid cursor or leaf node selection starting at the given
  position and searching back if `dir` is negative, and forward if
  positive. When `textOnly` is true, only consider cursor
  selections. Will return null when no valid selection position is
  found.
  */
  static findFrom(e, n, r = !1) {
    let i = e.parent.inlineContent ? new Kt(e) : Qd(e.node(0), e.parent, e.pos, e.index(), n, r);
    if (i)
      return i;
    for (let s = e.depth - 1; s >= 0; s--) {
      let l = n < 0 ? Qd(e.node(0), e.node(s), e.before(s + 1), e.index(s), n, r) : Qd(e.node(0), e.node(s), e.after(s + 1), e.index(s) + 1, n, r);
      if (l)
        return l;
    }
    return null;
  }
  /**
  Find a valid cursor or leaf node selection near the given
  position. Searches forward first by default, but if `bias` is
  negative, it will search backwards first.
  */
  static near(e, n = 1) {
    return this.findFrom(e, n) || this.findFrom(e, -n) || new rs(e.node(0));
  }
  /**
  Find the cursor or leaf node selection closest to the start of
  the given document. Will return an
  [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position
  exists.
  */
  static atStart(e) {
    return Qd(e, e, 0, 0, 1) || new rs(e);
  }
  /**
  Find the cursor or leaf node selection closest to the end of the
  given document.
  */
  static atEnd(e) {
    return Qd(e, e, e.content.size, e.childCount, -1) || new rs(e);
  }
  /**
  Deserialize the JSON representation of a selection. Must be
  implemented for custom classes (as a static class method).
  */
  static fromJSON(e, n) {
    if (!n || !n.type)
      throw new RangeError("Invalid input for Selection.fromJSON");
    let r = zT[n.type];
    if (!r)
      throw new RangeError(`No selection type ${n.type} defined`);
    return r.fromJSON(e, n);
  }
  /**
  To be able to deserialize selections from JSON, custom selection
  classes must register themselves with an ID string, so that they
  can be disambiguated. Try to pick something that's unlikely to
  clash with classes from other modules.
  */
  static jsonID(e, n) {
    if (e in zT)
      throw new RangeError("Duplicate use of selection JSON ID " + e);
    return zT[e] = n, n.prototype.jsonID = e, n;
  }
  /**
  Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,
  which is a value that can be mapped without having access to a
  current document, and later resolved to a real selection for a
  given document again. (This is used mostly by the history to
  track and restore old selections.) The default implementation of
  this method just converts the selection to a text selection and
  returns the bookmark for that.
  */
  getBookmark() {
    return Kt.between(this.$anchor, this.$head).getBookmark();
  }
}
$t.prototype.visible = !0;
class AF {
  /**
  Create a range.
  */
  constructor(e, n) {
    this.$from = e, this.$to = n;
  }
}
let Y3 = !1;
function Q3(t) {
  !Y3 && !t.parent.inlineContent && (Y3 = !0, console.warn("TextSelection endpoint not pointing into a node with inline content (" + t.parent.type.name + ")"));
}
class Kt extends $t {
  /**
  Construct a text selection between the given points.
  */
  constructor(e, n = e) {
    Q3(e), Q3(n), super(e, n);
  }
  /**
  Returns a resolved position if this is a cursor selection (an
  empty text selection), and null otherwise.
  */
  get $cursor() {
    return this.$anchor.pos == this.$head.pos ? this.$head : null;
  }
  map(e, n) {
    let r = e.resolve(n.map(this.head));
    if (!r.parent.inlineContent)
      return $t.near(r);
    let i = e.resolve(n.map(this.anchor));
    return new Kt(i.parent.inlineContent ? i : r, r);
  }
  replace(e, n = Xe.empty) {
    if (super.replace(e, n), n == Xe.empty) {
      let r = this.$from.marksAcross(this.$to);
      r && e.ensureMarks(r);
    }
  }
  eq(e) {
    return e instanceof Kt && e.anchor == this.anchor && e.head == this.head;
  }
  getBookmark() {
    return new $y(this.anchor, this.head);
  }
  toJSON() {
    return { type: "text", anchor: this.anchor, head: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number" || typeof n.head != "number")
      throw new RangeError("Invalid input for TextSelection.fromJSON");
    return new Kt(e.resolve(n.anchor), e.resolve(n.head));
  }
  /**
  Create a text selection from non-resolved positions.
  */
  static create(e, n, r = n) {
    let i = e.resolve(n);
    return new this(i, r == n ? i : e.resolve(r));
  }
  /**
  Return a text selection that spans the given positions or, if
  they aren't text positions, find a text selection near them.
  `bias` determines whether the method searches forward (default)
  or backwards (negative number) first. Will fall back to calling
  [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document
  doesn't contain a valid text position.
  */
  static between(e, n, r) {
    let i = e.pos - n.pos;
    if ((!r || i) && (r = i >= 0 ? 1 : -1), !n.parent.inlineContent) {
      let s = $t.findFrom(n, r, !0) || $t.findFrom(n, -r, !0);
      if (s)
        n = s.$head;
      else
        return $t.near(n, r);
    }
    return e.parent.inlineContent || (i == 0 ? e = n : (e = ($t.findFrom(e, -r, !0) || $t.findFrom(e, r, !0)).$anchor, e.pos < n.pos != i < 0 && (e = n))), new Kt(e, n);
  }
}
$t.jsonID("text", Kt);
class $y {
  constructor(e, n) {
    this.anchor = e, this.head = n;
  }
  map(e) {
    return new $y(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    return Kt.between(e.resolve(this.anchor), e.resolve(this.head));
  }
}
class _t extends $t {
  /**
  Create a node selection. Does not verify the validity of its
  argument.
  */
  constructor(e) {
    let n = e.nodeAfter, r = e.node(0).resolve(e.pos + n.nodeSize);
    super(e, r), this.node = n;
  }
  map(e, n) {
    let { deleted: r, pos: i } = n.mapResult(this.anchor), s = e.resolve(i);
    return r ? $t.near(s) : new _t(s);
  }
  content() {
    return new Xe(Oe.from(this.node), 0, 0);
  }
  eq(e) {
    return e instanceof _t && e.anchor == this.anchor;
  }
  toJSON() {
    return { type: "node", anchor: this.anchor };
  }
  getBookmark() {
    return new YC(this.anchor);
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number")
      throw new RangeError("Invalid input for NodeSelection.fromJSON");
    return new _t(e.resolve(n.anchor));
  }
  /**
  Create a node selection from non-resolved positions.
  */
  static create(e, n) {
    return new _t(e.resolve(n));
  }
  /**
  Determines whether the given node may be selected as a node
  selection.
  */
  static isSelectable(e) {
    return !e.isText && e.type.spec.selectable !== !1;
  }
}
_t.prototype.visible = !1;
$t.jsonID("node", _t);
class YC {
  constructor(e) {
    this.anchor = e;
  }
  map(e) {
    let { deleted: n, pos: r } = e.mapResult(this.anchor);
    return n ? new $y(r, r) : new YC(r);
  }
  resolve(e) {
    let n = e.resolve(this.anchor), r = n.nodeAfter;
    return r && _t.isSelectable(r) ? new _t(n) : $t.near(n);
  }
}
class rs extends $t {
  /**
  Create an all-selection over the given document.
  */
  constructor(e) {
    super(e.resolve(0), e.resolve(e.content.size));
  }
  replace(e, n = Xe.empty) {
    if (n == Xe.empty) {
      e.delete(0, e.doc.content.size);
      let r = $t.atStart(e.doc);
      r.eq(e.selection) || e.setSelection(r);
    } else
      super.replace(e, n);
  }
  toJSON() {
    return { type: "all" };
  }
  /**
  @internal
  */
  static fromJSON(e) {
    return new rs(e);
  }
  map(e) {
    return new rs(e);
  }
  eq(e) {
    return e instanceof rs;
  }
  getBookmark() {
    return xF;
  }
}
$t.jsonID("all", rs);
const xF = {
  map() {
    return this;
  },
  resolve(t) {
    return new rs(t);
  }
};
function Qd(t, e, n, r, i, s = !1) {
  if (e.inlineContent)
    return Kt.create(t, n);
  for (let l = r - (i > 0 ? 0 : 1); i > 0 ? l < e.childCount : l >= 0; l += i) {
    let c = e.child(l);
    if (c.isAtom) {
      if (!s && _t.isSelectable(c))
        return _t.create(t, n - (i < 0 ? c.nodeSize : 0));
    } else {
      let h = Qd(t, c, n + i, i < 0 ? c.childCount : 0, i, s);
      if (h)
        return h;
    }
    n += c.nodeSize * i;
  }
  return null;
}
function X3(t, e, n) {
  let r = t.steps.length - 1;
  if (r < e)
    return;
  let i = t.steps[r];
  if (!(i instanceof Ri || i instanceof ei))
    return;
  let s = t.mapping.maps[r], l;
  s.forEach((c, h, g, v) => {
    l == null && (l = v);
  }), t.setSelection($t.near(t.doc.resolve(l), n));
}
const J3 = 1, p9 = 2, Z3 = 4;
class _F extends C7 {
  /**
  @internal
  */
  constructor(e) {
    super(e.doc), this.curSelectionFor = 0, this.updated = 0, this.meta = /* @__PURE__ */ Object.create(null), this.time = Date.now(), this.curSelection = e.selection, this.storedMarks = e.storedMarks;
  }
  /**
  The transaction's current selection. This defaults to the editor
  selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the
  transaction, but can be overwritten with
  [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).
  */
  get selection() {
    return this.curSelectionFor < this.steps.length && (this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor)), this.curSelectionFor = this.steps.length), this.curSelection;
  }
  /**
  Update the transaction's current selection. Will determine the
  selection that the editor gets when the transaction is applied.
  */
  setSelection(e) {
    if (e.$from.doc != this.doc)
      throw new RangeError("Selection passed to setSelection must point at the current document");
    return this.curSelection = e, this.curSelectionFor = this.steps.length, this.updated = (this.updated | J3) & ~p9, this.storedMarks = null, this;
  }
  /**
  Whether the selection was explicitly updated by this transaction.
  */
  get selectionSet() {
    return (this.updated & J3) > 0;
  }
  /**
  Set the current stored marks.
  */
  setStoredMarks(e) {
    return this.storedMarks = e, this.updated |= p9, this;
  }
  /**
  Make sure the current stored marks or, if that is null, the marks
  at the selection, match the given set of marks. Does nothing if
  this is already the case.
  */
  ensureMarks(e) {
    return _n.sameSet(this.storedMarks || this.selection.$from.marks(), e) || this.setStoredMarks(e), this;
  }
  /**
  Add a mark to the set of stored marks.
  */
  addStoredMark(e) {
    return this.ensureMarks(e.addToSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Remove a mark or mark type from the set of stored marks.
  */
  removeStoredMark(e) {
    return this.ensureMarks(e.removeFromSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Whether the stored marks were explicitly set for this transaction.
  */
  get storedMarksSet() {
    return (this.updated & p9) > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    super.addStep(e, n), this.updated = this.updated & ~p9, this.storedMarks = null;
  }
  /**
  Update the timestamp for the transaction.
  */
  setTime(e) {
    return this.time = e, this;
  }
  /**
  Replace the current selection with the given slice.
  */
  replaceSelection(e) {
    return this.selection.replace(this, e), this;
  }
  /**
  Replace the selection with the given node. When `inheritMarks` is
  true and the content is inline, it inherits the marks from the
  place where it is inserted.
  */
  replaceSelectionWith(e, n = !0) {
    let r = this.selection;
    return n && (e = e.mark(this.storedMarks || (r.empty ? r.$from.marks() : r.$from.marksAcross(r.$to) || _n.none))), r.replaceWith(this, e), this;
  }
  /**
  Delete the selection.
  */
  deleteSelection() {
    return this.selection.replace(this), this;
  }
  /**
  Replace the given range, or the selection if no range is given,
  with a text node containing the given string.
  */
  insertText(e, n, r) {
    let i = this.doc.type.schema;
    if (n == null)
      return e ? this.replaceSelectionWith(i.text(e), !0) : this.deleteSelection();
    {
      if (r == null && (r = n), r = r ?? n, !e)
        return this.deleteRange(n, r);
      let s = this.storedMarks;
      if (!s) {
        let l = this.doc.resolve(n);
        s = r == n ? l.marks() : l.marksAcross(this.doc.resolve(r));
      }
      return this.replaceRangeWith(n, r, i.text(e, s)), this.selection.empty || this.setSelection($t.near(this.selection.$to)), this;
    }
  }
  /**
  Store a metadata property in this transaction, keyed either by
  name or by plugin.
  */
  setMeta(e, n) {
    return this.meta[typeof e == "string" ? e : e.key] = n, this;
  }
  /**
  Retrieve a metadata property for a given name or plugin.
  */
  getMeta(e) {
    return this.meta[typeof e == "string" ? e : e.key];
  }
  /**
  Returns true if this transaction doesn't contain any metadata,
  and can thus safely be extended.
  */
  get isGeneric() {
    for (let e in this.meta)
      return !1;
    return !0;
  }
  /**
  Indicate that the editor should scroll the selection into view
  when updated to the state produced by this transaction.
  */
  scrollIntoView() {
    return this.updated |= Z3, this;
  }
  /**
  True when this transaction has had `scrollIntoView` called on it.
  */
  get scrolledIntoView() {
    return (this.updated & Z3) > 0;
  }
}
function ex(t, e) {
  return !e || !t ? t : t.bind(e);
}
class jm {
  constructor(e, n, r) {
    this.name = e, this.init = ex(n.init, r), this.apply = ex(n.apply, r);
  }
}
const kF = [
  new jm("doc", {
    init(t) {
      return t.doc || t.schema.topNodeType.createAndFill();
    },
    apply(t) {
      return t.doc;
    }
  }),
  new jm("selection", {
    init(t, e) {
      return t.selection || $t.atStart(e.doc);
    },
    apply(t) {
      return t.selection;
    }
  }),
  new jm("storedMarks", {
    init(t) {
      return t.storedMarks || null;
    },
    apply(t, e, n, r) {
      return r.selection.$cursor ? t.storedMarks : null;
    }
  }),
  new jm("scrollToSelection", {
    init() {
      return 0;
    },
    apply(t, e) {
      return t.scrolledIntoView ? e + 1 : e;
    }
  })
];
class qT {
  constructor(e, n) {
    this.schema = e, this.plugins = [], this.pluginsByKey = /* @__PURE__ */ Object.create(null), this.fields = kF.slice(), n && n.forEach((r) => {
      if (this.pluginsByKey[r.key])
        throw new RangeError("Adding different instances of a keyed plugin (" + r.key + ")");
      this.plugins.push(r), this.pluginsByKey[r.key] = r, r.spec.state && this.fields.push(new jm(r.key, r.spec.state, r));
    });
  }
}
class nh {
  /**
  @internal
  */
  constructor(e) {
    this.config = e;
  }
  /**
  The schema of the state's document.
  */
  get schema() {
    return this.config.schema;
  }
  /**
  The plugins that are active in this state.
  */
  get plugins() {
    return this.config.plugins;
  }
  /**
  Apply the given transaction to produce a new state.
  */
  apply(e) {
    return this.applyTransaction(e).state;
  }
  /**
  @internal
  */
  filterTransaction(e, n = -1) {
    for (let r = 0; r < this.config.plugins.length; r++)
      if (r != n) {
        let i = this.config.plugins[r];
        if (i.spec.filterTransaction && !i.spec.filterTransaction.call(i, e, this))
          return !1;
      }
    return !0;
  }
  /**
  Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that
  returns the precise transactions that were applied (which might
  be influenced by the [transaction
  hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of
  plugins) along with the new state.
  */
  applyTransaction(e) {
    if (!this.filterTransaction(e))
      return { state: this, transactions: [] };
    let n = [e], r = this.applyInner(e), i = null;
    for (; ; ) {
      let s = !1;
      for (let l = 0; l < this.config.plugins.length; l++) {
        let c = this.config.plugins[l];
        if (c.spec.appendTransaction) {
          let h = i ? i[l].n : 0, g = i ? i[l].state : this, v = h < n.length && c.spec.appendTransaction.call(c, h ? n.slice(h) : n, g, r);
          if (v && r.filterTransaction(v, l)) {
            if (v.setMeta("appendedTransaction", e), !i) {
              i = [];
              for (let C = 0; C < this.config.plugins.length; C++)
                i.push(C < l ? { state: r, n: n.length } : { state: this, n: 0 });
            }
            n.push(v), r = r.applyInner(v), s = !0;
          }
          i && (i[l] = { state: r, n: n.length });
        }
      }
      if (!s)
        return { state: r, transactions: n };
    }
  }
  /**
  @internal
  */
  applyInner(e) {
    if (!e.before.eq(this.doc))
      throw new RangeError("Applying a mismatched transaction");
    let n = new nh(this.config), r = this.config.fields;
    for (let i = 0; i < r.length; i++) {
      let s = r[i];
      n[s.name] = s.apply(e, this[s.name], this, n);
    }
    return n;
  }
  /**
  Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.
  */
  get tr() {
    return new _F(this);
  }
  /**
  Create a new state.
  */
  static create(e) {
    let n = new qT(e.doc ? e.doc.type.schema : e.schema, e.plugins), r = new nh(n);
    for (let i = 0; i < n.fields.length; i++)
      r[n.fields[i].name] = n.fields[i].init(e, r);
    return r;
  }
  /**
  Create a new state based on this one, but with an adjusted set
  of active plugins. State fields that exist in both sets of
  plugins are kept unchanged. Those that no longer exist are
  dropped, and those that are new are initialized using their
  [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new
  configuration object..
  */
  reconfigure(e) {
    let n = new qT(this.schema, e.plugins), r = n.fields, i = new nh(n);
    for (let s = 0; s < r.length; s++) {
      let l = r[s].name;
      i[l] = this.hasOwnProperty(l) ? this[l] : r[s].init(e, i);
    }
    return i;
  }
  /**
  Serialize this state to JSON. If you want to serialize the state
  of plugins, pass an object mapping property names to use in the
  resulting JSON object to plugin objects. The argument may also be
  a string or number, in which case it is ignored, to support the
  way `JSON.stringify` calls `toString` methods.
  */
  toJSON(e) {
    let n = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };
    if (this.storedMarks && (n.storedMarks = this.storedMarks.map((r) => r.toJSON())), e && typeof e == "object")
      for (let r in e) {
        if (r == "doc" || r == "selection")
          throw new RangeError("The JSON fields `doc` and `selection` are reserved");
        let i = e[r], s = i.spec.state;
        s && s.toJSON && (n[r] = s.toJSON.call(i, this[i.key]));
      }
    return n;
  }
  /**
  Deserialize a JSON representation of a state. `config` should
  have at least a `schema` field, and should contain array of
  plugins to initialize the state with. `pluginFields` can be used
  to deserialize the state of plugins, by associating plugin
  instances with the property names they use in the JSON object.
  */
  static fromJSON(e, n, r) {
    if (!n)
      throw new RangeError("Invalid input for EditorState.fromJSON");
    if (!e.schema)
      throw new RangeError("Required config field 'schema' missing");
    let i = new qT(e.schema, e.plugins), s = new nh(i);
    return i.fields.forEach((l) => {
      if (l.name == "doc")
        s.doc = Tc.fromJSON(e.schema, n.doc);
      else if (l.name == "selection")
        s.selection = $t.fromJSON(s.doc, n.selection);
      else if (l.name == "storedMarks")
        n.storedMarks && (s.storedMarks = n.storedMarks.map(e.schema.markFromJSON));
      else {
        if (r)
          for (let c in r) {
            let h = r[c], g = h.spec.state;
            if (h.key == l.name && g && g.fromJSON && Object.prototype.hasOwnProperty.call(n, c)) {
              s[l.name] = g.fromJSON.call(h, e, n[c], s);
              return;
            }
          }
        s[l.name] = l.init(e, s);
      }
    }), s;
  }
}
function S7(t, e, n) {
  for (let r in t) {
    let i = t[r];
    i instanceof Function ? i = i.bind(e) : r == "handleDOMEvents" && (i = S7(i, e, {})), n[r] = i;
  }
  return n;
}
class Ur {
  /**
  Create a plugin.
  */
  constructor(e) {
    this.spec = e, this.props = {}, e.props && S7(e.props, this, this.props), this.key = e.key ? e.key.key : b7("plugin");
  }
  /**
  Extract the plugin's state field from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const jT = /* @__PURE__ */ Object.create(null);
function b7(t) {
  return t in jT ? t + "$" + ++jT[t] : (jT[t] = 0, t + "$");
}
class Ti {
  /**
  Create a plugin key.
  */
  constructor(e = "key") {
    this.key = b7(e);
  }
  /**
  Get the active plugin with this key, if any, from an editor
  state.
  */
  get(e) {
    return e.config.pluginsByKey[this.key];
  }
  /**
  Get the plugin's state from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const Fo = function(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}, l0 = function(t) {
  let e = t.assignedSlot || t.parentNode;
  return e && e.nodeType == 11 ? e.host : e;
};
let tx = null;
const tu = function(t, e, n) {
  let r = tx || (tx = document.createRange());
  return r.setEnd(t, n ?? t.nodeValue.length), r.setStart(t, e || 0), r;
}, gf = function(t, e, n, r) {
  return n && (nx(t, e, n, r, -1) || nx(t, e, n, r, 1));
}, NF = /^(img|br|input|textarea|hr)$/i;
function nx(t, e, n, r, i) {
  for (; ; ) {
    if (t == n && e == r)
      return !0;
    if (e == (i < 0 ? 0 : sl(t))) {
      let s = t.parentNode;
      if (!s || s.nodeType != 1 || OF(t) || NF.test(t.nodeName) || t.contentEditable == "false")
        return !1;
      e = Fo(t) + (i < 0 ? 0 : 1), t = s;
    } else if (t.nodeType == 1) {
      if (t = t.childNodes[e + (i < 0 ? -1 : 0)], t.contentEditable == "false")
        return !1;
      e = i < 0 ? sl(t) : 0;
    } else
      return !1;
  }
}
function sl(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function wF(t, e, n) {
  for (let r = e == 0, i = e == sl(t); r || i; ) {
    if (t == n)
      return !0;
    let s = Fo(t);
    if (t = t.parentNode, !t)
      return !1;
    r = r && s == 0, i = i && s == sl(t);
  }
}
function OF(t) {
  let e;
  for (let n = t; n && !(e = n.pmViewDesc); n = n.parentNode)
    ;
  return e && e.node && e.node.isBlock && (e.dom == t || e.contentDOM == t);
}
const Gy = function(t) {
  return t.focusNode && gf(t.focusNode, t.focusOffset, t.anchorNode, t.anchorOffset);
};
function ef(t, e) {
  let n = document.createEvent("Event");
  return n.initEvent("keydown", !0, !0), n.keyCode = t, n.key = n.code = e, n;
}
function RF(t) {
  let e = t.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
const _c = typeof navigator < "u" ? navigator : null, rx = typeof document < "u" ? document : null, wc = _c && _c.userAgent || "", cC = /Edge\/(\d+)/.exec(wc), A7 = /MSIE \d/.exec(wc), fC = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(wc), po = !!(A7 || fC || cC), Cc = A7 ? document.documentMode : fC ? +fC[1] : cC ? +cC[1] : 0, as = !po && /gecko\/(\d+)/i.test(wc);
as && +(/Firefox\/(\d+)/.exec(wc) || [0, 0])[1];
const dC = !po && /Chrome\/(\d+)/.exec(wc), Vi = !!dC, DF = dC ? +dC[1] : 0, Gi = !po && !!_c && /Apple Computer/.test(_c.vendor), Eh = Gi && (/Mobile\/\w+/.test(wc) || !!_c && _c.maxTouchPoints > 2), da = Eh || (_c ? /Mac/.test(_c.platform) : !1), es = /Android \d/.test(wc), Wy = !!rx && "webkitFontSmoothing" in rx.documentElement.style, MF = Wy ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;
function LF(t) {
  return {
    left: 0,
    right: t.documentElement.clientWidth,
    top: 0,
    bottom: t.documentElement.clientHeight
  };
}
function nc(t, e) {
  return typeof t == "number" ? t : t[e];
}
function IF(t) {
  let e = t.getBoundingClientRect(), n = e.width / t.offsetWidth || 1, r = e.height / t.offsetHeight || 1;
  return {
    left: e.left,
    right: e.left + t.clientWidth * n,
    top: e.top,
    bottom: e.top + t.clientHeight * r
  };
}
function ix(t, e, n) {
  let r = t.someProp("scrollThreshold") || 0, i = t.someProp("scrollMargin") || 5, s = t.dom.ownerDocument;
  for (let l = n || t.dom; l; l = l0(l)) {
    if (l.nodeType != 1)
      continue;
    let c = l, h = c == s.body, g = h ? LF(s) : IF(c), v = 0, C = 0;
    if (e.top < g.top + nc(r, "top") ? C = -(g.top - e.top + nc(i, "top")) : e.bottom > g.bottom - nc(r, "bottom") && (C = e.bottom - g.bottom + nc(i, "bottom")), e.left < g.left + nc(r, "left") ? v = -(g.left - e.left + nc(i, "left")) : e.right > g.right - nc(r, "right") && (v = e.right - g.right + nc(i, "right")), v || C)
      if (h)
        s.defaultView.scrollBy(v, C);
      else {
        let S = c.scrollLeft, b = c.scrollTop;
        C && (c.scrollTop += C), v && (c.scrollLeft += v);
        let N = c.scrollLeft - S, O = c.scrollTop - b;
        e = { left: e.left - N, top: e.top - O, right: e.right - N, bottom: e.bottom - O };
      }
    if (h)
      break;
  }
}
function PF(t) {
  let e = t.dom.getBoundingClientRect(), n = Math.max(0, e.top), r, i;
  for (let s = (e.left + e.right) / 2, l = n + 1; l < Math.min(innerHeight, e.bottom); l += 5) {
    let c = t.root.elementFromPoint(s, l);
    if (!c || c == t.dom || !t.dom.contains(c))
      continue;
    let h = c.getBoundingClientRect();
    if (h.top >= n - 20) {
      r = c, i = h.top;
      break;
    }
  }
  return { refDOM: r, refTop: i, stack: x7(t.dom) };
}
function x7(t) {
  let e = [], n = t.ownerDocument;
  for (let r = t; r && (e.push({ dom: r, top: r.scrollTop, left: r.scrollLeft }), t != n); r = l0(r))
    ;
  return e;
}
function FF({ refDOM: t, refTop: e, stack: n }) {
  let r = t ? t.getBoundingClientRect().top : 0;
  _7(n, r == 0 ? 0 : r - e);
}
function _7(t, e) {
  for (let n = 0; n < t.length; n++) {
    let { dom: r, top: i, left: s } = t[n];
    r.scrollTop != i + e && (r.scrollTop = i + e), r.scrollLeft != s && (r.scrollLeft = s);
  }
}
let jd = null;
function BF(t) {
  if (t.setActive)
    return t.setActive();
  if (jd)
    return t.focus(jd);
  let e = x7(t);
  t.focus(jd == null ? {
    get preventScroll() {
      return jd = { preventScroll: !0 }, !0;
    }
  } : void 0), jd || (jd = !1, _7(e, 0));
}
function k7(t, e) {
  let n, r = 2e8, i, s = 0, l = e.top, c = e.top;
  for (let h = t.firstChild, g = 0; h; h = h.nextSibling, g++) {
    let v;
    if (h.nodeType == 1)
      v = h.getClientRects();
    else if (h.nodeType == 3)
      v = tu(h).getClientRects();
    else
      continue;
    for (let C = 0; C < v.length; C++) {
      let S = v[C];
      if (S.top <= l && S.bottom >= c) {
        l = Math.max(S.bottom, l), c = Math.min(S.top, c);
        let b = S.left > e.left ? S.left - e.left : S.right < e.left ? e.left - S.right : 0;
        if (b < r) {
          n = h, r = b, i = b && n.nodeType == 3 ? {
            left: S.right < e.left ? S.right : S.left,
            top: e.top
          } : e, h.nodeType == 1 && b && (s = g + (e.left >= (S.left + S.right) / 2 ? 1 : 0));
          continue;
        }
      }
      !n && (e.left >= S.right && e.top >= S.top || e.left >= S.left && e.top >= S.bottom) && (s = g + 1);
    }
  }
  return n && n.nodeType == 3 ? UF(n, i) : !n || r && n.nodeType == 1 ? { node: t, offset: s } : k7(n, i);
}
function UF(t, e) {
  let n = t.nodeValue.length, r = document.createRange();
  for (let i = 0; i < n; i++) {
    r.setEnd(t, i + 1), r.setStart(t, i);
    let s = uc(r, 1);
    if (s.top != s.bottom && QC(e, s))
      return { node: t, offset: i + (e.left >= (s.left + s.right) / 2 ? 1 : 0) };
  }
  return { node: t, offset: 0 };
}
function QC(t, e) {
  return t.left >= e.left - 1 && t.left <= e.right + 1 && t.top >= e.top - 1 && t.top <= e.bottom + 1;
}
function HF(t, e) {
  let n = t.parentNode;
  return n && /^li$/i.test(n.nodeName) && e.left < t.getBoundingClientRect().left ? n : t;
}
function zF(t, e, n) {
  let { node: r, offset: i } = k7(e, n), s = -1;
  if (r.nodeType == 1 && !r.firstChild) {
    let l = r.getBoundingClientRect();
    s = l.left != l.right && n.left > (l.left + l.right) / 2 ? 1 : -1;
  }
  return t.docView.posFromDOM(r, i, s);
}
function qF(t, e, n, r) {
  let i = -1;
  for (let s = e, l = !1; s != t.dom; ) {
    let c = t.docView.nearestDesc(s, !0);
    if (!c)
      return null;
    if (c.dom.nodeType == 1 && (c.node.isBlock && c.parent && !l || !c.contentDOM)) {
      let h = c.dom.getBoundingClientRect();
      if (c.node.isBlock && c.parent && !l && (l = !0, h.left > r.left || h.top > r.top ? i = c.posBefore : (h.right < r.left || h.bottom < r.top) && (i = c.posAfter)), !c.contentDOM && i < 0)
        return (c.node.isBlock ? r.top < (h.top + h.bottom) / 2 : r.left < (h.left + h.right) / 2) ? c.posBefore : c.posAfter;
    }
    s = c.dom.parentNode;
  }
  return i > -1 ? i : t.docView.posFromDOM(e, n, -1);
}
function N7(t, e, n) {
  let r = t.childNodes.length;
  if (r && n.top < n.bottom)
    for (let i = Math.max(0, Math.min(r - 1, Math.floor(r * (e.top - n.top) / (n.bottom - n.top)) - 2)), s = i; ; ) {
      let l = t.childNodes[s];
      if (l.nodeType == 1) {
        let c = l.getClientRects();
        for (let h = 0; h < c.length; h++) {
          let g = c[h];
          if (QC(e, g))
            return N7(l, e, g);
        }
      }
      if ((s = (s + 1) % r) == i)
        break;
    }
  return t;
}
function jF(t, e) {
  let n = t.dom.ownerDocument, r, i = 0;
  if (n.caretPositionFromPoint)
    try {
      let h = n.caretPositionFromPoint(e.left, e.top);
      h && ({ offsetNode: r, offset: i } = h);
    } catch {
    }
  if (!r && n.caretRangeFromPoint) {
    let h = n.caretRangeFromPoint(e.left, e.top);
    h && ({ startContainer: r, startOffset: i } = h);
  }
  let s = (t.root.elementFromPoint ? t.root : n).elementFromPoint(e.left, e.top), l;
  if (!s || !t.dom.contains(s.nodeType != 1 ? s.parentNode : s)) {
    let h = t.dom.getBoundingClientRect();
    if (!QC(e, h) || (s = N7(t.dom, e, h), !s))
      return null;
  }
  if (Gi)
    for (let h = s; r && h; h = l0(h))
      h.draggable && (r = void 0);
  if (s = HF(s, e), r) {
    if (as && r.nodeType == 1 && (i = Math.min(i, r.childNodes.length), i < r.childNodes.length)) {
      let h = r.childNodes[i], g;
      h.nodeName == "IMG" && (g = h.getBoundingClientRect()).right <= e.left && g.bottom > e.top && i++;
    }
    r == t.dom && i == r.childNodes.length - 1 && r.lastChild.nodeType == 1 && e.top > r.lastChild.getBoundingClientRect().bottom ? l = t.state.doc.content.size : (i == 0 || r.nodeType != 1 || r.childNodes[i - 1].nodeName != "BR") && (l = qF(t, r, i, e));
  }
  l == null && (l = zF(t, s, e));
  let c = t.docView.nearestDesc(s, !0);
  return { pos: l, inside: c ? c.posAtStart - c.border : -1 };
}
function uc(t, e) {
  let n = t.getClientRects();
  return n.length ? n[e < 0 ? 0 : n.length - 1] : t.getBoundingClientRect();
}
const VF = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
function w7(t, e, n) {
  let { node: r, offset: i, atom: s } = t.docView.domFromPos(e, n < 0 ? -1 : 1), l = Wy || as;
  if (r.nodeType == 3)
    if (l && (VF.test(r.nodeValue) || (n < 0 ? !i : i == r.nodeValue.length))) {
      let h = uc(tu(r, i, i), n);
      if (as && i && /\s/.test(r.nodeValue[i - 1]) && i < r.nodeValue.length) {
        let g = uc(tu(r, i - 1, i - 1), -1);
        if (g.top == h.top) {
          let v = uc(tu(r, i, i + 1), -1);
          if (v.top != h.top)
            return Om(v, v.left < g.left);
        }
      }
      return h;
    } else {
      let h = i, g = i, v = n < 0 ? 1 : -1;
      return n < 0 && !i ? (g++, v = -1) : n >= 0 && i == r.nodeValue.length ? (h--, v = 1) : n < 0 ? h-- : g++, Om(uc(tu(r, h, g), 1), v < 0);
    }
  if (!t.state.doc.resolve(e - (s || 0)).parent.inlineContent) {
    if (s == null && i && (n < 0 || i == sl(r))) {
      let h = r.childNodes[i - 1];
      if (h.nodeType == 1)
        return VT(h.getBoundingClientRect(), !1);
    }
    if (s == null && i < sl(r)) {
      let h = r.childNodes[i];
      if (h.nodeType == 1)
        return VT(h.getBoundingClientRect(), !0);
    }
    return VT(r.getBoundingClientRect(), n >= 0);
  }
  if (s == null && i && (n < 0 || i == sl(r))) {
    let h = r.childNodes[i - 1], g = h.nodeType == 3 ? tu(h, sl(h) - (l ? 0 : 1)) : h.nodeType == 1 && (h.nodeName != "BR" || !h.nextSibling) ? h : null;
    if (g)
      return Om(uc(g, 1), !1);
  }
  if (s == null && i < sl(r)) {
    let h = r.childNodes[i];
    for (; h.pmViewDesc && h.pmViewDesc.ignoreForCoords; )
      h = h.nextSibling;
    let g = h ? h.nodeType == 3 ? tu(h, 0, l ? 0 : 1) : h.nodeType == 1 ? h : null : null;
    if (g)
      return Om(uc(g, -1), !0);
  }
  return Om(uc(r.nodeType == 3 ? tu(r) : r, -n), n >= 0);
}
function Om(t, e) {
  if (t.width == 0)
    return t;
  let n = e ? t.left : t.right;
  return { top: t.top, bottom: t.bottom, left: n, right: n };
}
function VT(t, e) {
  if (t.height == 0)
    return t;
  let n = e ? t.top : t.bottom;
  return { top: n, bottom: n, left: t.left, right: t.right };
}
function O7(t, e, n) {
  let r = t.state, i = t.root.activeElement;
  r != e && t.updateState(e), i != t.dom && t.focus();
  try {
    return n();
  } finally {
    r != e && t.updateState(r), i != t.dom && i && i.focus();
  }
}
function $F(t, e, n) {
  let r = e.selection, i = n == "up" ? r.$from : r.$to;
  return O7(t, e, () => {
    let { node: s } = t.docView.domFromPos(i.pos, n == "up" ? -1 : 1);
    for (; ; ) {
      let c = t.docView.nearestDesc(s, !0);
      if (!c)
        break;
      if (c.node.isBlock) {
        s = c.contentDOM || c.dom;
        break;
      }
      s = c.dom.parentNode;
    }
    let l = w7(t, i.pos, 1);
    for (let c = s.firstChild; c; c = c.nextSibling) {
      let h;
      if (c.nodeType == 1)
        h = c.getClientRects();
      else if (c.nodeType == 3)
        h = tu(c, 0, c.nodeValue.length).getClientRects();
      else
        continue;
      for (let g = 0; g < h.length; g++) {
        let v = h[g];
        if (v.bottom > v.top + 1 && (n == "up" ? l.top - v.top > (v.bottom - l.top) * 2 : v.bottom - l.bottom > (l.bottom - v.top) * 2))
          return !1;
      }
    }
    return !0;
  });
}
const GF = /[\u0590-\u08ac]/;
function WF(t, e, n) {
  let { $head: r } = e.selection;
  if (!r.parent.isTextblock)
    return !1;
  let i = r.parentOffset, s = !i, l = i == r.parent.content.size, c = t.domSelection();
  return !GF.test(r.parent.textContent) || !c.modify ? n == "left" || n == "backward" ? s : l : O7(t, e, () => {
    let { focusNode: h, focusOffset: g, anchorNode: v, anchorOffset: C } = t.domSelectionRange(), S = c.caretBidiLevel;
    c.modify("move", n, "character");
    let b = r.depth ? t.docView.domAfterPos(r.before()) : t.dom, { focusNode: N, focusOffset: O } = t.domSelectionRange(), L = N && !b.contains(N.nodeType == 1 ? N : N.parentNode) || h == N && g == O;
    try {
      c.collapse(v, C), h && (h != v || g != C) && c.extend && c.extend(h, g);
    } catch {
    }
    return S != null && (c.caretBidiLevel = S), L;
  });
}
let ox = null, ax = null, sx = !1;
function KF(t, e, n) {
  return ox == e && ax == n ? sx : (ox = e, ax = n, sx = n == "up" || n == "down" ? $F(t, e, n) : WF(t, e, n));
}
const is = 0, lx = 1, rh = 2, fl = 3;
class E0 {
  constructor(e, n, r, i) {
    this.parent = e, this.children = n, this.dom = r, this.contentDOM = i, this.dirty = is, r.pmViewDesc = this;
  }
  // Used to check whether a given description corresponds to a
  // widget/mark/node.
  matchesWidget(e) {
    return !1;
  }
  matchesMark(e) {
    return !1;
  }
  matchesNode(e, n, r) {
    return !1;
  }
  matchesHack(e) {
    return !1;
  }
  // When parsing in-editor content (in domchange.js), we allow
  // descriptions to determine the parse rules that should be used to
  // parse them.
  parseRule() {
    return null;
  }
  // Used by the editor's event handler to ignore events that come
  // from certain descs.
  stopEvent(e) {
    return !1;
  }
  // The size of the content represented by this desc.
  get size() {
    let e = 0;
    for (let n = 0; n < this.children.length; n++)
      e += this.children[n].size;
    return e;
  }
  // For block nodes, this represents the space taken up by their
  // start/end tokens.
  get border() {
    return 0;
  }
  destroy() {
    this.parent = void 0, this.dom.pmViewDesc == this && (this.dom.pmViewDesc = void 0);
    for (let e = 0; e < this.children.length; e++)
      this.children[e].destroy();
  }
  posBeforeChild(e) {
    for (let n = 0, r = this.posAtStart; ; n++) {
      let i = this.children[n];
      if (i == e)
        return r;
      r += i.size;
    }
  }
  get posBefore() {
    return this.parent.posBeforeChild(this);
  }
  get posAtStart() {
    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;
  }
  get posAfter() {
    return this.posBefore + this.size;
  }
  get posAtEnd() {
    return this.posAtStart + this.size - 2 * this.border;
  }
  localPosFromDOM(e, n, r) {
    if (this.contentDOM && this.contentDOM.contains(e.nodeType == 1 ? e : e.parentNode))
      if (r < 0) {
        let s, l;
        if (e == this.contentDOM)
          s = e.childNodes[n - 1];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          s = e.previousSibling;
        }
        for (; s && !((l = s.pmViewDesc) && l.parent == this); )
          s = s.previousSibling;
        return s ? this.posBeforeChild(l) + l.size : this.posAtStart;
      } else {
        let s, l;
        if (e == this.contentDOM)
          s = e.childNodes[n];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          s = e.nextSibling;
        }
        for (; s && !((l = s.pmViewDesc) && l.parent == this); )
          s = s.nextSibling;
        return s ? this.posBeforeChild(l) : this.posAtEnd;
      }
    let i;
    if (e == this.dom && this.contentDOM)
      i = n > Fo(this.contentDOM);
    else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM))
      i = e.compareDocumentPosition(this.contentDOM) & 2;
    else if (this.dom.firstChild) {
      if (n == 0)
        for (let s = e; ; s = s.parentNode) {
          if (s == this.dom) {
            i = !1;
            break;
          }
          if (s.previousSibling)
            break;
        }
      if (i == null && n == e.childNodes.length)
        for (let s = e; ; s = s.parentNode) {
          if (s == this.dom) {
            i = !0;
            break;
          }
          if (s.nextSibling)
            break;
        }
    }
    return i ?? r > 0 ? this.posAtEnd : this.posAtStart;
  }
  nearestDesc(e, n = !1) {
    for (let r = !0, i = e; i; i = i.parentNode) {
      let s = this.getDesc(i), l;
      if (s && (!n || s.node))
        if (r && (l = s.nodeDOM) && !(l.nodeType == 1 ? l.contains(e.nodeType == 1 ? e : e.parentNode) : l == e))
          r = !1;
        else
          return s;
    }
  }
  getDesc(e) {
    let n = e.pmViewDesc;
    for (let r = n; r; r = r.parent)
      if (r == this)
        return n;
  }
  posFromDOM(e, n, r) {
    for (let i = e; i; i = i.parentNode) {
      let s = this.getDesc(i);
      if (s)
        return s.localPosFromDOM(e, n, r);
    }
    return -1;
  }
  // Find the desc for the node after the given pos, if any. (When a
  // parent node overrode rendering, there might not be one.)
  descAt(e) {
    for (let n = 0, r = 0; n < this.children.length; n++) {
      let i = this.children[n], s = r + i.size;
      if (r == e && s != r) {
        for (; !i.border && i.children.length; )
          i = i.children[0];
        return i;
      }
      if (e < s)
        return i.descAt(e - r - i.border);
      r = s;
    }
  }
  domFromPos(e, n) {
    if (!this.contentDOM)
      return { node: this.dom, offset: 0, atom: e + 1 };
    let r = 0, i = 0;
    for (let s = 0; r < this.children.length; r++) {
      let l = this.children[r], c = s + l.size;
      if (c > e || l instanceof D7) {
        i = e - s;
        break;
      }
      s = c;
    }
    if (i)
      return this.children[r].domFromPos(i - this.children[r].border, n);
    for (let s; r && !(s = this.children[r - 1]).size && s instanceof R7 && s.side >= 0; r--)
      ;
    if (n <= 0) {
      let s, l = !0;
      for (; s = r ? this.children[r - 1] : null, !(!s || s.dom.parentNode == this.contentDOM); r--, l = !1)
        ;
      return s && n && l && !s.border && !s.domAtom ? s.domFromPos(s.size, n) : { node: this.contentDOM, offset: s ? Fo(s.dom) + 1 : 0 };
    } else {
      let s, l = !0;
      for (; s = r < this.children.length ? this.children[r] : null, !(!s || s.dom.parentNode == this.contentDOM); r++, l = !1)
        ;
      return s && l && !s.border && !s.domAtom ? s.domFromPos(0, n) : { node: this.contentDOM, offset: s ? Fo(s.dom) : this.contentDOM.childNodes.length };
    }
  }
  // Used to find a DOM range in a single parent for a given changed
  // range.
  parseRange(e, n, r = 0) {
    if (this.children.length == 0)
      return { node: this.contentDOM, from: e, to: n, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };
    let i = -1, s = -1;
    for (let l = r, c = 0; ; c++) {
      let h = this.children[c], g = l + h.size;
      if (i == -1 && e <= g) {
        let v = l + h.border;
        if (e >= v && n <= g - h.border && h.node && h.contentDOM && this.contentDOM.contains(h.contentDOM))
          return h.parseRange(e, n, v);
        e = l;
        for (let C = c; C > 0; C--) {
          let S = this.children[C - 1];
          if (S.size && S.dom.parentNode == this.contentDOM && !S.emptyChildAt(1)) {
            i = Fo(S.dom) + 1;
            break;
          }
          e -= S.size;
        }
        i == -1 && (i = 0);
      }
      if (i > -1 && (g > n || c == this.children.length - 1)) {
        n = g;
        for (let v = c + 1; v < this.children.length; v++) {
          let C = this.children[v];
          if (C.size && C.dom.parentNode == this.contentDOM && !C.emptyChildAt(-1)) {
            s = Fo(C.dom);
            break;
          }
          n += C.size;
        }
        s == -1 && (s = this.contentDOM.childNodes.length);
        break;
      }
      l = g;
    }
    return { node: this.contentDOM, from: e, to: n, fromOffset: i, toOffset: s };
  }
  emptyChildAt(e) {
    if (this.border || !this.contentDOM || !this.children.length)
      return !1;
    let n = this.children[e < 0 ? 0 : this.children.length - 1];
    return n.size == 0 || n.emptyChildAt(e);
  }
  domAfterPos(e) {
    let { node: n, offset: r } = this.domFromPos(e, 0);
    if (n.nodeType != 1 || r == n.childNodes.length)
      throw new RangeError("No node after pos " + e);
    return n.childNodes[r];
  }
  // View descs are responsible for setting any selection that falls
  // entirely inside of them, so that custom implementations can do
  // custom things with the selection. Note that this falls apart when
  // a selection starts in such a node and ends in another, in which
  // case we just use whatever domFromPos produces as a best effort.
  setSelection(e, n, r, i = !1) {
    let s = Math.min(e, n), l = Math.max(e, n);
    for (let S = 0, b = 0; S < this.children.length; S++) {
      let N = this.children[S], O = b + N.size;
      if (s > b && l < O)
        return N.setSelection(e - b - N.border, n - b - N.border, r, i);
      b = O;
    }
    let c = this.domFromPos(e, e ? -1 : 1), h = n == e ? c : this.domFromPos(n, n ? -1 : 1), g = r.getSelection(), v = !1;
    if ((as || Gi) && e == n) {
      let { node: S, offset: b } = c;
      if (S.nodeType == 3) {
        if (v = !!(b && S.nodeValue[b - 1] == `
`), v && b == S.nodeValue.length)
          for (let N = S, O; N; N = N.parentNode) {
            if (O = N.nextSibling) {
              O.nodeName == "BR" && (c = h = { node: O.parentNode, offset: Fo(O) + 1 });
              break;
            }
            let L = N.pmViewDesc;
            if (L && L.node && L.node.isBlock)
              break;
          }
      } else {
        let N = S.childNodes[b - 1];
        v = N && (N.nodeName == "BR" || N.contentEditable == "false");
      }
    }
    if (as && g.focusNode && g.focusNode != h.node && g.focusNode.nodeType == 1) {
      let S = g.focusNode.childNodes[g.focusOffset];
      S && S.contentEditable == "false" && (i = !0);
    }
    if (!(i || v && Gi) && gf(c.node, c.offset, g.anchorNode, g.anchorOffset) && gf(h.node, h.offset, g.focusNode, g.focusOffset))
      return;
    let C = !1;
    if ((g.extend || e == n) && !v) {
      g.collapse(c.node, c.offset);
      try {
        e != n && g.extend(h.node, h.offset), C = !0;
      } catch {
      }
    }
    if (!C) {
      if (e > n) {
        let b = c;
        c = h, h = b;
      }
      let S = document.createRange();
      S.setEnd(h.node, h.offset), S.setStart(c.node, c.offset), g.removeAllRanges(), g.addRange(S);
    }
  }
  ignoreMutation(e) {
    return !this.contentDOM && e.type != "selection";
  }
  get contentLost() {
    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);
  }
  // Remove a subtree of the element tree that has been touched
  // by a DOM change, so that the next update will redraw it.
  markDirty(e, n) {
    for (let r = 0, i = 0; i < this.children.length; i++) {
      let s = this.children[i], l = r + s.size;
      if (r == l ? e <= l && n >= r : e < l && n > r) {
        let c = r + s.border, h = l - s.border;
        if (e >= c && n <= h) {
          this.dirty = e == r || n == l ? rh : lx, e == c && n == h && (s.contentLost || s.dom.parentNode != this.contentDOM) ? s.dirty = fl : s.markDirty(e - c, n - c);
          return;
        } else
          s.dirty = s.dom == s.contentDOM && s.dom.parentNode == this.contentDOM && !s.children.length ? rh : fl;
      }
      r = l;
    }
    this.dirty = rh;
  }
  markParentsDirty() {
    let e = 1;
    for (let n = this.parent; n; n = n.parent, e++) {
      let r = e == 1 ? rh : lx;
      n.dirty < r && (n.dirty = r);
    }
  }
  get domAtom() {
    return !1;
  }
  get ignoreForCoords() {
    return !1;
  }
}
class R7 extends E0 {
  constructor(e, n, r, i) {
    let s, l = n.type.toDOM;
    if (typeof l == "function" && (l = l(r, () => {
      if (!s)
        return i;
      if (s.parent)
        return s.parent.posBeforeChild(s);
    })), !n.type.spec.raw) {
      if (l.nodeType != 1) {
        let c = document.createElement("span");
        c.appendChild(l), l = c;
      }
      l.contentEditable = "false", l.classList.add("ProseMirror-widget");
    }
    super(e, [], l, null), this.widget = n, this.widget = n, s = this;
  }
  matchesWidget(e) {
    return this.dirty == is && e.type.eq(this.widget.type);
  }
  parseRule() {
    return { ignore: !0 };
  }
  stopEvent(e) {
    let n = this.widget.spec.stopEvent;
    return n ? n(e) : !1;
  }
  ignoreMutation(e) {
    return e.type != "selection" || this.widget.spec.ignoreSelection;
  }
  destroy() {
    this.widget.type.destroy(this.dom), super.destroy();
  }
  get domAtom() {
    return !0;
  }
  get side() {
    return this.widget.type.side;
  }
}
class YF extends E0 {
  constructor(e, n, r, i) {
    super(e, [], n, null), this.textDOM = r, this.text = i;
  }
  get size() {
    return this.text.length;
  }
  localPosFromDOM(e, n) {
    return e != this.textDOM ? this.posAtStart + (n ? this.size : 0) : this.posAtStart + n;
  }
  domFromPos(e) {
    return { node: this.textDOM, offset: e };
  }
  ignoreMutation(e) {
    return e.type === "characterData" && e.target.nodeValue == e.oldValue;
  }
}
class yf extends E0 {
  constructor(e, n, r, i) {
    super(e, [], r, i), this.mark = n;
  }
  static create(e, n, r, i) {
    let s = i.nodeViews[n.type.name], l = s && s(n, i, r);
    return (!l || !l.dom) && (l = ns.renderSpec(document, n.type.spec.toDOM(n, r))), new yf(e, n, l.dom, l.contentDOM || l.dom);
  }
  parseRule() {
    return this.dirty & fl || this.mark.type.spec.reparseInView ? null : { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM || void 0 };
  }
  matchesMark(e) {
    return this.dirty != fl && this.mark.eq(e);
  }
  markDirty(e, n) {
    if (super.markDirty(e, n), this.dirty != is) {
      let r = this.parent;
      for (; !r.node; )
        r = r.parent;
      r.dirty < this.dirty && (r.dirty = this.dirty), this.dirty = is;
    }
  }
  slice(e, n, r) {
    let i = yf.create(this.parent, this.mark, !0, r), s = this.children, l = this.size;
    n < l && (s = mC(s, n, l, r)), e > 0 && (s = mC(s, 0, e, r));
    for (let c = 0; c < s.length; c++)
      s[c].parent = i;
    return i.children = s, i;
  }
}
class vf extends E0 {
  constructor(e, n, r, i, s, l, c, h, g) {
    super(e, [], s, l), this.node = n, this.outerDeco = r, this.innerDeco = i, this.nodeDOM = c, l && this.updateChildren(h, g);
  }
  // By default, a node is rendered using the `toDOM` method from the
  // node type spec. But client code can use the `nodeViews` spec to
  // supply a custom node view, which can influence various aspects of
  // the way the node works.
  //
  // (Using subclassing for this was intentionally decided against,
  // since it'd require exposing a whole slew of finicky
  // implementation details to the user code that they probably will
  // never need.)
  static create(e, n, r, i, s, l) {
    let c = s.nodeViews[n.type.name], h, g = c && c(n, s, () => {
      if (!h)
        return l;
      if (h.parent)
        return h.parent.posBeforeChild(h);
    }, r, i), v = g && g.dom, C = g && g.contentDOM;
    if (n.isText) {
      if (!v)
        v = document.createTextNode(n.text);
      else if (v.nodeType != 3)
        throw new RangeError("Text must be rendered as a DOM text node");
    } else
      v || ({ dom: v, contentDOM: C } = ns.renderSpec(document, n.type.spec.toDOM(n)));
    !C && !n.isText && v.nodeName != "BR" && (v.hasAttribute("contenteditable") || (v.contentEditable = "false"), n.type.spec.draggable && (v.draggable = !0));
    let S = v;
    return v = I7(v, r, n), g ? h = new QF(e, n, r, i, v, C || null, S, g, s, l + 1) : n.isText ? new Ky(e, n, r, i, v, S, s) : new vf(e, n, r, i, v, C || null, S, s, l + 1);
  }
  parseRule() {
    if (this.node.type.spec.reparseInView)
      return null;
    let e = { node: this.node.type.name, attrs: this.node.attrs };
    if (this.node.type.whitespace == "pre" && (e.preserveWhitespace = "full"), !this.contentDOM)
      e.getContent = () => this.node.content;
    else if (!this.contentLost)
      e.contentElement = this.contentDOM;
    else {
      for (let n = this.children.length - 1; n >= 0; n--) {
        let r = this.children[n];
        if (this.dom.contains(r.dom.parentNode)) {
          e.contentElement = r.dom.parentNode;
          break;
        }
      }
      e.contentElement || (e.getContent = () => Oe.empty);
    }
    return e;
  }
  matchesNode(e, n, r) {
    return this.dirty == is && e.eq(this.node) && pC(n, this.outerDeco) && r.eq(this.innerDeco);
  }
  get size() {
    return this.node.nodeSize;
  }
  get border() {
    return this.node.isLeaf ? 0 : 1;
  }
  // Syncs `this.children` to match `this.node.content` and the local
  // decorations, possibly introducing nesting for marks. Then, in a
  // separate step, syncs the DOM inside `this.contentDOM` to
  // `this.children`.
  updateChildren(e, n) {
    let r = this.node.inlineContent, i = n, s = e.composing ? this.localCompositionInfo(e, n) : null, l = s && s.pos > -1 ? s : null, c = s && s.pos < 0, h = new JF(this, l && l.node, e);
    tB(this.node, this.innerDeco, (g, v, C) => {
      g.spec.marks ? h.syncToMarks(g.spec.marks, r, e) : g.type.side >= 0 && !C && h.syncToMarks(v == this.node.childCount ? _n.none : this.node.child(v).marks, r, e), h.placeWidget(g, e, i);
    }, (g, v, C, S) => {
      h.syncToMarks(g.marks, r, e);
      let b;
      h.findNodeMatch(g, v, C, S) || c && e.state.selection.from > i && e.state.selection.to < i + g.nodeSize && (b = h.findIndexWithChild(s.node)) > -1 && h.updateNodeAt(g, v, C, b, e) || h.updateNextNode(g, v, C, e, S) || h.addNode(g, v, C, e, i), i += g.nodeSize;
    }), h.syncToMarks([], r, e), this.node.isTextblock && h.addTextblockHacks(), h.destroyRest(), (h.changed || this.dirty == rh) && (l && this.protectLocalComposition(e, l), M7(this.contentDOM, this.children, e), Eh && nB(this.dom));
  }
  localCompositionInfo(e, n) {
    let { from: r, to: i } = e.state.selection;
    if (!(e.state.selection instanceof Kt) || r < n || i > n + this.node.content.size)
      return null;
    let s = e.domSelectionRange(), l = rB(s.focusNode, s.focusOffset);
    if (!l || !this.dom.contains(l.parentNode))
      return null;
    if (this.node.inlineContent) {
      let c = l.nodeValue, h = iB(this.node.content, c, r - n, i - n);
      return h < 0 ? null : { node: l, pos: h, text: c };
    } else
      return { node: l, pos: -1, text: "" };
  }
  protectLocalComposition(e, { node: n, pos: r, text: i }) {
    if (this.getDesc(n))
      return;
    let s = n;
    for (; s.parentNode != this.contentDOM; s = s.parentNode) {
      for (; s.previousSibling; )
        s.parentNode.removeChild(s.previousSibling);
      for (; s.nextSibling; )
        s.parentNode.removeChild(s.nextSibling);
      s.pmViewDesc && (s.pmViewDesc = void 0);
    }
    let l = new YF(this, s, n, i);
    e.input.compositionNodes.push(l), this.children = mC(this.children, r, r + i.length, e, l);
  }
  // If this desc must be updated to match the given node decoration,
  // do so and return true.
  update(e, n, r, i) {
    return this.dirty == fl || !e.sameMarkup(this.node) ? !1 : (this.updateInner(e, n, r, i), !0);
  }
  updateInner(e, n, r, i) {
    this.updateOuterDeco(n), this.node = e, this.innerDeco = r, this.contentDOM && this.updateChildren(i, this.posAtStart), this.dirty = is;
  }
  updateOuterDeco(e) {
    if (pC(e, this.outerDeco))
      return;
    let n = this.nodeDOM.nodeType != 1, r = this.dom;
    this.dom = L7(this.dom, this.nodeDOM, hC(this.outerDeco, this.node, n), hC(e, this.node, n)), this.dom != r && (r.pmViewDesc = void 0, this.dom.pmViewDesc = this), this.outerDeco = e;
  }
  // Mark this node as being the selected node.
  selectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.add("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && (this.dom.draggable = !0);
  }
  // Remove selected node marking from this node.
  deselectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.remove("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && this.dom.removeAttribute("draggable");
  }
  get domAtom() {
    return this.node.isAtom;
  }
}
function ux(t, e, n, r, i) {
  return I7(r, e, t), new vf(void 0, t, e, n, r, r, r, i, 0);
}
class Ky extends vf {
  constructor(e, n, r, i, s, l, c) {
    super(e, n, r, i, s, null, l, c, 0);
  }
  parseRule() {
    let e = this.nodeDOM.parentNode;
    for (; e && e != this.dom && !e.pmIsDeco; )
      e = e.parentNode;
    return { skip: e || !0 };
  }
  update(e, n, r, i) {
    return this.dirty == fl || this.dirty != is && !this.inParent() || !e.sameMarkup(this.node) ? !1 : (this.updateOuterDeco(n), (this.dirty != is || e.text != this.node.text) && e.text != this.nodeDOM.nodeValue && (this.nodeDOM.nodeValue = e.text, i.trackWrites == this.nodeDOM && (i.trackWrites = null)), this.node = e, this.dirty = is, !0);
  }
  inParent() {
    let e = this.parent.contentDOM;
    for (let n = this.nodeDOM; n; n = n.parentNode)
      if (n == e)
        return !0;
    return !1;
  }
  domFromPos(e) {
    return { node: this.nodeDOM, offset: e };
  }
  localPosFromDOM(e, n, r) {
    return e == this.nodeDOM ? this.posAtStart + Math.min(n, this.node.text.length) : super.localPosFromDOM(e, n, r);
  }
  ignoreMutation(e) {
    return e.type != "characterData" && e.type != "selection";
  }
  slice(e, n, r) {
    let i = this.node.cut(e, n), s = document.createTextNode(i.text);
    return new Ky(this.parent, i, this.outerDeco, this.innerDeco, s, s, r);
  }
  markDirty(e, n) {
    super.markDirty(e, n), this.dom != this.nodeDOM && (e == 0 || n == this.nodeDOM.nodeValue.length) && (this.dirty = fl);
  }
  get domAtom() {
    return !1;
  }
}
class D7 extends E0 {
  parseRule() {
    return { ignore: !0 };
  }
  matchesHack(e) {
    return this.dirty == is && this.dom.nodeName == e;
  }
  get domAtom() {
    return !0;
  }
  get ignoreForCoords() {
    return this.dom.nodeName == "IMG";
  }
}
class QF extends vf {
  constructor(e, n, r, i, s, l, c, h, g, v) {
    super(e, n, r, i, s, l, c, g, v), this.spec = h;
  }
  // A custom `update` method gets to decide whether the update goes
  // through. If it does, and there's a `contentDOM` node, our logic
  // updates the children.
  update(e, n, r, i) {
    if (this.dirty == fl)
      return !1;
    if (this.spec.update) {
      let s = this.spec.update(e, n, r);
      return s && this.updateInner(e, n, r, i), s;
    } else
      return !this.contentDOM && !e.isLeaf ? !1 : super.update(e, n, r, i);
  }
  selectNode() {
    this.spec.selectNode ? this.spec.selectNode() : super.selectNode();
  }
  deselectNode() {
    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();
  }
  setSelection(e, n, r, i) {
    this.spec.setSelection ? this.spec.setSelection(e, n, r) : super.setSelection(e, n, r, i);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
  stopEvent(e) {
    return this.spec.stopEvent ? this.spec.stopEvent(e) : !1;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
}
function M7(t, e, n) {
  let r = t.firstChild, i = !1;
  for (let s = 0; s < e.length; s++) {
    let l = e[s], c = l.dom;
    if (c.parentNode == t) {
      for (; c != r; )
        r = cx(r), i = !0;
      r = r.nextSibling;
    } else
      i = !0, t.insertBefore(c, r);
    if (l instanceof yf) {
      let h = r ? r.previousSibling : t.lastChild;
      M7(l.contentDOM, l.children, n), r = h ? h.nextSibling : t.firstChild;
    }
  }
  for (; r; )
    r = cx(r), i = !0;
  i && n.trackWrites == t && (n.trackWrites = null);
}
const Wm = function(t) {
  t && (this.nodeName = t);
};
Wm.prototype = /* @__PURE__ */ Object.create(null);
const of = [new Wm()];
function hC(t, e, n) {
  if (t.length == 0)
    return of;
  let r = n ? of[0] : new Wm(), i = [r];
  for (let s = 0; s < t.length; s++) {
    let l = t[s].type.attrs;
    if (l) {
      l.nodeName && i.push(r = new Wm(l.nodeName));
      for (let c in l) {
        let h = l[c];
        h != null && (n && i.length == 1 && i.push(r = new Wm(e.isInline ? "span" : "div")), c == "class" ? r.class = (r.class ? r.class + " " : "") + h : c == "style" ? r.style = (r.style ? r.style + ";" : "") + h : c != "nodeName" && (r[c] = h));
      }
    }
  }
  return i;
}
function L7(t, e, n, r) {
  if (n == of && r == of)
    return e;
  let i = e;
  for (let s = 0; s < r.length; s++) {
    let l = r[s], c = n[s];
    if (s) {
      let h;
      c && c.nodeName == l.nodeName && i != t && (h = i.parentNode) && h.nodeName.toLowerCase() == l.nodeName || (h = document.createElement(l.nodeName), h.pmIsDeco = !0, h.appendChild(i), c = of[0]), i = h;
    }
    XF(i, c || of[0], l);
  }
  return i;
}
function XF(t, e, n) {
  for (let r in e)
    r != "class" && r != "style" && r != "nodeName" && !(r in n) && t.removeAttribute(r);
  for (let r in n)
    r != "class" && r != "style" && r != "nodeName" && n[r] != e[r] && t.setAttribute(r, n[r]);
  if (e.class != n.class) {
    let r = e.class ? e.class.split(" ").filter(Boolean) : [], i = n.class ? n.class.split(" ").filter(Boolean) : [];
    for (let s = 0; s < r.length; s++)
      i.indexOf(r[s]) == -1 && t.classList.remove(r[s]);
    for (let s = 0; s < i.length; s++)
      r.indexOf(i[s]) == -1 && t.classList.add(i[s]);
    t.classList.length == 0 && t.removeAttribute("class");
  }
  if (e.style != n.style) {
    if (e.style) {
      let r = /\s*([\w\-\xa1-\uffff]+)\s*:(?:"(?:\\.|[^"])*"|'(?:\\.|[^'])*'|\(.*?\)|[^;])*/g, i;
      for (; i = r.exec(e.style); )
        t.style.removeProperty(i[1]);
    }
    n.style && (t.style.cssText += n.style);
  }
}
function I7(t, e, n) {
  return L7(t, t, of, hC(e, n, t.nodeType != 1));
}
function pC(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].type.eq(e[n].type))
      return !1;
  return !0;
}
function cx(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class JF {
  constructor(e, n, r) {
    this.lock = n, this.view = r, this.index = 0, this.stack = [], this.changed = !1, this.top = e, this.preMatch = ZF(e.node.content, e);
  }
  // Destroy and remove the children between the given indices in
  // `this.top`.
  destroyBetween(e, n) {
    if (e != n) {
      for (let r = e; r < n; r++)
        this.top.children[r].destroy();
      this.top.children.splice(e, n - e), this.changed = !0;
    }
  }
  // Destroy all remaining children in `this.top`.
  destroyRest() {
    this.destroyBetween(this.index, this.top.children.length);
  }
  // Sync the current stack of mark descs with the given array of
  // marks, reusing existing mark descs when possible.
  syncToMarks(e, n, r) {
    let i = 0, s = this.stack.length >> 1, l = Math.min(s, e.length);
    for (; i < l && (i == s - 1 ? this.top : this.stack[i + 1 << 1]).matchesMark(e[i]) && e[i].type.spec.spanning !== !1; )
      i++;
    for (; i < s; )
      this.destroyRest(), this.top.dirty = is, this.index = this.stack.pop(), this.top = this.stack.pop(), s--;
    for (; s < e.length; ) {
      this.stack.push(this.top, this.index + 1);
      let c = -1;
      for (let h = this.index; h < Math.min(this.index + 3, this.top.children.length); h++) {
        let g = this.top.children[h];
        if (g.matchesMark(e[s]) && !this.isLocked(g.dom)) {
          c = h;
          break;
        }
      }
      if (c > -1)
        c > this.index && (this.changed = !0, this.destroyBetween(this.index, c)), this.top = this.top.children[this.index];
      else {
        let h = yf.create(this.top, e[s], n, r);
        this.top.children.splice(this.index, 0, h), this.top = h, this.changed = !0;
      }
      this.index = 0, s++;
    }
  }
  // Try to find a node desc matching the given data. Skip over it and
  // return true when successful.
  findNodeMatch(e, n, r, i) {
    let s = -1, l;
    if (i >= this.preMatch.index && (l = this.preMatch.matches[i - this.preMatch.index]).parent == this.top && l.matchesNode(e, n, r))
      s = this.top.children.indexOf(l, this.index);
    else
      for (let c = this.index, h = Math.min(this.top.children.length, c + 5); c < h; c++) {
        let g = this.top.children[c];
        if (g.matchesNode(e, n, r) && !this.preMatch.matched.has(g)) {
          s = c;
          break;
        }
      }
    return s < 0 ? !1 : (this.destroyBetween(this.index, s), this.index++, !0);
  }
  updateNodeAt(e, n, r, i, s) {
    let l = this.top.children[i];
    return l.dirty == fl && l.dom == l.contentDOM && (l.dirty = rh), l.update(e, n, r, s) ? (this.destroyBetween(this.index, i), this.index++, !0) : !1;
  }
  findIndexWithChild(e) {
    for (; ; ) {
      let n = e.parentNode;
      if (!n)
        return -1;
      if (n == this.top.contentDOM) {
        let r = e.pmViewDesc;
        if (r) {
          for (let i = this.index; i < this.top.children.length; i++)
            if (this.top.children[i] == r)
              return i;
        }
        return -1;
      }
      e = n;
    }
  }
  // Try to update the next node, if any, to the given data. Checks
  // pre-matches to avoid overwriting nodes that could still be used.
  updateNextNode(e, n, r, i, s) {
    for (let l = this.index; l < this.top.children.length; l++) {
      let c = this.top.children[l];
      if (c instanceof vf) {
        let h = this.preMatch.matched.get(c);
        if (h != null && h != s)
          return !1;
        let g = c.dom;
        if (!(this.isLocked(g) && !(e.isText && c.node && c.node.isText && c.nodeDOM.nodeValue == e.text && c.dirty != fl && pC(n, c.outerDeco))) && c.update(e, n, r, i))
          return this.destroyBetween(this.index, l), c.dom != g && (this.changed = !0), this.index++, !0;
        break;
      }
    }
    return !1;
  }
  // Insert the node as a newly created node desc.
  addNode(e, n, r, i, s) {
    this.top.children.splice(this.index++, 0, vf.create(this.top, e, n, r, i, s)), this.changed = !0;
  }
  placeWidget(e, n, r) {
    let i = this.index < this.top.children.length ? this.top.children[this.index] : null;
    if (i && i.matchesWidget(e) && (e == i.widget || !i.widget.type.toDOM.parentNode))
      this.index++;
    else {
      let s = new R7(this.top, e, n, r);
      this.top.children.splice(this.index++, 0, s), this.changed = !0;
    }
  }
  // Make sure a textblock looks and behaves correctly in
  // contentEditable.
  addTextblockHacks() {
    let e = this.top.children[this.index - 1], n = this.top;
    for (; e instanceof yf; )
      n = e, e = n.children[n.children.length - 1];
    (!e || // Empty textblock
    !(e instanceof Ky) || /\n$/.test(e.node.text) || this.view.requiresGeckoHackNode && /\s$/.test(e.node.text)) && ((Gi || Vi) && e && e.dom.contentEditable == "false" && this.addHackNode("IMG", n), this.addHackNode("BR", this.top));
  }
  addHackNode(e, n) {
    if (n == this.top && this.index < n.children.length && n.children[this.index].matchesHack(e))
      this.index++;
    else {
      let r = document.createElement(e);
      e == "IMG" && (r.className = "ProseMirror-separator", r.alt = ""), e == "BR" && (r.className = "ProseMirror-trailingBreak");
      let i = new D7(this.top, [], r, null);
      n != this.top ? n.children.push(i) : n.children.splice(this.index++, 0, i), this.changed = !0;
    }
  }
  isLocked(e) {
    return this.lock && (e == this.lock || e.nodeType == 1 && e.contains(this.lock.parentNode));
  }
}
function ZF(t, e) {
  let n = e, r = n.children.length, i = t.childCount, s = /* @__PURE__ */ new Map(), l = [];
  e:
    for (; i > 0; ) {
      let c;
      for (; ; )
        if (r) {
          let g = n.children[r - 1];
          if (g instanceof yf)
            n = g, r = g.children.length;
          else {
            c = g, r--;
            break;
          }
        } else {
          if (n == e)
            break e;
          r = n.parent.children.indexOf(n), n = n.parent;
        }
      let h = c.node;
      if (h) {
        if (h != t.child(i - 1))
          break;
        --i, s.set(c, i), l.push(c);
      }
    }
  return { index: i, matched: s, matches: l.reverse() };
}
function eB(t, e) {
  return t.type.side - e.type.side;
}
function tB(t, e, n, r) {
  let i = e.locals(t), s = 0;
  if (i.length == 0) {
    for (let g = 0; g < t.childCount; g++) {
      let v = t.child(g);
      r(v, i, e.forChild(s, v), g), s += v.nodeSize;
    }
    return;
  }
  let l = 0, c = [], h = null;
  for (let g = 0; ; ) {
    if (l < i.length && i[l].to == s) {
      let N = i[l++], O;
      for (; l < i.length && i[l].to == s; )
        (O || (O = [N])).push(i[l++]);
      if (O) {
        O.sort(eB);
        for (let L = 0; L < O.length; L++)
          n(O[L], g, !!h);
      } else
        n(N, g, !!h);
    }
    let v, C;
    if (h)
      C = -1, v = h, h = null;
    else if (g < t.childCount)
      C = g, v = t.child(g++);
    else
      break;
    for (let N = 0; N < c.length; N++)
      c[N].to <= s && c.splice(N--, 1);
    for (; l < i.length && i[l].from <= s && i[l].to > s; )
      c.push(i[l++]);
    let S = s + v.nodeSize;
    if (v.isText) {
      let N = S;
      l < i.length && i[l].from < N && (N = i[l].from);
      for (let O = 0; O < c.length; O++)
        c[O].to < N && (N = c[O].to);
      N < S && (h = v.cut(N - s), v = v.cut(0, N - s), S = N, C = -1);
    }
    let b = v.isInline && !v.isLeaf ? c.filter((N) => !N.inline) : c.slice();
    r(v, b, e.forChild(s, v), C), s = S;
  }
}
function nB(t) {
  if (t.nodeName == "UL" || t.nodeName == "OL") {
    let e = t.style.cssText;
    t.style.cssText = e + "; list-style: square !important", window.getComputedStyle(t).listStyle, t.style.cssText = e;
  }
}
function rB(t, e) {
  for (; ; ) {
    if (t.nodeType == 3)
      return t;
    if (t.nodeType == 1 && e > 0) {
      if (t.childNodes.length > e && t.childNodes[e].nodeType == 3)
        return t.childNodes[e];
      t = t.childNodes[e - 1], e = sl(t);
    } else if (t.nodeType == 1 && e < t.childNodes.length)
      t = t.childNodes[e], e = 0;
    else
      return null;
  }
}
function iB(t, e, n, r) {
  for (let i = 0, s = 0; i < t.childCount && s <= r; ) {
    let l = t.child(i++), c = s;
    if (s += l.nodeSize, !l.isText)
      continue;
    let h = l.text;
    for (; i < t.childCount; ) {
      let g = t.child(i++);
      if (s += g.nodeSize, !g.isText)
        break;
      h += g.text;
    }
    if (s >= n) {
      let g = c < r ? h.lastIndexOf(e, r - c - 1) : -1;
      if (g >= 0 && g + e.length + c >= n)
        return c + g;
      if (n == r && h.length >= r + e.length - c && h.slice(r - c, r - c + e.length) == e)
        return r;
    }
  }
  return -1;
}
function mC(t, e, n, r, i) {
  let s = [];
  for (let l = 0, c = 0; l < t.length; l++) {
    let h = t[l], g = c, v = c += h.size;
    g >= n || v <= e ? s.push(h) : (g < e && s.push(h.slice(0, e - g, r)), i && (s.push(i), i = void 0), v > n && s.push(h.slice(n - g, h.size, r)));
  }
  return s;
}
function XC(t, e = null) {
  let n = t.domSelectionRange(), r = t.state.doc;
  if (!n.focusNode)
    return null;
  let i = t.docView.nearestDesc(n.focusNode), s = i && i.size == 0, l = t.docView.posFromDOM(n.focusNode, n.focusOffset, 1);
  if (l < 0)
    return null;
  let c = r.resolve(l), h, g;
  if (Gy(n)) {
    for (h = c; i && !i.node; )
      i = i.parent;
    let v = i.node;
    if (i && v.isAtom && _t.isSelectable(v) && i.parent && !(v.isInline && wF(n.focusNode, n.focusOffset, i.dom))) {
      let C = i.posBefore;
      g = new _t(l == C ? c : r.resolve(C));
    }
  } else {
    let v = t.docView.posFromDOM(n.anchorNode, n.anchorOffset, 1);
    if (v < 0)
      return null;
    h = r.resolve(v);
  }
  if (!g) {
    let v = e == "pointer" || t.state.selection.head < c.pos && !s ? 1 : -1;
    g = JC(t, h, c, v);
  }
  return g;
}
function P7(t) {
  return t.editable ? t.hasFocus() : B7(t) && document.activeElement && document.activeElement.contains(t.dom);
}
function ou(t, e = !1) {
  let n = t.state.selection;
  if (F7(t, n), !!P7(t)) {
    if (!e && t.input.mouseDown && t.input.mouseDown.allowDefault && Vi) {
      let r = t.domSelectionRange(), i = t.domObserver.currentSelection;
      if (r.anchorNode && i.anchorNode && gf(r.anchorNode, r.anchorOffset, i.anchorNode, i.anchorOffset)) {
        t.input.mouseDown.delayedSelectionSync = !0, t.domObserver.setCurSelection();
        return;
      }
    }
    if (t.domObserver.disconnectSelection(), t.cursorWrapper)
      aB(t);
    else {
      let { anchor: r, head: i } = n, s, l;
      fx && !(n instanceof Kt) && (n.$from.parent.inlineContent || (s = dx(t, n.from)), !n.empty && !n.$from.parent.inlineContent && (l = dx(t, n.to))), t.docView.setSelection(r, i, t.root, e), fx && (s && hx(s), l && hx(l)), n.visible ? t.dom.classList.remove("ProseMirror-hideselection") : (t.dom.classList.add("ProseMirror-hideselection"), "onselectionchange" in document && oB(t));
    }
    t.domObserver.setCurSelection(), t.domObserver.connectSelection();
  }
}
const fx = Gi || Vi && DF < 63;
function dx(t, e) {
  let { node: n, offset: r } = t.docView.domFromPos(e, 0), i = r < n.childNodes.length ? n.childNodes[r] : null, s = r ? n.childNodes[r - 1] : null;
  if (Gi && i && i.contentEditable == "false")
    return $T(i);
  if ((!i || i.contentEditable == "false") && (!s || s.contentEditable == "false")) {
    if (i)
      return $T(i);
    if (s)
      return $T(s);
  }
}
function $T(t) {
  return t.contentEditable = "true", Gi && t.draggable && (t.draggable = !1, t.wasDraggable = !0), t;
}
function hx(t) {
  t.contentEditable = "false", t.wasDraggable && (t.draggable = !0, t.wasDraggable = null);
}
function oB(t) {
  let e = t.dom.ownerDocument;
  e.removeEventListener("selectionchange", t.input.hideSelectionGuard);
  let n = t.domSelectionRange(), r = n.anchorNode, i = n.anchorOffset;
  e.addEventListener("selectionchange", t.input.hideSelectionGuard = () => {
    (n.anchorNode != r || n.anchorOffset != i) && (e.removeEventListener("selectionchange", t.input.hideSelectionGuard), setTimeout(() => {
      (!P7(t) || t.state.selection.visible) && t.dom.classList.remove("ProseMirror-hideselection");
    }, 20));
  });
}
function aB(t) {
  let e = t.domSelection(), n = document.createRange(), r = t.cursorWrapper.dom, i = r.nodeName == "IMG";
  i ? n.setEnd(r.parentNode, Fo(r) + 1) : n.setEnd(r, 0), n.collapse(!1), e.removeAllRanges(), e.addRange(n), !i && !t.state.selection.visible && po && Cc <= 11 && (r.disabled = !0, r.disabled = !1);
}
function F7(t, e) {
  if (e instanceof _t) {
    let n = t.docView.descAt(e.from);
    n != t.lastSelectedViewDesc && (px(t), n && n.selectNode(), t.lastSelectedViewDesc = n);
  } else
    px(t);
}
function px(t) {
  t.lastSelectedViewDesc && (t.lastSelectedViewDesc.parent && t.lastSelectedViewDesc.deselectNode(), t.lastSelectedViewDesc = void 0);
}
function JC(t, e, n, r) {
  return t.someProp("createSelectionBetween", (i) => i(t, e, n)) || Kt.between(e, n, r);
}
function mx(t) {
  return t.editable && !t.hasFocus() ? !1 : B7(t);
}
function B7(t) {
  let e = t.domSelectionRange();
  if (!e.anchorNode)
    return !1;
  try {
    return t.dom.contains(e.anchorNode.nodeType == 3 ? e.anchorNode.parentNode : e.anchorNode) && (t.editable || t.dom.contains(e.focusNode.nodeType == 3 ? e.focusNode.parentNode : e.focusNode));
  } catch {
    return !1;
  }
}
function sB(t) {
  let e = t.docView.domFromPos(t.state.selection.anchor, 0), n = t.domSelectionRange();
  return gf(e.node, e.offset, n.anchorNode, n.anchorOffset);
}
function gC(t, e) {
  let { $anchor: n, $head: r } = t.selection, i = e > 0 ? n.max(r) : n.min(r), s = i.parent.inlineContent ? i.depth ? t.doc.resolve(e > 0 ? i.after() : i.before()) : null : i;
  return s && $t.findFrom(s, e);
}
function tf(t, e) {
  return t.dispatch(t.state.tr.setSelection(e).scrollIntoView()), !0;
}
function gx(t, e, n) {
  let r = t.state.selection;
  if (r instanceof Kt) {
    if (!r.empty || n.indexOf("s") > -1)
      return !1;
    if (t.endOfTextblock(e > 0 ? "right" : "left")) {
      let i = gC(t.state, e);
      return i && i instanceof _t ? tf(t, i) : !1;
    } else if (!(da && n.indexOf("m") > -1)) {
      let i = r.$head, s = i.textOffset ? null : e < 0 ? i.nodeBefore : i.nodeAfter, l;
      if (!s || s.isText)
        return !1;
      let c = e < 0 ? i.pos - s.nodeSize : i.pos;
      return s.isAtom || (l = t.docView.descAt(c)) && !l.contentDOM ? _t.isSelectable(s) ? tf(t, new _t(e < 0 ? t.state.doc.resolve(i.pos - s.nodeSize) : i)) : Wy ? tf(t, new Kt(t.state.doc.resolve(e < 0 ? c : c + s.nodeSize))) : !1 : !1;
    }
  } else {
    if (r instanceof _t && r.node.isInline)
      return tf(t, new Kt(e > 0 ? r.$to : r.$from));
    {
      let i = gC(t.state, e);
      return i ? tf(t, i) : !1;
    }
  }
}
function ly(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function Km(t) {
  let e = t.pmViewDesc;
  return e && e.size == 0 && (t.nextSibling || t.nodeName != "BR");
}
function GT(t) {
  let e = t.domSelectionRange(), n = e.focusNode, r = e.focusOffset;
  if (!n)
    return;
  let i, s, l = !1;
  for (as && n.nodeType == 1 && r < ly(n) && Km(n.childNodes[r]) && (l = !0); ; )
    if (r > 0) {
      if (n.nodeType != 1)
        break;
      {
        let c = n.childNodes[r - 1];
        if (Km(c))
          i = n, s = --r;
        else if (c.nodeType == 3)
          n = c, r = n.nodeValue.length;
        else
          break;
      }
    } else {
      if (U7(n))
        break;
      {
        let c = n.previousSibling;
        for (; c && Km(c); )
          i = n.parentNode, s = Fo(c), c = c.previousSibling;
        if (c)
          n = c, r = ly(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          r = 0;
        }
      }
    }
  l ? yC(t, n, r) : i && yC(t, i, s);
}
function WT(t) {
  let e = t.domSelectionRange(), n = e.focusNode, r = e.focusOffset;
  if (!n)
    return;
  let i = ly(n), s, l;
  for (; ; )
    if (r < i) {
      if (n.nodeType != 1)
        break;
      let c = n.childNodes[r];
      if (Km(c))
        s = n, l = ++r;
      else
        break;
    } else {
      if (U7(n))
        break;
      {
        let c = n.nextSibling;
        for (; c && Km(c); )
          s = c.parentNode, l = Fo(c) + 1, c = c.nextSibling;
        if (c)
          n = c, r = 0, i = ly(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          r = i = 0;
        }
      }
    }
  s && yC(t, s, l);
}
function U7(t) {
  let e = t.pmViewDesc;
  return e && e.node && e.node.isBlock;
}
function yC(t, e, n) {
  let r = t.domSelection();
  if (Gy(r)) {
    let s = document.createRange();
    s.setEnd(e, n), s.setStart(e, n), r.removeAllRanges(), r.addRange(s);
  } else
    r.extend && r.extend(e, n);
  t.domObserver.setCurSelection();
  let { state: i } = t;
  setTimeout(() => {
    t.state == i && ou(t);
  }, 50);
}
function yx(t, e, n) {
  let r = t.state.selection;
  if (r instanceof Kt && !r.empty || n.indexOf("s") > -1 || da && n.indexOf("m") > -1)
    return !1;
  let { $from: i, $to: s } = r;
  if (!i.parent.inlineContent || t.endOfTextblock(e < 0 ? "up" : "down")) {
    let l = gC(t.state, e);
    if (l && l instanceof _t)
      return tf(t, l);
  }
  if (!i.parent.inlineContent) {
    let l = e < 0 ? i : s, c = r instanceof rs ? $t.near(l, e) : $t.findFrom(l, e);
    return c ? tf(t, c) : !1;
  }
  return !1;
}
function vx(t, e) {
  if (!(t.state.selection instanceof Kt))
    return !0;
  let { $head: n, $anchor: r, empty: i } = t.state.selection;
  if (!n.sameParent(r))
    return !0;
  if (!i)
    return !1;
  if (t.endOfTextblock(e > 0 ? "forward" : "backward"))
    return !0;
  let s = !n.textOffset && (e < 0 ? n.nodeBefore : n.nodeAfter);
  if (s && !s.isText) {
    let l = t.state.tr;
    return e < 0 ? l.delete(n.pos - s.nodeSize, n.pos) : l.delete(n.pos, n.pos + s.nodeSize), t.dispatch(l), !0;
  }
  return !1;
}
function Ex(t, e, n) {
  t.domObserver.stop(), e.contentEditable = n, t.domObserver.start();
}
function lB(t) {
  if (!Gi || t.state.selection.$head.parentOffset > 0)
    return !1;
  let { focusNode: e, focusOffset: n } = t.domSelectionRange();
  if (e && e.nodeType == 1 && n == 0 && e.firstChild && e.firstChild.contentEditable == "false") {
    let r = e.firstChild;
    Ex(t, r, "true"), setTimeout(() => Ex(t, r, "false"), 20);
  }
  return !1;
}
function uB(t) {
  let e = "";
  return t.ctrlKey && (e += "c"), t.metaKey && (e += "m"), t.altKey && (e += "a"), t.shiftKey && (e += "s"), e;
}
function cB(t, e) {
  let n = e.keyCode, r = uB(e);
  return n == 8 || da && n == 72 && r == "c" ? vx(t, -1) || GT(t) : n == 46 || da && n == 68 && r == "c" ? vx(t, 1) || WT(t) : n == 13 || n == 27 ? !0 : n == 37 || da && n == 66 && r == "c" ? gx(t, -1, r) || GT(t) : n == 39 || da && n == 70 && r == "c" ? gx(t, 1, r) || WT(t) : n == 38 || da && n == 80 && r == "c" ? yx(t, -1, r) || GT(t) : n == 40 || da && n == 78 && r == "c" ? lB(t) || yx(t, 1, r) || WT(t) : r == (da ? "m" : "c") && (n == 66 || n == 73 || n == 89 || n == 90);
}
function H7(t, e) {
  t.someProp("transformCopied", (b) => {
    e = b(e, t);
  });
  let n = [], { content: r, openStart: i, openEnd: s } = e;
  for (; i > 1 && s > 1 && r.childCount == 1 && r.firstChild.childCount == 1; ) {
    i--, s--;
    let b = r.firstChild;
    n.push(b.type.name, b.attrs != b.type.defaultAttrs ? b.attrs : null), r = b.content;
  }
  let l = t.someProp("clipboardSerializer") || ns.fromSchema(t.state.schema), c = G7(), h = c.createElement("div");
  h.appendChild(l.serializeFragment(r, { document: c }));
  let g = h.firstChild, v, C = 0;
  for (; g && g.nodeType == 1 && (v = $7[g.nodeName.toLowerCase()]); ) {
    for (let b = v.length - 1; b >= 0; b--) {
      let N = c.createElement(v[b]);
      for (; h.firstChild; )
        N.appendChild(h.firstChild);
      h.appendChild(N), C++;
    }
    g = h.firstChild;
  }
  g && g.nodeType == 1 && g.setAttribute("data-pm-slice", `${i} ${s}${C ? ` -${C}` : ""} ${JSON.stringify(n)}`);
  let S = t.someProp("clipboardTextSerializer", (b) => b(e, t)) || e.content.textBetween(0, e.content.size, `

`);
  return { dom: h, text: S };
}
function z7(t, e, n, r, i) {
  let s = i.parent.type.spec.code, l, c;
  if (!n && !e)
    return null;
  let h = e && (r || s || !n);
  if (h) {
    if (t.someProp("transformPastedText", (S) => {
      e = S(e, s || r, t);
    }), s)
      return e ? new Xe(Oe.from(t.state.schema.text(e.replace(/\r\n?/g, `
`))), 0, 0) : Xe.empty;
    let C = t.someProp("clipboardTextParser", (S) => S(e, i, r, t));
    if (C)
      c = C;
    else {
      let S = i.marks(), { schema: b } = t.state, N = ns.fromSchema(b);
      l = document.createElement("div"), e.split(/(?:\r\n?|\n)+/).forEach((O) => {
        let L = l.appendChild(document.createElement("p"));
        O && L.appendChild(N.serializeNode(b.text(O, S)));
      });
    }
  } else
    t.someProp("transformPastedHTML", (C) => {
      n = C(n, t);
    }), l = hB(n), Wy && pB(l);
  let g = l && l.querySelector("[data-pm-slice]"), v = g && /^(\d+) (\d+)(?: -(\d+))? (.*)/.exec(g.getAttribute("data-pm-slice") || "");
  if (v && v[3])
    for (let C = +v[3]; C > 0; C--) {
      let S = l.firstChild;
      for (; S && S.nodeType != 1; )
        S = S.nextSibling;
      if (!S)
        break;
      l = S;
    }
  if (c || (c = (t.someProp("clipboardParser") || t.someProp("domParser") || mf.fromSchema(t.state.schema)).parseSlice(l, {
    preserveWhitespace: !!(h || v),
    context: i,
    ruleFromNode(S) {
      return S.nodeName == "BR" && !S.nextSibling && S.parentNode && !fB.test(S.parentNode.nodeName) ? { ignore: !0 } : null;
    }
  })), v)
    c = mB(Tx(c, +v[1], +v[2]), v[4]);
  else if (c = Xe.maxOpen(dB(c.content, i), !0), c.openStart || c.openEnd) {
    let C = 0, S = 0;
    for (let b = c.content.firstChild; C < c.openStart && !b.type.spec.isolating; C++, b = b.firstChild)
      ;
    for (let b = c.content.lastChild; S < c.openEnd && !b.type.spec.isolating; S++, b = b.lastChild)
      ;
    c = Tx(c, C, S);
  }
  return t.someProp("transformPasted", (C) => {
    c = C(c, t);
  }), c;
}
const fB = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;
function dB(t, e) {
  if (t.childCount < 2)
    return t;
  for (let n = e.depth; n >= 0; n--) {
    let i = e.node(n).contentMatchAt(e.index(n)), s, l = [];
    if (t.forEach((c) => {
      if (!l)
        return;
      let h = i.findWrapping(c.type), g;
      if (!h)
        return l = null;
      if (g = l.length && s.length && j7(h, s, c, l[l.length - 1], 0))
        l[l.length - 1] = g;
      else {
        l.length && (l[l.length - 1] = V7(l[l.length - 1], s.length));
        let v = q7(c, h);
        l.push(v), i = i.matchType(v.type), s = h;
      }
    }), l)
      return Oe.from(l);
  }
  return t;
}
function q7(t, e, n = 0) {
  for (let r = e.length - 1; r >= n; r--)
    t = e[r].create(null, Oe.from(t));
  return t;
}
function j7(t, e, n, r, i) {
  if (i < t.length && i < e.length && t[i] == e[i]) {
    let s = j7(t, e, n, r.lastChild, i + 1);
    if (s)
      return r.copy(r.content.replaceChild(r.childCount - 1, s));
    if (r.contentMatchAt(r.childCount).matchType(i == t.length - 1 ? n.type : t[i + 1]))
      return r.copy(r.content.append(Oe.from(q7(n, t, i + 1))));
  }
}
function V7(t, e) {
  if (e == 0)
    return t;
  let n = t.content.replaceChild(t.childCount - 1, V7(t.lastChild, e - 1)), r = t.contentMatchAt(t.childCount).fillBefore(Oe.empty, !0);
  return t.copy(n.append(r));
}
function vC(t, e, n, r, i, s) {
  let l = e < 0 ? t.firstChild : t.lastChild, c = l.content;
  return i < r - 1 && (c = vC(c, e, n, r, i + 1, s)), i >= n && (c = e < 0 ? l.contentMatchAt(0).fillBefore(c, t.childCount > 1 || s <= i).append(c) : c.append(l.contentMatchAt(l.childCount).fillBefore(Oe.empty, !0))), t.replaceChild(e < 0 ? 0 : t.childCount - 1, l.copy(c));
}
function Tx(t, e, n) {
  return e < t.openStart && (t = new Xe(vC(t.content, -1, e, t.openStart, 0, t.openEnd), e, t.openEnd)), n < t.openEnd && (t = new Xe(vC(t.content, 1, n, t.openEnd, 0, 0), t.openStart, n)), t;
}
const $7 = {
  thead: ["table"],
  tbody: ["table"],
  tfoot: ["table"],
  caption: ["table"],
  colgroup: ["table"],
  col: ["table", "colgroup"],
  tr: ["table", "tbody"],
  td: ["table", "tbody", "tr"],
  th: ["table", "tbody", "tr"]
};
let Cx = null;
function G7() {
  return Cx || (Cx = document.implementation.createHTMLDocument("title"));
}
function hB(t) {
  let e = /^(\s*<meta [^>]*>)*/.exec(t);
  e && (t = t.slice(e[0].length));
  let n = G7().createElement("div"), r = /<([a-z][^>\s]+)/i.exec(t), i;
  if ((i = r && $7[r[1].toLowerCase()]) && (t = i.map((s) => "<" + s + ">").join("") + t + i.map((s) => "</" + s + ">").reverse().join("")), n.innerHTML = t, i)
    for (let s = 0; s < i.length; s++)
      n = n.querySelector(i[s]) || n;
  return n;
}
function pB(t) {
  let e = t.querySelectorAll(Vi ? "span:not([class]):not([style])" : "span.Apple-converted-space");
  for (let n = 0; n < e.length; n++) {
    let r = e[n];
    r.childNodes.length == 1 && r.textContent == " " && r.parentNode && r.parentNode.replaceChild(t.ownerDocument.createTextNode(" "), r);
  }
}
function mB(t, e) {
  if (!t.size)
    return t;
  let n = t.content.firstChild.type.schema, r;
  try {
    r = JSON.parse(e);
  } catch {
    return t;
  }
  let { content: i, openStart: s, openEnd: l } = t;
  for (let c = r.length - 2; c >= 0; c -= 2) {
    let h = n.nodes[r[c]];
    if (!h || h.hasRequiredAttrs())
      break;
    i = Oe.from(h.create(r[c + 1], i)), s++, l++;
  }
  return new Xe(i, s, l);
}
const Wi = {}, Ki = {}, gB = { touchstart: !0, touchmove: !0 };
class yB {
  constructor() {
    this.shiftKey = !1, this.mouseDown = null, this.lastKeyCode = null, this.lastKeyCodeTime = 0, this.lastClick = { time: 0, x: 0, y: 0, type: "" }, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastIOSEnter = 0, this.lastIOSEnterFallbackTimeout = -1, this.lastFocus = 0, this.lastTouch = 0, this.lastAndroidDelete = 0, this.composing = !1, this.composingTimeout = -1, this.compositionNodes = [], this.compositionEndedAt = -2e8, this.domChangeCount = 0, this.eventHandlers = /* @__PURE__ */ Object.create(null), this.hideSelectionGuard = null;
  }
}
function vB(t) {
  for (let e in Wi) {
    let n = Wi[e];
    t.dom.addEventListener(e, t.input.eventHandlers[e] = (r) => {
      TB(t, r) && !ZC(t, r) && (t.editable || !(r.type in Ki)) && n(t, r);
    }, gB[e] ? { passive: !0 } : void 0);
  }
  Gi && t.dom.addEventListener("input", () => null), EC(t);
}
function Ec(t, e) {
  t.input.lastSelectionOrigin = e, t.input.lastSelectionTime = Date.now();
}
function EB(t) {
  t.domObserver.stop();
  for (let e in t.input.eventHandlers)
    t.dom.removeEventListener(e, t.input.eventHandlers[e]);
  clearTimeout(t.input.composingTimeout), clearTimeout(t.input.lastIOSEnterFallbackTimeout);
}
function EC(t) {
  t.someProp("handleDOMEvents", (e) => {
    for (let n in e)
      t.input.eventHandlers[n] || t.dom.addEventListener(n, t.input.eventHandlers[n] = (r) => ZC(t, r));
  });
}
function ZC(t, e) {
  return t.someProp("handleDOMEvents", (n) => {
    let r = n[e.type];
    return r ? r(t, e) || e.defaultPrevented : !1;
  });
}
function TB(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target; n != t.dom; n = n.parentNode)
    if (!n || n.nodeType == 11 || n.pmViewDesc && n.pmViewDesc.stopEvent(e))
      return !1;
  return !0;
}
function CB(t, e) {
  !ZC(t, e) && Wi[e.type] && (t.editable || !(e.type in Ki)) && Wi[e.type](t, e);
}
Ki.keydown = (t, e) => {
  let n = e;
  if (t.input.shiftKey = n.keyCode == 16 || n.shiftKey, !K7(t, n) && (t.input.lastKeyCode = n.keyCode, t.input.lastKeyCodeTime = Date.now(), !(es && Vi && n.keyCode == 13)))
    if (n.keyCode != 229 && t.domObserver.forceFlush(), Eh && n.keyCode == 13 && !n.ctrlKey && !n.altKey && !n.metaKey) {
      let r = Date.now();
      t.input.lastIOSEnter = r, t.input.lastIOSEnterFallbackTimeout = setTimeout(() => {
        t.input.lastIOSEnter == r && (t.someProp("handleKeyDown", (i) => i(t, ef(13, "Enter"))), t.input.lastIOSEnter = 0);
      }, 200);
    } else
      t.someProp("handleKeyDown", (r) => r(t, n)) || cB(t, n) ? n.preventDefault() : Ec(t, "key");
};
Ki.keyup = (t, e) => {
  e.keyCode == 16 && (t.input.shiftKey = !1);
};
Ki.keypress = (t, e) => {
  let n = e;
  if (K7(t, n) || !n.charCode || n.ctrlKey && !n.altKey || da && n.metaKey)
    return;
  if (t.someProp("handleKeyPress", (i) => i(t, n))) {
    n.preventDefault();
    return;
  }
  let r = t.state.selection;
  if (!(r instanceof Kt) || !r.$from.sameParent(r.$to)) {
    let i = String.fromCharCode(n.charCode);
    !/[\r\n]/.test(i) && !t.someProp("handleTextInput", (s) => s(t, r.$from.pos, r.$to.pos, i)) && t.dispatch(t.state.tr.insertText(i).scrollIntoView()), n.preventDefault();
  }
};
function Yy(t) {
  return { left: t.clientX, top: t.clientY };
}
function SB(t, e) {
  let n = e.x - t.clientX, r = e.y - t.clientY;
  return n * n + r * r < 100;
}
function eS(t, e, n, r, i) {
  if (r == -1)
    return !1;
  let s = t.state.doc.resolve(r);
  for (let l = s.depth + 1; l > 0; l--)
    if (t.someProp(e, (c) => l > s.depth ? c(t, n, s.nodeAfter, s.before(l), i, !0) : c(t, n, s.node(l), s.before(l), i, !1)))
      return !0;
  return !1;
}
function hh(t, e, n) {
  t.focused || t.focus();
  let r = t.state.tr.setSelection(e);
  n == "pointer" && r.setMeta("pointer", !0), t.dispatch(r);
}
function bB(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.doc.resolve(e), r = n.nodeAfter;
  return r && r.isAtom && _t.isSelectable(r) ? (hh(t, new _t(n), "pointer"), !0) : !1;
}
function AB(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.selection, r, i;
  n instanceof _t && (r = n.node);
  let s = t.state.doc.resolve(e);
  for (let l = s.depth + 1; l > 0; l--) {
    let c = l > s.depth ? s.nodeAfter : s.node(l);
    if (_t.isSelectable(c)) {
      r && n.$from.depth > 0 && l >= n.$from.depth && s.before(n.$from.depth + 1) == n.$from.pos ? i = s.before(n.$from.depth) : i = s.before(l);
      break;
    }
  }
  return i != null ? (hh(t, _t.create(t.state.doc, i), "pointer"), !0) : !1;
}
function xB(t, e, n, r, i) {
  return eS(t, "handleClickOn", e, n, r) || t.someProp("handleClick", (s) => s(t, e, r)) || (i ? AB(t, n) : bB(t, n));
}
function _B(t, e, n, r) {
  return eS(t, "handleDoubleClickOn", e, n, r) || t.someProp("handleDoubleClick", (i) => i(t, e, r));
}
function kB(t, e, n, r) {
  return eS(t, "handleTripleClickOn", e, n, r) || t.someProp("handleTripleClick", (i) => i(t, e, r)) || NB(t, n, r);
}
function NB(t, e, n) {
  if (n.button != 0)
    return !1;
  let r = t.state.doc;
  if (e == -1)
    return r.inlineContent ? (hh(t, Kt.create(r, 0, r.content.size), "pointer"), !0) : !1;
  let i = r.resolve(e);
  for (let s = i.depth + 1; s > 0; s--) {
    let l = s > i.depth ? i.nodeAfter : i.node(s), c = i.before(s);
    if (l.inlineContent)
      hh(t, Kt.create(r, c + 1, c + 1 + l.content.size), "pointer");
    else if (_t.isSelectable(l))
      hh(t, _t.create(r, c), "pointer");
    else
      continue;
    return !0;
  }
}
function tS(t) {
  return uy(t);
}
const W7 = da ? "metaKey" : "ctrlKey";
Wi.mousedown = (t, e) => {
  let n = e;
  t.input.shiftKey = n.shiftKey;
  let r = tS(t), i = Date.now(), s = "singleClick";
  i - t.input.lastClick.time < 500 && SB(n, t.input.lastClick) && !n[W7] && (t.input.lastClick.type == "singleClick" ? s = "doubleClick" : t.input.lastClick.type == "doubleClick" && (s = "tripleClick")), t.input.lastClick = { time: i, x: n.clientX, y: n.clientY, type: s };
  let l = t.posAtCoords(Yy(n));
  l && (s == "singleClick" ? (t.input.mouseDown && t.input.mouseDown.done(), t.input.mouseDown = new wB(t, l, n, !!r)) : (s == "doubleClick" ? _B : kB)(t, l.pos, l.inside, n) ? n.preventDefault() : Ec(t, "pointer"));
};
class wB {
  constructor(e, n, r, i) {
    this.view = e, this.pos = n, this.event = r, this.flushed = i, this.delayedSelectionSync = !1, this.mightDrag = null, this.startDoc = e.state.doc, this.selectNode = !!r[W7], this.allowDefault = r.shiftKey;
    let s, l;
    if (n.inside > -1)
      s = e.state.doc.nodeAt(n.inside), l = n.inside;
    else {
      let v = e.state.doc.resolve(n.pos);
      s = v.parent, l = v.depth ? v.before() : 0;
    }
    const c = i ? null : r.target, h = c ? e.docView.nearestDesc(c, !0) : null;
    this.target = h ? h.dom : null;
    let { selection: g } = e.state;
    (r.button == 0 && s.type.spec.draggable && s.type.spec.selectable !== !1 || g instanceof _t && g.from <= l && g.to > l) && (this.mightDrag = {
      node: s,
      pos: l,
      addAttr: !!(this.target && !this.target.draggable),
      setUneditable: !!(this.target && as && !this.target.hasAttribute("contentEditable"))
    }), this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable) && (this.view.domObserver.stop(), this.mightDrag.addAttr && (this.target.draggable = !0), this.mightDrag.setUneditable && setTimeout(() => {
      this.view.input.mouseDown == this && this.target.setAttribute("contentEditable", "false");
    }, 20), this.view.domObserver.start()), e.root.addEventListener("mouseup", this.up = this.up.bind(this)), e.root.addEventListener("mousemove", this.move = this.move.bind(this)), Ec(e, "pointer");
  }
  done() {
    this.view.root.removeEventListener("mouseup", this.up), this.view.root.removeEventListener("mousemove", this.move), this.mightDrag && this.target && (this.view.domObserver.stop(), this.mightDrag.addAttr && this.target.removeAttribute("draggable"), this.mightDrag.setUneditable && this.target.removeAttribute("contentEditable"), this.view.domObserver.start()), this.delayedSelectionSync && setTimeout(() => ou(this.view)), this.view.input.mouseDown = null;
  }
  up(e) {
    if (this.done(), !this.view.dom.contains(e.target))
      return;
    let n = this.pos;
    this.view.state.doc != this.startDoc && (n = this.view.posAtCoords(Yy(e))), this.updateAllowDefault(e), this.allowDefault || !n ? Ec(this.view, "pointer") : xB(this.view, n.pos, n.inside, e, this.selectNode) ? e.preventDefault() : e.button == 0 && (this.flushed || // Safari ignores clicks on draggable elements
    Gi && this.mightDrag && !this.mightDrag.node.isAtom || // Chrome will sometimes treat a node selection as a
    // cursor, but still report that the node is selected
    // when asked through getSelection. You'll then get a
    // situation where clicking at the point where that
    // (hidden) cursor is doesn't change the selection, and
    // thus doesn't get a reaction from ProseMirror. This
    // works around that.
    Vi && !this.view.state.selection.visible && Math.min(Math.abs(n.pos - this.view.state.selection.from), Math.abs(n.pos - this.view.state.selection.to)) <= 2) ? (hh(this.view, $t.near(this.view.state.doc.resolve(n.pos)), "pointer"), e.preventDefault()) : Ec(this.view, "pointer");
  }
  move(e) {
    this.updateAllowDefault(e), Ec(this.view, "pointer"), e.buttons == 0 && this.done();
  }
  updateAllowDefault(e) {
    !this.allowDefault && (Math.abs(this.event.x - e.clientX) > 4 || Math.abs(this.event.y - e.clientY) > 4) && (this.allowDefault = !0);
  }
}
Wi.touchstart = (t) => {
  t.input.lastTouch = Date.now(), tS(t), Ec(t, "pointer");
};
Wi.touchmove = (t) => {
  t.input.lastTouch = Date.now(), Ec(t, "pointer");
};
Wi.contextmenu = (t) => tS(t);
function K7(t, e) {
  return t.composing ? !0 : Gi && Math.abs(e.timeStamp - t.input.compositionEndedAt) < 500 ? (t.input.compositionEndedAt = -2e8, !0) : !1;
}
const OB = es ? 5e3 : -1;
Ki.compositionstart = Ki.compositionupdate = (t) => {
  if (!t.composing) {
    t.domObserver.flush();
    let { state: e } = t, n = e.selection.$from;
    if (e.selection.empty && (e.storedMarks || !n.textOffset && n.parentOffset && n.nodeBefore.marks.some((r) => r.type.spec.inclusive === !1)))
      t.markCursor = t.state.storedMarks || n.marks(), uy(t, !0), t.markCursor = null;
    else if (uy(t), as && e.selection.empty && n.parentOffset && !n.textOffset && n.nodeBefore.marks.length) {
      let r = t.domSelectionRange();
      for (let i = r.focusNode, s = r.focusOffset; i && i.nodeType == 1 && s != 0; ) {
        let l = s < 0 ? i.lastChild : i.childNodes[s - 1];
        if (!l)
          break;
        if (l.nodeType == 3) {
          t.domSelection().collapse(l, l.nodeValue.length);
          break;
        } else
          i = l, s = -1;
      }
    }
    t.input.composing = !0;
  }
  Y7(t, OB);
};
Ki.compositionend = (t, e) => {
  t.composing && (t.input.composing = !1, t.input.compositionEndedAt = e.timeStamp, Y7(t, 20));
};
function Y7(t, e) {
  clearTimeout(t.input.composingTimeout), e > -1 && (t.input.composingTimeout = setTimeout(() => uy(t), e));
}
function Q7(t) {
  for (t.composing && (t.input.composing = !1, t.input.compositionEndedAt = RB()); t.input.compositionNodes.length > 0; )
    t.input.compositionNodes.pop().markParentsDirty();
}
function RB() {
  let t = document.createEvent("Event");
  return t.initEvent("event", !0, !0), t.timeStamp;
}
function uy(t, e = !1) {
  if (!(es && t.domObserver.flushingSoon >= 0)) {
    if (t.domObserver.forceFlush(), Q7(t), e || t.docView && t.docView.dirty) {
      let n = XC(t);
      return n && !n.eq(t.state.selection) ? t.dispatch(t.state.tr.setSelection(n)) : t.updateState(t.state), !0;
    }
    return !1;
  }
}
function DB(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.dom.parentNode.appendChild(document.createElement("div"));
  n.appendChild(e), n.style.cssText = "position: fixed; left: -10000px; top: 10px";
  let r = getSelection(), i = document.createRange();
  i.selectNodeContents(e), t.dom.blur(), r.removeAllRanges(), r.addRange(i), setTimeout(() => {
    n.parentNode && n.parentNode.removeChild(n), t.focus();
  }, 50);
}
const Th = po && Cc < 15 || Eh && MF < 604;
Wi.copy = Ki.cut = (t, e) => {
  let n = e, r = t.state.selection, i = n.type == "cut";
  if (r.empty)
    return;
  let s = Th ? null : n.clipboardData, l = r.content(), { dom: c, text: h } = H7(t, l);
  s ? (n.preventDefault(), s.clearData(), s.setData("text/html", c.innerHTML), s.setData("text/plain", h)) : DB(t, c), i && t.dispatch(t.state.tr.deleteSelection().scrollIntoView().setMeta("uiEvent", "cut"));
};
function MB(t) {
  return t.openStart == 0 && t.openEnd == 0 && t.content.childCount == 1 ? t.content.firstChild : null;
}
function LB(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.input.shiftKey || t.state.selection.$from.parent.type.spec.code, r = t.dom.parentNode.appendChild(document.createElement(n ? "textarea" : "div"));
  n || (r.contentEditable = "true"), r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.focus(), setTimeout(() => {
    t.focus(), r.parentNode && r.parentNode.removeChild(r), n ? u0(t, r.value, null, t.input.shiftKey, e) : u0(t, r.textContent, r.innerHTML, t.input.shiftKey, e);
  }, 50);
}
function u0(t, e, n, r, i) {
  let s = z7(t, e, n, r, t.state.selection.$from);
  if (t.someProp("handlePaste", (h) => h(t, i, s || Xe.empty)))
    return !0;
  if (!s)
    return !1;
  let l = MB(s), c = l ? t.state.tr.replaceSelectionWith(l, t.input.shiftKey) : t.state.tr.replaceSelection(s);
  return t.dispatch(c.scrollIntoView().setMeta("paste", !0).setMeta("uiEvent", "paste")), !0;
}
Ki.paste = (t, e) => {
  let n = e;
  if (t.composing && !es)
    return;
  let r = Th ? null : n.clipboardData;
  r && u0(t, r.getData("text/plain"), r.getData("text/html"), t.input.shiftKey, n) ? n.preventDefault() : LB(t, n);
};
class IB {
  constructor(e, n) {
    this.slice = e, this.move = n;
  }
}
const X7 = da ? "altKey" : "ctrlKey";
Wi.dragstart = (t, e) => {
  let n = e, r = t.input.mouseDown;
  if (r && r.done(), !n.dataTransfer)
    return;
  let i = t.state.selection, s = i.empty ? null : t.posAtCoords(Yy(n));
  if (!(s && s.pos >= i.from && s.pos <= (i instanceof _t ? i.to - 1 : i.to))) {
    if (r && r.mightDrag)
      t.dispatch(t.state.tr.setSelection(_t.create(t.state.doc, r.mightDrag.pos)));
    else if (n.target && n.target.nodeType == 1) {
      let g = t.docView.nearestDesc(n.target, !0);
      g && g.node.type.spec.draggable && g != t.docView && t.dispatch(t.state.tr.setSelection(_t.create(t.state.doc, g.posBefore)));
    }
  }
  let l = t.state.selection.content(), { dom: c, text: h } = H7(t, l);
  n.dataTransfer.clearData(), n.dataTransfer.setData(Th ? "Text" : "text/html", c.innerHTML), n.dataTransfer.effectAllowed = "copyMove", Th || n.dataTransfer.setData("text/plain", h), t.dragging = new IB(l, !n[X7]);
};
Wi.dragend = (t) => {
  let e = t.dragging;
  window.setTimeout(() => {
    t.dragging == e && (t.dragging = null);
  }, 50);
};
Ki.dragover = Ki.dragenter = (t, e) => e.preventDefault();
Ki.drop = (t, e) => {
  let n = e, r = t.dragging;
  if (t.dragging = null, !n.dataTransfer)
    return;
  let i = t.posAtCoords(Yy(n));
  if (!i)
    return;
  let s = t.state.doc.resolve(i.pos), l = r && r.slice;
  l ? t.someProp("transformPasted", (N) => {
    l = N(l, t);
  }) : l = z7(t, n.dataTransfer.getData(Th ? "Text" : "text/plain"), Th ? null : n.dataTransfer.getData("text/html"), !1, s);
  let c = !!(r && !n[X7]);
  if (t.someProp("handleDrop", (N) => N(t, n, l || Xe.empty, c))) {
    n.preventDefault();
    return;
  }
  if (!l)
    return;
  n.preventDefault();
  let h = l ? yF(t.state.doc, s.pos, l) : s.pos;
  h == null && (h = s.pos);
  let g = t.state.tr;
  c && g.deleteSelection();
  let v = g.mapping.map(h), C = l.openStart == 0 && l.openEnd == 0 && l.content.childCount == 1, S = g.doc;
  if (C ? g.replaceRangeWith(v, v, l.content.firstChild) : g.replaceRange(v, v, l), g.doc.eq(S))
    return;
  let b = g.doc.resolve(v);
  if (C && _t.isSelectable(l.content.firstChild) && b.nodeAfter && b.nodeAfter.sameMarkup(l.content.firstChild))
    g.setSelection(new _t(b));
  else {
    let N = g.mapping.map(h);
    g.mapping.maps[g.mapping.maps.length - 1].forEach((O, L, P, Y) => N = Y), g.setSelection(JC(t, b, g.doc.resolve(N)));
  }
  t.focus(), t.dispatch(g.setMeta("uiEvent", "drop"));
};
Wi.focus = (t) => {
  t.input.lastFocus = Date.now(), t.focused || (t.domObserver.stop(), t.dom.classList.add("ProseMirror-focused"), t.domObserver.start(), t.focused = !0, setTimeout(() => {
    t.docView && t.hasFocus() && !t.domObserver.currentSelection.eq(t.domSelectionRange()) && ou(t);
  }, 20));
};
Wi.blur = (t, e) => {
  let n = e;
  t.focused && (t.domObserver.stop(), t.dom.classList.remove("ProseMirror-focused"), t.domObserver.start(), n.relatedTarget && t.dom.contains(n.relatedTarget) && t.domObserver.currentSelection.clear(), t.focused = !1);
};
Wi.beforeinput = (t, e) => {
  if (Vi && es && e.inputType == "deleteContentBackward") {
    t.domObserver.flushSoon();
    let { domChangeCount: r } = t.input;
    setTimeout(() => {
      if (t.input.domChangeCount != r || (t.dom.blur(), t.focus(), t.someProp("handleKeyDown", (s) => s(t, ef(8, "Backspace")))))
        return;
      let { $cursor: i } = t.state.selection;
      i && i.pos > 0 && t.dispatch(t.state.tr.delete(i.pos - 1, i.pos).scrollIntoView());
    }, 50);
  }
};
for (let t in Ki)
  Wi[t] = Ki[t];
function c0(t, e) {
  if (t == e)
    return !0;
  for (let n in t)
    if (t[n] !== e[n])
      return !1;
  for (let n in e)
    if (!(n in t))
      return !1;
  return !0;
}
class nS {
  constructor(e, n) {
    this.toDOM = e, this.spec = n || df, this.side = this.spec.side || 0;
  }
  map(e, n, r, i) {
    let { pos: s, deleted: l } = e.mapResult(n.from + i, this.side < 0 ? -1 : 1);
    return l ? null : new ho(s - r, s - r, this);
  }
  valid() {
    return !0;
  }
  eq(e) {
    return this == e || e instanceof nS && (this.spec.key && this.spec.key == e.spec.key || this.toDOM == e.toDOM && c0(this.spec, e.spec));
  }
  destroy(e) {
    this.spec.destroy && this.spec.destroy(e);
  }
}
class Sc {
  constructor(e, n) {
    this.attrs = e, this.spec = n || df;
  }
  map(e, n, r, i) {
    let s = e.map(n.from + i, this.spec.inclusiveStart ? -1 : 1) - r, l = e.map(n.to + i, this.spec.inclusiveEnd ? 1 : -1) - r;
    return s >= l ? null : new ho(s, l, this);
  }
  valid(e, n) {
    return n.from < n.to;
  }
  eq(e) {
    return this == e || e instanceof Sc && c0(this.attrs, e.attrs) && c0(this.spec, e.spec);
  }
  static is(e) {
    return e.type instanceof Sc;
  }
  destroy() {
  }
}
class rS {
  constructor(e, n) {
    this.attrs = e, this.spec = n || df;
  }
  map(e, n, r, i) {
    let s = e.mapResult(n.from + i, 1);
    if (s.deleted)
      return null;
    let l = e.mapResult(n.to + i, -1);
    return l.deleted || l.pos <= s.pos ? null : new ho(s.pos - r, l.pos - r, this);
  }
  valid(e, n) {
    let { index: r, offset: i } = e.content.findIndex(n.from), s;
    return i == n.from && !(s = e.child(r)).isText && i + s.nodeSize == n.to;
  }
  eq(e) {
    return this == e || e instanceof rS && c0(this.attrs, e.attrs) && c0(this.spec, e.spec);
  }
  destroy() {
  }
}
class ho {
  /**
  @internal
  */
  constructor(e, n, r) {
    this.from = e, this.to = n, this.type = r;
  }
  /**
  @internal
  */
  copy(e, n) {
    return new ho(e, n, this.type);
  }
  /**
  @internal
  */
  eq(e, n = 0) {
    return this.type.eq(e.type) && this.from + n == e.from && this.to + n == e.to;
  }
  /**
  @internal
  */
  map(e, n, r) {
    return this.type.map(e, this, n, r);
  }
  /**
  Creates a widget decoration, which is a DOM node that's shown in
  the document at the given position. It is recommended that you
  delay rendering the widget by passing a function that will be
  called when the widget is actually drawn in a view, but you can
  also directly pass a DOM node. `getPos` can be used to find the
  widget's current document position.
  */
  static widget(e, n, r) {
    return new ho(e, e, new nS(n, r));
  }
  /**
  Creates an inline decoration, which adds the given attributes to
  each inline node between `from` and `to`.
  */
  static inline(e, n, r, i) {
    return new ho(e, n, new Sc(r, i));
  }
  /**
  Creates a node decoration. `from` and `to` should point precisely
  before and after a node in the document. That node, and only that
  node, will receive the given attributes.
  */
  static node(e, n, r, i) {
    return new ho(e, n, new rS(r, i));
  }
  /**
  The spec provided when creating this decoration. Can be useful
  if you've stored extra information in that object.
  */
  get spec() {
    return this.type.spec;
  }
  /**
  @internal
  */
  get inline() {
    return this.type instanceof Sc;
  }
}
const Xd = [], df = {};
class sr {
  /**
  @internal
  */
  constructor(e, n) {
    this.local = e.length ? e : Xd, this.children = n.length ? n : Xd;
  }
  /**
  Create a set of decorations, using the structure of the given
  document.
  */
  static create(e, n) {
    return n.length ? cy(n, e, 0, df) : Oi;
  }
  /**
  Find all decorations in this set which touch the given range
  (including decorations that start or end directly at the
  boundaries) and match the given predicate on their spec. When
  `start` and `end` are omitted, all decorations in the set are
  considered. When `predicate` isn't given, all decorations are
  assumed to match.
  */
  find(e, n, r) {
    let i = [];
    return this.findInner(e ?? 0, n ?? 1e9, i, 0, r), i;
  }
  findInner(e, n, r, i, s) {
    for (let l = 0; l < this.local.length; l++) {
      let c = this.local[l];
      c.from <= n && c.to >= e && (!s || s(c.spec)) && r.push(c.copy(c.from + i, c.to + i));
    }
    for (let l = 0; l < this.children.length; l += 3)
      if (this.children[l] < n && this.children[l + 1] > e) {
        let c = this.children[l] + 1;
        this.children[l + 2].findInner(e - c, n - c, r, i + c, s);
      }
  }
  /**
  Map the set of decorations in response to a change in the
  document.
  */
  map(e, n, r) {
    return this == Oi || e.maps.length == 0 ? this : this.mapInner(e, n, 0, 0, r || df);
  }
  /**
  @internal
  */
  mapInner(e, n, r, i, s) {
    let l;
    for (let c = 0; c < this.local.length; c++) {
      let h = this.local[c].map(e, r, i);
      h && h.type.valid(n, h) ? (l || (l = [])).push(h) : s.onRemove && s.onRemove(this.local[c].spec);
    }
    return this.children.length ? PB(this.children, l || [], e, n, r, i, s) : l ? new sr(l.sort(hf), Xd) : Oi;
  }
  /**
  Add the given array of decorations to the ones in the set,
  producing a new set. Needs access to the current document to
  create the appropriate tree structure.
  */
  add(e, n) {
    return n.length ? this == Oi ? sr.create(e, n) : this.addInner(e, n, 0) : this;
  }
  addInner(e, n, r) {
    let i, s = 0;
    e.forEach((c, h) => {
      let g = h + r, v;
      if (v = Z7(n, c, g)) {
        for (i || (i = this.children.slice()); s < i.length && i[s] < h; )
          s += 3;
        i[s] == h ? i[s + 2] = i[s + 2].addInner(c, v, g + 1) : i.splice(s, 0, h, h + c.nodeSize, cy(v, c, g + 1, df)), s += 3;
      }
    });
    let l = J7(s ? eN(n) : n, -r);
    for (let c = 0; c < l.length; c++)
      l[c].type.valid(e, l[c]) || l.splice(c--, 1);
    return new sr(l.length ? this.local.concat(l).sort(hf) : this.local, i || this.children);
  }
  /**
  Create a new set that contains the decorations in this set, minus
  the ones in the given array.
  */
  remove(e) {
    return e.length == 0 || this == Oi ? this : this.removeInner(e, 0);
  }
  removeInner(e, n) {
    let r = this.children, i = this.local;
    for (let s = 0; s < r.length; s += 3) {
      let l, c = r[s] + n, h = r[s + 1] + n;
      for (let v = 0, C; v < e.length; v++)
        (C = e[v]) && C.from > c && C.to < h && (e[v] = null, (l || (l = [])).push(C));
      if (!l)
        continue;
      r == this.children && (r = this.children.slice());
      let g = r[s + 2].removeInner(l, c + 1);
      g != Oi ? r[s + 2] = g : (r.splice(s, 3), s -= 3);
    }
    if (i.length) {
      for (let s = 0, l; s < e.length; s++)
        if (l = e[s])
          for (let c = 0; c < i.length; c++)
            i[c].eq(l, n) && (i == this.local && (i = this.local.slice()), i.splice(c--, 1));
    }
    return r == this.children && i == this.local ? this : i.length || r.length ? new sr(i, r) : Oi;
  }
  /**
  @internal
  */
  forChild(e, n) {
    if (this == Oi)
      return this;
    if (n.isLeaf)
      return sr.empty;
    let r, i;
    for (let c = 0; c < this.children.length; c += 3)
      if (this.children[c] >= e) {
        this.children[c] == e && (r = this.children[c + 2]);
        break;
      }
    let s = e + 1, l = s + n.content.size;
    for (let c = 0; c < this.local.length; c++) {
      let h = this.local[c];
      if (h.from < l && h.to > s && h.type instanceof Sc) {
        let g = Math.max(s, h.from) - s, v = Math.min(l, h.to) - s;
        g < v && (i || (i = [])).push(h.copy(g, v));
      }
    }
    if (i) {
      let c = new sr(i.sort(hf), Xd);
      return r ? new mc([c, r]) : c;
    }
    return r || Oi;
  }
  /**
  @internal
  */
  eq(e) {
    if (this == e)
      return !0;
    if (!(e instanceof sr) || this.local.length != e.local.length || this.children.length != e.children.length)
      return !1;
    for (let n = 0; n < this.local.length; n++)
      if (!this.local[n].eq(e.local[n]))
        return !1;
    for (let n = 0; n < this.children.length; n += 3)
      if (this.children[n] != e.children[n] || this.children[n + 1] != e.children[n + 1] || !this.children[n + 2].eq(e.children[n + 2]))
        return !1;
    return !0;
  }
  /**
  @internal
  */
  locals(e) {
    return iS(this.localsInner(e));
  }
  /**
  @internal
  */
  localsInner(e) {
    if (this == Oi)
      return Xd;
    if (e.inlineContent || !this.local.some(Sc.is))
      return this.local;
    let n = [];
    for (let r = 0; r < this.local.length; r++)
      this.local[r].type instanceof Sc || n.push(this.local[r]);
    return n;
  }
}
sr.empty = new sr([], []);
sr.removeOverlap = iS;
const Oi = sr.empty;
class mc {
  constructor(e) {
    this.members = e;
  }
  map(e, n) {
    const r = this.members.map((i) => i.map(e, n, df));
    return mc.from(r);
  }
  forChild(e, n) {
    if (n.isLeaf)
      return sr.empty;
    let r = [];
    for (let i = 0; i < this.members.length; i++) {
      let s = this.members[i].forChild(e, n);
      s != Oi && (s instanceof mc ? r = r.concat(s.members) : r.push(s));
    }
    return mc.from(r);
  }
  eq(e) {
    if (!(e instanceof mc) || e.members.length != this.members.length)
      return !1;
    for (let n = 0; n < this.members.length; n++)
      if (!this.members[n].eq(e.members[n]))
        return !1;
    return !0;
  }
  locals(e) {
    let n, r = !0;
    for (let i = 0; i < this.members.length; i++) {
      let s = this.members[i].localsInner(e);
      if (s.length)
        if (!n)
          n = s;
        else {
          r && (n = n.slice(), r = !1);
          for (let l = 0; l < s.length; l++)
            n.push(s[l]);
        }
    }
    return n ? iS(r ? n : n.sort(hf)) : Xd;
  }
  // Create a group for the given array of decoration sets, or return
  // a single set when possible.
  static from(e) {
    switch (e.length) {
      case 0:
        return Oi;
      case 1:
        return e[0];
      default:
        return new mc(e.every((n) => n instanceof sr) ? e : e.reduce((n, r) => n.concat(r instanceof sr ? r : r.members), []));
    }
  }
}
function PB(t, e, n, r, i, s, l) {
  let c = t.slice();
  for (let g = 0, v = s; g < n.maps.length; g++) {
    let C = 0;
    n.maps[g].forEach((S, b, N, O) => {
      let L = O - N - (b - S);
      for (let P = 0; P < c.length; P += 3) {
        let Y = c[P + 1];
        if (Y < 0 || S > Y + v - C)
          continue;
        let j = c[P] + v - C;
        b >= j ? c[P + 1] = S <= j ? -2 : -1 : N >= i && L && (c[P] += L, c[P + 1] += L);
      }
      C += L;
    }), v = n.maps[g].map(v, -1);
  }
  let h = !1;
  for (let g = 0; g < c.length; g += 3)
    if (c[g + 1] < 0) {
      if (c[g + 1] == -2) {
        h = !0, c[g + 1] = -1;
        continue;
      }
      let v = n.map(t[g] + s), C = v - i;
      if (C < 0 || C >= r.content.size) {
        h = !0;
        continue;
      }
      let S = n.map(t[g + 1] + s, -1), b = S - i, { index: N, offset: O } = r.content.findIndex(C), L = r.maybeChild(N);
      if (L && O == C && O + L.nodeSize == b) {
        let P = c[g + 2].mapInner(n, L, v + 1, t[g] + s + 1, l);
        P != Oi ? (c[g] = C, c[g + 1] = b, c[g + 2] = P) : (c[g + 1] = -2, h = !0);
      } else
        h = !0;
    }
  if (h) {
    let g = FB(c, t, e, n, i, s, l), v = cy(g, r, 0, l);
    e = v.local;
    for (let C = 0; C < c.length; C += 3)
      c[C + 1] < 0 && (c.splice(C, 3), C -= 3);
    for (let C = 0, S = 0; C < v.children.length; C += 3) {
      let b = v.children[C];
      for (; S < c.length && c[S] < b; )
        S += 3;
      c.splice(S, 0, v.children[C], v.children[C + 1], v.children[C + 2]);
    }
  }
  return new sr(e.sort(hf), c);
}
function J7(t, e) {
  if (!e || !t.length)
    return t;
  let n = [];
  for (let r = 0; r < t.length; r++) {
    let i = t[r];
    n.push(new ho(i.from + e, i.to + e, i.type));
  }
  return n;
}
function FB(t, e, n, r, i, s, l) {
  function c(h, g) {
    for (let v = 0; v < h.local.length; v++) {
      let C = h.local[v].map(r, i, g);
      C ? n.push(C) : l.onRemove && l.onRemove(h.local[v].spec);
    }
    for (let v = 0; v < h.children.length; v += 3)
      c(h.children[v + 2], h.children[v] + g + 1);
  }
  for (let h = 0; h < t.length; h += 3)
    t[h + 1] == -1 && c(t[h + 2], e[h] + s + 1);
  return n;
}
function Z7(t, e, n) {
  if (e.isLeaf)
    return null;
  let r = n + e.nodeSize, i = null;
  for (let s = 0, l; s < t.length; s++)
    (l = t[s]) && l.from > n && l.to < r && ((i || (i = [])).push(l), t[s] = null);
  return i;
}
function eN(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    t[n] != null && e.push(t[n]);
  return e;
}
function cy(t, e, n, r) {
  let i = [], s = !1;
  e.forEach((c, h) => {
    let g = Z7(t, c, h + n);
    if (g) {
      s = !0;
      let v = cy(g, c, n + h + 1, r);
      v != Oi && i.push(h, h + c.nodeSize, v);
    }
  });
  let l = J7(s ? eN(t) : t, -n).sort(hf);
  for (let c = 0; c < l.length; c++)
    l[c].type.valid(e, l[c]) || (r.onRemove && r.onRemove(l[c].spec), l.splice(c--, 1));
  return l.length || i.length ? new sr(l, i) : Oi;
}
function hf(t, e) {
  return t.from - e.from || t.to - e.to;
}
function iS(t) {
  let e = t;
  for (let n = 0; n < e.length - 1; n++) {
    let r = e[n];
    if (r.from != r.to)
      for (let i = n + 1; i < e.length; i++) {
        let s = e[i];
        if (s.from == r.from) {
          s.to != r.to && (e == t && (e = t.slice()), e[i] = s.copy(s.from, r.to), Sx(e, i + 1, s.copy(r.to, s.to)));
          continue;
        } else {
          s.from < r.to && (e == t && (e = t.slice()), e[n] = r.copy(r.from, s.from), Sx(e, i, r.copy(s.from, r.to)));
          break;
        }
      }
  }
  return e;
}
function Sx(t, e, n) {
  for (; e < t.length && hf(n, t[e]) > 0; )
    e++;
  t.splice(e, 0, n);
}
function KT(t) {
  let e = [];
  return t.someProp("decorations", (n) => {
    let r = n(t.state);
    r && r != Oi && e.push(r);
  }), t.cursorWrapper && e.push(sr.create(t.state.doc, [t.cursorWrapper.deco])), mc.from(e);
}
const BB = {
  childList: !0,
  characterData: !0,
  characterDataOldValue: !0,
  attributes: !0,
  attributeOldValue: !0,
  subtree: !0
}, UB = po && Cc <= 11;
class HB {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  set(e) {
    this.anchorNode = e.anchorNode, this.anchorOffset = e.anchorOffset, this.focusNode = e.focusNode, this.focusOffset = e.focusOffset;
  }
  clear() {
    this.anchorNode = this.focusNode = null;
  }
  eq(e) {
    return e.anchorNode == this.anchorNode && e.anchorOffset == this.anchorOffset && e.focusNode == this.focusNode && e.focusOffset == this.focusOffset;
  }
}
class zB {
  constructor(e, n) {
    this.view = e, this.handleDOMChange = n, this.queue = [], this.flushingSoon = -1, this.observer = null, this.currentSelection = new HB(), this.onCharData = null, this.suppressingSelectionUpdates = !1, this.observer = window.MutationObserver && new window.MutationObserver((r) => {
      for (let i = 0; i < r.length; i++)
        this.queue.push(r[i]);
      po && Cc <= 11 && r.some((i) => i.type == "childList" && i.removedNodes.length || i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), UB && (this.onCharData = (r) => {
      this.queue.push({ target: r.target, type: "characterData", oldValue: r.prevValue }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  flushSoon() {
    this.flushingSoon < 0 && (this.flushingSoon = window.setTimeout(() => {
      this.flushingSoon = -1, this.flush();
    }, 20));
  }
  forceFlush() {
    this.flushingSoon > -1 && (window.clearTimeout(this.flushingSoon), this.flushingSoon = -1, this.flush());
  }
  start() {
    this.observer && (this.observer.takeRecords(), this.observer.observe(this.view.dom, BB)), this.onCharData && this.view.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.connectSelection();
  }
  stop() {
    if (this.observer) {
      let e = this.observer.takeRecords();
      if (e.length) {
        for (let n = 0; n < e.length; n++)
          this.queue.push(e[n]);
        window.setTimeout(() => this.flush(), 20);
      }
      this.observer.disconnect();
    }
    this.onCharData && this.view.dom.removeEventListener("DOMCharacterDataModified", this.onCharData), this.disconnectSelection();
  }
  connectSelection() {
    this.view.dom.ownerDocument.addEventListener("selectionchange", this.onSelectionChange);
  }
  disconnectSelection() {
    this.view.dom.ownerDocument.removeEventListener("selectionchange", this.onSelectionChange);
  }
  suppressSelectionUpdates() {
    this.suppressingSelectionUpdates = !0, setTimeout(() => this.suppressingSelectionUpdates = !1, 50);
  }
  onSelectionChange() {
    if (mx(this.view)) {
      if (this.suppressingSelectionUpdates)
        return ou(this.view);
      if (po && Cc <= 11 && !this.view.state.selection.empty) {
        let e = this.view.domSelectionRange();
        if (e.focusNode && gf(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset))
          return this.flushSoon();
      }
      this.flush();
    }
  }
  setCurSelection() {
    this.currentSelection.set(this.view.domSelectionRange());
  }
  ignoreSelectionChange(e) {
    if (!e.focusNode)
      return !0;
    let n = /* @__PURE__ */ new Set(), r;
    for (let s = e.focusNode; s; s = l0(s))
      n.add(s);
    for (let s = e.anchorNode; s; s = l0(s))
      if (n.has(s)) {
        r = s;
        break;
      }
    let i = r && this.view.docView.nearestDesc(r);
    if (i && i.ignoreMutation({
      type: "selection",
      target: r.nodeType == 3 ? r.parentNode : r
    }))
      return this.setCurSelection(), !0;
  }
  flush() {
    let { view: e } = this;
    if (!e.docView || this.flushingSoon > -1)
      return;
    let n = this.observer ? this.observer.takeRecords() : [];
    this.queue.length && (n = this.queue.concat(n), this.queue.length = 0);
    let r = e.domSelectionRange(), i = !this.suppressingSelectionUpdates && !this.currentSelection.eq(r) && mx(e) && !this.ignoreSelectionChange(r), s = -1, l = -1, c = !1, h = [];
    if (e.editable)
      for (let v = 0; v < n.length; v++) {
        let C = this.registerMutation(n[v], h);
        C && (s = s < 0 ? C.from : Math.min(C.from, s), l = l < 0 ? C.to : Math.max(C.to, l), C.typeOver && (c = !0));
      }
    if (as && h.length > 1) {
      let v = h.filter((C) => C.nodeName == "BR");
      if (v.length == 2) {
        let C = v[0], S = v[1];
        C.parentNode && C.parentNode.parentNode == S.parentNode ? S.remove() : C.remove();
      }
    }
    let g = null;
    s < 0 && i && e.input.lastFocus > Date.now() - 200 && Math.max(e.input.lastTouch, e.input.lastClick.time) < Date.now() - 300 && Gy(r) && (g = XC(e)) && g.eq($t.near(e.state.doc.resolve(0), 1)) ? (e.input.lastFocus = 0, ou(e), this.currentSelection.set(r), e.scrollToSelection()) : (s > -1 || i) && (s > -1 && (e.docView.markDirty(s, l), qB(e)), this.handleDOMChange(s, l, c, h), e.docView && e.docView.dirty ? e.updateState(e.state) : this.currentSelection.eq(r) || ou(e), this.currentSelection.set(r));
  }
  registerMutation(e, n) {
    if (n.indexOf(e.target) > -1)
      return null;
    let r = this.view.docView.nearestDesc(e.target);
    if (e.type == "attributes" && (r == this.view.docView || e.attributeName == "contenteditable" || // Firefox sometimes fires spurious events for null/empty styles
    e.attributeName == "style" && !e.oldValue && !e.target.getAttribute("style")) || !r || r.ignoreMutation(e))
      return null;
    if (e.type == "childList") {
      for (let v = 0; v < e.addedNodes.length; v++)
        n.push(e.addedNodes[v]);
      if (r.contentDOM && r.contentDOM != r.dom && !r.contentDOM.contains(e.target))
        return { from: r.posBefore, to: r.posAfter };
      let i = e.previousSibling, s = e.nextSibling;
      if (po && Cc <= 11 && e.addedNodes.length)
        for (let v = 0; v < e.addedNodes.length; v++) {
          let { previousSibling: C, nextSibling: S } = e.addedNodes[v];
          (!C || Array.prototype.indexOf.call(e.addedNodes, C) < 0) && (i = C), (!S || Array.prototype.indexOf.call(e.addedNodes, S) < 0) && (s = S);
        }
      let l = i && i.parentNode == e.target ? Fo(i) + 1 : 0, c = r.localPosFromDOM(e.target, l, -1), h = s && s.parentNode == e.target ? Fo(s) : e.target.childNodes.length, g = r.localPosFromDOM(e.target, h, 1);
      return { from: c, to: g };
    } else
      return e.type == "attributes" ? { from: r.posAtStart - r.border, to: r.posAtEnd + r.border } : {
        from: r.posAtStart,
        to: r.posAtEnd,
        // An event was generated for a text change that didn't change
        // any text. Mark the dom change to fall back to assuming the
        // selection was typed over with an identical value if it can't
        // find another change.
        typeOver: e.target.nodeValue == e.oldValue
      };
  }
}
let bx = /* @__PURE__ */ new WeakMap(), Ax = !1;
function qB(t) {
  if (!bx.has(t) && (bx.set(t, null), ["normal", "nowrap", "pre-line"].indexOf(getComputedStyle(t.dom).whiteSpace) !== -1)) {
    if (t.requiresGeckoHackNode = as, Ax)
      return;
    console.warn("ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package."), Ax = !0;
  }
}
function jB(t) {
  let e;
  function n(h) {
    h.preventDefault(), h.stopImmediatePropagation(), e = h.getTargetRanges()[0];
  }
  t.dom.addEventListener("beforeinput", n, !0), document.execCommand("indent"), t.dom.removeEventListener("beforeinput", n, !0);
  let r = e.startContainer, i = e.startOffset, s = e.endContainer, l = e.endOffset, c = t.domAtPos(t.state.selection.anchor);
  return gf(c.node, c.offset, s, l) && ([r, i, s, l] = [s, l, r, i]), { anchorNode: r, anchorOffset: i, focusNode: s, focusOffset: l };
}
function VB(t, e, n) {
  let { node: r, fromOffset: i, toOffset: s, from: l, to: c } = t.docView.parseRange(e, n), h = t.domSelectionRange(), g, v = h.anchorNode;
  if (v && t.dom.contains(v.nodeType == 1 ? v : v.parentNode) && (g = [{ node: v, offset: h.anchorOffset }], Gy(h) || g.push({ node: h.focusNode, offset: h.focusOffset })), Vi && t.input.lastKeyCode === 8)
    for (let L = s; L > i; L--) {
      let P = r.childNodes[L - 1], Y = P.pmViewDesc;
      if (P.nodeName == "BR" && !Y) {
        s = L;
        break;
      }
      if (!Y || Y.size)
        break;
    }
  let C = t.state.doc, S = t.someProp("domParser") || mf.fromSchema(t.state.schema), b = C.resolve(l), N = null, O = S.parse(r, {
    topNode: b.parent,
    topMatch: b.parent.contentMatchAt(b.index()),
    topOpen: !0,
    from: i,
    to: s,
    preserveWhitespace: b.parent.type.whitespace == "pre" ? "full" : !0,
    findPositions: g,
    ruleFromNode: $B,
    context: b
  });
  if (g && g[0].pos != null) {
    let L = g[0].pos, P = g[1] && g[1].pos;
    P == null && (P = L), N = { anchor: L + l, head: P + l };
  }
  return { doc: O, sel: N, from: l, to: c };
}
function $B(t) {
  let e = t.pmViewDesc;
  if (e)
    return e.parseRule();
  if (t.nodeName == "BR" && t.parentNode) {
    if (Gi && /^(ul|ol)$/i.test(t.parentNode.nodeName)) {
      let n = document.createElement("div");
      return n.appendChild(document.createElement("li")), { skip: n };
    } else if (t.parentNode.lastChild == t || Gi && /^(tr|table)$/i.test(t.parentNode.nodeName))
      return { ignore: !0 };
  } else if (t.nodeName == "IMG" && t.getAttribute("mark-placeholder"))
    return { ignore: !0 };
  return null;
}
const GB = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;
function WB(t, e, n, r, i) {
  if (e < 0) {
    let Z = t.input.lastSelectionTime > Date.now() - 50 ? t.input.lastSelectionOrigin : null, me = XC(t, Z);
    if (me && !t.state.selection.eq(me)) {
      if (Vi && es && t.input.lastKeyCode === 13 && Date.now() - 100 < t.input.lastKeyCodeTime && t.someProp("handleKeyDown", (fe) => fe(t, ef(13, "Enter"))))
        return;
      let Ie = t.state.tr.setSelection(me);
      Z == "pointer" ? Ie.setMeta("pointer", !0) : Z == "key" && Ie.scrollIntoView(), t.dispatch(Ie);
    }
    return;
  }
  let s = t.state.doc.resolve(e), l = s.sharedDepth(n);
  e = s.before(l + 1), n = t.state.doc.resolve(n).after(l + 1);
  let c = t.state.selection, h = VB(t, e, n), g = t.state.doc, v = g.slice(h.from, h.to), C, S;
  t.input.lastKeyCode === 8 && Date.now() - 100 < t.input.lastKeyCodeTime ? (C = t.state.selection.to, S = "end") : (C = t.state.selection.from, S = "start"), t.input.lastKeyCode = null;
  let b = QB(v.content, h.doc.content, h.from, C, S);
  if ((Eh && t.input.lastIOSEnter > Date.now() - 225 || es) && i.some((Z) => Z.nodeType == 1 && !GB.test(Z.nodeName)) && (!b || b.endA >= b.endB) && t.someProp("handleKeyDown", (Z) => Z(t, ef(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (!b)
    if (r && c instanceof Kt && !c.empty && c.$head.sameParent(c.$anchor) && !t.composing && !(h.sel && h.sel.anchor != h.sel.head))
      b = { start: c.from, endA: c.to, endB: c.to };
    else {
      if (h.sel) {
        let Z = xx(t, t.state.doc, h.sel);
        Z && !Z.eq(t.state.selection) && t.dispatch(t.state.tr.setSelection(Z));
      }
      return;
    }
  if (Vi && t.cursorWrapper && h.sel && h.sel.anchor == t.cursorWrapper.deco.from && h.sel.head == h.sel.anchor) {
    let Z = b.endB - b.start;
    h.sel = { anchor: h.sel.anchor + Z, head: h.sel.anchor + Z };
  }
  t.input.domChangeCount++, t.state.selection.from < t.state.selection.to && b.start == b.endB && t.state.selection instanceof Kt && (b.start > t.state.selection.from && b.start <= t.state.selection.from + 2 && t.state.selection.from >= h.from ? b.start = t.state.selection.from : b.endA < t.state.selection.to && b.endA >= t.state.selection.to - 2 && t.state.selection.to <= h.to && (b.endB += t.state.selection.to - b.endA, b.endA = t.state.selection.to)), po && Cc <= 11 && b.endB == b.start + 1 && b.endA == b.start && b.start > h.from && h.doc.textBetween(b.start - h.from - 1, b.start - h.from + 1) == "  " && (b.start--, b.endA--, b.endB--);
  let N = h.doc.resolveNoCache(b.start - h.from), O = h.doc.resolveNoCache(b.endB - h.from), L = g.resolve(b.start), P = N.sameParent(O) && N.parent.inlineContent && L.end() >= b.endA, Y;
  if ((Eh && t.input.lastIOSEnter > Date.now() - 225 && (!P || i.some((Z) => Z.nodeName == "DIV" || Z.nodeName == "P")) || !P && N.pos < h.doc.content.size && (Y = $t.findFrom(h.doc.resolve(N.pos + 1), 1, !0)) && Y.head == O.pos) && t.someProp("handleKeyDown", (Z) => Z(t, ef(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (t.state.selection.anchor > b.start && YB(g, b.start, b.endA, N, O) && t.someProp("handleKeyDown", (Z) => Z(t, ef(8, "Backspace")))) {
    es && Vi && t.domObserver.suppressSelectionUpdates();
    return;
  }
  Vi && es && b.endB == b.start && (t.input.lastAndroidDelete = Date.now()), es && !P && N.start() != O.start() && O.parentOffset == 0 && N.depth == O.depth && h.sel && h.sel.anchor == h.sel.head && h.sel.head == b.endA && (b.endB -= 2, O = h.doc.resolveNoCache(b.endB - h.from), setTimeout(() => {
    t.someProp("handleKeyDown", function(Z) {
      return Z(t, ef(13, "Enter"));
    });
  }, 20));
  let j = b.start, oe = b.endA, ee, z, H;
  if (P) {
    if (N.pos == O.pos)
      po && Cc <= 11 && N.parentOffset == 0 && (t.domObserver.suppressSelectionUpdates(), setTimeout(() => ou(t), 20)), ee = t.state.tr.delete(j, oe), z = g.resolve(b.start).marksAcross(g.resolve(b.endA));
    else if (
      // Adding or removing a mark
      b.endA == b.endB && (H = KB(N.parent.content.cut(N.parentOffset, O.parentOffset), L.parent.content.cut(L.parentOffset, b.endA - L.start())))
    )
      ee = t.state.tr, H.type == "add" ? ee.addMark(j, oe, H.mark) : ee.removeMark(j, oe, H.mark);
    else if (N.parent.child(N.index()).isText && N.index() == O.index() - (O.textOffset ? 0 : 1)) {
      let Z = N.parent.textBetween(N.parentOffset, O.parentOffset);
      if (t.someProp("handleTextInput", (me) => me(t, j, oe, Z)))
        return;
      ee = t.state.tr.insertText(Z, j, oe);
    }
  }
  if (ee || (ee = t.state.tr.replace(j, oe, h.doc.slice(b.start - h.from, b.endB - h.from))), h.sel) {
    let Z = xx(t, ee.doc, h.sel);
    Z && !(Vi && es && t.composing && Z.empty && (b.start != b.endB || t.input.lastAndroidDelete < Date.now() - 100) && (Z.head == j || Z.head == ee.mapping.map(oe) - 1) || po && Z.empty && Z.head == j) && ee.setSelection(Z);
  }
  z && ee.ensureMarks(z), t.dispatch(ee.scrollIntoView());
}
function xx(t, e, n) {
  return Math.max(n.anchor, n.head) > e.content.size ? null : JC(t, e.resolve(n.anchor), e.resolve(n.head));
}
function KB(t, e) {
  let n = t.firstChild.marks, r = e.firstChild.marks, i = n, s = r, l, c, h;
  for (let v = 0; v < r.length; v++)
    i = r[v].removeFromSet(i);
  for (let v = 0; v < n.length; v++)
    s = n[v].removeFromSet(s);
  if (i.length == 1 && s.length == 0)
    c = i[0], l = "add", h = (v) => v.mark(c.addToSet(v.marks));
  else if (i.length == 0 && s.length == 1)
    c = s[0], l = "remove", h = (v) => v.mark(c.removeFromSet(v.marks));
  else
    return null;
  let g = [];
  for (let v = 0; v < e.childCount; v++)
    g.push(h(e.child(v)));
  if (Oe.from(g).eq(t))
    return { mark: c, type: l };
}
function YB(t, e, n, r, i) {
  if (!r.parent.isTextblock || // The content must have shrunk
  n - e <= i.pos - r.pos || // newEnd must point directly at or after the end of the block that newStart points into
  YT(r, !0, !1) < i.pos)
    return !1;
  let s = t.resolve(e);
  if (s.parentOffset < s.parent.content.size || !s.parent.isTextblock)
    return !1;
  let l = t.resolve(YT(s, !0, !0));
  return !l.parent.isTextblock || l.pos > n || YT(l, !0, !1) < n ? !1 : r.parent.content.cut(r.parentOffset).eq(l.parent.content);
}
function YT(t, e, n) {
  let r = t.depth, i = e ? t.end() : t.pos;
  for (; r > 0 && (e || t.indexAfter(r) == t.node(r).childCount); )
    r--, i++, e = !1;
  if (n) {
    let s = t.node(r).maybeChild(t.indexAfter(r));
    for (; s && !s.isLeaf; )
      s = s.firstChild, i++;
  }
  return i;
}
function QB(t, e, n, r, i) {
  let s = t.findDiffStart(e, n);
  if (s == null)
    return null;
  let { a: l, b: c } = t.findDiffEnd(e, n + t.size, n + e.size);
  if (i == "end") {
    let h = Math.max(0, s - Math.min(l, c));
    r -= l + h - s;
  }
  if (l < s && t.size < e.size) {
    let h = r <= s && r >= l ? s - r : 0;
    s -= h, c = s + (c - l), l = s;
  } else if (c < s) {
    let h = r <= s && r >= c ? s - r : 0;
    s -= h, l = s + (l - c), c = s;
  }
  return { start: s, endA: l, endB: c };
}
class XB {
  /**
  Create a view. `place` may be a DOM node that the editor should
  be appended to, a function that will place it into the document,
  or an object whose `mount` property holds the node to use as the
  document container. If it is `null`, the editor will not be
  added to the document.
  */
  constructor(e, n) {
    this._root = null, this.focused = !1, this.trackWrites = null, this.mounted = !1, this.markCursor = null, this.cursorWrapper = null, this.lastSelectedViewDesc = void 0, this.input = new yB(), this.prevDirectPlugins = [], this.pluginViews = [], this.requiresGeckoHackNode = !1, this.dragging = null, this._props = n, this.state = n.state, this.directPlugins = n.plugins || [], this.directPlugins.forEach(Ox), this.dispatch = this.dispatch.bind(this), this.dom = e && e.mount || document.createElement("div"), e && (e.appendChild ? e.appendChild(this.dom) : typeof e == "function" ? e(this.dom) : e.mount && (this.mounted = !0)), this.editable = Nx(this), kx(this), this.nodeViews = wx(this), this.docView = ux(this.state.doc, _x(this), KT(this), this.dom, this), this.domObserver = new zB(this, (r, i, s, l) => WB(this, r, i, s, l)), this.domObserver.start(), vB(this), this.updatePluginViews();
  }
  /**
  Holds `true` when a
  [composition](https://w3c.github.io/uievents/#events-compositionevents)
  is active.
  */
  get composing() {
    return this.input.composing;
  }
  /**
  The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).
  */
  get props() {
    if (this._props.state != this.state) {
      let e = this._props;
      this._props = {};
      for (let n in e)
        this._props[n] = e[n];
      this._props.state = this.state;
    }
    return this._props;
  }
  /**
  Update the view's props. Will immediately cause an update to
  the DOM.
  */
  update(e) {
    e.handleDOMEvents != this._props.handleDOMEvents && EC(this);
    let n = this._props;
    this._props = e, e.plugins && (e.plugins.forEach(Ox), this.directPlugins = e.plugins), this.updateStateInner(e.state, n);
  }
  /**
  Update the view by updating existing props object with the object
  given as argument. Equivalent to `view.update(Object.assign({},
  view.props, props))`.
  */
  setProps(e) {
    let n = {};
    for (let r in this._props)
      n[r] = this._props[r];
    n.state = this.state;
    for (let r in e)
      n[r] = e[r];
    this.update(n);
  }
  /**
  Update the editor's `state` prop, without touching any of the
  other props.
  */
  updateState(e) {
    this.updateStateInner(e, this._props);
  }
  updateStateInner(e, n) {
    let r = this.state, i = !1, s = !1;
    e.storedMarks && this.composing && (Q7(this), s = !0), this.state = e;
    let l = r.plugins != e.plugins || this._props.plugins != n.plugins;
    if (l || this._props.plugins != n.plugins || this._props.nodeViews != n.nodeViews) {
      let S = wx(this);
      ZB(S, this.nodeViews) && (this.nodeViews = S, i = !0);
    }
    (l || n.handleDOMEvents != this._props.handleDOMEvents) && EC(this), this.editable = Nx(this), kx(this);
    let c = KT(this), h = _x(this), g = r.plugins != e.plugins && !r.doc.eq(e.doc) ? "reset" : e.scrollToSelection > r.scrollToSelection ? "to selection" : "preserve", v = i || !this.docView.matchesNode(e.doc, h, c);
    (v || !e.selection.eq(r.selection)) && (s = !0);
    let C = g == "preserve" && s && this.dom.style.overflowAnchor == null && PF(this);
    if (s) {
      this.domObserver.stop();
      let S = v && (po || Vi) && !this.composing && !r.selection.empty && !e.selection.empty && JB(r.selection, e.selection);
      if (v) {
        let b = Vi ? this.trackWrites = this.domSelectionRange().focusNode : null;
        (i || !this.docView.update(e.doc, h, c, this)) && (this.docView.updateOuterDeco([]), this.docView.destroy(), this.docView = ux(e.doc, h, c, this.dom, this)), b && !this.trackWrites && (S = !0);
      }
      S || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && sB(this)) ? ou(this, S) : (F7(this, e.selection), this.domObserver.setCurSelection()), this.domObserver.start();
    }
    this.updatePluginViews(r), g == "reset" ? this.dom.scrollTop = 0 : g == "to selection" ? this.scrollToSelection() : C && FF(C);
  }
  /**
  @internal
  */
  scrollToSelection() {
    let e = this.domSelectionRange().focusNode;
    if (!this.someProp("handleScrollToSelection", (n) => n(this)))
      if (this.state.selection instanceof _t) {
        let n = this.docView.domAfterPos(this.state.selection.from);
        n.nodeType == 1 && ix(this, n.getBoundingClientRect(), e);
      } else
        ix(this, this.coordsAtPos(this.state.selection.head, 1), e);
  }
  destroyPluginViews() {
    let e;
    for (; e = this.pluginViews.pop(); )
      e.destroy && e.destroy();
  }
  updatePluginViews(e) {
    if (!e || e.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {
      this.prevDirectPlugins = this.directPlugins, this.destroyPluginViews();
      for (let n = 0; n < this.directPlugins.length; n++) {
        let r = this.directPlugins[n];
        r.spec.view && this.pluginViews.push(r.spec.view(this));
      }
      for (let n = 0; n < this.state.plugins.length; n++) {
        let r = this.state.plugins[n];
        r.spec.view && this.pluginViews.push(r.spec.view(this));
      }
    } else
      for (let n = 0; n < this.pluginViews.length; n++) {
        let r = this.pluginViews[n];
        r.update && r.update(this, e);
      }
  }
  someProp(e, n) {
    let r = this._props && this._props[e], i;
    if (r != null && (i = n ? n(r) : r))
      return i;
    for (let l = 0; l < this.directPlugins.length; l++) {
      let c = this.directPlugins[l].props[e];
      if (c != null && (i = n ? n(c) : c))
        return i;
    }
    let s = this.state.plugins;
    if (s)
      for (let l = 0; l < s.length; l++) {
        let c = s[l].props[e];
        if (c != null && (i = n ? n(c) : c))
          return i;
      }
  }
  /**
  Query whether the view has focus.
  */
  hasFocus() {
    if (po) {
      let e = this.root.activeElement;
      if (e == this.dom)
        return !0;
      if (!e || !this.dom.contains(e))
        return !1;
      for (; e && this.dom != e && this.dom.contains(e); ) {
        if (e.contentEditable == "false")
          return !1;
        e = e.parentElement;
      }
      return !0;
    }
    return this.root.activeElement == this.dom;
  }
  /**
  Focus the editor.
  */
  focus() {
    this.domObserver.stop(), this.editable && BF(this.dom), ou(this), this.domObserver.start();
  }
  /**
  Get the document root in which the editor exists. This will
  usually be the top-level `document`, but might be a [shadow
  DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)
  root if the editor is inside one.
  */
  get root() {
    let e = this._root;
    if (e == null) {
      for (let n = this.dom.parentNode; n; n = n.parentNode)
        if (n.nodeType == 9 || n.nodeType == 11 && n.host)
          return n.getSelection || (Object.getPrototypeOf(n).getSelection = () => n.ownerDocument.getSelection()), this._root = n;
    }
    return e || document;
  }
  /**
  Given a pair of viewport coordinates, return the document
  position that corresponds to them. May return null if the given
  coordinates aren't inside of the editor. When an object is
  returned, its `pos` property is the position nearest to the
  coordinates, and its `inside` property holds the position of the
  inner node that the position falls inside of, or -1 if it is at
  the top level, not in any node.
  */
  posAtCoords(e) {
    return jF(this, e);
  }
  /**
  Returns the viewport rectangle at a given document position.
  `left` and `right` will be the same number, as this returns a
  flat cursor-ish rectangle. If the position is between two things
  that aren't directly adjacent, `side` determines which element
  is used. When < 0, the element before the position is used,
  otherwise the element after.
  */
  coordsAtPos(e, n = 1) {
    return w7(this, e, n);
  }
  /**
  Find the DOM position that corresponds to the given document
  position. When `side` is negative, find the position as close as
  possible to the content before the position. When positive,
  prefer positions close to the content after the position. When
  zero, prefer as shallow a position as possible.
  
  Note that you should **not** mutate the editor's internal DOM,
  only inspect it (and even that is usually not necessary).
  */
  domAtPos(e, n = 0) {
    return this.docView.domFromPos(e, n);
  }
  /**
  Find the DOM node that represents the document node after the
  given position. May return `null` when the position doesn't point
  in front of a node or if the node is inside an opaque node view.
  
  This is intended to be able to call things like
  `getBoundingClientRect` on that DOM node. Do **not** mutate the
  editor DOM directly, or add styling this way, since that will be
  immediately overriden by the editor as it redraws the node.
  */
  nodeDOM(e) {
    let n = this.docView.descAt(e);
    return n ? n.nodeDOM : null;
  }
  /**
  Find the document position that corresponds to a given DOM
  position. (Whenever possible, it is preferable to inspect the
  document structure directly, rather than poking around in the
  DOM, but sometimes—for example when interpreting an event
  target—you don't have a choice.)
  
  The `bias` parameter can be used to influence which side of a DOM
  node to use when the position is inside a leaf node.
  */
  posAtDOM(e, n, r = -1) {
    let i = this.docView.posFromDOM(e, n, r);
    if (i == null)
      throw new RangeError("DOM position not inside the editor");
    return i;
  }
  /**
  Find out whether the selection is at the end of a textblock when
  moving in a given direction. When, for example, given `"left"`,
  it will return true if moving left from the current cursor
  position would leave that position's parent textblock. Will apply
  to the view's current state by default, but it is possible to
  pass a different state.
  */
  endOfTextblock(e, n) {
    return KF(this, n || this.state, e);
  }
  /**
  Run the editor's paste logic with the given HTML string. The
  `event`, if given, will be passed to the
  [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.
  */
  pasteHTML(e, n) {
    return u0(this, "", e, !1, n || new ClipboardEvent("paste"));
  }
  /**
  Run the editor's paste logic with the given plain-text input.
  */
  pasteText(e, n) {
    return u0(this, e, null, !0, n || new ClipboardEvent("paste"));
  }
  /**
  Removes the editor from the DOM and destroys all [node
  views](https://prosemirror.net/docs/ref/#view.NodeView).
  */
  destroy() {
    this.docView && (EB(this), this.destroyPluginViews(), this.mounted ? (this.docView.update(this.state.doc, [], KT(this), this), this.dom.textContent = "") : this.dom.parentNode && this.dom.parentNode.removeChild(this.dom), this.docView.destroy(), this.docView = null);
  }
  /**
  This is true when the view has been
  [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be
  used anymore).
  */
  get isDestroyed() {
    return this.docView == null;
  }
  /**
  Used for testing.
  */
  dispatchEvent(e) {
    return CB(this, e);
  }
  /**
  Dispatch a transaction. Will call
  [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)
  when given, and otherwise defaults to applying the transaction to
  the current state and calling
  [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.
  This method is bound to the view instance, so that it can be
  easily passed around.
  */
  dispatch(e) {
    let n = this._props.dispatchTransaction;
    n ? n.call(this, e) : this.updateState(this.state.apply(e));
  }
  /**
  @internal
  */
  domSelectionRange() {
    return Gi && this.root.nodeType === 11 && RF(this.dom.ownerDocument) == this.dom ? jB(this) : this.domSelection();
  }
  /**
  @internal
  */
  domSelection() {
    return this.root.getSelection();
  }
}
function _x(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return e.class = "ProseMirror", e.contenteditable = String(t.editable), e.translate = "no", t.someProp("attributes", (n) => {
    if (typeof n == "function" && (n = n(t.state)), n)
      for (let r in n)
        r == "class" && (e.class += " " + n[r]), r == "style" ? e.style = (e.style ? e.style + ";" : "") + n[r] : !e[r] && r != "contenteditable" && r != "nodeName" && (e[r] = String(n[r]));
  }), [ho.node(0, t.state.doc.content.size, e)];
}
function kx(t) {
  if (t.markCursor) {
    let e = document.createElement("img");
    e.className = "ProseMirror-separator", e.setAttribute("mark-placeholder", "true"), e.setAttribute("alt", ""), t.cursorWrapper = { dom: e, deco: ho.widget(t.state.selection.head, e, { raw: !0, marks: t.markCursor }) };
  } else
    t.cursorWrapper = null;
}
function Nx(t) {
  return !t.someProp("editable", (e) => e(t.state) === !1);
}
function JB(t, e) {
  let n = Math.min(t.$anchor.sharedDepth(t.head), e.$anchor.sharedDepth(e.head));
  return t.$anchor.start(n) != e.$anchor.start(n);
}
function wx(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(r) {
    for (let i in r)
      Object.prototype.hasOwnProperty.call(e, i) || (e[i] = r[i]);
  }
  return t.someProp("nodeViews", n), t.someProp("markViews", n), e;
}
function ZB(t, e) {
  let n = 0, r = 0;
  for (let i in t) {
    if (t[i] != e[i])
      return !0;
    n++;
  }
  for (let i in e)
    r++;
  return n != r;
}
function Ox(t) {
  if (t.spec.state || t.spec.filterTransaction || t.spec.appendTransaction)
    throw new RangeError("Plugins passed directly to the view must not have a state component");
}
var kc = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, fy = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, Rx = typeof navigator < "u" && /Chrome\/(\d+)/.exec(navigator.userAgent), eU = typeof navigator < "u" && /Mac/.test(navigator.platform), tU = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent), nU = eU || Rx && +Rx[1] < 57;
for (var yi = 0; yi < 10; yi++)
  kc[48 + yi] = kc[96 + yi] = String(yi);
for (var yi = 1; yi <= 24; yi++)
  kc[yi + 111] = "F" + yi;
for (var yi = 65; yi <= 90; yi++)
  kc[yi] = String.fromCharCode(yi + 32), fy[yi] = String.fromCharCode(yi);
for (var QT in kc)
  fy.hasOwnProperty(QT) || (fy[QT] = kc[QT]);
function rU(t) {
  var e = nU && (t.ctrlKey || t.altKey || t.metaKey) || tU && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? fy : kc)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
const iU = typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : !1;
function oU(t) {
  let e = t.split(/-(?!$)/), n = e[e.length - 1];
  n == "Space" && (n = " ");
  let r, i, s, l;
  for (let c = 0; c < e.length - 1; c++) {
    let h = e[c];
    if (/^(cmd|meta|m)$/i.test(h))
      l = !0;
    else if (/^a(lt)?$/i.test(h))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(h))
      i = !0;
    else if (/^s(hift)?$/i.test(h))
      s = !0;
    else if (/^mod$/i.test(h))
      iU ? l = !0 : i = !0;
    else
      throw new Error("Unrecognized modifier name: " + h);
  }
  return r && (n = "Alt-" + n), i && (n = "Ctrl-" + n), l && (n = "Meta-" + n), s && (n = "Shift-" + n), n;
}
function aU(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t)
    e[oU(n)] = t[n];
  return e;
}
function XT(t, e, n = !0) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n && e.shiftKey && (t = "Shift-" + t), t;
}
function sU(t) {
  return new Ur({ props: { handleKeyDown: tN(t) } });
}
function tN(t) {
  let e = aU(t);
  return function(n, r) {
    let i = rU(r), s, l = e[XT(i, r)];
    if (l && l(n.state, n.dispatch, n))
      return !0;
    if (i.length == 1 && i != " ") {
      if (r.shiftKey) {
        let c = e[XT(i, r, !1)];
        if (c && c(n.state, n.dispatch, n))
          return !0;
      }
      if ((r.shiftKey || r.altKey || r.metaKey || i.charCodeAt(0) > 127) && (s = kc[r.keyCode]) && s != i) {
        let c = e[XT(s, r)];
        if (c && c(n.state, n.dispatch, n))
          return !0;
      }
    }
    return !1;
  };
}
const lU = (t, e) => t.selection.empty ? !1 : (e && e(t.tr.deleteSelection().scrollIntoView()), !0);
function uU(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("backward", t) : n.parentOffset > 0) ? null : n;
}
const cU = (t, e, n) => {
  let r = uU(t, n);
  if (!r)
    return !1;
  let i = nN(r);
  if (!i) {
    let l = r.blockRange(), c = l && xh(l);
    return c == null ? !1 : (e && e(t.tr.lift(l, c).scrollIntoView()), !0);
  }
  let s = i.nodeBefore;
  if (!s.type.spec.isolating && oN(t, i, e))
    return !0;
  if (r.parent.content.size == 0 && (Ch(s, "end") || _t.isSelectable(s))) {
    let l = KC(t.doc, r.before(), r.after(), Xe.empty);
    if (l && l.slice.size < l.to - l.from) {
      if (e) {
        let c = t.tr.step(l);
        c.setSelection(Ch(s, "end") ? $t.findFrom(c.doc.resolve(c.mapping.map(i.pos, -1)), -1) : _t.create(c.doc, i.pos - s.nodeSize)), e(c.scrollIntoView());
      }
      return !0;
    }
  }
  return s.isAtom && i.depth == r.depth - 1 ? (e && e(t.tr.delete(i.pos - s.nodeSize, i.pos).scrollIntoView()), !0) : !1;
};
function Ch(t, e, n = !1) {
  for (let r = t; r; r = e == "start" ? r.firstChild : r.lastChild) {
    if (r.isTextblock)
      return !0;
    if (n && r.childCount != 1)
      return !1;
  }
  return !1;
}
const fU = (t, e, n) => {
  let { $head: r, empty: i } = t.selection, s = r;
  if (!i)
    return !1;
  if (r.parent.isTextblock) {
    if (n ? !n.endOfTextblock("backward", t) : r.parentOffset > 0)
      return !1;
    s = nN(r);
  }
  let l = s && s.nodeBefore;
  return !l || !_t.isSelectable(l) ? !1 : (e && e(t.tr.setSelection(_t.create(t.doc, s.pos - l.nodeSize)).scrollIntoView()), !0);
};
function nN(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      if (t.index(e) > 0)
        return t.doc.resolve(t.before(e + 1));
      if (t.node(e).type.spec.isolating)
        break;
    }
  return null;
}
function dU(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("forward", t) : n.parentOffset < n.parent.content.size) ? null : n;
}
const hU = (t, e, n) => {
  let r = dU(t, n);
  if (!r)
    return !1;
  let i = rN(r);
  if (!i)
    return !1;
  let s = i.nodeAfter;
  if (oN(t, i, e))
    return !0;
  if (r.parent.content.size == 0 && (Ch(s, "start") || _t.isSelectable(s))) {
    let l = KC(t.doc, r.before(), r.after(), Xe.empty);
    if (l && l.slice.size < l.to - l.from) {
      if (e) {
        let c = t.tr.step(l);
        c.setSelection(Ch(s, "start") ? $t.findFrom(c.doc.resolve(c.mapping.map(i.pos)), 1) : _t.create(c.doc, c.mapping.map(i.pos))), e(c.scrollIntoView());
      }
      return !0;
    }
  }
  return s.isAtom && i.depth == r.depth - 1 ? (e && e(t.tr.delete(i.pos, i.pos + s.nodeSize).scrollIntoView()), !0) : !1;
}, pU = (t, e, n) => {
  let { $head: r, empty: i } = t.selection, s = r;
  if (!i)
    return !1;
  if (r.parent.isTextblock) {
    if (n ? !n.endOfTextblock("forward", t) : r.parentOffset < r.parent.content.size)
      return !1;
    s = rN(r);
  }
  let l = s && s.nodeAfter;
  return !l || !_t.isSelectable(l) ? !1 : (e && e(t.tr.setSelection(_t.create(t.doc, s.pos)).scrollIntoView()), !0);
};
function rN(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      let n = t.node(e);
      if (t.index(e) + 1 < n.childCount)
        return t.doc.resolve(t.after(e + 1));
      if (n.type.spec.isolating)
        break;
    }
  return null;
}
const mU = (t, e) => {
  let n = t.selection, r = n instanceof _t, i;
  if (r) {
    if (n.node.isTextblock || !Nc(t.doc, n.from))
      return !1;
    i = n.from;
  } else if (i = g7(t.doc, n.from, -1), i == null)
    return !1;
  if (e) {
    let s = t.tr.join(i);
    r && s.setSelection(_t.create(s.doc, i - t.doc.resolve(i).nodeBefore.nodeSize)), e(s.scrollIntoView());
  }
  return !0;
}, gU = (t, e) => {
  let n = t.selection, r;
  if (n instanceof _t) {
    if (n.node.isTextblock || !Nc(t.doc, n.to))
      return !1;
    r = n.to;
  } else if (r = g7(t.doc, n.to, 1), r == null)
    return !1;
  return e && e(t.tr.join(r).scrollIntoView()), !0;
}, yU = (t, e) => {
  let { $from: n, $to: r } = t.selection, i = n.blockRange(r), s = i && xh(i);
  return s == null ? !1 : (e && e(t.tr.lift(i, s).scrollIntoView()), !0);
}, vU = (t, e) => {
  let { $head: n, $anchor: r } = t.selection;
  return !n.parent.type.spec.code || !n.sameParent(r) ? !1 : (e && e(t.tr.insertText(`
`).scrollIntoView()), !0);
};
function iN(t) {
  for (let e = 0; e < t.edgeCount; e++) {
    let { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
const EU = (t, e) => {
  let { $head: n, $anchor: r } = t.selection;
  if (!n.parent.type.spec.code || !n.sameParent(r))
    return !1;
  let i = n.node(-1), s = n.indexAfter(-1), l = iN(i.contentMatchAt(s));
  if (!l || !i.canReplaceWith(s, s, l))
    return !1;
  if (e) {
    let c = n.after(), h = t.tr.replaceWith(c, c, l.createAndFill());
    h.setSelection($t.near(h.doc.resolve(c), 1)), e(h.scrollIntoView());
  }
  return !0;
}, TU = (t, e) => {
  let n = t.selection, { $from: r, $to: i } = n;
  if (n instanceof rs || r.parent.inlineContent || i.parent.inlineContent)
    return !1;
  let s = iN(i.parent.contentMatchAt(i.indexAfter()));
  if (!s || !s.isTextblock)
    return !1;
  if (e) {
    let l = (!r.parentOffset && i.index() < i.parent.childCount ? r : i).pos, c = t.tr.insert(l, s.createAndFill());
    c.setSelection(Kt.create(c.doc, l + 1)), e(c.scrollIntoView());
  }
  return !0;
}, CU = (t, e) => {
  let { $cursor: n } = t.selection;
  if (!n || n.parent.content.size)
    return !1;
  if (n.depth > 1 && n.after() != n.end(-1)) {
    let s = n.before();
    if (fh(t.doc, s))
      return e && e(t.tr.split(s).scrollIntoView()), !0;
  }
  let r = n.blockRange(), i = r && xh(r);
  return i == null ? !1 : (e && e(t.tr.lift(r, i).scrollIntoView()), !0);
}, SU = (t, e) => {
  let { $from: n, to: r } = t.selection, i, s = n.sharedDepth(r);
  return s == 0 ? !1 : (i = n.before(s), e && e(t.tr.setSelection(_t.create(t.doc, i))), !0);
};
function bU(t, e, n) {
  let r = e.nodeBefore, i = e.nodeAfter, s = e.index();
  return !r || !i || !r.type.compatibleContent(i.type) ? !1 : !r.content.size && e.parent.canReplace(s - 1, s) ? (n && n(t.tr.delete(e.pos - r.nodeSize, e.pos).scrollIntoView()), !0) : !e.parent.canReplace(s, s + 1) || !(i.isTextblock || Nc(t.doc, e.pos)) ? !1 : (n && n(t.tr.clearIncompatible(e.pos, r.type, r.contentMatchAt(r.childCount)).join(e.pos).scrollIntoView()), !0);
}
function oN(t, e, n) {
  let r = e.nodeBefore, i = e.nodeAfter, s, l;
  if (r.type.spec.isolating || i.type.spec.isolating)
    return !1;
  if (bU(t, e, n))
    return !0;
  let c = e.parent.canReplace(e.index(), e.index() + 1);
  if (c && (s = (l = r.contentMatchAt(r.childCount)).findWrapping(i.type)) && l.matchType(s[0] || i.type).validEnd) {
    if (n) {
      let C = e.pos + i.nodeSize, S = Oe.empty;
      for (let O = s.length - 1; O >= 0; O--)
        S = Oe.from(s[O].create(null, S));
      S = Oe.from(r.copy(S));
      let b = t.tr.step(new ei(e.pos - 1, C, e.pos, C, new Xe(S, 1, 0), s.length, !0)), N = C + 2 * s.length;
      Nc(b.doc, N) && b.join(N), n(b.scrollIntoView());
    }
    return !0;
  }
  let h = $t.findFrom(e, 1), g = h && h.$from.blockRange(h.$to), v = g && xh(g);
  if (v != null && v >= e.depth)
    return n && n(t.tr.lift(g, v).scrollIntoView()), !0;
  if (c && Ch(i, "start", !0) && Ch(r, "end")) {
    let C = r, S = [];
    for (; S.push(C), !C.isTextblock; )
      C = C.lastChild;
    let b = i, N = 1;
    for (; !b.isTextblock; b = b.firstChild)
      N++;
    if (C.canReplace(C.childCount, C.childCount, b.content)) {
      if (n) {
        let O = Oe.empty;
        for (let P = S.length - 1; P >= 0; P--)
          O = Oe.from(S[P].copy(O));
        let L = t.tr.step(new ei(e.pos - S.length, e.pos + i.nodeSize, e.pos + N, e.pos + i.nodeSize - N, new Xe(O, S.length, 0), 0, !0));
        n(L.scrollIntoView());
      }
      return !0;
    }
  }
  return !1;
}
function aN(t) {
  return function(e, n) {
    let r = e.selection, i = t < 0 ? r.$from : r.$to, s = i.depth;
    for (; i.node(s).isInline; ) {
      if (!s)
        return !1;
      s--;
    }
    return i.node(s).isTextblock ? (n && n(e.tr.setSelection(Kt.create(e.doc, t < 0 ? i.start(s) : i.end(s)))), !0) : !1;
  };
}
const AU = aN(-1), xU = aN(1);
function _U(t, e = null) {
  return function(n, r) {
    let { $from: i, $to: s } = n.selection, l = i.blockRange(s), c = l && WC(l, t, e);
    return c ? (r && r(n.tr.wrap(l, c).scrollIntoView()), !0) : !1;
  };
}
function Dx(t, e = null) {
  return function(n, r) {
    let i = !1;
    for (let s = 0; s < n.selection.ranges.length && !i; s++) {
      let { $from: { pos: l }, $to: { pos: c } } = n.selection.ranges[s];
      n.doc.nodesBetween(l, c, (h, g) => {
        if (i)
          return !1;
        if (!(!h.isTextblock || h.hasMarkup(t, e)))
          if (h.type == t)
            i = !0;
          else {
            let v = n.doc.resolve(g), C = v.index();
            i = v.parent.canReplaceWith(C, C + 1, t);
          }
      });
    }
    if (!i)
      return !1;
    if (r) {
      let s = n.tr;
      for (let l = 0; l < n.selection.ranges.length; l++) {
        let { $from: { pos: c }, $to: { pos: h } } = n.selection.ranges[l];
        s.setBlockType(c, h, t, e);
      }
      r(s.scrollIntoView());
    }
    return !0;
  };
}
typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : typeof os < "u" && os.platform && os.platform() == "darwin";
function kU(t, e = null) {
  return function(n, r) {
    let { $from: i, $to: s } = n.selection, l = i.blockRange(s), c = !1, h = l;
    if (!l)
      return !1;
    if (l.depth >= 2 && i.node(l.depth - 1).type.compatibleContent(t) && l.startIndex == 0) {
      if (i.index(l.depth - 1) == 0)
        return !1;
      let v = n.doc.resolve(l.start - 2);
      h = new iy(v, v, l.depth), l.endIndex < l.parent.childCount && (l = new iy(i, n.doc.resolve(s.end(l.depth)), l.depth)), c = !0;
    }
    let g = WC(h, t, e, l);
    return g ? (r && r(NU(n.tr, l, g, c, t).scrollIntoView()), !0) : !1;
  };
}
function NU(t, e, n, r, i) {
  let s = Oe.empty;
  for (let v = n.length - 1; v >= 0; v--)
    s = Oe.from(n[v].type.create(n[v].attrs, s));
  t.step(new ei(e.start - (r ? 2 : 0), e.end, e.start, e.end, new Xe(s, 0, 0), n.length, !0));
  let l = 0;
  for (let v = 0; v < n.length; v++)
    n[v].type == i && (l = v + 1);
  let c = n.length - l, h = e.start + n.length - (r ? 2 : 0), g = e.parent;
  for (let v = e.startIndex, C = e.endIndex, S = !0; v < C; v++, S = !1)
    !S && fh(t.doc, h, c) && (t.split(h, c), h += 2 * c), h += g.child(v).nodeSize;
  return t;
}
function wU(t) {
  return function(e, n) {
    let { $from: r, $to: i } = e.selection, s = r.blockRange(i, (l) => l.childCount > 0 && l.firstChild.type == t);
    return s ? n ? r.node(s.depth - 1).type == t ? OU(e, n, t, s) : RU(e, n, s) : !0 : !1;
  };
}
function OU(t, e, n, r) {
  let i = t.tr, s = r.end, l = r.$to.end(r.depth);
  s < l && (i.step(new ei(s - 1, l, s, l, new Xe(Oe.from(n.create(null, r.parent.copy())), 1, 0), 1, !0)), r = new iy(i.doc.resolve(r.$from.pos), i.doc.resolve(l), r.depth));
  const c = xh(r);
  if (c == null)
    return !1;
  i.lift(r, c);
  let h = i.mapping.map(s, -1) - 1;
  return Nc(i.doc, h) && i.join(h), e(i.scrollIntoView()), !0;
}
function RU(t, e, n) {
  let r = t.tr, i = n.parent;
  for (let b = n.end, N = n.endIndex - 1, O = n.startIndex; N > O; N--)
    b -= i.child(N).nodeSize, r.delete(b - 1, b + 1);
  let s = r.doc.resolve(n.start), l = s.nodeAfter;
  if (r.mapping.map(n.end) != n.start + s.nodeAfter.nodeSize)
    return !1;
  let c = n.startIndex == 0, h = n.endIndex == i.childCount, g = s.node(-1), v = s.index(-1);
  if (!g.canReplace(v + (c ? 0 : 1), v + 1, l.content.append(h ? Oe.empty : Oe.from(i))))
    return !1;
  let C = s.pos, S = C + l.nodeSize;
  return r.step(new ei(C - (c ? 1 : 0), S + (h ? 1 : 0), C + 1, S - 1, new Xe((c ? Oe.empty : Oe.from(i.copy(Oe.empty))).append(h ? Oe.empty : Oe.from(i.copy(Oe.empty))), c ? 0 : 1, h ? 0 : 1), c ? 0 : 1)), e(r.scrollIntoView()), !0;
}
function DU(t) {
  return function(e, n) {
    let { $from: r, $to: i } = e.selection, s = r.blockRange(i, (g) => g.childCount > 0 && g.firstChild.type == t);
    if (!s)
      return !1;
    let l = s.startIndex;
    if (l == 0)
      return !1;
    let c = s.parent, h = c.child(l - 1);
    if (h.type != t)
      return !1;
    if (n) {
      let g = h.lastChild && h.lastChild.type == c.type, v = Oe.from(g ? t.create() : null), C = new Xe(Oe.from(t.create(null, Oe.from(c.type.create(null, v)))), g ? 3 : 1, 0), S = s.start, b = s.end;
      n(e.tr.step(new ei(S - (g ? 3 : 1), b, S, b, C, 1, !0)).scrollIntoView());
    }
    return !0;
  };
}
function Qy(t) {
  const { state: e, transaction: n } = t;
  let { selection: r } = n, { doc: i } = n, { storedMarks: s } = n;
  return {
    ...e,
    apply: e.apply.bind(e),
    applyTransaction: e.applyTransaction.bind(e),
    filterTransaction: e.filterTransaction,
    plugins: e.plugins,
    schema: e.schema,
    reconfigure: e.reconfigure.bind(e),
    toJSON: e.toJSON.bind(e),
    get storedMarks() {
      return s;
    },
    get selection() {
      return r;
    },
    get doc() {
      return i;
    },
    get tr() {
      return r = n.selection, i = n.doc, s = n.storedMarks, n;
    }
  };
}
class Xy {
  constructor(e) {
    this.editor = e.editor, this.rawCommands = this.editor.extensionManager.commands, this.customState = e.state;
  }
  get hasCustomState() {
    return !!this.customState;
  }
  get state() {
    return this.customState || this.editor.state;
  }
  get commands() {
    const { rawCommands: e, editor: n, state: r } = this, { view: i } = n, { tr: s } = r, l = this.buildProps(s);
    return Object.fromEntries(Object.entries(e).map(([c, h]) => [c, (...v) => {
      const C = h(...v)(l);
      return !s.getMeta("preventDispatch") && !this.hasCustomState && i.dispatch(s), C;
    }]));
  }
  get chain() {
    return () => this.createChain();
  }
  get can() {
    return () => this.createCan();
  }
  createChain(e, n = !0) {
    const { rawCommands: r, editor: i, state: s } = this, { view: l } = i, c = [], h = !!e, g = e || s.tr, v = () => (!h && n && !g.getMeta("preventDispatch") && !this.hasCustomState && l.dispatch(g), c.every((S) => S === !0)), C = {
      ...Object.fromEntries(Object.entries(r).map(([S, b]) => [S, (...O) => {
        const L = this.buildProps(g, n), P = b(...O)(L);
        return c.push(P), C;
      }])),
      run: v
    };
    return C;
  }
  createCan(e) {
    const { rawCommands: n, state: r } = this, i = !1, s = e || r.tr, l = this.buildProps(s, i);
    return {
      ...Object.fromEntries(Object.entries(n).map(([h, g]) => [h, (...v) => g(...v)({ ...l, dispatch: void 0 })])),
      chain: () => this.createChain(s, i)
    };
  }
  buildProps(e, n = !0) {
    const { rawCommands: r, editor: i, state: s } = this, { view: l } = i;
    s.storedMarks && e.setStoredMarks(s.storedMarks);
    const c = {
      tr: e,
      editor: i,
      view: l,
      state: Qy({
        state: s,
        transaction: e
      }),
      dispatch: n ? () => {
      } : void 0,
      chain: () => this.createChain(e),
      can: () => this.createCan(e),
      get commands() {
        return Object.fromEntries(Object.entries(r).map(([h, g]) => [h, (...v) => g(...v)(c)]));
      }
    };
    return c;
  }
}
class MU {
  constructor() {
    this.callbacks = {};
  }
  on(e, n) {
    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(n), this;
  }
  emit(e, ...n) {
    const r = this.callbacks[e];
    return r && r.forEach((i) => i.apply(this, n)), this;
  }
  off(e, n) {
    const r = this.callbacks[e];
    return r && (n ? this.callbacks[e] = r.filter((i) => i !== n) : delete this.callbacks[e]), this;
  }
  removeAllListeners() {
    this.callbacks = {};
  }
}
function it(t, e, n) {
  return t.config[e] === void 0 && t.parent ? it(t.parent, e, n) : typeof t.config[e] == "function" ? t.config[e].bind({
    ...n,
    parent: t.parent ? it(t.parent, e, n) : null
  }) : t.config[e];
}
function Jy(t) {
  const e = t.filter((i) => i.type === "extension"), n = t.filter((i) => i.type === "node"), r = t.filter((i) => i.type === "mark");
  return {
    baseExtensions: e,
    nodeExtensions: n,
    markExtensions: r
  };
}
function sN(t) {
  const e = [], { nodeExtensions: n, markExtensions: r } = Jy(t), i = [...n, ...r], s = {
    default: null,
    rendered: !0,
    renderHTML: null,
    parseHTML: null,
    keepOnSplit: !0,
    isRequired: !1
  };
  return t.forEach((l) => {
    const c = {
      name: l.name,
      options: l.options,
      storage: l.storage
    }, h = it(l, "addGlobalAttributes", c);
    if (!h)
      return;
    h().forEach((v) => {
      v.types.forEach((C) => {
        Object.entries(v.attributes).forEach(([S, b]) => {
          e.push({
            type: C,
            name: S,
            attribute: {
              ...s,
              ...b
            }
          });
        });
      });
    });
  }), i.forEach((l) => {
    const c = {
      name: l.name,
      options: l.options,
      storage: l.storage
    }, h = it(l, "addAttributes", c);
    if (!h)
      return;
    const g = h();
    Object.entries(g).forEach(([v, C]) => {
      const S = {
        ...s,
        ...C
      };
      C != null && C.isRequired && (C == null ? void 0 : C.default) === void 0 && delete S.default, e.push({
        type: l.name,
        name: v,
        attribute: S
      });
    });
  }), e;
}
function ti(t, e) {
  if (typeof t == "string") {
    if (!e.nodes[t])
      throw Error(`There is no node type named '${t}'. Maybe you forgot to add the extension?`);
    return e.nodes[t];
  }
  return t;
}
function lr(...t) {
  return t.filter((e) => !!e).reduce((e, n) => {
    const r = { ...e };
    return Object.entries(n).forEach(([i, s]) => {
      if (!r[i]) {
        r[i] = s;
        return;
      }
      i === "class" ? r[i] = [r[i], s].join(" ") : i === "style" ? r[i] = [r[i], s].join("; ") : r[i] = s;
    }), r;
  }, {});
}
function TC(t, e) {
  return e.filter((n) => n.attribute.rendered).map((n) => n.attribute.renderHTML ? n.attribute.renderHTML(t.attrs) || {} : {
    [n.name]: t.attrs[n.name]
  }).reduce((n, r) => lr(n, r), {});
}
function lN(t) {
  return typeof t == "function";
}
function Vt(t, e = void 0, ...n) {
  return lN(t) ? e ? t.bind(e)(...n) : t(...n) : t;
}
function LU(t = {}) {
  return Object.keys(t).length === 0 && t.constructor === Object;
}
function IU(t) {
  return typeof t != "string" ? t : t.match(/^[+-]?(?:\d*\.)?\d+$/) ? Number(t) : t === "true" ? !0 : t === "false" ? !1 : t;
}
function Mx(t, e) {
  return t.style ? t : {
    ...t,
    getAttrs: (n) => {
      const r = t.getAttrs ? t.getAttrs(n) : t.attrs;
      if (r === !1)
        return !1;
      const i = e.reduce((s, l) => {
        const c = l.attribute.parseHTML ? l.attribute.parseHTML(n) : IU(n.getAttribute(l.name));
        return c == null ? s : {
          ...s,
          [l.name]: c
        };
      }, {});
      return { ...r, ...i };
    }
  };
}
function Lx(t) {
  return Object.fromEntries(Object.entries(t).filter(([e, n]) => e === "attrs" && LU(n) ? !1 : n != null));
}
function uN(t) {
  var e;
  const n = sN(t), { nodeExtensions: r, markExtensions: i } = Jy(t), s = (e = r.find((h) => it(h, "topNode"))) === null || e === void 0 ? void 0 : e.name, l = Object.fromEntries(r.map((h) => {
    const g = n.filter((L) => L.type === h.name), v = {
      name: h.name,
      options: h.options,
      storage: h.storage
    }, C = t.reduce((L, P) => {
      const Y = it(P, "extendNodeSchema", v);
      return {
        ...L,
        ...Y ? Y(h) : {}
      };
    }, {}), S = Lx({
      ...C,
      content: Vt(it(h, "content", v)),
      marks: Vt(it(h, "marks", v)),
      group: Vt(it(h, "group", v)),
      inline: Vt(it(h, "inline", v)),
      atom: Vt(it(h, "atom", v)),
      selectable: Vt(it(h, "selectable", v)),
      draggable: Vt(it(h, "draggable", v)),
      code: Vt(it(h, "code", v)),
      defining: Vt(it(h, "defining", v)),
      isolating: Vt(it(h, "isolating", v)),
      attrs: Object.fromEntries(g.map((L) => {
        var P;
        return [L.name, { default: (P = L == null ? void 0 : L.attribute) === null || P === void 0 ? void 0 : P.default }];
      }))
    }), b = Vt(it(h, "parseHTML", v));
    b && (S.parseDOM = b.map((L) => Mx(L, g)));
    const N = it(h, "renderHTML", v);
    N && (S.toDOM = (L) => N({
      node: L,
      HTMLAttributes: TC(L, g)
    }));
    const O = it(h, "renderText", v);
    return O && (S.toText = O), [h.name, S];
  })), c = Object.fromEntries(i.map((h) => {
    const g = n.filter((O) => O.type === h.name), v = {
      name: h.name,
      options: h.options,
      storage: h.storage
    }, C = t.reduce((O, L) => {
      const P = it(L, "extendMarkSchema", v);
      return {
        ...O,
        ...P ? P(h) : {}
      };
    }, {}), S = Lx({
      ...C,
      inclusive: Vt(it(h, "inclusive", v)),
      excludes: Vt(it(h, "excludes", v)),
      group: Vt(it(h, "group", v)),
      spanning: Vt(it(h, "spanning", v)),
      code: Vt(it(h, "code", v)),
      attrs: Object.fromEntries(g.map((O) => {
        var L;
        return [O.name, { default: (L = O == null ? void 0 : O.attribute) === null || L === void 0 ? void 0 : L.default }];
      }))
    }), b = Vt(it(h, "parseHTML", v));
    b && (S.parseDOM = b.map((O) => Mx(O, g)));
    const N = it(h, "renderHTML", v);
    return N && (S.toDOM = (O) => N({
      mark: O,
      HTMLAttributes: TC(O, g)
    })), [h.name, S];
  }));
  return new KP({
    topNode: s,
    nodes: l,
    marks: c
  });
}
function JT(t, e) {
  return e.nodes[t] || e.marks[t] || null;
}
function Ix(t, e) {
  return Array.isArray(e) ? e.some((n) => (typeof n == "string" ? n : n.name) === t.name) : e;
}
const PU = (t, e = 500) => {
  let n = "";
  const r = t.parentOffset;
  return t.parent.nodesBetween(Math.max(0, r - e), r, (i, s, l, c) => {
    var h, g;
    const v = ((g = (h = i.type.spec).toText) === null || g === void 0 ? void 0 : g.call(h, {
      node: i,
      pos: s,
      parent: l,
      index: c
    })) || i.textContent || "%leaf%";
    n += v.slice(0, Math.max(0, r - s));
  }), n;
};
function oS(t) {
  return Object.prototype.toString.call(t) === "[object RegExp]";
}
class Zy {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const FU = (t, e) => {
  if (oS(e))
    return e.exec(t);
  const n = e(t);
  if (!n)
    return null;
  const r = [n.text];
  return r.index = n.index, r.input = t, r.data = n.data, n.replaceWith && (n.text.includes(n.replaceWith) || console.warn('[tiptap warn]: "inputRuleMatch.replaceWith" must be part of "inputRuleMatch.text".'), r.push(n.replaceWith)), r;
};
function ZT(t) {
  var e;
  const { editor: n, from: r, to: i, text: s, rules: l, plugin: c } = t, { view: h } = n;
  if (h.composing)
    return !1;
  const g = h.state.doc.resolve(r);
  if (
    // check for code node
    g.parent.type.spec.code || !((e = g.nodeBefore || g.nodeAfter) === null || e === void 0) && e.marks.find((S) => S.type.spec.code)
  )
    return !1;
  let v = !1;
  const C = PU(g) + s;
  return l.forEach((S) => {
    if (v)
      return;
    const b = FU(C, S.find);
    if (!b)
      return;
    const N = h.state.tr, O = Qy({
      state: h.state,
      transaction: N
    }), L = {
      from: r - (b[0].length - s.length),
      to: i
    }, { commands: P, chain: Y, can: j } = new Xy({
      editor: n,
      state: O
    });
    S.handler({
      state: O,
      range: L,
      match: b,
      commands: P,
      chain: Y,
      can: j
    }) === null || !N.steps.length || (N.setMeta(c, {
      transform: N,
      from: r,
      to: i,
      text: s
    }), h.dispatch(N), v = !0);
  }), v;
}
function BU(t) {
  const { editor: e, rules: n } = t, r = new Ur({
    state: {
      init() {
        return null;
      },
      apply(i, s) {
        const l = i.getMeta(r);
        return l || (i.selectionSet || i.docChanged ? null : s);
      }
    },
    props: {
      handleTextInput(i, s, l, c) {
        return ZT({
          editor: e,
          from: s,
          to: l,
          text: c,
          rules: n,
          plugin: r
        });
      },
      handleDOMEvents: {
        compositionend: (i) => (setTimeout(() => {
          const { $cursor: s } = i.state.selection;
          s && ZT({
            editor: e,
            from: s.pos,
            to: s.pos,
            text: "",
            rules: n,
            plugin: r
          });
        }), !1)
      },
      // add support for input rules to trigger on enter
      // this is useful for example for code blocks
      handleKeyDown(i, s) {
        if (s.key !== "Enter")
          return !1;
        const { $cursor: l } = i.state.selection;
        return l ? ZT({
          editor: e,
          from: l.pos,
          to: l.pos,
          text: `
`,
          rules: n,
          plugin: r
        }) : !1;
      }
    },
    // @ts-ignore
    isInputRules: !0
  });
  return r;
}
function UU(t) {
  return typeof t == "number";
}
class HU {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const zU = (t, e) => {
  if (oS(e))
    return [...t.matchAll(e)];
  const n = e(t);
  return n ? n.map((r) => {
    const i = [r.text];
    return i.index = r.index, i.input = t, i.data = r.data, r.replaceWith && (r.text.includes(r.replaceWith) || console.warn('[tiptap warn]: "pasteRuleMatch.replaceWith" must be part of "pasteRuleMatch.text".'), i.push(r.replaceWith)), i;
  }) : [];
};
function qU(t) {
  const { editor: e, state: n, from: r, to: i, rule: s } = t, { commands: l, chain: c, can: h } = new Xy({
    editor: e,
    state: n
  }), g = [];
  return n.doc.nodesBetween(r, i, (C, S) => {
    if (!C.isTextblock || C.type.spec.code)
      return;
    const b = Math.max(r, S), N = Math.min(i, S + C.content.size), O = C.textBetween(b - S, N - S, void 0, "￼");
    zU(O, s.find).forEach((P) => {
      if (P.index === void 0)
        return;
      const Y = b + P.index + 1, j = Y + P[0].length, oe = {
        from: n.tr.mapping.map(Y),
        to: n.tr.mapping.map(j)
      }, ee = s.handler({
        state: n,
        range: oe,
        match: P,
        commands: l,
        chain: c,
        can: h
      });
      g.push(ee);
    });
  }), g.every((C) => C !== null);
}
function jU(t) {
  const { editor: e, rules: n } = t;
  let r = null, i = !1, s = !1;
  return n.map((c) => new Ur({
    // we register a global drag handler to track the current drag source element
    view(h) {
      const g = (v) => {
        var C;
        r = !((C = h.dom.parentElement) === null || C === void 0) && C.contains(v.target) ? h.dom.parentElement : null;
      };
      return window.addEventListener("dragstart", g), {
        destroy() {
          window.removeEventListener("dragstart", g);
        }
      };
    },
    props: {
      handleDOMEvents: {
        drop: (h) => (s = r === h.dom.parentElement, !1),
        paste: (h, g) => {
          var v;
          const C = (v = g.clipboardData) === null || v === void 0 ? void 0 : v.getData("text/html");
          return i = !!(C != null && C.includes("data-pm-slice")), !1;
        }
      }
    },
    appendTransaction: (h, g, v) => {
      const C = h[0], S = C.getMeta("uiEvent") === "paste" && !i, b = C.getMeta("uiEvent") === "drop" && !s;
      if (!S && !b)
        return;
      const N = g.doc.content.findDiffStart(v.doc.content), O = g.doc.content.findDiffEnd(v.doc.content);
      if (!UU(N) || !O || N === O.b)
        return;
      const L = v.tr, P = Qy({
        state: v,
        transaction: L
      });
      if (!(!qU({
        editor: e,
        state: P,
        from: Math.max(N - 1, 0),
        to: O.b - 1,
        rule: c
      }) || !L.steps.length))
        return L;
    }
  }));
}
function VU(t) {
  const e = t.filter((n, r) => t.indexOf(n) !== r);
  return [...new Set(e)];
}
class af {
  constructor(e, n) {
    this.splittableMarks = [], this.editor = n, this.extensions = af.resolve(e), this.schema = uN(this.extensions), this.extensions.forEach((r) => {
      var i;
      this.editor.extensionStorage[r.name] = r.storage;
      const s = {
        name: r.name,
        options: r.options,
        storage: r.storage,
        editor: this.editor,
        type: JT(r.name, this.schema)
      };
      r.type === "mark" && (!((i = Vt(it(r, "keepOnSplit", s))) !== null && i !== void 0) || i) && this.splittableMarks.push(r.name);
      const l = it(r, "onBeforeCreate", s);
      l && this.editor.on("beforeCreate", l);
      const c = it(r, "onCreate", s);
      c && this.editor.on("create", c);
      const h = it(r, "onUpdate", s);
      h && this.editor.on("update", h);
      const g = it(r, "onSelectionUpdate", s);
      g && this.editor.on("selectionUpdate", g);
      const v = it(r, "onTransaction", s);
      v && this.editor.on("transaction", v);
      const C = it(r, "onFocus", s);
      C && this.editor.on("focus", C);
      const S = it(r, "onBlur", s);
      S && this.editor.on("blur", S);
      const b = it(r, "onDestroy", s);
      b && this.editor.on("destroy", b);
    });
  }
  static resolve(e) {
    const n = af.sort(af.flatten(e)), r = VU(n.map((i) => i.name));
    return r.length && console.warn(`[tiptap warn]: Duplicate extension names found: [${r.map((i) => `'${i}'`).join(", ")}]. This can lead to issues.`), n;
  }
  static flatten(e) {
    return e.map((n) => {
      const r = {
        name: n.name,
        options: n.options,
        storage: n.storage
      }, i = it(n, "addExtensions", r);
      return i ? [n, ...this.flatten(i())] : n;
    }).flat(10);
  }
  static sort(e) {
    return e.sort((r, i) => {
      const s = it(r, "priority") || 100, l = it(i, "priority") || 100;
      return s > l ? -1 : s < l ? 1 : 0;
    });
  }
  get commands() {
    return this.extensions.reduce((e, n) => {
      const r = {
        name: n.name,
        options: n.options,
        storage: n.storage,
        editor: this.editor,
        type: JT(n.name, this.schema)
      }, i = it(n, "addCommands", r);
      return i ? {
        ...e,
        ...i()
      } : e;
    }, {});
  }
  get plugins() {
    const { editor: e } = this, n = af.sort([...this.extensions].reverse()), r = [], i = [], s = n.map((l) => {
      const c = {
        name: l.name,
        options: l.options,
        storage: l.storage,
        editor: e,
        type: JT(l.name, this.schema)
      }, h = [], g = it(l, "addKeyboardShortcuts", c);
      let v = {};
      if (l.type === "mark" && l.config.exitable && (v.ArrowRight = () => Ta.handleExit({ editor: e, mark: l })), g) {
        const O = Object.fromEntries(Object.entries(g()).map(([L, P]) => [L, () => P({ editor: e })]));
        v = { ...v, ...O };
      }
      const C = sU(v);
      h.push(C);
      const S = it(l, "addInputRules", c);
      Ix(l, e.options.enableInputRules) && S && r.push(...S());
      const b = it(l, "addPasteRules", c);
      Ix(l, e.options.enablePasteRules) && b && i.push(...b());
      const N = it(l, "addProseMirrorPlugins", c);
      if (N) {
        const O = N();
        h.push(...O);
      }
      return h;
    }).flat();
    return [
      BU({
        editor: e,
        rules: r
      }),
      ...jU({
        editor: e,
        rules: i
      }),
      ...s
    ];
  }
  get attributes() {
    return sN(this.extensions);
  }
  get nodeViews() {
    const { editor: e } = this, { nodeExtensions: n } = Jy(this.extensions);
    return Object.fromEntries(n.filter((r) => !!it(r, "addNodeView")).map((r) => {
      const i = this.attributes.filter((h) => h.type === r.name), s = {
        name: r.name,
        options: r.options,
        storage: r.storage,
        editor: e,
        type: ti(r.name, this.schema)
      }, l = it(r, "addNodeView", s);
      if (!l)
        return [];
      const c = (h, g, v, C) => {
        const S = TC(h, i);
        return l()({
          editor: e,
          node: h,
          getPos: v,
          decorations: C,
          HTMLAttributes: S,
          extension: r
        });
      };
      return [r.name, c];
    }));
  }
}
function $U(t) {
  return Object.prototype.toString.call(t).slice(8, -1);
}
function e4(t) {
  return $U(t) !== "Object" ? !1 : t.constructor === Object && Object.getPrototypeOf(t) === Object.prototype;
}
function ev(t, e) {
  const n = { ...t };
  return e4(t) && e4(e) && Object.keys(e).forEach((r) => {
    e4(e[r]) ? r in t ? n[r] = ev(t[r], e[r]) : Object.assign(n, { [r]: e[r] }) : Object.assign(n, { [r]: e[r] });
  }), n;
}
class Ea {
  constructor(e = {}) {
    this.type = "extension", this.name = "extension", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = Vt(it(this, "addOptions", {
      name: this.name
    }))), this.storage = Vt(it(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new Ea(e);
  }
  configure(e = {}) {
    const n = this.extend();
    return n.options = ev(this.options, e), n.storage = Vt(it(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
  extend(e = {}) {
    const n = new Ea(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = Vt(it(n, "addOptions", {
      name: n.name
    })), n.storage = Vt(it(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
}
function cN(t, e, n) {
  const { from: r, to: i } = e, { blockSeparator: s = `

`, textSerializers: l = {} } = n || {};
  let c = "", h = !0;
  return t.nodesBetween(r, i, (g, v, C, S) => {
    var b;
    const N = l == null ? void 0 : l[g.type.name];
    N ? (g.isBlock && !h && (c += s, h = !0), C && (c += N({
      node: g,
      pos: v,
      parent: C,
      index: S,
      range: e
    }))) : g.isText ? (c += (b = g == null ? void 0 : g.text) === null || b === void 0 ? void 0 : b.slice(Math.max(r, v) - v, i - v), h = !1) : g.isBlock && !h && (c += s, h = !0);
  }), c;
}
function fN(t) {
  return Object.fromEntries(Object.entries(t.nodes).filter(([, e]) => e.spec.toText).map(([e, n]) => [e, n.spec.toText]));
}
const GU = Ea.create({
  name: "clipboardTextSerializer",
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("clipboardTextSerializer"),
        props: {
          clipboardTextSerializer: () => {
            const { editor: t } = this, { state: e, schema: n } = t, { doc: r, selection: i } = e, { ranges: s } = i, l = Math.min(...s.map((v) => v.$from.pos)), c = Math.max(...s.map((v) => v.$to.pos)), h = fN(n);
            return cN(r, { from: l, to: c }, {
              textSerializers: h
            });
          }
        }
      })
    ];
  }
}), WU = () => ({ editor: t, view: e }) => (requestAnimationFrame(() => {
  var n;
  t.isDestroyed || (e.dom.blur(), (n = window == null ? void 0 : window.getSelection()) === null || n === void 0 || n.removeAllRanges());
}), !0), KU = (t = !1) => ({ commands: e }) => e.setContent("", t), YU = () => ({ state: t, tr: e, dispatch: n }) => {
  const { selection: r } = e, { ranges: i } = r;
  return n && i.forEach(({ $from: s, $to: l }) => {
    t.doc.nodesBetween(s.pos, l.pos, (c, h) => {
      if (c.type.isText)
        return;
      const { doc: g, mapping: v } = e, C = g.resolve(v.map(h)), S = g.resolve(v.map(h + c.nodeSize)), b = C.blockRange(S);
      if (!b)
        return;
      const N = xh(b);
      if (c.type.isTextblock) {
        const { defaultType: O } = C.parent.contentMatchAt(C.index());
        e.setNodeMarkup(b.start, O);
      }
      (N || N === 0) && e.lift(b, N);
    });
  }), !0;
}, QU = (t) => (e) => t(e), XU = () => ({ state: t, dispatch: e }) => TU(t, e), JU = () => ({ tr: t, dispatch: e }) => {
  const { selection: n } = t, r = n.$anchor.node();
  if (r.content.size > 0)
    return !1;
  const i = t.selection.$anchor;
  for (let s = i.depth; s > 0; s -= 1)
    if (i.node(s).type === r.type) {
      if (e) {
        const c = i.before(s), h = i.after(s);
        t.delete(c, h).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, ZU = (t) => ({ tr: e, state: n, dispatch: r }) => {
  const i = ti(t, n.schema), s = e.selection.$anchor;
  for (let l = s.depth; l > 0; l -= 1)
    if (s.node(l).type === i) {
      if (r) {
        const h = s.before(l), g = s.after(l);
        e.delete(h, g).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, eH = (t) => ({ tr: e, dispatch: n }) => {
  const { from: r, to: i } = t;
  return n && e.delete(r, i), !0;
}, tH = () => ({ state: t, dispatch: e }) => lU(t, e), nH = () => ({ commands: t }) => t.keyboardShortcut("Enter"), rH = () => ({ state: t, dispatch: e }) => EU(t, e);
function dy(t, e, n = { strict: !0 }) {
  const r = Object.keys(e);
  return r.length ? r.every((i) => n.strict ? e[i] === t[i] : oS(e[i]) ? e[i].test(t[i]) : e[i] === t[i]) : !0;
}
function CC(t, e, n = {}) {
  return t.find((r) => r.type === e && dy(r.attrs, n));
}
function iH(t, e, n = {}) {
  return !!CC(t, e, n);
}
function aS(t, e, n = {}) {
  if (!t || !e)
    return;
  let r = t.parent.childAfter(t.parentOffset);
  if (t.parentOffset === r.offset && r.offset !== 0 && (r = t.parent.childBefore(t.parentOffset)), !r.node)
    return;
  const i = CC([...r.node.marks], e, n);
  if (!i)
    return;
  let s = r.index, l = t.start() + r.offset, c = s + 1, h = l + r.node.nodeSize;
  for (CC([...r.node.marks], e, n); s > 0 && i.isInSet(t.parent.child(s - 1).marks); )
    s -= 1, l -= t.parent.child(s).nodeSize;
  for (; c < t.parent.childCount && iH([...t.parent.child(c).marks], e, n); )
    h += t.parent.child(c).nodeSize, c += 1;
  return {
    from: l,
    to: h
  };
}
function Oc(t, e) {
  if (typeof t == "string") {
    if (!e.marks[t])
      throw Error(`There is no mark type named '${t}'. Maybe you forgot to add the extension?`);
    return e.marks[t];
  }
  return t;
}
const oH = (t, e = {}) => ({ tr: n, state: r, dispatch: i }) => {
  const s = Oc(t, r.schema), { doc: l, selection: c } = n, { $from: h, from: g, to: v } = c;
  if (i) {
    const C = aS(h, s, e);
    if (C && C.from <= g && C.to >= v) {
      const S = Kt.create(l, C.from, C.to);
      n.setSelection(S);
    }
  }
  return !0;
}, aH = (t) => (e) => {
  const n = typeof t == "function" ? t(e) : t;
  for (let r = 0; r < n.length; r += 1)
    if (n[r](e))
      return !0;
  return !1;
};
function dN(t) {
  return t instanceof Kt;
}
function sf(t = 0, e = 0, n = 0) {
  return Math.min(Math.max(t, e), n);
}
function hN(t, e = null) {
  if (!e)
    return null;
  const n = $t.atStart(t), r = $t.atEnd(t);
  if (e === "start" || e === !0)
    return n;
  if (e === "end")
    return r;
  const i = n.from, s = r.to;
  return e === "all" ? Kt.create(t, sf(0, i, s), sf(t.content.size, i, s)) : Kt.create(t, sf(e, i, s), sf(e, i, s));
}
function sS() {
  return [
    "iPad Simulator",
    "iPhone Simulator",
    "iPod Simulator",
    "iPad",
    "iPhone",
    "iPod"
  ].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document;
}
const sH = (t = null, e = {}) => ({ editor: n, view: r, tr: i, dispatch: s }) => {
  e = {
    scrollIntoView: !0,
    ...e
  };
  const l = () => {
    sS() && r.dom.focus(), requestAnimationFrame(() => {
      n.isDestroyed || (r.focus(), e != null && e.scrollIntoView && n.commands.scrollIntoView());
    });
  };
  if (r.hasFocus() && t === null || t === !1)
    return !0;
  if (s && t === null && !dN(n.state.selection))
    return l(), !0;
  const c = hN(i.doc, t) || n.state.selection, h = n.state.selection.eq(c);
  return s && (h || i.setSelection(c), h && i.storedMarks && i.setStoredMarks(i.storedMarks), l()), !0;
}, lH = (t, e) => (n) => t.every((r, i) => e(r, { ...n, index: i })), uH = (t, e) => ({ tr: n, commands: r }) => r.insertContentAt({ from: n.selection.from, to: n.selection.to }, t, e);
function Px(t) {
  const e = `<body>${t}</body>`;
  return new window.DOMParser().parseFromString(e, "text/html").body;
}
function hy(t, e, n) {
  if (n = {
    slice: !0,
    parseOptions: {},
    ...n
  }, typeof t == "object" && t !== null)
    try {
      return Array.isArray(t) && t.length > 0 ? Oe.fromArray(t.map((r) => e.nodeFromJSON(r))) : e.nodeFromJSON(t);
    } catch (r) {
      return console.warn("[tiptap warn]: Invalid content.", "Passed value:", t, "Error:", r), hy("", e, n);
    }
  if (typeof t == "string") {
    const r = mf.fromSchema(e);
    return n.slice ? r.parseSlice(Px(t), n.parseOptions).content : r.parse(Px(t), n.parseOptions);
  }
  return hy("", e, n);
}
function cH(t, e, n) {
  const r = t.steps.length - 1;
  if (r < e)
    return;
  const i = t.steps[r];
  if (!(i instanceof Ri || i instanceof ei))
    return;
  const s = t.mapping.maps[r];
  let l = 0;
  s.forEach((c, h, g, v) => {
    l === 0 && (l = v);
  }), t.setSelection($t.near(t.doc.resolve(l), n));
}
const fH = (t) => t.toString().startsWith("<"), dH = (t, e, n) => ({ tr: r, dispatch: i, editor: s }) => {
  if (i) {
    n = {
      parseOptions: {},
      updateSelection: !0,
      ...n
    };
    const l = hy(e, s.schema, {
      parseOptions: {
        preserveWhitespace: "full",
        ...n.parseOptions
      }
    });
    if (l.toString() === "<>")
      return !0;
    let { from: c, to: h } = typeof t == "number" ? { from: t, to: t } : t, g = !0, v = !0;
    if ((fH(l) ? l : [l]).forEach((S) => {
      S.check(), g = g ? S.isText && S.marks.length === 0 : !1, v = v ? S.isBlock : !1;
    }), c === h && v) {
      const { parent: S } = r.doc.resolve(c);
      S.isTextblock && !S.type.spec.code && !S.childCount && (c -= 1, h += 1);
    }
    g ? Array.isArray(e) ? r.insertText(e.map((S) => S.text || "").join(""), c, h) : typeof e == "object" && e && e.text ? r.insertText(e.text, c, h) : r.insertText(e, c, h) : r.replaceWith(c, h, l), n.updateSelection && cH(r, r.steps.length - 1, -1);
  }
  return !0;
}, hH = () => ({ state: t, dispatch: e }) => mU(t, e), pH = () => ({ state: t, dispatch: e }) => gU(t, e), mH = () => ({ state: t, dispatch: e }) => cU(t, e), gH = () => ({ state: t, dispatch: e }) => hU(t, e);
function pN() {
  return typeof navigator < "u" ? /Mac/.test(navigator.platform) : !1;
}
function yH(t) {
  const e = t.split(/-(?!$)/);
  let n = e[e.length - 1];
  n === "Space" && (n = " ");
  let r, i, s, l;
  for (let c = 0; c < e.length - 1; c += 1) {
    const h = e[c];
    if (/^(cmd|meta|m)$/i.test(h))
      l = !0;
    else if (/^a(lt)?$/i.test(h))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(h))
      i = !0;
    else if (/^s(hift)?$/i.test(h))
      s = !0;
    else if (/^mod$/i.test(h))
      sS() || pN() ? l = !0 : i = !0;
    else
      throw new Error(`Unrecognized modifier name: ${h}`);
  }
  return r && (n = `Alt-${n}`), i && (n = `Ctrl-${n}`), l && (n = `Meta-${n}`), s && (n = `Shift-${n}`), n;
}
const vH = (t) => ({ editor: e, view: n, tr: r, dispatch: i }) => {
  const s = yH(t).split(/-(?!$)/), l = s.find((g) => !["Alt", "Ctrl", "Meta", "Shift"].includes(g)), c = new KeyboardEvent("keydown", {
    key: l === "Space" ? " " : l,
    altKey: s.includes("Alt"),
    ctrlKey: s.includes("Ctrl"),
    metaKey: s.includes("Meta"),
    shiftKey: s.includes("Shift"),
    bubbles: !0,
    cancelable: !0
  }), h = e.captureTransaction(() => {
    n.someProp("handleKeyDown", (g) => g(n, c));
  });
  return h == null || h.steps.forEach((g) => {
    const v = g.map(r.mapping);
    v && i && r.maybeStep(v);
  }), !0;
};
function f0(t, e, n = {}) {
  const { from: r, to: i, empty: s } = t.selection, l = e ? ti(e, t.schema) : null, c = [];
  t.doc.nodesBetween(r, i, (C, S) => {
    if (C.isText)
      return;
    const b = Math.max(r, S), N = Math.min(i, S + C.nodeSize);
    c.push({
      node: C,
      from: b,
      to: N
    });
  });
  const h = i - r, g = c.filter((C) => l ? l.name === C.node.type.name : !0).filter((C) => dy(C.node.attrs, n, { strict: !1 }));
  return s ? !!g.length : g.reduce((C, S) => C + S.to - S.from, 0) >= h;
}
const EH = (t, e = {}) => ({ state: n, dispatch: r }) => {
  const i = ti(t, n.schema);
  return f0(n, i, e) ? yU(n, r) : !1;
}, TH = () => ({ state: t, dispatch: e }) => CU(t, e), CH = (t) => ({ state: e, dispatch: n }) => {
  const r = ti(t, e.schema);
  return wU(r)(e, n);
}, SH = () => ({ state: t, dispatch: e }) => vU(t, e);
function tv(t, e) {
  return e.nodes[t] ? "node" : e.marks[t] ? "mark" : null;
}
function Fx(t, e) {
  const n = typeof e == "string" ? [e] : e;
  return Object.keys(t).reduce((r, i) => (n.includes(i) || (r[i] = t[i]), r), {});
}
const bH = (t, e) => ({ tr: n, state: r, dispatch: i }) => {
  let s = null, l = null;
  const c = tv(typeof t == "string" ? t : t.name, r.schema);
  return c ? (c === "node" && (s = ti(t, r.schema)), c === "mark" && (l = Oc(t, r.schema)), i && n.selection.ranges.forEach((h) => {
    r.doc.nodesBetween(h.$from.pos, h.$to.pos, (g, v) => {
      s && s === g.type && n.setNodeMarkup(v, void 0, Fx(g.attrs, e)), l && g.marks.length && g.marks.forEach((C) => {
        l === C.type && n.addMark(v, v + g.nodeSize, l.create(Fx(C.attrs, e)));
      });
    });
  }), !0) : !1;
}, AH = () => ({ tr: t, dispatch: e }) => (e && t.scrollIntoView(), !0), xH = () => ({ tr: t, commands: e }) => e.setTextSelection({
  from: 0,
  to: t.doc.content.size
}), _H = () => ({ state: t, dispatch: e }) => fU(t, e), kH = () => ({ state: t, dispatch: e }) => pU(t, e), NH = () => ({ state: t, dispatch: e }) => SU(t, e), wH = () => ({ state: t, dispatch: e }) => xU(t, e), OH = () => ({ state: t, dispatch: e }) => AU(t, e);
function mN(t, e, n = {}) {
  return hy(t, e, { slice: !1, parseOptions: n });
}
const RH = (t, e = !1, n = {}) => ({ tr: r, editor: i, dispatch: s }) => {
  const { doc: l } = r, c = mN(t, i.schema, n);
  return s && r.replaceWith(0, l.content.size, c).setMeta("preventUpdate", !e), !0;
};
function DH(t, e) {
  const n = new C7(t);
  return e.forEach((r) => {
    r.steps.forEach((i) => {
      n.step(i);
    });
  }), n;
}
function MH(t) {
  for (let e = 0; e < t.edgeCount; e += 1) {
    const { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
function LH(t, e, n) {
  const r = [];
  return t.nodesBetween(e.from, e.to, (i, s) => {
    n(i) && r.push({
      node: i,
      pos: s
    });
  }), r;
}
function IH(t, e) {
  for (let n = t.depth; n > 0; n -= 1) {
    const r = t.node(n);
    if (e(r))
      return {
        pos: n > 0 ? t.before(n) : 0,
        start: t.start(n),
        depth: n,
        node: r
      };
  }
}
function lS(t) {
  return (e) => IH(e.$from, t);
}
function PH(t, e) {
  const n = ns.fromSchema(e).serializeFragment(t), i = document.implementation.createHTMLDocument().createElement("div");
  return i.appendChild(n), i.innerHTML;
}
function FH(t) {
  const e = af.resolve(t);
  return uN(e);
}
function BH(t, e) {
  const n = {
    from: 0,
    to: t.content.size
  };
  return cN(t, n, e);
}
function nv(t, e) {
  const n = Oc(e, t.schema), { from: r, to: i, empty: s } = t.selection, l = [];
  s ? (t.storedMarks && l.push(...t.storedMarks), l.push(...t.selection.$head.marks())) : t.doc.nodesBetween(r, i, (h) => {
    l.push(...h.marks);
  });
  const c = l.find((h) => h.type.name === n.name);
  return c ? { ...c.attrs } : {};
}
function UH(t, e) {
  const n = ti(e, t.schema), { from: r, to: i } = t.selection, s = [];
  t.doc.nodesBetween(r, i, (c) => {
    s.push(c);
  });
  const l = s.reverse().find((c) => c.type.name === n.name);
  return l ? { ...l.attrs } : {};
}
function gN(t, e) {
  const n = tv(typeof e == "string" ? e : e.name, t.schema);
  return n === "node" ? UH(t, e) : n === "mark" ? nv(t, e) : {};
}
function HH(t, e = JSON.stringify) {
  const n = {};
  return t.filter((r) => {
    const i = e(r);
    return Object.prototype.hasOwnProperty.call(n, i) ? !1 : n[i] = !0;
  });
}
function zH(t) {
  const e = HH(t);
  return e.length === 1 ? e : e.filter((n, r) => !e.filter((s, l) => l !== r).some((s) => n.oldRange.from >= s.oldRange.from && n.oldRange.to <= s.oldRange.to && n.newRange.from >= s.newRange.from && n.newRange.to <= s.newRange.to));
}
function qH(t) {
  const { mapping: e, steps: n } = t, r = [];
  return e.maps.forEach((i, s) => {
    const l = [];
    if (i.ranges.length)
      i.forEach((c, h) => {
        l.push({ from: c, to: h });
      });
    else {
      const { from: c, to: h } = n[s];
      if (c === void 0 || h === void 0)
        return;
      l.push({ from: c, to: h });
    }
    l.forEach(({ from: c, to: h }) => {
      const g = e.slice(s).map(c, -1), v = e.slice(s).map(h), C = e.invert().map(g, -1), S = e.invert().map(v);
      r.push({
        oldRange: {
          from: C,
          to: S
        },
        newRange: {
          from: g,
          to: v
        }
      });
    });
  }), zH(r);
}
function py(t, e, n) {
  const r = [];
  return t === e ? n.resolve(t).marks().forEach((i) => {
    const s = n.resolve(t - 1), l = aS(s, i.type);
    l && r.push({
      mark: i,
      ...l
    });
  }) : n.nodesBetween(t, e, (i, s) => {
    r.push(...i.marks.map((l) => ({
      from: s,
      to: s + i.nodeSize,
      mark: l
    })));
  }), r;
}
function H9(t, e, n) {
  return Object.fromEntries(Object.entries(n).filter(([r]) => {
    const i = t.find((s) => s.type === e && s.name === r);
    return i ? i.attribute.keepOnSplit : !1;
  }));
}
function SC(t, e, n = {}) {
  const { empty: r, ranges: i } = t.selection, s = e ? Oc(e, t.schema) : null;
  if (r)
    return !!(t.storedMarks || t.selection.$from.marks()).filter((C) => s ? s.name === C.type.name : !0).find((C) => dy(C.attrs, n, { strict: !1 }));
  let l = 0;
  const c = [];
  if (i.forEach(({ $from: C, $to: S }) => {
    const b = C.pos, N = S.pos;
    t.doc.nodesBetween(b, N, (O, L) => {
      if (!O.isText && !O.marks.length)
        return;
      const P = Math.max(b, L), Y = Math.min(N, L + O.nodeSize), j = Y - P;
      l += j, c.push(...O.marks.map((oe) => ({
        mark: oe,
        from: P,
        to: Y
      })));
    });
  }), l === 0)
    return !1;
  const h = c.filter((C) => s ? s.name === C.mark.type.name : !0).filter((C) => dy(C.mark.attrs, n, { strict: !1 })).reduce((C, S) => C + S.to - S.from, 0), g = c.filter((C) => s ? C.mark.type !== s && C.mark.type.excludes(s) : !0).reduce((C, S) => C + S.to - S.from, 0);
  return (h > 0 ? h + g : h) >= l;
}
function jH(t, e, n = {}) {
  if (!e)
    return f0(t, null, n) || SC(t, null, n);
  const r = tv(e, t.schema);
  return r === "node" ? f0(t, e, n) : r === "mark" ? SC(t, e, n) : !1;
}
function Bx(t, e) {
  const { nodeExtensions: n } = Jy(e), r = n.find((l) => l.name === t);
  if (!r)
    return !1;
  const i = {
    name: r.name,
    options: r.options,
    storage: r.storage
  }, s = Vt(it(r, "group", i));
  return typeof s != "string" ? !1 : s.split(" ").includes("list");
}
function VH(t) {
  var e;
  const n = (e = t.type.createAndFill()) === null || e === void 0 ? void 0 : e.toJSON(), r = t.toJSON();
  return JSON.stringify(n) === JSON.stringify(r);
}
function $H(t, e, n) {
  var r;
  const { selection: i } = e;
  let s = null;
  if (dN(i) && (s = i.$cursor), s) {
    const c = (r = t.storedMarks) !== null && r !== void 0 ? r : s.marks();
    return !!n.isInSet(c) || !c.some((h) => h.type.excludes(n));
  }
  const { ranges: l } = i;
  return l.some(({ $from: c, $to: h }) => {
    let g = c.depth === 0 ? t.doc.inlineContent && t.doc.type.allowsMarkType(n) : !1;
    return t.doc.nodesBetween(c.pos, h.pos, (v, C, S) => {
      if (g)
        return !1;
      if (v.isInline) {
        const b = !S || S.type.allowsMarkType(n), N = !!n.isInSet(v.marks) || !v.marks.some((O) => O.type.excludes(n));
        g = b && N;
      }
      return !g;
    }), g;
  });
}
const GH = (t, e = {}) => ({ tr: n, state: r, dispatch: i }) => {
  const { selection: s } = n, { empty: l, ranges: c } = s, h = Oc(t, r.schema);
  if (i)
    if (l) {
      const g = nv(r, h);
      n.addStoredMark(h.create({
        ...g,
        ...e
      }));
    } else
      c.forEach((g) => {
        const v = g.$from.pos, C = g.$to.pos;
        r.doc.nodesBetween(v, C, (S, b) => {
          const N = Math.max(b, v), O = Math.min(b + S.nodeSize, C);
          S.marks.find((P) => P.type === h) ? S.marks.forEach((P) => {
            h === P.type && n.addMark(N, O, h.create({
              ...P.attrs,
              ...e
            }));
          }) : n.addMark(N, O, h.create(e));
        });
      });
  return $H(r, n, h);
}, WH = (t, e) => ({ tr: n }) => (n.setMeta(t, e), !0), KH = (t, e = {}) => ({ state: n, dispatch: r, chain: i }) => {
  const s = ti(t, n.schema);
  return s.isTextblock ? i().command(({ commands: l }) => Dx(s, e)(n) ? !0 : l.clearNodes()).command(({ state: l }) => Dx(s, e)(l, r)).run() : (console.warn('[tiptap warn]: Currently "setNode()" only supports text block nodes.'), !1);
}, YH = (t) => ({ tr: e, dispatch: n }) => {
  if (n) {
    const { doc: r } = e, i = sf(t, 0, r.content.size), s = _t.create(r, i);
    e.setSelection(s);
  }
  return !0;
}, QH = (t) => ({ tr: e, dispatch: n }) => {
  if (n) {
    const { doc: r } = e, { from: i, to: s } = typeof t == "number" ? { from: t, to: t } : t, l = Kt.atStart(r).from, c = Kt.atEnd(r).to, h = sf(i, l, c), g = sf(s, l, c), v = Kt.create(r, h, g);
    e.setSelection(v);
  }
  return !0;
}, XH = (t) => ({ state: e, dispatch: n }) => {
  const r = ti(t, e.schema);
  return DU(r)(e, n);
};
function Ux(t, e) {
  const n = t.storedMarks || t.selection.$to.parentOffset && t.selection.$from.marks();
  if (n) {
    const r = n.filter((i) => e == null ? void 0 : e.includes(i.type.name));
    t.tr.ensureMarks(r);
  }
}
const JH = ({ keepMarks: t = !0 } = {}) => ({ tr: e, state: n, dispatch: r, editor: i }) => {
  const { selection: s, doc: l } = e, { $from: c, $to: h } = s, g = i.extensionManager.attributes, v = H9(g, c.node().type.name, c.node().attrs);
  if (s instanceof _t && s.node.isBlock)
    return !c.parentOffset || !fh(l, c.pos) ? !1 : (r && (t && Ux(n, i.extensionManager.splittableMarks), e.split(c.pos).scrollIntoView()), !0);
  if (!c.parent.isBlock)
    return !1;
  if (r) {
    const C = h.parentOffset === h.parent.content.size;
    s instanceof Kt && e.deleteSelection();
    const S = c.depth === 0 ? void 0 : MH(c.node(-1).contentMatchAt(c.indexAfter(-1)));
    let b = C && S ? [
      {
        type: S,
        attrs: v
      }
    ] : void 0, N = fh(e.doc, e.mapping.map(c.pos), 1, b);
    if (!b && !N && fh(e.doc, e.mapping.map(c.pos), 1, S ? [{ type: S }] : void 0) && (N = !0, b = S ? [
      {
        type: S,
        attrs: v
      }
    ] : void 0), N && (e.split(e.mapping.map(c.pos), 1, b), S && !C && !c.parentOffset && c.parent.type !== S)) {
      const O = e.mapping.map(c.before()), L = e.doc.resolve(O);
      c.node(-1).canReplaceWith(L.index(), L.index() + 1, S) && e.setNodeMarkup(e.mapping.map(c.before()), S);
    }
    t && Ux(n, i.extensionManager.splittableMarks), e.scrollIntoView();
  }
  return !0;
}, ZH = (t) => ({ tr: e, state: n, dispatch: r, editor: i }) => {
  var s;
  const l = ti(t, n.schema), { $from: c, $to: h } = n.selection, g = n.selection.node;
  if (g && g.isBlock || c.depth < 2 || !c.sameParent(h))
    return !1;
  const v = c.node(-1);
  if (v.type !== l)
    return !1;
  const C = i.extensionManager.attributes;
  if (c.parent.content.size === 0 && c.node(-1).childCount === c.indexAfter(-1)) {
    if (c.depth === 2 || c.node(-3).type !== l || c.index(-2) !== c.node(-2).childCount - 1)
      return !1;
    if (r) {
      let L = Oe.empty;
      const P = c.index(-1) ? 1 : c.index(-2) ? 2 : 3;
      for (let H = c.depth - P; H >= c.depth - 3; H -= 1)
        L = Oe.from(c.node(H).copy(L));
      const Y = c.indexAfter(-1) < c.node(-2).childCount ? 1 : c.indexAfter(-2) < c.node(-3).childCount ? 2 : 3, j = H9(C, c.node().type.name, c.node().attrs), oe = ((s = l.contentMatch.defaultType) === null || s === void 0 ? void 0 : s.createAndFill(j)) || void 0;
      L = L.append(Oe.from(l.createAndFill(null, oe) || void 0));
      const ee = c.before(c.depth - (P - 1));
      e.replace(ee, c.after(-Y), new Xe(L, 4 - P, 0));
      let z = -1;
      e.doc.nodesBetween(ee, e.doc.content.size, (H, Z) => {
        if (z > -1)
          return !1;
        H.isTextblock && H.content.size === 0 && (z = Z + 1);
      }), z > -1 && e.setSelection(Kt.near(e.doc.resolve(z))), e.scrollIntoView();
    }
    return !0;
  }
  const S = h.pos === c.end() ? v.contentMatchAt(0).defaultType : null, b = H9(C, v.type.name, v.attrs), N = H9(C, c.node().type.name, c.node().attrs);
  e.delete(c.pos, h.pos);
  const O = S ? [
    { type: l, attrs: b },
    { type: S, attrs: N }
  ] : [{ type: l, attrs: b }];
  if (!fh(e.doc, c.pos, 2))
    return !1;
  if (r) {
    const { selection: L, storedMarks: P } = n, { splittableMarks: Y } = i.extensionManager, j = P || L.$to.parentOffset && L.$from.marks();
    if (e.split(c.pos, 2, O).scrollIntoView(), !j || !r)
      return !0;
    const oe = j.filter((ee) => Y.includes(ee.type.name));
    e.ensureMarks(oe);
  }
  return !0;
}, t4 = (t, e) => {
  const n = lS((l) => l.type === e)(t.selection);
  if (!n)
    return !0;
  const r = t.doc.resolve(Math.max(0, n.pos - 1)).before(n.depth);
  if (r === void 0)
    return !0;
  const i = t.doc.nodeAt(r);
  return n.node.type === (i == null ? void 0 : i.type) && Nc(t.doc, n.pos) && t.join(n.pos), !0;
}, n4 = (t, e) => {
  const n = lS((l) => l.type === e)(t.selection);
  if (!n)
    return !0;
  const r = t.doc.resolve(n.start).after(n.depth);
  if (r === void 0)
    return !0;
  const i = t.doc.nodeAt(r);
  return n.node.type === (i == null ? void 0 : i.type) && Nc(t.doc, r) && t.join(r), !0;
}, ez = (t, e, n) => ({ editor: r, tr: i, state: s, dispatch: l, chain: c, commands: h, can: g }) => {
  const { extensions: v, splittableMarks: C } = r.extensionManager, S = ti(t, s.schema), b = ti(e, s.schema), { selection: N, storedMarks: O } = s, { $from: L, $to: P } = N, Y = L.blockRange(P), j = O || N.$to.parentOffset && N.$from.marks();
  if (!Y)
    return !1;
  const oe = lS((ee) => Bx(ee.type.name, v))(N);
  if (Y.depth >= 1 && oe && Y.depth - oe.depth <= 1) {
    if (oe.node.type === S)
      return h.liftListItem(b);
    if (Bx(oe.node.type.name, v) && S.validContent(oe.node.content) && l)
      return c().command(() => (i.setNodeMarkup(oe.pos, S), !0)).command(() => t4(i, S)).command(() => n4(i, S)).run();
  }
  return !n || !j || !l ? c().command(() => g().wrapInList(S) ? !0 : h.clearNodes()).wrapInList(S).command(() => t4(i, S)).command(() => n4(i, S)).run() : c().command(() => {
    const ee = g().wrapInList(S), z = j.filter((H) => C.includes(H.type.name));
    return i.ensureMarks(z), ee ? !0 : h.clearNodes();
  }).wrapInList(S).command(() => t4(i, S)).command(() => n4(i, S)).run();
}, tz = (t, e = {}, n = {}) => ({ state: r, commands: i }) => {
  const { extendEmptyMarkRange: s = !1 } = n, l = Oc(t, r.schema);
  return SC(r, l, e) ? i.unsetMark(l, { extendEmptyMarkRange: s }) : i.setMark(l, e);
}, nz = (t, e, n = {}) => ({ state: r, commands: i }) => {
  const s = ti(t, r.schema), l = ti(e, r.schema);
  return f0(r, s, n) ? i.setNode(l) : i.setNode(s, n);
}, rz = (t, e = {}) => ({ state: n, commands: r }) => {
  const i = ti(t, n.schema);
  return f0(n, i, e) ? r.lift(i) : r.wrapIn(i, e);
}, iz = () => ({ state: t, dispatch: e }) => {
  const n = t.plugins;
  for (let r = 0; r < n.length; r += 1) {
    const i = n[r];
    let s;
    if (i.spec.isInputRules && (s = i.getState(t))) {
      if (e) {
        const l = t.tr, c = s.transform;
        for (let h = c.steps.length - 1; h >= 0; h -= 1)
          l.step(c.steps[h].invert(c.docs[h]));
        if (s.text) {
          const h = l.doc.resolve(s.from).marks();
          l.replaceWith(s.from, s.to, t.schema.text(s.text, h));
        } else
          l.delete(s.from, s.to);
      }
      return !0;
    }
  }
  return !1;
}, oz = () => ({ tr: t, dispatch: e }) => {
  const { selection: n } = t, { empty: r, ranges: i } = n;
  return r || e && i.forEach((s) => {
    t.removeMark(s.$from.pos, s.$to.pos);
  }), !0;
}, az = (t, e = {}) => ({ tr: n, state: r, dispatch: i }) => {
  var s;
  const { extendEmptyMarkRange: l = !1 } = e, { selection: c } = n, h = Oc(t, r.schema), { $from: g, empty: v, ranges: C } = c;
  if (!i)
    return !0;
  if (v && l) {
    let { from: S, to: b } = c;
    const N = (s = g.marks().find((L) => L.type === h)) === null || s === void 0 ? void 0 : s.attrs, O = aS(g, h, N);
    O && (S = O.from, b = O.to), n.removeMark(S, b, h);
  } else
    C.forEach((S) => {
      n.removeMark(S.$from.pos, S.$to.pos, h);
    });
  return n.removeStoredMark(h), !0;
}, sz = (t, e = {}) => ({ tr: n, state: r, dispatch: i }) => {
  let s = null, l = null;
  const c = tv(typeof t == "string" ? t : t.name, r.schema);
  return c ? (c === "node" && (s = ti(t, r.schema)), c === "mark" && (l = Oc(t, r.schema)), i && n.selection.ranges.forEach((h) => {
    const g = h.$from.pos, v = h.$to.pos;
    r.doc.nodesBetween(g, v, (C, S) => {
      s && s === C.type && n.setNodeMarkup(S, void 0, {
        ...C.attrs,
        ...e
      }), l && C.marks.length && C.marks.forEach((b) => {
        if (l === b.type) {
          const N = Math.max(S, g), O = Math.min(S + C.nodeSize, v);
          n.addMark(N, O, l.create({
            ...b.attrs,
            ...e
          }));
        }
      });
    });
  }), !0) : !1;
}, lz = (t, e = {}) => ({ state: n, dispatch: r }) => {
  const i = ti(t, n.schema);
  return _U(i, e)(n, r);
}, uz = (t, e = {}) => ({ state: n, dispatch: r }) => {
  const i = ti(t, n.schema);
  return kU(i, e)(n, r);
};
var cz = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  blur: WU,
  clearContent: KU,
  clearNodes: YU,
  command: QU,
  createParagraphNear: XU,
  deleteCurrentNode: JU,
  deleteNode: ZU,
  deleteRange: eH,
  deleteSelection: tH,
  enter: nH,
  exitCode: rH,
  extendMarkRange: oH,
  first: aH,
  focus: sH,
  forEach: lH,
  insertContent: uH,
  insertContentAt: dH,
  joinUp: hH,
  joinDown: pH,
  joinBackward: mH,
  joinForward: gH,
  keyboardShortcut: vH,
  lift: EH,
  liftEmptyBlock: TH,
  liftListItem: CH,
  newlineInCode: SH,
  resetAttributes: bH,
  scrollIntoView: AH,
  selectAll: xH,
  selectNodeBackward: _H,
  selectNodeForward: kH,
  selectParentNode: NH,
  selectTextblockEnd: wH,
  selectTextblockStart: OH,
  setContent: RH,
  setMark: GH,
  setMeta: WH,
  setNode: KH,
  setNodeSelection: YH,
  setTextSelection: QH,
  sinkListItem: XH,
  splitBlock: JH,
  splitListItem: ZH,
  toggleList: ez,
  toggleMark: tz,
  toggleNode: nz,
  toggleWrap: rz,
  undoInputRule: iz,
  unsetAllMarks: oz,
  unsetMark: az,
  updateAttributes: sz,
  wrapIn: lz,
  wrapInList: uz
});
const fz = Ea.create({
  name: "commands",
  addCommands() {
    return {
      ...cz
    };
  }
}), dz = Ea.create({
  name: "editable",
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("editable"),
        props: {
          editable: () => this.editor.options.editable
        }
      })
    ];
  }
}), hz = Ea.create({
  name: "focusEvents",
  addProseMirrorPlugins() {
    const { editor: t } = this;
    return [
      new Ur({
        key: new Ti("focusEvents"),
        props: {
          handleDOMEvents: {
            focus: (e, n) => {
              t.isFocused = !0;
              const r = t.state.tr.setMeta("focus", { event: n }).setMeta("addToHistory", !1);
              return e.dispatch(r), !1;
            },
            blur: (e, n) => {
              t.isFocused = !1;
              const r = t.state.tr.setMeta("blur", { event: n }).setMeta("addToHistory", !1);
              return e.dispatch(r), !1;
            }
          }
        }
      })
    ];
  }
}), pz = Ea.create({
  name: "keymap",
  addKeyboardShortcuts() {
    const t = () => this.editor.commands.first(({ commands: l }) => [
      () => l.undoInputRule(),
      // maybe convert first text block node to default node
      () => l.command(({ tr: c }) => {
        const { selection: h, doc: g } = c, { empty: v, $anchor: C } = h, { pos: S, parent: b } = C, N = $t.atStart(g).from === S;
        return !v || !N || !b.type.isTextblock || b.textContent.length ? !1 : l.clearNodes();
      }),
      () => l.deleteSelection(),
      () => l.joinBackward(),
      () => l.selectNodeBackward()
    ]), e = () => this.editor.commands.first(({ commands: l }) => [
      () => l.deleteSelection(),
      () => l.deleteCurrentNode(),
      () => l.joinForward(),
      () => l.selectNodeForward()
    ]), r = {
      Enter: () => this.editor.commands.first(({ commands: l }) => [
        () => l.newlineInCode(),
        () => l.createParagraphNear(),
        () => l.liftEmptyBlock(),
        () => l.splitBlock()
      ]),
      "Mod-Enter": () => this.editor.commands.exitCode(),
      Backspace: t,
      "Mod-Backspace": t,
      "Shift-Backspace": t,
      Delete: e,
      "Mod-Delete": e,
      "Mod-a": () => this.editor.commands.selectAll()
    }, i = {
      ...r
    }, s = {
      ...r,
      "Ctrl-h": t,
      "Alt-Backspace": t,
      "Ctrl-d": e,
      "Ctrl-Alt-Backspace": e,
      "Alt-Delete": e,
      "Alt-d": e,
      "Ctrl-a": () => this.editor.commands.selectTextblockStart(),
      "Ctrl-e": () => this.editor.commands.selectTextblockEnd()
    };
    return sS() || pN() ? s : i;
  },
  addProseMirrorPlugins() {
    return [
      // With this plugin we check if the whole document was selected and deleted.
      // In this case we will additionally call `clearNodes()` to convert e.g. a heading
      // to a paragraph if necessary.
      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well
      // with many other commands.
      new Ur({
        key: new Ti("clearDocument"),
        appendTransaction: (t, e, n) => {
          if (!(t.some((N) => N.docChanged) && !e.doc.eq(n.doc)))
            return;
          const { empty: i, from: s, to: l } = e.selection, c = $t.atStart(e.doc).from, h = $t.atEnd(e.doc).to, g = s === c && l === h, v = n.doc.textBetween(0, n.doc.content.size, " ", " ").length === 0;
          if (i || !g || !v)
            return;
          const C = n.tr, S = Qy({
            state: n,
            transaction: C
          }), { commands: b } = new Xy({
            editor: this.editor,
            state: S
          });
          if (b.clearNodes(), !!C.steps.length)
            return C;
        }
      })
    ];
  }
}), mz = Ea.create({
  name: "tabindex",
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("tabindex"),
        props: {
          attributes: this.editor.isEditable ? { tabindex: "0" } : {}
        }
      })
    ];
  }
});
var gz = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ClipboardTextSerializer: GU,
  Commands: fz,
  Editable: dz,
  FocusEvents: hz,
  Keymap: pz,
  Tabindex: mz
});
const yz = `.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror [contenteditable="false"] {
  white-space: normal;
}

.ProseMirror [contenteditable="false"] [contenteditable="true"] {
  white-space: pre-wrap;
}

.ProseMirror pre {
  white-space: pre-wrap;
}

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
  width: 1px !important;
  height: 1px !important;
}

.ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
  margin: 0;
}

.ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  width: 20px;
  border-top: 1px solid black;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.ProseMirror-hideselection *::selection {
  background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
}

.ProseMirror-hideselection * {
  caret-color: transparent;
}

.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

.tippy-box[data-animation=fade][data-state=hidden] {
  opacity: 0
}`;
function vz(t, e) {
  const n = document.querySelector("style[data-tiptap-style]");
  if (n !== null)
    return n;
  const r = document.createElement("style");
  return e && r.setAttribute("nonce", e), r.setAttribute("data-tiptap-style", ""), r.innerHTML = t, document.getElementsByTagName("head")[0].appendChild(r), r;
}
let Ez = class extends MU {
  constructor(e = {}) {
    super(), this.isFocused = !1, this.extensionStorage = {}, this.options = {
      element: document.createElement("div"),
      content: "",
      injectCSS: !0,
      injectNonce: void 0,
      extensions: [],
      autofocus: !1,
      editable: !0,
      editorProps: {},
      parseOptions: {},
      enableInputRules: !0,
      enablePasteRules: !0,
      enableCoreExtensions: !0,
      onBeforeCreate: () => null,
      onCreate: () => null,
      onUpdate: () => null,
      onSelectionUpdate: () => null,
      onTransaction: () => null,
      onFocus: () => null,
      onBlur: () => null,
      onDestroy: () => null
    }, this.isCapturingTransaction = !1, this.capturedTransaction = null, this.setOptions(e), this.createExtensionManager(), this.createCommandManager(), this.createSchema(), this.on("beforeCreate", this.options.onBeforeCreate), this.emit("beforeCreate", { editor: this }), this.createView(), this.injectCSS(), this.on("create", this.options.onCreate), this.on("update", this.options.onUpdate), this.on("selectionUpdate", this.options.onSelectionUpdate), this.on("transaction", this.options.onTransaction), this.on("focus", this.options.onFocus), this.on("blur", this.options.onBlur), this.on("destroy", this.options.onDestroy), window.setTimeout(() => {
      this.isDestroyed || (this.commands.focus(this.options.autofocus), this.emit("create", { editor: this }));
    }, 0);
  }
  /**
   * Returns the editor storage.
   */
  get storage() {
    return this.extensionStorage;
  }
  /**
   * An object of all registered commands.
   */
  get commands() {
    return this.commandManager.commands;
  }
  /**
   * Create a command chain to call multiple commands at once.
   */
  chain() {
    return this.commandManager.chain();
  }
  /**
   * Check if a command or a command chain can be executed. Without executing it.
   */
  can() {
    return this.commandManager.can();
  }
  /**
   * Inject CSS styles.
   */
  injectCSS() {
    this.options.injectCSS && document && (this.css = vz(yz, this.options.injectNonce));
  }
  /**
   * Update editor options.
   *
   * @param options A list of options
   */
  setOptions(e = {}) {
    this.options = {
      ...this.options,
      ...e
    }, !(!this.view || !this.state || this.isDestroyed) && (this.options.editorProps && this.view.setProps(this.options.editorProps), this.view.updateState(this.state));
  }
  /**
   * Update editable state of the editor.
   */
  setEditable(e, n = !0) {
    this.setOptions({ editable: e }), n && this.emit("update", { editor: this, transaction: this.state.tr });
  }
  /**
   * Returns whether the editor is editable.
   */
  get isEditable() {
    return this.options.editable && this.view && this.view.editable;
  }
  /**
   * Returns the editor state.
   */
  get state() {
    return this.view.state;
  }
  /**
   * Register a ProseMirror plugin.
   *
   * @param plugin A ProseMirror plugin
   * @param handlePlugins Control how to merge the plugin into the existing plugins.
   */
  registerPlugin(e, n) {
    const r = lN(n) ? n(e, [...this.state.plugins]) : [...this.state.plugins, e], i = this.state.reconfigure({ plugins: r });
    this.view.updateState(i);
  }
  /**
   * Unregister a ProseMirror plugin.
   *
   * @param nameOrPluginKey The plugins name
   */
  unregisterPlugin(e) {
    if (this.isDestroyed)
      return;
    const n = typeof e == "string" ? `${e}$` : e.key, r = this.state.reconfigure({
      // @ts-ignore
      plugins: this.state.plugins.filter((i) => !i.key.startsWith(n))
    });
    this.view.updateState(r);
  }
  /**
   * Creates an extension manager.
   */
  createExtensionManager() {
    const n = [...this.options.enableCoreExtensions ? Object.values(gz) : [], ...this.options.extensions].filter((r) => ["extension", "node", "mark"].includes(r == null ? void 0 : r.type));
    this.extensionManager = new af(n, this);
  }
  /**
   * Creates an command manager.
   */
  createCommandManager() {
    this.commandManager = new Xy({
      editor: this
    });
  }
  /**
   * Creates a ProseMirror schema.
   */
  createSchema() {
    this.schema = this.extensionManager.schema;
  }
  /**
   * Creates a ProseMirror view.
   */
  createView() {
    const e = mN(this.options.content, this.schema, this.options.parseOptions), n = hN(e, this.options.autofocus);
    this.view = new XB(this.options.element, {
      ...this.options.editorProps,
      dispatchTransaction: this.dispatchTransaction.bind(this),
      state: nh.create({
        doc: e,
        selection: n || void 0
      })
    });
    const r = this.state.reconfigure({
      plugins: this.extensionManager.plugins
    });
    this.view.updateState(r), this.createNodeViews();
    const i = this.view.dom;
    i.editor = this;
  }
  /**
   * Creates all node views.
   */
  createNodeViews() {
    this.view.setProps({
      nodeViews: this.extensionManager.nodeViews
    });
  }
  captureTransaction(e) {
    this.isCapturingTransaction = !0, e(), this.isCapturingTransaction = !1;
    const n = this.capturedTransaction;
    return this.capturedTransaction = null, n;
  }
  /**
   * The callback over which to send transactions (state updates) produced by the view.
   *
   * @param transaction An editor state transaction
   */
  dispatchTransaction(e) {
    if (this.view.isDestroyed)
      return;
    if (this.isCapturingTransaction) {
      if (!this.capturedTransaction) {
        this.capturedTransaction = e;
        return;
      }
      e.steps.forEach((l) => {
        var c;
        return (c = this.capturedTransaction) === null || c === void 0 ? void 0 : c.step(l);
      });
      return;
    }
    const n = this.state.apply(e), r = !this.state.selection.eq(n.selection);
    this.view.updateState(n), this.emit("transaction", {
      editor: this,
      transaction: e
    }), r && this.emit("selectionUpdate", {
      editor: this,
      transaction: e
    });
    const i = e.getMeta("focus"), s = e.getMeta("blur");
    i && this.emit("focus", {
      editor: this,
      event: i.event,
      transaction: e
    }), s && this.emit("blur", {
      editor: this,
      event: s.event,
      transaction: e
    }), !(!e.docChanged || e.getMeta("preventUpdate")) && this.emit("update", {
      editor: this,
      transaction: e
    });
  }
  /**
   * Get attributes of the currently selected node or mark.
   */
  getAttributes(e) {
    return gN(this.state, e);
  }
  isActive(e, n) {
    const r = typeof e == "string" ? e : null, i = typeof e == "string" ? n : e;
    return jH(this.state, r, i);
  }
  /**
   * Get the document as JSON.
   */
  getJSON() {
    return this.state.doc.toJSON();
  }
  /**
   * Get the document as HTML.
   */
  getHTML() {
    return PH(this.state.doc.content, this.schema);
  }
  /**
   * Get the document as text.
   */
  getText(e) {
    const { blockSeparator: n = `

`, textSerializers: r = {} } = e || {};
    return BH(this.state.doc, {
      blockSeparator: n,
      textSerializers: {
        ...fN(this.schema),
        ...r
      }
    });
  }
  /**
   * Check if there is no content.
   */
  get isEmpty() {
    return VH(this.state.doc);
  }
  /**
   * Get the number of characters for the current document.
   *
   * @deprecated
   */
  getCharacterCount() {
    return console.warn('[tiptap warn]: "editor.getCharacterCount()" is deprecated. Please use "editor.storage.characterCount.characters()" instead.'), this.state.doc.content.size - 2;
  }
  /**
   * Destroy the editor.
   */
  destroy() {
    this.emit("destroy"), this.view && this.view.destroy(), this.removeAllListeners();
  }
  /**
   * Check if the editor is already destroyed.
   */
  get isDestroyed() {
    var e;
    return !(!((e = this.view) === null || e === void 0) && e.docView);
  }
};
function Sh(t) {
  return new Zy({
    find: t.find,
    handler: ({ state: e, range: n, match: r }) => {
      const i = Vt(t.getAttributes, void 0, r);
      if (i === !1 || i === null)
        return null;
      const { tr: s } = e, l = r[r.length - 1], c = r[0];
      let h = n.to;
      if (l) {
        const g = c.search(/\S/), v = n.from + c.indexOf(l), C = v + l.length;
        if (py(n.from, n.to, e.doc).filter((b) => b.mark.type.excluded.find((O) => O === t.type && O !== b.mark.type)).filter((b) => b.to > v).length)
          return null;
        C < n.to && s.delete(C, n.to), v > n.from && s.delete(n.from + g, v), h = n.from + g + l.length, s.addMark(n.from + g, h, t.type.create(i || {})), s.removeStoredMark(t.type);
      }
    }
  });
}
function Tz(t) {
  return new Zy({
    find: t.find,
    handler: ({ state: e, range: n, match: r }) => {
      const i = Vt(t.getAttributes, void 0, r) || {}, { tr: s } = e, l = n.from;
      let c = n.to;
      if (r[1]) {
        const h = r[0].lastIndexOf(r[1]);
        let g = l + h;
        g > c ? g = c : c = g + r[1].length;
        const v = r[0][r[0].length - 1];
        s.insertText(v, l + r[0].length - 1), s.replaceWith(g, c, t.type.create(i));
      } else
        r[0] && s.replaceWith(l, c, t.type.create(i));
    }
  });
}
function bC(t) {
  return new Zy({
    find: t.find,
    handler: ({ state: e, range: n, match: r }) => {
      const i = e.doc.resolve(n.from), s = Vt(t.getAttributes, void 0, r) || {};
      if (!i.node(-1).canReplaceWith(i.index(-1), i.indexAfter(-1), t.type))
        return null;
      e.tr.delete(n.from, n.to).setBlockType(n.from, n.from, t.type, s);
    }
  });
}
function d0(t) {
  return new Zy({
    find: t.find,
    handler: ({ state: e, range: n, match: r, chain: i }) => {
      const s = Vt(t.getAttributes, void 0, r) || {}, l = e.tr.delete(n.from, n.to), h = l.doc.resolve(n.from).blockRange(), g = h && WC(h, t.type, s);
      if (!g)
        return null;
      if (l.wrap(h, g), t.keepMarks && t.editor) {
        const { selection: C, storedMarks: S } = e, { splittableMarks: b } = t.editor.extensionManager, N = S || C.$to.parentOffset && C.$from.marks();
        if (N) {
          const O = N.filter((L) => b.includes(L.type.name));
          l.ensureMarks(O);
        }
      }
      if (t.keepAttributes) {
        const C = t.type.name === "bulletList" || t.type.name === "orderedList" ? "listItem" : "taskList";
        i().updateAttributes(C, s).run();
      }
      const v = l.doc.resolve(n.from - 1).nodeBefore;
      v && v.type === t.type && Nc(l.doc, n.from - 1) && (!t.joinPredicate || t.joinPredicate(r, v)) && l.join(n.from - 1);
    }
  });
}
class Ta {
  constructor(e = {}) {
    this.type = "mark", this.name = "mark", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = Vt(it(this, "addOptions", {
      name: this.name
    }))), this.storage = Vt(it(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new Ta(e);
  }
  configure(e = {}) {
    const n = this.extend();
    return n.options = ev(this.options, e), n.storage = Vt(it(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
  extend(e = {}) {
    const n = new Ta(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = Vt(it(n, "addOptions", {
      name: n.name
    })), n.storage = Vt(it(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
  static handleExit({ editor: e, mark: n }) {
    const { tr: r } = e.state, i = e.state.selection.$from;
    if (i.pos === i.end()) {
      const l = i.marks();
      if (!!!l.find((g) => (g == null ? void 0 : g.type.name) === n.name))
        return !1;
      const h = l.find((g) => (g == null ? void 0 : g.type.name) === n.name);
      return h && r.removeStoredMark(h), r.insertText(" ", i.pos), e.view.dispatch(r), !0;
    }
    return !1;
  }
}
class Ar {
  constructor(e = {}) {
    this.type = "node", this.name = "node", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = Vt(it(this, "addOptions", {
      name: this.name
    }))), this.storage = Vt(it(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new Ar(e);
  }
  configure(e = {}) {
    const n = this.extend();
    return n.options = ev(this.options, e), n.storage = Vt(it(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
  extend(e = {}) {
    const n = new Ar(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = Vt(it(n, "addOptions", {
      name: n.name
    })), n.storage = Vt(it(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
}
function Ef(t) {
  return new HU({
    find: t.find,
    handler: ({ state: e, range: n, match: r }) => {
      const i = Vt(t.getAttributes, void 0, r);
      if (i === !1 || i === null)
        return null;
      const { tr: s } = e, l = r[r.length - 1], c = r[0];
      let h = n.to;
      if (l) {
        const g = c.search(/\S/), v = n.from + c.indexOf(l), C = v + l.length;
        if (py(n.from, n.to, e.doc).filter((b) => b.mark.type.excluded.find((O) => O === t.type && O !== b.mark.type)).filter((b) => b.to > v).length)
          return null;
        C < n.to && s.delete(C, n.to), v > n.from && s.delete(n.from + g, v), h = n.from + g + l.length, s.addMark(n.from + g, h, t.type.create(i || {})), s.removeStoredMark(t.type);
      }
    }
  });
}
function Cz(t) {
  return t.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}
const Sz = /^\s*>\s$/, yN = Ar.create({
  name: "blockquote",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "block+",
  group: "block",
  defining: !0,
  parseHTML() {
    return [
      { tag: "blockquote" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["blockquote", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setBlockquote: () => ({ commands: t }) => t.wrapIn(this.name),
      toggleBlockquote: () => ({ commands: t }) => t.toggleWrap(this.name),
      unsetBlockquote: () => ({ commands: t }) => t.lift(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-b": () => this.editor.commands.toggleBlockquote()
    };
  },
  addInputRules() {
    return [
      d0({
        find: Sz,
        type: this.type
      })
    ];
  }
}), bz = /(?:^|\s)((?:\*\*)((?:[^*]+))(?:\*\*))$/, Az = /(?:^|\s)((?:\*\*)((?:[^*]+))(?:\*\*))/g, xz = /(?:^|\s)((?:__)((?:[^__]+))(?:__))$/, _z = /(?:^|\s)((?:__)((?:[^__]+))(?:__))/g, vN = Ta.create({
  name: "bold",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "strong"
      },
      {
        tag: "b",
        getAttrs: (t) => t.style.fontWeight !== "normal" && null
      },
      {
        style: "font-weight",
        getAttrs: (t) => /^(bold(er)?|[5-9]\d{2,})$/.test(t) && null
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["strong", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setBold: () => ({ commands: t }) => t.setMark(this.name),
      toggleBold: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetBold: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-b": () => this.editor.commands.toggleBold(),
      "Mod-B": () => this.editor.commands.toggleBold()
    };
  },
  addInputRules() {
    return [
      Sh({
        find: bz,
        type: this.type
      }),
      Sh({
        find: xz,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      Ef({
        find: Az,
        type: this.type
      }),
      Ef({
        find: _z,
        type: this.type
      })
    ];
  }
}), kz = Ar.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["li", lr(this.options.HTMLAttributes, t), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), Hx = Ta.create({
  name: "textStyle",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "span",
        getAttrs: (t) => t.hasAttribute("style") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["span", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      removeEmptyTextStyle: () => ({ state: t, commands: e }) => {
        const n = nv(t, this.type);
        return Object.entries(n).some(([, i]) => !!i) ? !0 : e.unsetMark(this.name);
      }
    };
  }
}), zx = /^\s*([-+*])\s$/, EN = Ar.create({
  name: "bulletList",
  addOptions() {
    return {
      itemTypeName: "listItem",
      HTMLAttributes: {},
      keepMarks: !1,
      keepAttributes: !1
    };
  },
  group: "block list",
  content() {
    return `${this.options.itemTypeName}+`;
  },
  parseHTML() {
    return [
      { tag: "ul" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["ul", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      toggleBulletList: () => ({ commands: t, chain: e }) => this.options.keepAttributes ? e().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(kz.name, this.editor.getAttributes(Hx.name)).run() : t.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-8": () => this.editor.commands.toggleBulletList()
    };
  },
  addInputRules() {
    let t = d0({
      find: zx,
      type: this.type
    });
    return (this.options.keepMarks || this.options.keepAttributes) && (t = d0({
      find: zx,
      type: this.type,
      keepMarks: this.options.keepMarks,
      keepAttributes: this.options.keepAttributes,
      getAttributes: () => this.editor.getAttributes(Hx.name),
      editor: this.editor
    })), [
      t
    ];
  }
}), Nz = /(?:^|\s)((?:`)((?:[^`]+))(?:`))$/, wz = /(?:^|\s)((?:`)((?:[^`]+))(?:`))/g, TN = Ta.create({
  name: "code",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  excludes: "_",
  code: !0,
  exitable: !0,
  parseHTML() {
    return [
      { tag: "code" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["code", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setCode: () => ({ commands: t }) => t.setMark(this.name),
      toggleCode: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetCode: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-e": () => this.editor.commands.toggleCode()
    };
  },
  addInputRules() {
    return [
      Sh({
        find: Nz,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      Ef({
        find: wz,
        type: this.type
      })
    ];
  }
}), Oz = /^```([a-z]+)?[\s\n]$/, Rz = /^~~~([a-z]+)?[\s\n]$/, CN = Ar.create({
  name: "codeBlock",
  addOptions() {
    return {
      languageClassPrefix: "language-",
      exitOnTripleEnter: !0,
      exitOnArrowDown: !0,
      HTMLAttributes: {}
    };
  },
  content: "text*",
  marks: "",
  group: "block",
  code: !0,
  defining: !0,
  addAttributes() {
    return {
      language: {
        default: null,
        parseHTML: (t) => {
          var e;
          const { languageClassPrefix: n } = this.options, s = [...((e = t.firstElementChild) === null || e === void 0 ? void 0 : e.classList) || []].filter((l) => l.startsWith(n)).map((l) => l.replace(n, ""))[0];
          return s || null;
        },
        rendered: !1
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "pre",
        preserveWhitespace: "full"
      }
    ];
  },
  renderHTML({ node: t, HTMLAttributes: e }) {
    return [
      "pre",
      lr(this.options.HTMLAttributes, e),
      [
        "code",
        {
          class: t.attrs.language ? this.options.languageClassPrefix + t.attrs.language : null
        },
        0
      ]
    ];
  },
  addCommands() {
    return {
      setCodeBlock: (t) => ({ commands: e }) => e.setNode(this.name, t),
      toggleCodeBlock: (t) => ({ commands: e }) => e.toggleNode(this.name, "paragraph", t)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-c": () => this.editor.commands.toggleCodeBlock(),
      // remove code block when at start of document or code block is empty
      Backspace: () => {
        const { empty: t, $anchor: e } = this.editor.state.selection, n = e.pos === 1;
        return !t || e.parent.type.name !== this.name ? !1 : n || !e.parent.textContent.length ? this.editor.commands.clearNodes() : !1;
      },
      // exit node on triple enter
      Enter: ({ editor: t }) => {
        if (!this.options.exitOnTripleEnter)
          return !1;
        const { state: e } = t, { selection: n } = e, { $from: r, empty: i } = n;
        if (!i || r.parent.type !== this.type)
          return !1;
        const s = r.parentOffset === r.parent.nodeSize - 2, l = r.parent.textContent.endsWith(`

`);
        return !s || !l ? !1 : t.chain().command(({ tr: c }) => (c.delete(r.pos - 2, r.pos), !0)).exitCode().run();
      },
      // exit node on arrow down
      ArrowDown: ({ editor: t }) => {
        if (!this.options.exitOnArrowDown)
          return !1;
        const { state: e } = t, { selection: n, doc: r } = e, { $from: i, empty: s } = n;
        if (!s || i.parent.type !== this.type || !(i.parentOffset === i.parent.nodeSize - 2))
          return !1;
        const c = i.after();
        return c === void 0 || r.nodeAt(c) ? !1 : t.commands.exitCode();
      }
    };
  },
  addInputRules() {
    return [
      bC({
        find: Oz,
        type: this.type,
        getAttributes: (t) => ({
          language: t[1]
        })
      }),
      bC({
        find: Rz,
        type: this.type,
        getAttributes: (t) => ({
          language: t[1]
        })
      })
    ];
  },
  addProseMirrorPlugins() {
    return [
      // this plugin creates a code block for pasted content from VS Code
      // we can also detect the copied code language
      new Ur({
        key: new Ti("codeBlockVSCodeHandler"),
        props: {
          handlePaste: (t, e) => {
            if (!e.clipboardData || this.editor.isActive(this.type.name))
              return !1;
            const n = e.clipboardData.getData("text/plain"), r = e.clipboardData.getData("vscode-editor-data"), i = r ? JSON.parse(r) : void 0, s = i == null ? void 0 : i.mode;
            if (!n || !s)
              return !1;
            const { tr: l } = t.state;
            return l.replaceSelectionWith(this.type.create({ language: s })), l.setSelection(Kt.near(l.doc.resolve(Math.max(0, l.selection.from - 2)))), l.insertText(n.replace(/\r\n?/g, `
`)), l.setMeta("paste", !0), t.dispatch(l), !0;
          }
        }
      })
    ];
  }
}), SN = Ar.create({
  name: "doc",
  topNode: !0,
  content: "block+"
});
class rr extends $t {
  /**
  Create a gap cursor.
  */
  constructor(e) {
    super(e, e);
  }
  map(e, n) {
    let r = e.resolve(n.map(this.head));
    return rr.valid(r) ? new rr(r) : $t.near(r);
  }
  content() {
    return Xe.empty;
  }
  eq(e) {
    return e instanceof rr && e.head == this.head;
  }
  toJSON() {
    return { type: "gapcursor", pos: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for GapCursor.fromJSON");
    return new rr(e.resolve(n.pos));
  }
  /**
  @internal
  */
  getBookmark() {
    return new uS(this.anchor);
  }
  /**
  @internal
  */
  static valid(e) {
    let n = e.parent;
    if (n.isTextblock || !Dz(e) || !Mz(e))
      return !1;
    let r = n.type.spec.allowGapCursor;
    if (r != null)
      return r;
    let i = n.contentMatchAt(e.index()).defaultType;
    return i && i.isTextblock;
  }
  /**
  @internal
  */
  static findGapCursorFrom(e, n, r = !1) {
    e:
      for (; ; ) {
        if (!r && rr.valid(e))
          return e;
        let i = e.pos, s = null;
        for (let l = e.depth; ; l--) {
          let c = e.node(l);
          if (n > 0 ? e.indexAfter(l) < c.childCount : e.index(l) > 0) {
            s = c.child(n > 0 ? e.indexAfter(l) : e.index(l) - 1);
            break;
          } else if (l == 0)
            return null;
          i += n;
          let h = e.doc.resolve(i);
          if (rr.valid(h))
            return h;
        }
        for (; ; ) {
          let l = n > 0 ? s.firstChild : s.lastChild;
          if (!l) {
            if (s.isAtom && !s.isText && !_t.isSelectable(s)) {
              e = e.doc.resolve(i + s.nodeSize * n), r = !1;
              continue e;
            }
            break;
          }
          s = l, i += n;
          let c = e.doc.resolve(i);
          if (rr.valid(c))
            return c;
        }
        return null;
      }
  }
}
rr.prototype.visible = !1;
rr.findFrom = rr.findGapCursorFrom;
$t.jsonID("gapcursor", rr);
class uS {
  constructor(e) {
    this.pos = e;
  }
  map(e) {
    return new uS(e.map(this.pos));
  }
  resolve(e) {
    let n = e.resolve(this.pos);
    return rr.valid(n) ? new rr(n) : $t.near(n);
  }
}
function Dz(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.index(e), r = t.node(e);
    if (n == 0) {
      if (r.type.spec.isolating)
        return !0;
      continue;
    }
    for (let i = r.child(n - 1); ; i = i.lastChild) {
      if (i.childCount == 0 && !i.inlineContent || i.isAtom || i.type.spec.isolating)
        return !0;
      if (i.inlineContent)
        return !1;
    }
  }
  return !0;
}
function Mz(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.indexAfter(e), r = t.node(e);
    if (n == r.childCount) {
      if (r.type.spec.isolating)
        return !0;
      continue;
    }
    for (let i = r.child(n); ; i = i.firstChild) {
      if (i.childCount == 0 && !i.inlineContent || i.isAtom || i.type.spec.isolating)
        return !0;
      if (i.inlineContent)
        return !1;
    }
  }
  return !0;
}
function Lz() {
  return new Ur({
    props: {
      decorations: Bz,
      createSelectionBetween(t, e, n) {
        return e.pos == n.pos && rr.valid(n) ? new rr(n) : null;
      },
      handleClick: Pz,
      handleKeyDown: Iz,
      handleDOMEvents: { beforeinput: Fz }
    }
  });
}
const Iz = tN({
  ArrowLeft: m9("horiz", -1),
  ArrowRight: m9("horiz", 1),
  ArrowUp: m9("vert", -1),
  ArrowDown: m9("vert", 1)
});
function m9(t, e) {
  const n = t == "vert" ? e > 0 ? "down" : "up" : e > 0 ? "right" : "left";
  return function(r, i, s) {
    let l = r.selection, c = e > 0 ? l.$to : l.$from, h = l.empty;
    if (l instanceof Kt) {
      if (!s.endOfTextblock(n) || c.depth == 0)
        return !1;
      h = !1, c = r.doc.resolve(e > 0 ? c.after() : c.before());
    }
    let g = rr.findGapCursorFrom(c, e, h);
    return g ? (i && i(r.tr.setSelection(new rr(g))), !0) : !1;
  };
}
function Pz(t, e, n) {
  if (!t || !t.editable)
    return !1;
  let r = t.state.doc.resolve(e);
  if (!rr.valid(r))
    return !1;
  let i = t.posAtCoords({ left: n.clientX, top: n.clientY });
  return i && i.inside > -1 && _t.isSelectable(t.state.doc.nodeAt(i.inside)) ? !1 : (t.dispatch(t.state.tr.setSelection(new rr(r))), !0);
}
function Fz(t, e) {
  if (e.inputType != "insertCompositionText" || !(t.state.selection instanceof rr))
    return !1;
  let { $from: n } = t.state.selection, r = n.parent.contentMatchAt(n.index()).findWrapping(t.state.schema.nodes.text);
  if (!r)
    return !1;
  let i = Oe.empty;
  for (let l = r.length - 1; l >= 0; l--)
    i = Oe.from(r[l].createAndFill(null, i));
  let s = t.state.tr.replace(n.pos, n.pos, new Xe(i, 0, 0));
  return s.setSelection(Kt.near(s.doc.resolve(n.pos + 1))), t.dispatch(s), !1;
}
function Bz(t) {
  if (!(t.selection instanceof rr))
    return null;
  let e = document.createElement("div");
  return e.className = "ProseMirror-gapcursor", sr.create(t.doc, [ho.widget(t.selection.head, e, { key: "gapcursor" })]);
}
const Uz = Ea.create({
  name: "gapCursor",
  addProseMirrorPlugins() {
    return [
      Lz()
    ];
  },
  extendNodeSchema(t) {
    var e;
    const n = {
      name: t.name,
      options: t.options,
      storage: t.storage
    };
    return {
      allowGapCursor: (e = Vt(it(t, "allowGapCursor", n))) !== null && e !== void 0 ? e : null
    };
  }
}), bN = Ar.create({
  name: "hardBreak",
  addOptions() {
    return {
      keepMarks: !0,
      HTMLAttributes: {}
    };
  },
  inline: !0,
  group: "inline",
  selectable: !1,
  parseHTML() {
    return [
      { tag: "br" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["br", lr(this.options.HTMLAttributes, t)];
  },
  renderText() {
    return `
`;
  },
  addCommands() {
    return {
      setHardBreak: () => ({ commands: t, chain: e, state: n, editor: r }) => t.first([
        () => t.exitCode(),
        () => t.command(() => {
          const { selection: i, storedMarks: s } = n;
          if (i.$from.parent.type.spec.isolating)
            return !1;
          const { keepMarks: l } = this.options, { splittableMarks: c } = r.extensionManager, h = s || i.$to.parentOffset && i.$from.marks();
          return e().insertContent({ type: this.name }).command(({ tr: g, dispatch: v }) => {
            if (v && h && l) {
              const C = h.filter((S) => c.includes(S.type.name));
              g.ensureMarks(C);
            }
            return !0;
          }).run();
        })
      ])
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Enter": () => this.editor.commands.setHardBreak(),
      "Shift-Enter": () => this.editor.commands.setHardBreak()
    };
  }
}), Hz = Ar.create({
  name: "heading",
  addOptions() {
    return {
      levels: [1, 2, 3, 4, 5, 6],
      HTMLAttributes: {}
    };
  },
  content: "inline*",
  group: "block",
  defining: !0,
  addAttributes() {
    return {
      level: {
        default: 1,
        rendered: !1
      }
    };
  },
  parseHTML() {
    return this.options.levels.map((t) => ({
      tag: `h${t}`,
      attrs: { level: t }
    }));
  },
  renderHTML({ node: t, HTMLAttributes: e }) {
    return [`h${this.options.levels.includes(t.attrs.level) ? t.attrs.level : this.options.levels[0]}`, lr(this.options.HTMLAttributes, e), 0];
  },
  addCommands() {
    return {
      setHeading: (t) => ({ commands: e }) => this.options.levels.includes(t.level) ? e.setNode(this.name, t) : !1,
      toggleHeading: (t) => ({ commands: e }) => this.options.levels.includes(t.level) ? e.toggleNode(this.name, "paragraph", t) : !1
    };
  },
  addKeyboardShortcuts() {
    return this.options.levels.reduce((t, e) => ({
      ...t,
      [`Mod-Alt-${e}`]: () => this.editor.commands.toggleHeading({ level: e })
    }), {});
  },
  addInputRules() {
    return this.options.levels.map((t) => bC({
      find: new RegExp(`^(#{1,${t}})\\s$`),
      type: this.type,
      getAttributes: {
        level: t
      }
    }));
  }
});
var my = 200, vi = function() {
};
vi.prototype.append = function(e) {
  return e.length ? (e = vi.from(e), !this.length && e || e.length < my && this.leafAppend(e) || this.length < my && e.leafPrepend(this) || this.appendInner(e)) : this;
};
vi.prototype.prepend = function(e) {
  return e.length ? vi.from(e).append(this) : this;
};
vi.prototype.appendInner = function(e) {
  return new zz(this, e);
};
vi.prototype.slice = function(e, n) {
  return e === void 0 && (e = 0), n === void 0 && (n = this.length), e >= n ? vi.empty : this.sliceInner(Math.max(0, e), Math.min(this.length, n));
};
vi.prototype.get = function(e) {
  if (!(e < 0 || e >= this.length))
    return this.getInner(e);
};
vi.prototype.forEach = function(e, n, r) {
  n === void 0 && (n = 0), r === void 0 && (r = this.length), n <= r ? this.forEachInner(e, n, r, 0) : this.forEachInvertedInner(e, n, r, 0);
};
vi.prototype.map = function(e, n, r) {
  n === void 0 && (n = 0), r === void 0 && (r = this.length);
  var i = [];
  return this.forEach(function(s, l) {
    return i.push(e(s, l));
  }, n, r), i;
};
vi.from = function(e) {
  return e instanceof vi ? e : e && e.length ? new AN(e) : vi.empty;
};
var AN = /* @__PURE__ */ function(t) {
  function e(r) {
    t.call(this), this.values = r;
  }
  t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e;
  var n = { length: { configurable: !0 }, depth: { configurable: !0 } };
  return e.prototype.flatten = function() {
    return this.values;
  }, e.prototype.sliceInner = function(i, s) {
    return i == 0 && s == this.length ? this : new e(this.values.slice(i, s));
  }, e.prototype.getInner = function(i) {
    return this.values[i];
  }, e.prototype.forEachInner = function(i, s, l, c) {
    for (var h = s; h < l; h++)
      if (i(this.values[h], c + h) === !1)
        return !1;
  }, e.prototype.forEachInvertedInner = function(i, s, l, c) {
    for (var h = s - 1; h >= l; h--)
      if (i(this.values[h], c + h) === !1)
        return !1;
  }, e.prototype.leafAppend = function(i) {
    if (this.length + i.length <= my)
      return new e(this.values.concat(i.flatten()));
  }, e.prototype.leafPrepend = function(i) {
    if (this.length + i.length <= my)
      return new e(i.flatten().concat(this.values));
  }, n.length.get = function() {
    return this.values.length;
  }, n.depth.get = function() {
    return 0;
  }, Object.defineProperties(e.prototype, n), e;
}(vi);
vi.empty = new AN([]);
var zz = /* @__PURE__ */ function(t) {
  function e(n, r) {
    t.call(this), this.left = n, this.right = r, this.length = n.length + r.length, this.depth = Math.max(n.depth, r.depth) + 1;
  }
  return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flatten = function() {
    return this.left.flatten().concat(this.right.flatten());
  }, e.prototype.getInner = function(r) {
    return r < this.left.length ? this.left.get(r) : this.right.get(r - this.left.length);
  }, e.prototype.forEachInner = function(r, i, s, l) {
    var c = this.left.length;
    if (i < c && this.left.forEachInner(r, i, Math.min(s, c), l) === !1 || s > c && this.right.forEachInner(r, Math.max(i - c, 0), Math.min(this.length, s) - c, l + c) === !1)
      return !1;
  }, e.prototype.forEachInvertedInner = function(r, i, s, l) {
    var c = this.left.length;
    if (i > c && this.right.forEachInvertedInner(r, i - c, Math.max(s, c) - c, l + c) === !1 || s < c && this.left.forEachInvertedInner(r, Math.min(i, c), s, l) === !1)
      return !1;
  }, e.prototype.sliceInner = function(r, i) {
    if (r == 0 && i == this.length)
      return this;
    var s = this.left.length;
    return i <= s ? this.left.slice(r, i) : r >= s ? this.right.slice(r - s, i - s) : this.left.slice(r, s).append(this.right.slice(0, i - s));
  }, e.prototype.leafAppend = function(r) {
    var i = this.right.leafAppend(r);
    if (i)
      return new e(this.left, i);
  }, e.prototype.leafPrepend = function(r) {
    var i = this.left.leafPrepend(r);
    if (i)
      return new e(i, this.right);
  }, e.prototype.appendInner = function(r) {
    return this.left.depth >= Math.max(this.right.depth, r.depth) + 1 ? new e(this.left, new e(this.right, r)) : new e(this, r);
  }, e;
}(vi), xN = vi;
const qz = 500;
class ts {
  constructor(e, n) {
    this.items = e, this.eventCount = n;
  }
  // Pop the latest event off the branch's history and apply it
  // to a document transform.
  popEvent(e, n) {
    if (this.eventCount == 0)
      return null;
    let r = this.items.length;
    for (; ; r--)
      if (this.items.get(r - 1).selection) {
        --r;
        break;
      }
    let i, s;
    n && (i = this.remapping(r, this.items.length), s = i.maps.length);
    let l = e.tr, c, h, g = [], v = [];
    return this.items.forEach((C, S) => {
      if (!C.step) {
        i || (i = this.remapping(r, S + 1), s = i.maps.length), s--, v.push(C);
        return;
      }
      if (i) {
        v.push(new nl(C.map));
        let b = C.step.map(i.slice(s)), N;
        b && l.maybeStep(b).doc && (N = l.mapping.maps[l.mapping.maps.length - 1], g.push(new nl(N, void 0, void 0, g.length + v.length))), s--, N && i.appendMap(N, s);
      } else
        l.maybeStep(C.step);
      if (C.selection)
        return c = i ? C.selection.map(i.slice(s)) : C.selection, h = new ts(this.items.slice(0, r).append(v.reverse().concat(g)), this.eventCount - 1), !1;
    }, this.items.length, 0), { remaining: h, transform: l, selection: c };
  }
  // Create a new branch with the given transform added.
  addTransform(e, n, r, i) {
    let s = [], l = this.eventCount, c = this.items, h = !i && c.length ? c.get(c.length - 1) : null;
    for (let v = 0; v < e.steps.length; v++) {
      let C = e.steps[v].invert(e.docs[v]), S = new nl(e.mapping.maps[v], C, n), b;
      (b = h && h.merge(S)) && (S = b, v ? s.pop() : c = c.slice(0, c.length - 1)), s.push(S), n && (l++, n = void 0), i || (h = S);
    }
    let g = l - r.depth;
    return g > Vz && (c = jz(c, g), l -= g), new ts(c.append(s), l);
  }
  remapping(e, n) {
    let r = new ch();
    return this.items.forEach((i, s) => {
      let l = i.mirrorOffset != null && s - i.mirrorOffset >= e ? r.maps.length - i.mirrorOffset : void 0;
      r.appendMap(i.map, l);
    }, e, n), r;
  }
  addMaps(e) {
    return this.eventCount == 0 ? this : new ts(this.items.append(e.map((n) => new nl(n))), this.eventCount);
  }
  // When the collab module receives remote changes, the history has
  // to know about those, so that it can adjust the steps that were
  // rebased on top of the remote changes, and include the position
  // maps for the remote changes in its array of items.
  rebased(e, n) {
    if (!this.eventCount)
      return this;
    let r = [], i = Math.max(0, this.items.length - n), s = e.mapping, l = e.steps.length, c = this.eventCount;
    this.items.forEach((S) => {
      S.selection && c--;
    }, i);
    let h = n;
    this.items.forEach((S) => {
      let b = s.getMirror(--h);
      if (b == null)
        return;
      l = Math.min(l, b);
      let N = s.maps[b];
      if (S.step) {
        let O = e.steps[b].invert(e.docs[b]), L = S.selection && S.selection.map(s.slice(h + 1, b));
        L && c++, r.push(new nl(N, O, L));
      } else
        r.push(new nl(N));
    }, i);
    let g = [];
    for (let S = n; S < l; S++)
      g.push(new nl(s.maps[S]));
    let v = this.items.slice(0, i).append(g).append(r), C = new ts(v, c);
    return C.emptyItemCount() > qz && (C = C.compress(this.items.length - r.length)), C;
  }
  emptyItemCount() {
    let e = 0;
    return this.items.forEach((n) => {
      n.step || e++;
    }), e;
  }
  // Compressing a branch means rewriting it to push the air (map-only
  // items) out. During collaboration, these naturally accumulate
  // because each remote change adds one. The `upto` argument is used
  // to ensure that only the items below a given level are compressed,
  // because `rebased` relies on a clean, untouched set of items in
  // order to associate old items with rebased steps.
  compress(e = this.items.length) {
    let n = this.remapping(0, e), r = n.maps.length, i = [], s = 0;
    return this.items.forEach((l, c) => {
      if (c >= e)
        i.push(l), l.selection && s++;
      else if (l.step) {
        let h = l.step.map(n.slice(r)), g = h && h.getMap();
        if (r--, g && n.appendMap(g, r), h) {
          let v = l.selection && l.selection.map(n.slice(r));
          v && s++;
          let C = new nl(g.invert(), h, v), S, b = i.length - 1;
          (S = i.length && i[b].merge(C)) ? i[b] = S : i.push(C);
        }
      } else
        l.map && r--;
    }, this.items.length, 0), new ts(xN.from(i.reverse()), s);
  }
}
ts.empty = new ts(xN.empty, 0);
function jz(t, e) {
  let n;
  return t.forEach((r, i) => {
    if (r.selection && e-- == 0)
      return n = i, !1;
  }), t.slice(n);
}
class nl {
  constructor(e, n, r, i) {
    this.map = e, this.step = n, this.selection = r, this.mirrorOffset = i;
  }
  merge(e) {
    if (this.step && e.step && !e.selection) {
      let n = e.step.merge(this.step);
      if (n)
        return new nl(n.getMap().invert(), n, this.selection);
    }
  }
}
class dc {
  constructor(e, n, r, i) {
    this.done = e, this.undone = n, this.prevRanges = r, this.prevTime = i;
  }
}
const Vz = 20;
function $z(t, e, n, r) {
  let i = n.getMeta(bc), s;
  if (i)
    return i.historyState;
  n.getMeta(Wz) && (t = new dc(t.done, t.undone, null, 0));
  let l = n.getMeta("appendedTransaction");
  if (n.steps.length == 0)
    return t;
  if (l && l.getMeta(bc))
    return l.getMeta(bc).redo ? new dc(t.done.addTransform(n, void 0, r, z9(e)), t.undone, qx(n.mapping.maps[n.steps.length - 1]), t.prevTime) : new dc(t.done, t.undone.addTransform(n, void 0, r, z9(e)), null, t.prevTime);
  if (n.getMeta("addToHistory") !== !1 && !(l && l.getMeta("addToHistory") === !1)) {
    let c = t.prevTime == 0 || !l && (t.prevTime < (n.time || 0) - r.newGroupDelay || !Gz(n, t.prevRanges)), h = l ? r4(t.prevRanges, n.mapping) : qx(n.mapping.maps[n.steps.length - 1]);
    return new dc(t.done.addTransform(n, c ? e.selection.getBookmark() : void 0, r, z9(e)), ts.empty, h, n.time);
  } else
    return (s = n.getMeta("rebased")) ? new dc(t.done.rebased(n, s), t.undone.rebased(n, s), r4(t.prevRanges, n.mapping), t.prevTime) : new dc(t.done.addMaps(n.mapping.maps), t.undone.addMaps(n.mapping.maps), r4(t.prevRanges, n.mapping), t.prevTime);
}
function Gz(t, e) {
  if (!e)
    return !1;
  if (!t.docChanged)
    return !0;
  let n = !1;
  return t.mapping.maps[0].forEach((r, i) => {
    for (let s = 0; s < e.length; s += 2)
      r <= e[s + 1] && i >= e[s] && (n = !0);
  }), n;
}
function qx(t) {
  let e = [];
  return t.forEach((n, r, i, s) => e.push(i, s)), e;
}
function r4(t, e) {
  if (!t)
    return null;
  let n = [];
  for (let r = 0; r < t.length; r += 2) {
    let i = e.map(t[r], 1), s = e.map(t[r + 1], -1);
    i <= s && n.push(i, s);
  }
  return n;
}
function _N(t, e, n, r) {
  let i = z9(e), s = bc.get(e).spec.config, l = (r ? t.undone : t.done).popEvent(e, i);
  if (!l)
    return;
  let c = l.selection.resolve(l.transform.doc), h = (r ? t.done : t.undone).addTransform(l.transform, e.selection.getBookmark(), s, i), g = new dc(r ? h : l.remaining, r ? l.remaining : h, null, 0);
  n(l.transform.setSelection(c).setMeta(bc, { redo: r, historyState: g }).scrollIntoView());
}
let i4 = !1, jx = null;
function z9(t) {
  let e = t.plugins;
  if (jx != e) {
    i4 = !1, jx = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].spec.historyPreserveItems) {
        i4 = !0;
        break;
      }
  }
  return i4;
}
const bc = new Ti("history"), Wz = new Ti("closeHistory");
function Kz(t = {}) {
  return t = {
    depth: t.depth || 100,
    newGroupDelay: t.newGroupDelay || 500
  }, new Ur({
    key: bc,
    state: {
      init() {
        return new dc(ts.empty, ts.empty, null, 0);
      },
      apply(e, n, r) {
        return $z(n, r, e, t);
      }
    },
    config: t,
    props: {
      handleDOMEvents: {
        beforeinput(e, n) {
          let r = n.inputType, i = r == "historyUndo" ? kN : r == "historyRedo" ? NN : null;
          return i ? (n.preventDefault(), i(e.state, e.dispatch)) : !1;
        }
      }
    }
  });
}
const kN = (t, e) => {
  let n = bc.getState(t);
  return !n || n.done.eventCount == 0 ? !1 : (e && _N(n, t, e, !1), !0);
}, NN = (t, e) => {
  let n = bc.getState(t);
  return !n || n.undone.eventCount == 0 ? !1 : (e && _N(n, t, e, !0), !0);
}, wN = Ea.create({
  name: "history",
  addOptions() {
    return {
      depth: 100,
      newGroupDelay: 500
    };
  },
  addCommands() {
    return {
      undo: () => ({ state: t, dispatch: e }) => kN(t, e),
      redo: () => ({ state: t, dispatch: e }) => NN(t, e)
    };
  },
  addProseMirrorPlugins() {
    return [
      Kz(this.options)
    ];
  },
  addKeyboardShortcuts() {
    return {
      "Mod-z": () => this.editor.commands.undo(),
      "Mod-y": () => this.editor.commands.redo(),
      "Shift-Mod-z": () => this.editor.commands.redo(),
      // Russian keyboard layouts
      "Mod-я": () => this.editor.commands.undo(),
      "Shift-Mod-я": () => this.editor.commands.redo()
    };
  }
}), Yz = /(?:^|\s)((?:\*)((?:[^*]+))(?:\*))$/, Qz = /(?:^|\s)((?:\*)((?:[^*]+))(?:\*))/g, Xz = /(?:^|\s)((?:_)((?:[^_]+))(?:_))$/, Jz = /(?:^|\s)((?:_)((?:[^_]+))(?:_))/g, ON = Ta.create({
  name: "italic",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "em"
      },
      {
        tag: "i",
        getAttrs: (t) => t.style.fontStyle !== "normal" && null
      },
      {
        style: "font-style=italic"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["em", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setItalic: () => ({ commands: t }) => t.setMark(this.name),
      toggleItalic: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetItalic: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-i": () => this.editor.commands.toggleItalic(),
      "Mod-I": () => this.editor.commands.toggleItalic()
    };
  },
  addInputRules() {
    return [
      Sh({
        find: Yz,
        type: this.type
      }),
      Sh({
        find: Xz,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      Ef({
        find: Qz,
        type: this.type
      }),
      Ef({
        find: Jz,
        type: this.type
      })
    ];
  }
}), RN = Ta.create({
  name: "underline",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "u"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (t) => t.includes("underline") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["u", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setUnderline: () => ({ commands: t }) => t.setMark(this.name),
      toggleUnderline: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetUnderline: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-u": () => this.editor.commands.toggleUnderline(),
      "Mod-U": () => this.editor.commands.toggleUnderline()
    };
  }
}), DN = Ar.create({
  name: "horizontalRule",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  group: "block",
  parseHTML() {
    return [{ tag: "hr" }];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["hr", lr(this.options.HTMLAttributes, t)];
  },
  addCommands() {
    return {
      setHorizontalRule: () => ({ chain: t }) => t().insertContent({ type: this.name }).command(({ tr: e, dispatch: n }) => {
        var r;
        if (n) {
          const { $to: i } = e.selection, s = i.end();
          if (i.nodeAfter)
            e.setSelection(Kt.create(e.doc, i.pos));
          else {
            const l = (r = i.parent.type.contentMatch.defaultType) === null || r === void 0 ? void 0 : r.create();
            l && (e.insert(s, l), e.setSelection(Kt.create(e.doc, s)));
          }
          e.scrollIntoView();
        }
        return !0;
      }).run()
    };
  },
  addInputRules() {
    return [
      Tz({
        find: /^(?:---|—-|___\s|\*\*\*\s)$/,
        type: this.type
      })
    ];
  }
}), MN = Ar.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["li", lr(this.options.HTMLAttributes, t), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), Zz = Ar.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["li", lr(this.options.HTMLAttributes, t), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), Vx = Ta.create({
  name: "textStyle",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "span",
        getAttrs: (t) => t.hasAttribute("style") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["span", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      removeEmptyTextStyle: () => ({ state: t, commands: e }) => {
        const n = nv(t, this.type);
        return Object.entries(n).some(([, i]) => !!i) ? !0 : e.unsetMark(this.name);
      }
    };
  }
}), $x = /^(\d+)\.\s$/, LN = Ar.create({
  name: "orderedList",
  addOptions() {
    return {
      itemTypeName: "listItem",
      HTMLAttributes: {},
      keepMarks: !1,
      keepAttributes: !1
    };
  },
  group: "block list",
  content() {
    return `${this.options.itemTypeName}+`;
  },
  addAttributes() {
    return {
      start: {
        default: 1,
        parseHTML: (t) => t.hasAttribute("start") ? parseInt(t.getAttribute("start") || "", 10) : 1
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "ol"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    const { start: e, ...n } = t;
    return e === 1 ? ["ol", lr(this.options.HTMLAttributes, n), 0] : ["ol", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      toggleOrderedList: () => ({ commands: t, chain: e }) => this.options.keepAttributes ? e().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(Zz.name, this.editor.getAttributes(Vx.name)).run() : t.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-7": () => this.editor.commands.toggleOrderedList()
    };
  },
  addInputRules() {
    let t = d0({
      find: $x,
      type: this.type
    });
    return (this.options.keepMarks || this.options.keepAttributes) && (t = d0({
      find: $x,
      type: this.type,
      keepMarks: this.options.keepMarks,
      keepAttributes: this.options.keepAttributes,
      getAttributes: () => this.editor.getAttributes(Vx.name),
      editor: this.editor
    })), [
      t
    ];
  }
}), IN = Ar.create({
  name: "paragraph",
  priority: 1e3,
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  group: "block",
  content: "inline*",
  parseHTML() {
    return [
      { tag: "p" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["p", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setParagraph: () => ({ commands: t }) => t.setNode(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-0": () => this.editor.commands.setParagraph()
    };
  }
}), PN = Ea.create({
  name: "placeholder",
  addOptions() {
    return {
      emptyEditorClass: "is-editor-empty",
      emptyNodeClass: "is-empty",
      placeholder: "Write something …",
      showOnlyWhenEditable: !0,
      showOnlyCurrent: !0,
      includeChildren: !1
    };
  },
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("placeholder"),
        props: {
          decorations: ({ doc: t, selection: e }) => {
            const n = this.editor.isEditable || !this.options.showOnlyWhenEditable, { anchor: r } = e, i = [];
            if (!n)
              return null;
            const s = t.type.createAndFill(), l = (s == null ? void 0 : s.sameMarkup(t)) && s.content.findDiffStart(t.content) === null;
            return t.descendants((c, h) => {
              const g = r >= h && r <= h + c.nodeSize, v = !c.isLeaf && !c.childCount;
              if ((g || !this.options.showOnlyCurrent) && v) {
                const C = [this.options.emptyNodeClass];
                l && C.push(this.options.emptyEditorClass);
                const S = ho.node(h, h + c.nodeSize, {
                  class: C.join(" "),
                  "data-placeholder": typeof this.options.placeholder == "function" ? this.options.placeholder({
                    editor: this.editor,
                    node: c,
                    pos: h,
                    hasAnchor: g
                  }) : this.options.placeholder
                });
                i.push(S);
              }
              return this.options.includeChildren;
            }), sr.create(t, i);
          }
        }
      })
    ];
  }
}), eq = /(?:^|\s)((?:~~)((?:[^~]+))(?:~~))$/, tq = /(?:^|\s)((?:~~)((?:[^~]+))(?:~~))/g, FN = Ta.create({
  name: "strike",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "s"
      },
      {
        tag: "del"
      },
      {
        tag: "strike"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (t) => t.includes("line-through") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["s", lr(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setStrike: () => ({ commands: t }) => t.setMark(this.name),
      toggleStrike: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetStrike: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-x": () => this.editor.commands.toggleStrike()
    };
  },
  addInputRules() {
    return [
      Sh({
        find: eq,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      Ef({
        find: tq,
        type: this.type
      })
    ];
  }
}), BN = Ar.create({
  name: "text",
  group: "inline"
});
var gy = {}, nq = {
  get exports() {
    return gy;
  },
  set exports(t) {
    gy = t;
  }
}, Mo = {}, yy = {}, rq = {
  get exports() {
    return yy;
  },
  set exports(t) {
    yy = t;
  }
}, o4 = {};
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Gx;
function iq() {
  return Gx || (Gx = 1, function(t) {
    var e, n, r, i;
    if (typeof performance == "object" && typeof performance.now == "function") {
      var s = performance;
      t.unstable_now = function() {
        return s.now();
      };
    } else {
      var l = Date, c = l.now();
      t.unstable_now = function() {
        return l.now() - c;
      };
    }
    if (typeof window > "u" || typeof MessageChannel != "function") {
      var h = null, g = null, v = function() {
        if (h !== null)
          try {
            var I = t.unstable_now();
            h(!0, I), h = null;
          } catch (F) {
            throw setTimeout(v, 0), F;
          }
      };
      e = function(I) {
        h !== null ? setTimeout(e, 0, I) : (h = I, setTimeout(v, 0));
      }, n = function(I, F) {
        g = setTimeout(I, F);
      }, r = function() {
        clearTimeout(g);
      }, t.unstable_shouldYield = function() {
        return !1;
      }, i = t.unstable_forceFrameRate = function() {
      };
    } else {
      var C = window.setTimeout, S = window.clearTimeout;
      if (typeof console < "u") {
        var b = window.cancelAnimationFrame;
        typeof window.requestAnimationFrame != "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), typeof b != "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
      }
      var N = !1, O = null, L = -1, P = 5, Y = 0;
      t.unstable_shouldYield = function() {
        return t.unstable_now() >= Y;
      }, i = function() {
      }, t.unstable_forceFrameRate = function(I) {
        0 > I || 125 < I ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < I ? Math.floor(1e3 / I) : 5;
      };
      var j = new MessageChannel(), oe = j.port2;
      j.port1.onmessage = function() {
        if (O !== null) {
          var I = t.unstable_now();
          Y = I + P;
          try {
            O(!0, I) ? oe.postMessage(null) : (N = !1, O = null);
          } catch (F) {
            throw oe.postMessage(null), F;
          }
        } else
          N = !1;
      }, e = function(I) {
        O = I, N || (N = !0, oe.postMessage(null));
      }, n = function(I, F) {
        L = C(function() {
          I(t.unstable_now());
        }, F);
      }, r = function() {
        S(L), L = -1;
      };
    }
    function ee(I, F) {
      var we = I.length;
      I.push(F);
      e:
        for (; ; ) {
          var Je = we - 1 >>> 1, Ze = I[Je];
          if (Ze !== void 0 && 0 < Z(Ze, F))
            I[Je] = F, I[we] = Ze, we = Je;
          else
            break e;
        }
    }
    function z(I) {
      return I = I[0], I === void 0 ? null : I;
    }
    function H(I) {
      var F = I[0];
      if (F !== void 0) {
        var we = I.pop();
        if (we !== F) {
          I[0] = we;
          e:
            for (var Je = 0, Ze = I.length; Je < Ze; ) {
              var rt = 2 * (Je + 1) - 1, Yt = I[rt], Lt = rt + 1, It = I[Lt];
              if (Yt !== void 0 && 0 > Z(Yt, we))
                It !== void 0 && 0 > Z(It, Yt) ? (I[Je] = It, I[Lt] = we, Je = Lt) : (I[Je] = Yt, I[rt] = we, Je = rt);
              else if (It !== void 0 && 0 > Z(It, we))
                I[Je] = It, I[Lt] = we, Je = Lt;
              else
                break e;
            }
        }
        return F;
      }
      return null;
    }
    function Z(I, F) {
      var we = I.sortIndex - F.sortIndex;
      return we !== 0 ? we : I.id - F.id;
    }
    var me = [], Ie = [], fe = 1, pe = null, Ce = 3, Be = !1, J = !1, lt = !1;
    function te(I) {
      for (var F = z(Ie); F !== null; ) {
        if (F.callback === null)
          H(Ie);
        else if (F.startTime <= I)
          H(Ie), F.sortIndex = F.expirationTime, ee(me, F);
        else
          break;
        F = z(Ie);
      }
    }
    function he(I) {
      if (lt = !1, te(I), !J)
        if (z(me) !== null)
          J = !0, e(De);
        else {
          var F = z(Ie);
          F !== null && n(he, F.startTime - I);
        }
    }
    function De(I, F) {
      J = !1, lt && (lt = !1, r()), Be = !0;
      var we = Ce;
      try {
        for (te(F), pe = z(me); pe !== null && (!(pe.expirationTime > F) || I && !t.unstable_shouldYield()); ) {
          var Je = pe.callback;
          if (typeof Je == "function") {
            pe.callback = null, Ce = pe.priorityLevel;
            var Ze = Je(pe.expirationTime <= F);
            F = t.unstable_now(), typeof Ze == "function" ? pe.callback = Ze : pe === z(me) && H(me), te(F);
          } else
            H(me);
          pe = z(me);
        }
        if (pe !== null)
          var rt = !0;
        else {
          var Yt = z(Ie);
          Yt !== null && n(he, Yt.startTime - F), rt = !1;
        }
        return rt;
      } finally {
        pe = null, Ce = we, Be = !1;
      }
    }
    var We = i;
    t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(I) {
      I.callback = null;
    }, t.unstable_continueExecution = function() {
      J || Be || (J = !0, e(De));
    }, t.unstable_getCurrentPriorityLevel = function() {
      return Ce;
    }, t.unstable_getFirstCallbackNode = function() {
      return z(me);
    }, t.unstable_next = function(I) {
      switch (Ce) {
        case 1:
        case 2:
        case 3:
          var F = 3;
          break;
        default:
          F = Ce;
      }
      var we = Ce;
      Ce = F;
      try {
        return I();
      } finally {
        Ce = we;
      }
    }, t.unstable_pauseExecution = function() {
    }, t.unstable_requestPaint = We, t.unstable_runWithPriority = function(I, F) {
      switch (I) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          I = 3;
      }
      var we = Ce;
      Ce = I;
      try {
        return F();
      } finally {
        Ce = we;
      }
    }, t.unstable_scheduleCallback = function(I, F, we) {
      var Je = t.unstable_now();
      switch (typeof we == "object" && we !== null ? (we = we.delay, we = typeof we == "number" && 0 < we ? Je + we : Je) : we = Je, I) {
        case 1:
          var Ze = -1;
          break;
        case 2:
          Ze = 250;
          break;
        case 5:
          Ze = 1073741823;
          break;
        case 4:
          Ze = 1e4;
          break;
        default:
          Ze = 5e3;
      }
      return Ze = we + Ze, I = { id: fe++, callback: F, priorityLevel: I, startTime: we, expirationTime: Ze, sortIndex: -1 }, we > Je ? (I.sortIndex = we, ee(Ie, I), z(me) === null && I === z(Ie) && (lt ? r() : lt = !0, n(he, we - Je))) : (I.sortIndex = Ze, ee(me, I), J || Be || (J = !0, e(De))), I;
    }, t.unstable_wrapCallback = function(I) {
      var F = Ce;
      return function() {
        var we = Ce;
        Ce = F;
        try {
          return I.apply(this, arguments);
        } finally {
          Ce = we;
        }
      };
    };
  }(o4)), o4;
}
var a4 = {};
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Wx;
function oq() {
  return Wx || (Wx = 1, function(t) {
    process.env.NODE_ENV !== "production" && function() {
      var e = !1, n = !1, r, i, s, l, c = typeof performance == "object" && typeof performance.now == "function";
      if (c) {
        var h = performance;
        t.unstable_now = function() {
          return h.now();
        };
      } else {
        var g = Date, v = g.now();
        t.unstable_now = function() {
          return g.now() - v;
        };
      }
      if (
        // If Scheduler runs in a non-DOM environment, it falls back to a naive
        // implementation using setTimeout.
        typeof window > "u" || // Check if MessageChannel is supported, too.
        typeof MessageChannel != "function"
      ) {
        var C = null, S = null, b = function() {
          if (C !== null)
            try {
              var be = t.unstable_now(), ze = !0;
              C(ze, be), C = null;
            } catch (st) {
              throw setTimeout(b, 0), st;
            }
        };
        r = function(be) {
          C !== null ? setTimeout(r, 0, be) : (C = be, setTimeout(b, 0));
        }, i = function(be, ze) {
          S = setTimeout(be, ze);
        }, s = function() {
          clearTimeout(S);
        }, t.unstable_shouldYield = function() {
          return !1;
        }, l = t.unstable_forceFrameRate = function() {
        };
      } else {
        var N = window.setTimeout, O = window.clearTimeout;
        if (typeof console < "u") {
          var L = window.requestAnimationFrame, P = window.cancelAnimationFrame;
          typeof L != "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), typeof P != "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
        }
        var Y = !1, j = null, oe = -1, ee = 5, z = 0;
        t.unstable_shouldYield = function() {
          return t.unstable_now() >= z;
        }, l = function() {
        }, t.unstable_forceFrameRate = function(be) {
          if (be < 0 || be > 125) {
            console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          be > 0 ? ee = Math.floor(1e3 / be) : ee = 5;
        };
        var H = function() {
          if (j !== null) {
            var be = t.unstable_now();
            z = be + ee;
            var ze = !0;
            try {
              var st = j(ze, be);
              st ? me.postMessage(null) : (Y = !1, j = null);
            } catch (Ot) {
              throw me.postMessage(null), Ot;
            }
          } else
            Y = !1;
        }, Z = new MessageChannel(), me = Z.port2;
        Z.port1.onmessage = H, r = function(be) {
          j = be, Y || (Y = !0, me.postMessage(null));
        }, i = function(be, ze) {
          oe = N(function() {
            be(t.unstable_now());
          }, ze);
        }, s = function() {
          O(oe), oe = -1;
        };
      }
      function Ie(be, ze) {
        var st = be.length;
        be.push(ze), Ce(be, ze, st);
      }
      function fe(be) {
        var ze = be[0];
        return ze === void 0 ? null : ze;
      }
      function pe(be) {
        var ze = be[0];
        if (ze !== void 0) {
          var st = be.pop();
          return st !== ze && (be[0] = st, Be(be, st, 0)), ze;
        } else
          return null;
      }
      function Ce(be, ze, st) {
        for (var Ot = st; ; ) {
          var en = Ot - 1 >>> 1, tn = be[en];
          if (tn !== void 0 && J(tn, ze) > 0)
            be[en] = ze, be[Ot] = tn, Ot = en;
          else
            return;
        }
      }
      function Be(be, ze, st) {
        for (var Ot = st, en = be.length; Ot < en; ) {
          var tn = (Ot + 1) * 2 - 1, Tt = be[tn], On = tn + 1, Gt = be[On];
          if (Tt !== void 0 && J(Tt, ze) < 0)
            Gt !== void 0 && J(Gt, Tt) < 0 ? (be[Ot] = Gt, be[On] = ze, Ot = On) : (be[Ot] = Tt, be[tn] = ze, Ot = tn);
          else if (Gt !== void 0 && J(Gt, ze) < 0)
            be[Ot] = Gt, be[On] = ze, Ot = On;
          else
            return;
        }
      }
      function J(be, ze) {
        var st = be.sortIndex - ze.sortIndex;
        return st !== 0 ? st : be.id - ze.id;
      }
      var lt = 1, te = 2, he = 3, De = 4, We = 5;
      function I(be, ze) {
      }
      var F = 1073741823, we = -1, Je = 250, Ze = 5e3, rt = 1e4, Yt = F, Lt = [], It = [], En = 1, an = null, Xt = he, Hr = !1, ur = !1, wn = !1;
      function zr(be) {
        for (var ze = fe(It); ze !== null; ) {
          if (ze.callback === null)
            pe(It);
          else if (ze.startTime <= be)
            pe(It), ze.sortIndex = ze.expirationTime, Ie(Lt, ze);
          else
            return;
          ze = fe(It);
        }
      }
      function qr(be) {
        if (wn = !1, zr(be), !ur)
          if (fe(Lt) !== null)
            ur = !0, r(cr);
          else {
            var ze = fe(It);
            ze !== null && i(qr, ze.startTime - be);
          }
      }
      function cr(be, ze) {
        ur = !1, wn && (wn = !1, s()), Hr = !0;
        var st = Xt;
        try {
          var Ot;
          if (!n)
            return yo(be, ze);
        } finally {
          an = null, Xt = st, Hr = !1;
        }
      }
      function yo(be, ze) {
        var st = ze;
        for (zr(st), an = fe(Lt); an !== null && !e && !(an.expirationTime > st && (!be || t.unstable_shouldYield())); ) {
          var Ot = an.callback;
          if (typeof Ot == "function") {
            an.callback = null, Xt = an.priorityLevel;
            var en = an.expirationTime <= st, tn = Ot(en);
            st = t.unstable_now(), typeof tn == "function" ? an.callback = tn : an === fe(Lt) && pe(Lt), zr(st);
          } else
            pe(Lt);
          an = fe(Lt);
        }
        if (an !== null)
          return !0;
        var Tt = fe(It);
        return Tt !== null && i(qr, Tt.startTime - st), !1;
      }
      function fr(be, ze) {
        switch (be) {
          case lt:
          case te:
          case he:
          case De:
          case We:
            break;
          default:
            be = he;
        }
        var st = Xt;
        Xt = be;
        try {
          return ze();
        } finally {
          Xt = st;
        }
      }
      function ni(be) {
        var ze;
        switch (Xt) {
          case lt:
          case te:
          case he:
            ze = he;
            break;
          default:
            ze = Xt;
            break;
        }
        var st = Xt;
        Xt = ze;
        try {
          return be();
        } finally {
          Xt = st;
        }
      }
      function vo(be) {
        var ze = Xt;
        return function() {
          var st = Xt;
          Xt = ze;
          try {
            return be.apply(this, arguments);
          } finally {
            Xt = st;
          }
        };
      }
      function Ci(be, ze, st) {
        var Ot = t.unstable_now(), en;
        if (typeof st == "object" && st !== null) {
          var tn = st.delay;
          typeof tn == "number" && tn > 0 ? en = Ot + tn : en = Ot;
        } else
          en = Ot;
        var Tt;
        switch (be) {
          case lt:
            Tt = we;
            break;
          case te:
            Tt = Je;
            break;
          case We:
            Tt = Yt;
            break;
          case De:
            Tt = rt;
            break;
          case he:
          default:
            Tt = Ze;
            break;
        }
        var On = en + Tt, Gt = {
          id: En++,
          callback: ze,
          priorityLevel: be,
          startTime: en,
          expirationTime: On,
          sortIndex: -1
        };
        return en > Ot ? (Gt.sortIndex = en, Ie(It, Gt), fe(Lt) === null && Gt === fe(It) && (wn ? s() : wn = !0, i(qr, en - Ot))) : (Gt.sortIndex = On, Ie(Lt, Gt), !ur && !Hr && (ur = !0, r(cr))), Gt;
      }
      function ir() {
      }
      function jr() {
        !ur && !Hr && (ur = !0, r(cr));
      }
      function gn() {
        return fe(Lt);
      }
      function le(be) {
        be.callback = null;
      }
      function Re() {
        return Xt;
      }
      var at = l, Bt = null;
      t.unstable_IdlePriority = We, t.unstable_ImmediatePriority = lt, t.unstable_LowPriority = De, t.unstable_NormalPriority = he, t.unstable_Profiling = Bt, t.unstable_UserBlockingPriority = te, t.unstable_cancelCallback = le, t.unstable_continueExecution = jr, t.unstable_getCurrentPriorityLevel = Re, t.unstable_getFirstCallbackNode = gn, t.unstable_next = ni, t.unstable_pauseExecution = ir, t.unstable_requestPaint = at, t.unstable_runWithPriority = fr, t.unstable_scheduleCallback = Ci, t.unstable_wrapCallback = vo;
    }();
  }(a4)), a4;
}
var Kx;
function UN() {
  return Kx || (Kx = 1, function(t) {
    process.env.NODE_ENV === "production" ? t.exports = iq() : t.exports = oq();
  }(rq)), yy;
}
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Yx;
function aq() {
  if (Yx)
    return Mo;
  Yx = 1;
  var t = va, e = Ah(), n = UN();
  function r(u) {
    for (var d = "https://reactjs.org/docs/error-decoder.html?invariant=" + u, m = 1; m < arguments.length; m++)
      d += "&args[]=" + encodeURIComponent(arguments[m]);
    return "Minified React error #" + u + "; visit " + d + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  if (!t)
    throw Error(r(227));
  var i = /* @__PURE__ */ new Set(), s = {};
  function l(u, d) {
    c(u, d), c(u + "Capture", d);
  }
  function c(u, d) {
    for (s[u] = d, u = 0; u < d.length; u++)
      i.add(d[u]);
  }
  var h = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), g = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, v = Object.prototype.hasOwnProperty, C = {}, S = {};
  function b(u) {
    return v.call(S, u) ? !0 : v.call(C, u) ? !1 : g.test(u) ? S[u] = !0 : (C[u] = !0, !1);
  }
  function N(u, d, m, E) {
    if (m !== null && m.type === 0)
      return !1;
    switch (typeof d) {
      case "function":
      case "symbol":
        return !0;
      case "boolean":
        return E ? !1 : m !== null ? !m.acceptsBooleans : (u = u.toLowerCase().slice(0, 5), u !== "data-" && u !== "aria-");
      default:
        return !1;
    }
  }
  function O(u, d, m, E) {
    if (d === null || typeof d > "u" || N(u, d, m, E))
      return !0;
    if (E)
      return !1;
    if (m !== null)
      switch (m.type) {
        case 3:
          return !d;
        case 4:
          return d === !1;
        case 5:
          return isNaN(d);
        case 6:
          return isNaN(d) || 1 > d;
      }
    return !1;
  }
  function L(u, d, m, E, A, w, M) {
    this.acceptsBooleans = d === 2 || d === 3 || d === 4, this.attributeName = E, this.attributeNamespace = A, this.mustUseProperty = m, this.propertyName = u, this.type = d, this.sanitizeURL = w, this.removeEmptyString = M;
  }
  var P = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(u) {
    P[u] = new L(u, 0, !1, u, null, !1, !1);
  }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(u) {
    var d = u[0];
    P[d] = new L(d, 1, !1, u[1], null, !1, !1);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(u) {
    P[u] = new L(u, 2, !1, u.toLowerCase(), null, !1, !1);
  }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(u) {
    P[u] = new L(u, 2, !1, u, null, !1, !1);
  }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(u) {
    P[u] = new L(u, 3, !1, u.toLowerCase(), null, !1, !1);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(u) {
    P[u] = new L(u, 3, !0, u, null, !1, !1);
  }), ["capture", "download"].forEach(function(u) {
    P[u] = new L(u, 4, !1, u, null, !1, !1);
  }), ["cols", "rows", "size", "span"].forEach(function(u) {
    P[u] = new L(u, 6, !1, u, null, !1, !1);
  }), ["rowSpan", "start"].forEach(function(u) {
    P[u] = new L(u, 5, !1, u.toLowerCase(), null, !1, !1);
  });
  var Y = /[\-:]([a-z])/g;
  function j(u) {
    return u[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(u) {
    var d = u.replace(
      Y,
      j
    );
    P[d] = new L(d, 1, !1, u, null, !1, !1);
  }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(u) {
    var d = u.replace(Y, j);
    P[d] = new L(d, 1, !1, u, "http://www.w3.org/1999/xlink", !1, !1);
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(u) {
    var d = u.replace(Y, j);
    P[d] = new L(d, 1, !1, u, "http://www.w3.org/XML/1998/namespace", !1, !1);
  }), ["tabIndex", "crossOrigin"].forEach(function(u) {
    P[u] = new L(u, 1, !1, u.toLowerCase(), null, !1, !1);
  }), P.xlinkHref = new L("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(u) {
    P[u] = new L(u, 1, !1, u.toLowerCase(), null, !0, !0);
  });
  function oe(u, d, m, E) {
    var A = P.hasOwnProperty(d) ? P[d] : null, w = A !== null ? A.type === 0 : E ? !1 : !(!(2 < d.length) || d[0] !== "o" && d[0] !== "O" || d[1] !== "n" && d[1] !== "N");
    w || (O(d, m, A, E) && (m = null), E || A === null ? b(d) && (m === null ? u.removeAttribute(d) : u.setAttribute(d, "" + m)) : A.mustUseProperty ? u[A.propertyName] = m === null ? A.type === 3 ? !1 : "" : m : (d = A.attributeName, E = A.attributeNamespace, m === null ? u.removeAttribute(d) : (A = A.type, m = A === 3 || A === 4 && m === !0 ? "" : "" + m, E ? u.setAttributeNS(E, d, m) : u.setAttribute(d, m))));
  }
  var ee = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, z = 60103, H = 60106, Z = 60107, me = 60108, Ie = 60114, fe = 60109, pe = 60110, Ce = 60112, Be = 60113, J = 60120, lt = 60115, te = 60116, he = 60121, De = 60128, We = 60129, I = 60130, F = 60131;
  if (typeof Symbol == "function" && Symbol.for) {
    var we = Symbol.for;
    z = we("react.element"), H = we("react.portal"), Z = we("react.fragment"), me = we("react.strict_mode"), Ie = we("react.profiler"), fe = we("react.provider"), pe = we("react.context"), Ce = we("react.forward_ref"), Be = we("react.suspense"), J = we("react.suspense_list"), lt = we("react.memo"), te = we("react.lazy"), he = we("react.block"), we("react.scope"), De = we("react.opaque.id"), We = we("react.debug_trace_mode"), I = we("react.offscreen"), F = we("react.legacy_hidden");
  }
  var Je = typeof Symbol == "function" && Symbol.iterator;
  function Ze(u) {
    return u === null || typeof u != "object" ? null : (u = Je && u[Je] || u["@@iterator"], typeof u == "function" ? u : null);
  }
  var rt;
  function Yt(u) {
    if (rt === void 0)
      try {
        throw Error();
      } catch (m) {
        var d = m.stack.trim().match(/\n( *(at )?)/);
        rt = d && d[1] || "";
      }
    return `
` + rt + u;
  }
  var Lt = !1;
  function It(u, d) {
    if (!u || Lt)
      return "";
    Lt = !0;
    var m = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (d)
        if (d = function() {
          throw Error();
        }, Object.defineProperty(d.prototype, "props", { set: function() {
          throw Error();
        } }), typeof Reflect == "object" && Reflect.construct) {
          try {
            Reflect.construct(d, []);
          } catch (W) {
            var E = W;
          }
          Reflect.construct(u, [], d);
        } else {
          try {
            d.call();
          } catch (W) {
            E = W;
          }
          u.call(d.prototype);
        }
      else {
        try {
          throw Error();
        } catch (W) {
          E = W;
        }
        u();
      }
    } catch (W) {
      if (W && E && typeof W.stack == "string") {
        for (var A = W.stack.split(`
`), w = E.stack.split(`
`), M = A.length - 1, B = w.length - 1; 1 <= M && 0 <= B && A[M] !== w[B]; )
          B--;
        for (; 1 <= M && 0 <= B; M--, B--)
          if (A[M] !== w[B]) {
            if (M !== 1 || B !== 1)
              do
                if (M--, B--, 0 > B || A[M] !== w[B])
                  return `
` + A[M].replace(" at new ", " at ");
              while (1 <= M && 0 <= B);
            break;
          }
      }
    } finally {
      Lt = !1, Error.prepareStackTrace = m;
    }
    return (u = u ? u.displayName || u.name : "") ? Yt(u) : "";
  }
  function En(u) {
    switch (u.tag) {
      case 5:
        return Yt(u.type);
      case 16:
        return Yt("Lazy");
      case 13:
        return Yt("Suspense");
      case 19:
        return Yt("SuspenseList");
      case 0:
      case 2:
      case 15:
        return u = It(u.type, !1), u;
      case 11:
        return u = It(u.type.render, !1), u;
      case 22:
        return u = It(u.type._render, !1), u;
      case 1:
        return u = It(u.type, !0), u;
      default:
        return "";
    }
  }
  function an(u) {
    if (u == null)
      return null;
    if (typeof u == "function")
      return u.displayName || u.name || null;
    if (typeof u == "string")
      return u;
    switch (u) {
      case Z:
        return "Fragment";
      case H:
        return "Portal";
      case Ie:
        return "Profiler";
      case me:
        return "StrictMode";
      case Be:
        return "Suspense";
      case J:
        return "SuspenseList";
    }
    if (typeof u == "object")
      switch (u.$$typeof) {
        case pe:
          return (u.displayName || "Context") + ".Consumer";
        case fe:
          return (u._context.displayName || "Context") + ".Provider";
        case Ce:
          var d = u.render;
          return d = d.displayName || d.name || "", u.displayName || (d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef");
        case lt:
          return an(u.type);
        case he:
          return an(u._render);
        case te:
          d = u._payload, u = u._init;
          try {
            return an(u(d));
          } catch {
          }
      }
    return null;
  }
  function Xt(u) {
    switch (typeof u) {
      case "boolean":
      case "number":
      case "object":
      case "string":
      case "undefined":
        return u;
      default:
        return "";
    }
  }
  function Hr(u) {
    var d = u.type;
    return (u = u.nodeName) && u.toLowerCase() === "input" && (d === "checkbox" || d === "radio");
  }
  function ur(u) {
    var d = Hr(u) ? "checked" : "value", m = Object.getOwnPropertyDescriptor(u.constructor.prototype, d), E = "" + u[d];
    if (!u.hasOwnProperty(d) && typeof m < "u" && typeof m.get == "function" && typeof m.set == "function") {
      var A = m.get, w = m.set;
      return Object.defineProperty(u, d, { configurable: !0, get: function() {
        return A.call(this);
      }, set: function(M) {
        E = "" + M, w.call(this, M);
      } }), Object.defineProperty(u, d, { enumerable: m.enumerable }), { getValue: function() {
        return E;
      }, setValue: function(M) {
        E = "" + M;
      }, stopTracking: function() {
        u._valueTracker = null, delete u[d];
      } };
    }
  }
  function wn(u) {
    u._valueTracker || (u._valueTracker = ur(u));
  }
  function zr(u) {
    if (!u)
      return !1;
    var d = u._valueTracker;
    if (!d)
      return !0;
    var m = d.getValue(), E = "";
    return u && (E = Hr(u) ? u.checked ? "true" : "false" : u.value), u = E, u !== m ? (d.setValue(u), !0) : !1;
  }
  function qr(u) {
    if (u = u || (typeof document < "u" ? document : void 0), typeof u > "u")
      return null;
    try {
      return u.activeElement || u.body;
    } catch {
      return u.body;
    }
  }
  function cr(u, d) {
    var m = d.checked;
    return e({}, d, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: m ?? u._wrapperState.initialChecked });
  }
  function yo(u, d) {
    var m = d.defaultValue == null ? "" : d.defaultValue, E = d.checked != null ? d.checked : d.defaultChecked;
    m = Xt(d.value != null ? d.value : m), u._wrapperState = { initialChecked: E, initialValue: m, controlled: d.type === "checkbox" || d.type === "radio" ? d.checked != null : d.value != null };
  }
  function fr(u, d) {
    d = d.checked, d != null && oe(u, "checked", d, !1);
  }
  function ni(u, d) {
    fr(u, d);
    var m = Xt(d.value), E = d.type;
    if (m != null)
      E === "number" ? (m === 0 && u.value === "" || u.value != m) && (u.value = "" + m) : u.value !== "" + m && (u.value = "" + m);
    else if (E === "submit" || E === "reset") {
      u.removeAttribute("value");
      return;
    }
    d.hasOwnProperty("value") ? Ci(u, d.type, m) : d.hasOwnProperty("defaultValue") && Ci(u, d.type, Xt(d.defaultValue)), d.checked == null && d.defaultChecked != null && (u.defaultChecked = !!d.defaultChecked);
  }
  function vo(u, d, m) {
    if (d.hasOwnProperty("value") || d.hasOwnProperty("defaultValue")) {
      var E = d.type;
      if (!(E !== "submit" && E !== "reset" || d.value !== void 0 && d.value !== null))
        return;
      d = "" + u._wrapperState.initialValue, m || d === u.value || (u.value = d), u.defaultValue = d;
    }
    m = u.name, m !== "" && (u.name = ""), u.defaultChecked = !!u._wrapperState.initialChecked, m !== "" && (u.name = m);
  }
  function Ci(u, d, m) {
    (d !== "number" || qr(u.ownerDocument) !== u) && (m == null ? u.defaultValue = "" + u._wrapperState.initialValue : u.defaultValue !== "" + m && (u.defaultValue = "" + m));
  }
  function ir(u) {
    var d = "";
    return t.Children.forEach(u, function(m) {
      m != null && (d += m);
    }), d;
  }
  function jr(u, d) {
    return u = e({ children: void 0 }, d), (d = ir(d.children)) && (u.children = d), u;
  }
  function gn(u, d, m, E) {
    if (u = u.options, d) {
      d = {};
      for (var A = 0; A < m.length; A++)
        d["$" + m[A]] = !0;
      for (m = 0; m < u.length; m++)
        A = d.hasOwnProperty("$" + u[m].value), u[m].selected !== A && (u[m].selected = A), A && E && (u[m].defaultSelected = !0);
    } else {
      for (m = "" + Xt(m), d = null, A = 0; A < u.length; A++) {
        if (u[A].value === m) {
          u[A].selected = !0, E && (u[A].defaultSelected = !0);
          return;
        }
        d !== null || u[A].disabled || (d = u[A]);
      }
      d !== null && (d.selected = !0);
    }
  }
  function le(u, d) {
    if (d.dangerouslySetInnerHTML != null)
      throw Error(r(91));
    return e({}, d, { value: void 0, defaultValue: void 0, children: "" + u._wrapperState.initialValue });
  }
  function Re(u, d) {
    var m = d.value;
    if (m == null) {
      if (m = d.children, d = d.defaultValue, m != null) {
        if (d != null)
          throw Error(r(92));
        if (Array.isArray(m)) {
          if (!(1 >= m.length))
            throw Error(r(93));
          m = m[0];
        }
        d = m;
      }
      d == null && (d = ""), m = d;
    }
    u._wrapperState = { initialValue: Xt(m) };
  }
  function at(u, d) {
    var m = Xt(d.value), E = Xt(d.defaultValue);
    m != null && (m = "" + m, m !== u.value && (u.value = m), d.defaultValue == null && u.defaultValue !== m && (u.defaultValue = m)), E != null && (u.defaultValue = "" + E);
  }
  function Bt(u) {
    var d = u.textContent;
    d === u._wrapperState.initialValue && d !== "" && d !== null && (u.value = d);
  }
  var be = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };
  function ze(u) {
    switch (u) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function st(u, d) {
    return u == null || u === "http://www.w3.org/1999/xhtml" ? ze(d) : u === "http://www.w3.org/2000/svg" && d === "foreignObject" ? "http://www.w3.org/1999/xhtml" : u;
  }
  var Ot, en = function(u) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(d, m, E, A) {
      MSApp.execUnsafeLocalFunction(function() {
        return u(d, m, E, A);
      });
    } : u;
  }(function(u, d) {
    if (u.namespaceURI !== be.svg || "innerHTML" in u)
      u.innerHTML = d;
    else {
      for (Ot = Ot || document.createElement("div"), Ot.innerHTML = "<svg>" + d.valueOf().toString() + "</svg>", d = Ot.firstChild; u.firstChild; )
        u.removeChild(u.firstChild);
      for (; d.firstChild; )
        u.appendChild(d.firstChild);
    }
  });
  function tn(u, d) {
    if (d) {
      var m = u.firstChild;
      if (m && m === u.lastChild && m.nodeType === 3) {
        m.nodeValue = d;
        return;
      }
    }
    u.textContent = d;
  }
  var Tt = {
    animationIterationCount: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  }, On = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Tt).forEach(function(u) {
    On.forEach(function(d) {
      d = d + u.charAt(0).toUpperCase() + u.substring(1), Tt[d] = Tt[u];
    });
  });
  function Gt(u, d, m) {
    return d == null || typeof d == "boolean" || d === "" ? "" : m || typeof d != "number" || d === 0 || Tt.hasOwnProperty(u) && Tt[u] ? ("" + d).trim() : d + "px";
  }
  function Vr(u, d) {
    u = u.style;
    for (var m in d)
      if (d.hasOwnProperty(m)) {
        var E = m.indexOf("--") === 0, A = Gt(m, d[m], E);
        m === "float" && (m = "cssFloat"), E ? u.setProperty(m, A) : u[m] = A;
      }
  }
  var us = e({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
  function Yi(u, d) {
    if (d) {
      if (us[u] && (d.children != null || d.dangerouslySetInnerHTML != null))
        throw Error(r(137, u));
      if (d.dangerouslySetInnerHTML != null) {
        if (d.children != null)
          throw Error(r(60));
        if (!(typeof d.dangerouslySetInnerHTML == "object" && "__html" in d.dangerouslySetInnerHTML))
          throw Error(r(61));
      }
      if (d.style != null && typeof d.style != "object")
        throw Error(r(62));
    }
  }
  function Eo(u, d) {
    if (u.indexOf("-") === -1)
      return typeof d.is == "string";
    switch (u) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return !1;
      default:
        return !0;
    }
  }
  function Uo(u) {
    return u = u.target || u.srcElement || window, u.correspondingUseElement && (u = u.correspondingUseElement), u.nodeType === 3 ? u.parentNode : u;
  }
  var Ii = null, $r = null, Gr = null;
  function To(u) {
    if (u = Ui(u)) {
      if (typeof Ii != "function")
        throw Error(r(280));
      var d = u.stateNode;
      d && (d = Ra(d), Ii(u.stateNode, u.type, d));
    }
  }
  function Pn(u) {
    $r ? Gr ? Gr.push(u) : Gr = [u] : $r = u;
  }
  function xa() {
    if ($r) {
      var u = $r, d = Gr;
      if (Gr = $r = null, To(u), d)
        for (u = 0; u < d.length; u++)
          To(d[u]);
    }
  }
  function G(u, d) {
    return u(d);
  }
  function _e(u, d, m, E, A) {
    return u(d, m, E, A);
  }
  function qe() {
  }
  var ct = G, Ut = !1, ht = !1;
  function Ht() {
    ($r !== null || Gr !== null) && (qe(), xa());
  }
  function qt(u, d, m) {
    if (ht)
      return u(d, m);
    ht = !0;
    try {
      return ct(u, d, m);
    } finally {
      ht = !1, Ht();
    }
  }
  function mn(u, d) {
    var m = u.stateNode;
    if (m === null)
      return null;
    var E = Ra(m);
    if (E === null)
      return null;
    m = E[d];
    e:
      switch (d) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (E = !E.disabled) || (u = u.type, E = !(u === "button" || u === "input" || u === "select" || u === "textarea")), u = !E;
          break e;
        default:
          u = !1;
      }
    if (u)
      return null;
    if (m && typeof m != "function")
      throw Error(r(231, d, typeof m));
    return m;
  }
  var Jt = !1;
  if (h)
    try {
      var dn = {};
      Object.defineProperty(dn, "passive", { get: function() {
        Jt = !0;
      } }), window.addEventListener("test", dn, dn), window.removeEventListener("test", dn, dn);
    } catch {
      Jt = !1;
    }
  function ri(u, d, m, E, A, w, M, B, W) {
    var de = Array.prototype.slice.call(arguments, 3);
    try {
      d.apply(m, de);
    } catch ($e) {
      this.onError($e);
    }
  }
  var Wr = !1, Co = null, dr = !1, hl = null, Mc = { onError: function(u) {
    Wr = !0, Co = u;
  } };
  function Lc(u, d, m, E, A, w, M, B, W) {
    Wr = !1, Co = null, ri.apply(Mc, arguments);
  }
  function Qi(u, d, m, E, A, w, M, B, W) {
    if (Lc.apply(this, arguments), Wr) {
      if (Wr) {
        var de = Co;
        Wr = !1, Co = null;
      } else
        throw Error(r(198));
      dr || (dr = !0, hl = de);
    }
  }
  function hr(u) {
    var d = u, m = u;
    if (u.alternate)
      for (; d.return; )
        d = d.return;
    else {
      u = d;
      do
        d = u, d.flags & 1026 && (m = d.return), u = d.return;
      while (u);
    }
    return d.tag === 3 ? m : null;
  }
  function cs(u) {
    if (u.tag === 13) {
      var d = u.memoizedState;
      if (d === null && (u = u.alternate, u !== null && (d = u.memoizedState)), d !== null)
        return d.dehydrated;
    }
    return null;
  }
  function fs(u) {
    if (hr(u) !== u)
      throw Error(r(188));
  }
  function Pi(u) {
    var d = u.alternate;
    if (!d) {
      if (d = hr(u), d === null)
        throw Error(r(188));
      return d !== u ? null : u;
    }
    for (var m = u, E = d; ; ) {
      var A = m.return;
      if (A === null)
        break;
      var w = A.alternate;
      if (w === null) {
        if (E = A.return, E !== null) {
          m = E;
          continue;
        }
        break;
      }
      if (A.child === w.child) {
        for (w = A.child; w; ) {
          if (w === m)
            return fs(A), u;
          if (w === E)
            return fs(A), d;
          w = w.sibling;
        }
        throw Error(r(188));
      }
      if (m.return !== E.return)
        m = A, E = w;
      else {
        for (var M = !1, B = A.child; B; ) {
          if (B === m) {
            M = !0, m = A, E = w;
            break;
          }
          if (B === E) {
            M = !0, E = A, m = w;
            break;
          }
          B = B.sibling;
        }
        if (!M) {
          for (B = w.child; B; ) {
            if (B === m) {
              M = !0, m = w, E = A;
              break;
            }
            if (B === E) {
              M = !0, E = w, m = A;
              break;
            }
            B = B.sibling;
          }
          if (!M)
            throw Error(r(189));
        }
      }
      if (m.alternate !== E)
        throw Error(r(190));
    }
    if (m.tag !== 3)
      throw Error(r(188));
    return m.stateNode.current === m ? u : d;
  }
  function ds(u) {
    if (u = Pi(u), !u)
      return null;
    for (var d = u; ; ) {
      if (d.tag === 5 || d.tag === 6)
        return d;
      if (d.child)
        d.child.return = d, d = d.child;
      else {
        if (d === u)
          break;
        for (; !d.sibling; ) {
          if (!d.return || d.return === u)
            return null;
          d = d.return;
        }
        d.sibling.return = d.return, d = d.sibling;
      }
    }
    return null;
  }
  function Ho(u, d) {
    for (var m = u.alternate; d !== null; ) {
      if (d === u || d === m)
        return !0;
      d = d.return;
    }
    return !1;
  }
  var Af, hs, Ic, ps, ms = !1, ii = [], So = null, Si = null, zo = null, Fi = /* @__PURE__ */ new Map(), He = /* @__PURE__ */ new Map(), _a = [], _r = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function qo(u, d, m, E, A) {
    return { blockedOn: u, domEventName: d, eventSystemFlags: m | 16, nativeEvent: A, targetContainers: [E] };
  }
  function ka(u, d) {
    switch (u) {
      case "focusin":
      case "focusout":
        So = null;
        break;
      case "dragenter":
      case "dragleave":
        Si = null;
        break;
      case "mouseover":
      case "mouseout":
        zo = null;
        break;
      case "pointerover":
      case "pointerout":
        Fi.delete(d.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        He.delete(d.pointerId);
    }
  }
  function pl(u, d, m, E, A, w) {
    return u === null || u.nativeEvent !== w ? (u = qo(d, m, E, A, w), d !== null && (d = Ui(d), d !== null && hs(d)), u) : (u.eventSystemFlags |= E, d = u.targetContainers, A !== null && d.indexOf(A) === -1 && d.push(A), u);
  }
  function kr(u, d, m, E, A) {
    switch (d) {
      case "focusin":
        return So = pl(So, u, d, m, E, A), !0;
      case "dragenter":
        return Si = pl(Si, u, d, m, E, A), !0;
      case "mouseover":
        return zo = pl(zo, u, d, m, E, A), !0;
      case "pointerover":
        var w = A.pointerId;
        return Fi.set(w, pl(Fi.get(w) || null, u, d, m, E, A)), !0;
      case "gotpointercapture":
        return w = A.pointerId, He.set(w, pl(He.get(w) || null, u, d, m, E, A)), !0;
    }
    return !1;
  }
  function $n(u) {
    var d = Cl(u.target);
    if (d !== null) {
      var m = hr(d);
      if (m !== null) {
        if (d = m.tag, d === 13) {
          if (d = cs(m), d !== null) {
            u.blockedOn = d, ps(u.lanePriority, function() {
              n.unstable_runWithPriority(u.priority, function() {
                Ic(m);
              });
            });
            return;
          }
        } else if (d === 3 && m.stateNode.hydrate) {
          u.blockedOn = m.tag === 3 ? m.stateNode.containerInfo : null;
          return;
        }
      }
    }
    u.blockedOn = null;
  }
  function Kr(u) {
    if (u.blockedOn !== null)
      return !1;
    for (var d = u.targetContainers; 0 < d.length; ) {
      var m = wf(u.domEventName, u.eventSystemFlags, d[0], u.nativeEvent);
      if (m !== null)
        return d = Ui(m), d !== null && hs(d), u.blockedOn = m, !1;
      d.shift();
    }
    return !0;
  }
  function xf(u, d, m) {
    Kr(u) && m.delete(d);
  }
  function oi() {
    for (ms = !1; 0 < ii.length; ) {
      var u = ii[0];
      if (u.blockedOn !== null) {
        u = Ui(u.blockedOn), u !== null && Af(u);
        break;
      }
      for (var d = u.targetContainers; 0 < d.length; ) {
        var m = wf(u.domEventName, u.eventSystemFlags, d[0], u.nativeEvent);
        if (m !== null) {
          u.blockedOn = m;
          break;
        }
        d.shift();
      }
      u.blockedOn === null && ii.shift();
    }
    So !== null && Kr(So) && (So = null), Si !== null && Kr(Si) && (Si = null), zo !== null && Kr(zo) && (zo = null), Fi.forEach(xf), He.forEach(xf);
  }
  function ai(u, d) {
    u.blockedOn === d && (u.blockedOn = null, ms || (ms = !0, n.unstable_scheduleCallback(n.unstable_NormalPriority, oi)));
  }
  function _f(u) {
    function d(A) {
      return ai(A, u);
    }
    if (0 < ii.length) {
      ai(ii[0], u);
      for (var m = 1; m < ii.length; m++) {
        var E = ii[m];
        E.blockedOn === u && (E.blockedOn = null);
      }
    }
    for (So !== null && ai(So, u), Si !== null && ai(Si, u), zo !== null && ai(zo, u), Fi.forEach(d), He.forEach(d), m = 0; m < _a.length; m++)
      E = _a[m], E.blockedOn === u && (E.blockedOn = null);
    for (; 0 < _a.length && (m = _a[0], m.blockedOn === null); )
      $n(m), m.blockedOn === null && _a.shift();
  }
  function gs(u, d) {
    var m = {};
    return m[u.toLowerCase()] = d.toLowerCase(), m["Webkit" + u] = "webkit" + d, m["Moz" + u] = "moz" + d, m;
  }
  var jo = { animationend: gs("Animation", "AnimationEnd"), animationiteration: gs("Animation", "AnimationIteration"), animationstart: gs("Animation", "AnimationStart"), transitionend: gs("Transition", "TransitionEnd") }, uu = {}, kf = {};
  h && (kf = document.createElement("div").style, "AnimationEvent" in window || (delete jo.animationend.animation, delete jo.animationiteration.animation, delete jo.animationstart.animation), "TransitionEvent" in window || delete jo.transitionend.transition);
  function cu(u) {
    if (uu[u])
      return uu[u];
    if (!jo[u])
      return u;
    var d = jo[u], m;
    for (m in d)
      if (d.hasOwnProperty(m) && m in kf)
        return uu[u] = d[m];
    return u;
  }
  var Nf = cu("animationend"), D = cu("animationiteration"), Q = cu("animationstart"), ce = cu("transitionend"), ye = /* @__PURE__ */ new Map(), je = /* @__PURE__ */ new Map(), Ct = [
    "abort",
    "abort",
    Nf,
    "animationEnd",
    D,
    "animationIteration",
    Q,
    "animationStart",
    "canplay",
    "canPlay",
    "canplaythrough",
    "canPlayThrough",
    "durationchange",
    "durationChange",
    "emptied",
    "emptied",
    "encrypted",
    "encrypted",
    "ended",
    "ended",
    "error",
    "error",
    "gotpointercapture",
    "gotPointerCapture",
    "load",
    "load",
    "loadeddata",
    "loadedData",
    "loadedmetadata",
    "loadedMetadata",
    "loadstart",
    "loadStart",
    "lostpointercapture",
    "lostPointerCapture",
    "playing",
    "playing",
    "progress",
    "progress",
    "seeking",
    "seeking",
    "stalled",
    "stalled",
    "suspend",
    "suspend",
    "timeupdate",
    "timeUpdate",
    ce,
    "transitionEnd",
    "waiting",
    "waiting"
  ];
  function dt(u, d) {
    for (var m = 0; m < u.length; m += 2) {
      var E = u[m], A = u[m + 1];
      A = "on" + (A[0].toUpperCase() + A.slice(1)), je.set(E, d), ye.set(E, A), l(A, [E]);
    }
  }
  var pt = n.unstable_now;
  pt();
  var ut = 8;
  function sn(u) {
    if (1 & u)
      return ut = 15, 1;
    if (2 & u)
      return ut = 14, 2;
    if (4 & u)
      return ut = 13, 4;
    var d = 24 & u;
    return d !== 0 ? (ut = 12, d) : u & 32 ? (ut = 11, 32) : (d = 192 & u, d !== 0 ? (ut = 10, d) : u & 256 ? (ut = 9, 256) : (d = 3584 & u, d !== 0 ? (ut = 8, d) : u & 4096 ? (ut = 7, 4096) : (d = 4186112 & u, d !== 0 ? (ut = 6, d) : (d = 62914560 & u, d !== 0 ? (ut = 5, d) : u & 67108864 ? (ut = 4, 67108864) : u & 134217728 ? (ut = 3, 134217728) : (d = 805306368 & u, d !== 0 ? (ut = 2, d) : 1073741824 & u ? (ut = 1, 1073741824) : (ut = 8, u))))));
  }
  function kn(u) {
    switch (u) {
      case 99:
        return 15;
      case 98:
        return 10;
      case 97:
      case 96:
        return 8;
      case 95:
        return 2;
      default:
        return 0;
    }
  }
  function Fn(u) {
    switch (u) {
      case 15:
      case 14:
        return 99;
      case 13:
      case 12:
      case 11:
      case 10:
        return 98;
      case 9:
      case 8:
      case 7:
      case 6:
      case 4:
      case 5:
        return 97;
      case 3:
      case 2:
      case 1:
        return 95;
      case 0:
        return 90;
      default:
        throw Error(r(358, u));
    }
  }
  function Yn(u, d) {
    var m = u.pendingLanes;
    if (m === 0)
      return ut = 0;
    var E = 0, A = 0, w = u.expiredLanes, M = u.suspendedLanes, B = u.pingedLanes;
    if (w !== 0)
      E = w, A = ut = 15;
    else if (w = m & 134217727, w !== 0) {
      var W = w & ~M;
      W !== 0 ? (E = sn(W), A = ut) : (B &= w, B !== 0 && (E = sn(B), A = ut));
    } else
      w = m & ~M, w !== 0 ? (E = sn(w), A = ut) : B !== 0 && (E = sn(B), A = ut);
    if (E === 0)
      return 0;
    if (E = 31 - Vo(E), E = m & ((0 > E ? 0 : 1 << E) << 1) - 1, d !== 0 && d !== E && !(d & M)) {
      if (sn(d), A <= ut)
        return d;
      ut = A;
    }
    if (d = u.entangledLanes, d !== 0)
      for (u = u.entanglements, d &= E; 0 < d; )
        m = 31 - Vo(d), A = 1 << m, E |= u[m], d &= ~A;
    return E;
  }
  function Nr(u) {
    return u = u.pendingLanes & -1073741825, u !== 0 ? u : u & 1073741824 ? 1073741824 : 0;
  }
  function wr(u, d) {
    switch (u) {
      case 15:
        return 1;
      case 14:
        return 2;
      case 12:
        return u = Bi(24 & ~d), u === 0 ? wr(10, d) : u;
      case 10:
        return u = Bi(192 & ~d), u === 0 ? wr(8, d) : u;
      case 8:
        return u = Bi(3584 & ~d), u === 0 && (u = Bi(4186112 & ~d), u === 0 && (u = 512)), u;
      case 2:
        return d = Bi(805306368 & ~d), d === 0 && (d = 268435456), d;
    }
    throw Error(r(358, u));
  }
  function Bi(u) {
    return u & -u;
  }
  function ys(u) {
    for (var d = [], m = 0; 31 > m; m++)
      d.push(u);
    return d;
  }
  function vs(u, d, m) {
    u.pendingLanes |= d;
    var E = d - 1;
    u.suspendedLanes &= E, u.pingedLanes &= E, u = u.eventTimes, d = 31 - Vo(d), u[d] = m;
  }
  var Vo = Math.clz32 ? Math.clz32 : fu, Pc = Math.log, Lh = Math.LN2;
  function fu(u) {
    return u === 0 ? 32 : 31 - (Pc(u) / Lh | 0) | 0;
  }
  var Fc = n.unstable_UserBlockingPriority, _0 = n.unstable_runWithPriority, Bc = !0;
  function Av(u, d, m, E) {
    Ut || qe();
    var A = Uc, w = Ut;
    Ut = !0;
    try {
      _e(A, u, d, m, E);
    } finally {
      (Ut = w) || Ht();
    }
  }
  function du(u, d, m, E) {
    _0(Fc, Uc.bind(null, u, d, m, E));
  }
  function Uc(u, d, m, E) {
    if (Bc) {
      var A;
      if ((A = (d & 4) === 0) && 0 < ii.length && -1 < _r.indexOf(u))
        u = qo(null, u, d, m, E), ii.push(u);
      else {
        var w = wf(u, d, m, E);
        if (w === null)
          A && ka(u, E);
        else {
          if (A) {
            if (-1 < _r.indexOf(u)) {
              u = qo(w, u, d, m, E), ii.push(u);
              return;
            }
            if (kr(w, u, d, m, E))
              return;
            ka(u, E);
          }
          Bf(u, d, E, null, m);
        }
      }
    }
  }
  function wf(u, d, m, E) {
    var A = Uo(E);
    if (A = Cl(A), A !== null) {
      var w = hr(A);
      if (w === null)
        A = null;
      else {
        var M = w.tag;
        if (M === 13) {
          if (A = cs(w), A !== null)
            return A;
          A = null;
        } else if (M === 3) {
          if (w.stateNode.hydrate)
            return w.tag === 3 ? w.stateNode.containerInfo : null;
          A = null;
        } else
          w !== A && (A = null);
      }
    }
    return Bf(u, d, E, A, m), null;
  }
  var Es = null, Ih = null, Of = null;
  function Ph() {
    if (Of)
      return Of;
    var u, d = Ih, m = d.length, E, A = "value" in Es ? Es.value : Es.textContent, w = A.length;
    for (u = 0; u < m && d[u] === A[u]; u++)
      ;
    var M = m - u;
    for (E = 1; E <= M && d[m - E] === A[w - E]; E++)
      ;
    return Of = A.slice(u, 1 < E ? 1 - E : void 0);
  }
  function hu(u) {
    var d = u.keyCode;
    return "charCode" in u ? (u = u.charCode, u === 0 && d === 13 && (u = 13)) : u = d, u === 10 && (u = 13), 32 <= u || u === 13 ? u : 0;
  }
  function Hc() {
    return !0;
  }
  function Fh() {
    return !1;
  }
  function bi(u) {
    function d(m, E, A, w, M) {
      this._reactName = m, this._targetInst = A, this.type = E, this.nativeEvent = w, this.target = M, this.currentTarget = null;
      for (var B in u)
        u.hasOwnProperty(B) && (m = u[B], this[B] = m ? m(w) : w[B]);
      return this.isDefaultPrevented = (w.defaultPrevented != null ? w.defaultPrevented : w.returnValue === !1) ? Hc : Fh, this.isPropagationStopped = Fh, this;
    }
    return e(d.prototype, { preventDefault: function() {
      this.defaultPrevented = !0;
      var m = this.nativeEvent;
      m && (m.preventDefault ? m.preventDefault() : typeof m.returnValue != "unknown" && (m.returnValue = !1), this.isDefaultPrevented = Hc);
    }, stopPropagation: function() {
      var m = this.nativeEvent;
      m && (m.stopPropagation ? m.stopPropagation() : typeof m.cancelBubble != "unknown" && (m.cancelBubble = !0), this.isPropagationStopped = Hc);
    }, persist: function() {
    }, isPersistent: Hc }), d;
  }
  var pu = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(u) {
    return u.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, mu = bi(pu), gu = e({}, pu, { view: 0, detail: 0 }), Bh = bi(gu), Rf, zc, ml, Df = e({}, gu, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: Hh, button: 0, buttons: 0, relatedTarget: function(u) {
    return u.relatedTarget === void 0 ? u.fromElement === u.srcElement ? u.toElement : u.fromElement : u.relatedTarget;
  }, movementX: function(u) {
    return "movementX" in u ? u.movementX : (u !== ml && (ml && u.type === "mousemove" ? (Rf = u.screenX - ml.screenX, zc = u.screenY - ml.screenY) : zc = Rf = 0, ml = u), Rf);
  }, movementY: function(u) {
    return "movementY" in u ? u.movementY : zc;
  } }), qc = bi(Df), k0 = e({}, Df, { dataTransfer: 0 }), Xi = bi(k0), Na = e({}, gu, { relatedTarget: 0 }), si = bi(Na), Ts = e({}, pu, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), N0 = bi(Ts), Mf = e({}, pu, { clipboardData: function(u) {
    return "clipboardData" in u ? u.clipboardData : window.clipboardData;
  } }), xv = bi(Mf), jc = e({}, pu, { data: 0 }), w0 = bi(jc), _v = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, Uh = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, kv = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function Nv(u) {
    var d = this.nativeEvent;
    return d.getModifierState ? d.getModifierState(u) : (u = kv[u]) ? !!d[u] : !1;
  }
  function Hh() {
    return Nv;
  }
  var O0 = e({}, gu, { key: function(u) {
    if (u.key) {
      var d = _v[u.key] || u.key;
      if (d !== "Unidentified")
        return d;
    }
    return u.type === "keypress" ? (u = hu(u), u === 13 ? "Enter" : String.fromCharCode(u)) : u.type === "keydown" || u.type === "keyup" ? Uh[u.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: Hh, charCode: function(u) {
    return u.type === "keypress" ? hu(u) : 0;
  }, keyCode: function(u) {
    return u.type === "keydown" || u.type === "keyup" ? u.keyCode : 0;
  }, which: function(u) {
    return u.type === "keypress" ? hu(u) : u.type === "keydown" || u.type === "keyup" ? u.keyCode : 0;
  } }), wv = bi(O0), Ov = e({}, Df, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), R0 = bi(Ov), D0 = e({}, gu, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Hh }), yu = bi(D0), zh = e({}, pu, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), M0 = bi(zh), L0 = e({}, Df, {
    deltaX: function(u) {
      return "deltaX" in u ? u.deltaX : "wheelDeltaX" in u ? -u.wheelDeltaX : 0;
    },
    deltaY: function(u) {
      return "deltaY" in u ? u.deltaY : "wheelDeltaY" in u ? -u.wheelDeltaY : "wheelDelta" in u ? -u.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), Rv = bi(L0), Dv = [9, 13, 27, 32], qh = h && "CompositionEvent" in window, Vc = null;
  h && "documentMode" in document && (Vc = document.documentMode);
  var Mv = h && "TextEvent" in window && !Vc, I0 = h && (!qh || Vc && 8 < Vc && 11 >= Vc), P0 = String.fromCharCode(32), F0 = !1;
  function jh(u, d) {
    switch (u) {
      case "keyup":
        return Dv.indexOf(d.keyCode) !== -1;
      case "keydown":
        return d.keyCode !== 229;
      case "keypress":
      case "mousedown":
      case "focusout":
        return !0;
      default:
        return !1;
    }
  }
  function B0(u) {
    return u = u.detail, typeof u == "object" && "data" in u ? u.data : null;
  }
  var gl = !1;
  function Lv(u, d) {
    switch (u) {
      case "compositionend":
        return B0(d);
      case "keypress":
        return d.which !== 32 ? null : (F0 = !0, P0);
      case "textInput":
        return u = d.data, u === P0 && F0 ? null : u;
      default:
        return null;
    }
  }
  function Iv(u, d) {
    if (gl)
      return u === "compositionend" || !qh && jh(u, d) ? (u = Ph(), Of = Ih = Es = null, gl = !1, u) : null;
    switch (u) {
      case "paste":
        return null;
      case "keypress":
        if (!(d.ctrlKey || d.altKey || d.metaKey) || d.ctrlKey && d.altKey) {
          if (d.char && 1 < d.char.length)
            return d.char;
          if (d.which)
            return String.fromCharCode(d.which);
        }
        return null;
      case "compositionend":
        return I0 && d.locale !== "ko" ? null : d.data;
      default:
        return null;
    }
  }
  var Pv = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
  function U0(u) {
    var d = u && u.nodeName && u.nodeName.toLowerCase();
    return d === "input" ? !!Pv[u.type] : d === "textarea";
  }
  function Lf(u, d, m, E) {
    Pn(E), d = Uf(d, "onChange"), 0 < d.length && (m = new mu("onChange", "change", null, m, E), u.push({ event: m, listeners: d }));
  }
  var bo = null, Cs = null;
  function H0(u) {
    If(u, 0);
  }
  function wa(u) {
    var d = ci(u);
    if (zr(d))
      return u;
  }
  function Fv(u, d) {
    if (u === "change")
      return d;
  }
  var z0 = !1;
  if (h) {
    var Vh;
    if (h) {
      var $h = "oninput" in document;
      if (!$h) {
        var q0 = document.createElement("div");
        q0.setAttribute("oninput", "return;"), $h = typeof q0.oninput == "function";
      }
      Vh = $h;
    } else
      Vh = !1;
    z0 = Vh && (!document.documentMode || 9 < document.documentMode);
  }
  function j0() {
    bo && (bo.detachEvent("onpropertychange", Gh), Cs = bo = null);
  }
  function Gh(u) {
    if (u.propertyName === "value" && wa(Cs)) {
      var d = [];
      if (Lf(d, Cs, u, Uo(u)), u = H0, Ut)
        u(d);
      else {
        Ut = !0;
        try {
          G(u, d);
        } finally {
          Ut = !1, Ht();
        }
      }
    }
  }
  function Bv(u, d, m) {
    u === "focusin" ? (j0(), bo = d, Cs = m, bo.attachEvent("onpropertychange", Gh)) : u === "focusout" && j0();
  }
  function V0(u) {
    if (u === "selectionchange" || u === "keyup" || u === "keydown")
      return wa(Cs);
  }
  function li(u, d) {
    if (u === "click")
      return wa(d);
  }
  function Uv(u, d) {
    if (u === "input" || u === "change")
      return wa(d);
  }
  function $0(u, d) {
    return u === d && (u !== 0 || 1 / u === 1 / d) || u !== u && d !== d;
  }
  var Ji = typeof Object.is == "function" ? Object.is : $0, Hv = Object.prototype.hasOwnProperty;
  function $c(u, d) {
    if (Ji(u, d))
      return !0;
    if (typeof u != "object" || u === null || typeof d != "object" || d === null)
      return !1;
    var m = Object.keys(u), E = Object.keys(d);
    if (m.length !== E.length)
      return !1;
    for (E = 0; E < m.length; E++)
      if (!Hv.call(d, m[E]) || !Ji(u[m[E]], d[m[E]]))
        return !1;
    return !0;
  }
  function G0(u) {
    for (; u && u.firstChild; )
      u = u.firstChild;
    return u;
  }
  function W0(u, d) {
    var m = G0(u);
    u = 0;
    for (var E; m; ) {
      if (m.nodeType === 3) {
        if (E = u + m.textContent.length, u <= d && E >= d)
          return { node: m, offset: d - u };
        u = E;
      }
      e: {
        for (; m; ) {
          if (m.nextSibling) {
            m = m.nextSibling;
            break e;
          }
          m = m.parentNode;
        }
        m = void 0;
      }
      m = G0(m);
    }
  }
  function Wh(u, d) {
    return u && d ? u === d ? !0 : u && u.nodeType === 3 ? !1 : d && d.nodeType === 3 ? Wh(u, d.parentNode) : "contains" in u ? u.contains(d) : u.compareDocumentPosition ? !!(u.compareDocumentPosition(d) & 16) : !1 : !1;
  }
  function Gc() {
    for (var u = window, d = qr(); d instanceof u.HTMLIFrameElement; ) {
      try {
        var m = typeof d.contentWindow.location.href == "string";
      } catch {
        m = !1;
      }
      if (m)
        u = d.contentWindow;
      else
        break;
      d = qr(u.document);
    }
    return d;
  }
  function yl(u) {
    var d = u && u.nodeName && u.nodeName.toLowerCase();
    return d && (d === "input" && (u.type === "text" || u.type === "search" || u.type === "tel" || u.type === "url" || u.type === "password") || d === "textarea" || u.contentEditable === "true");
  }
  var K0 = h && "documentMode" in document && 11 >= document.documentMode, vu = null, Wc = null, vl = null, Ss = !1;
  function El(u, d, m) {
    var E = m.window === m ? m.document : m.nodeType === 9 ? m : m.ownerDocument;
    Ss || vu == null || vu !== qr(E) || (E = vu, "selectionStart" in E && yl(E) ? E = { start: E.selectionStart, end: E.selectionEnd } : (E = (E.ownerDocument && E.ownerDocument.defaultView || window).getSelection(), E = { anchorNode: E.anchorNode, anchorOffset: E.anchorOffset, focusNode: E.focusNode, focusOffset: E.focusOffset }), vl && $c(vl, E) || (vl = E, E = Uf(Wc, "onSelect"), 0 < E.length && (d = new mu("onSelect", "select", null, d, m), u.push({ event: d, listeners: E }), d.target = vu)));
  }
  dt(
    "cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),
    0
  ), dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1), dt(Ct, 2);
  for (var Kh = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), Yh = 0; Yh < Kh.length; Yh++)
    je.set(Kh[Yh], 0);
  c("onMouseEnter", ["mouseout", "mouseover"]), c("onMouseLeave", ["mouseout", "mouseover"]), c("onPointerEnter", ["pointerout", "pointerover"]), c("onPointerLeave", ["pointerout", "pointerover"]), l("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), l("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), l("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), l("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var Eu = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Y0 = new Set("cancel close invalid load scroll toggle".split(" ").concat(Eu));
  function Qh(u, d, m) {
    var E = u.type || "unknown-event";
    u.currentTarget = m, Qi(E, d, void 0, u), u.currentTarget = null;
  }
  function If(u, d) {
    d = (d & 4) !== 0;
    for (var m = 0; m < u.length; m++) {
      var E = u[m], A = E.event;
      E = E.listeners;
      e: {
        var w = void 0;
        if (d)
          for (var M = E.length - 1; 0 <= M; M--) {
            var B = E[M], W = B.instance, de = B.currentTarget;
            if (B = B.listener, W !== w && A.isPropagationStopped())
              break e;
            Qh(A, B, de), w = W;
          }
        else
          for (M = 0; M < E.length; M++) {
            if (B = E[M], W = B.instance, de = B.currentTarget, B = B.listener, W !== w && A.isPropagationStopped())
              break e;
            Qh(A, B, de), w = W;
          }
      }
    }
    if (dr)
      throw u = hl, dr = !1, hl = null, u;
  }
  function Cn(u, d) {
    var m = eg(d), E = u + "__bubble";
    m.has(E) || (Ff(d, u, 2, !1), m.add(E));
  }
  var Pf = "_reactListening" + Math.random().toString(36).slice(2);
  function Xh(u) {
    u[Pf] || (u[Pf] = !0, i.forEach(function(d) {
      Y0.has(d) || Oa(d, !1, u, null), Oa(d, !0, u, null);
    }));
  }
  function Oa(u, d, m, E) {
    var A = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0, w = m;
    if (u === "selectionchange" && m.nodeType !== 9 && (w = m.ownerDocument), E !== null && !d && Y0.has(u)) {
      if (u !== "scroll")
        return;
      A |= 2, w = E;
    }
    var M = eg(w), B = u + "__" + (d ? "capture" : "bubble");
    M.has(B) || (d && (A |= 4), Ff(w, u, A, d), M.add(B));
  }
  function Ff(u, d, m, E) {
    var A = je.get(d);
    switch (A === void 0 ? 2 : A) {
      case 0:
        A = Av;
        break;
      case 1:
        A = du;
        break;
      default:
        A = Uc;
    }
    m = A.bind(null, d, m, u), A = void 0, !Jt || d !== "touchstart" && d !== "touchmove" && d !== "wheel" || (A = !0), E ? A !== void 0 ? u.addEventListener(d, m, { capture: !0, passive: A }) : u.addEventListener(d, m, !0) : A !== void 0 ? u.addEventListener(d, m, { passive: A }) : u.addEventListener(d, m, !1);
  }
  function Bf(u, d, m, E, A) {
    var w = E;
    if (!(d & 1) && !(d & 2) && E !== null)
      e:
        for (; ; ) {
          if (E === null)
            return;
          var M = E.tag;
          if (M === 3 || M === 4) {
            var B = E.stateNode.containerInfo;
            if (B === A || B.nodeType === 8 && B.parentNode === A)
              break;
            if (M === 4)
              for (M = E.return; M !== null; ) {
                var W = M.tag;
                if ((W === 3 || W === 4) && (W = M.stateNode.containerInfo, W === A || W.nodeType === 8 && W.parentNode === A))
                  return;
                M = M.return;
              }
            for (; B !== null; ) {
              if (M = Cl(B), M === null)
                return;
              if (W = M.tag, W === 5 || W === 6) {
                E = w = M;
                continue e;
              }
              B = B.parentNode;
            }
          }
          E = E.return;
        }
    qt(function() {
      var de = w, $e = Uo(m), Nt = [];
      e: {
        var ke = ye.get(u);
        if (ke !== void 0) {
          var ot = mu, xt = u;
          switch (u) {
            case "keypress":
              if (hu(m) === 0)
                break e;
            case "keydown":
            case "keyup":
              ot = wv;
              break;
            case "focusin":
              xt = "focus", ot = si;
              break;
            case "focusout":
              xt = "blur", ot = si;
              break;
            case "beforeblur":
            case "afterblur":
              ot = si;
              break;
            case "click":
              if (m.button === 2)
                break e;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              ot = qc;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              ot = Xi;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              ot = yu;
              break;
            case Nf:
            case D:
            case Q:
              ot = N0;
              break;
            case ce:
              ot = M0;
              break;
            case "scroll":
              ot = Bh;
              break;
            case "wheel":
              ot = Rv;
              break;
            case "copy":
            case "cut":
            case "paste":
              ot = xv;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              ot = R0;
          }
          var yt = (d & 4) !== 0, ie = !yt && u === "scroll", X = yt ? ke !== null ? ke + "Capture" : null : ke;
          yt = [];
          for (var ne = de, ve; ne !== null; ) {
            ve = ne;
            var Se = ve.stateNode;
            if (ve.tag === 5 && Se !== null && (ve = Se, X !== null && (Se = mn(ne, X), Se != null && yt.push(Kc(ne, Se, ve)))), ie)
              break;
            ne = ne.return;
          }
          0 < yt.length && (ke = new ot(ke, xt, null, m, $e), Nt.push({ event: ke, listeners: yt }));
        }
      }
      if (!(d & 7)) {
        e: {
          if (ke = u === "mouseover" || u === "pointerover", ot = u === "mouseout" || u === "pointerout", ke && !(d & 16) && (xt = m.relatedTarget || m.fromElement) && (Cl(xt) || xt[ui]))
            break e;
          if ((ot || ke) && (ke = $e.window === $e ? $e : (ke = $e.ownerDocument) ? ke.defaultView || ke.parentWindow : window, ot ? (xt = m.relatedTarget || m.toElement, ot = de, xt = xt ? Cl(xt) : null, xt !== null && (ie = hr(xt), xt !== ie || xt.tag !== 5 && xt.tag !== 6) && (xt = null)) : (ot = null, xt = de), ot !== xt)) {
            if (yt = qc, Se = "onMouseLeave", X = "onMouseEnter", ne = "mouse", (u === "pointerout" || u === "pointerover") && (yt = R0, Se = "onPointerLeave", X = "onPointerEnter", ne = "pointer"), ie = ot == null ? ke : ci(ot), ve = xt == null ? ke : ci(xt), ke = new yt(Se, ne + "leave", ot, m, $e), ke.target = ie, ke.relatedTarget = ve, Se = null, Cl($e) === de && (yt = new yt(X, ne + "enter", xt, m, $e), yt.target = ve, yt.relatedTarget = ie, Se = yt), ie = Se, ot && xt)
              t: {
                for (yt = ot, X = xt, ne = 0, ve = yt; ve; ve = Tu(ve))
                  ne++;
                for (ve = 0, Se = X; Se; Se = Tu(Se))
                  ve++;
                for (; 0 < ne - ve; )
                  yt = Tu(yt), ne--;
                for (; 0 < ve - ne; )
                  X = Tu(X), ve--;
                for (; ne--; ) {
                  if (yt === X || X !== null && yt === X.alternate)
                    break t;
                  yt = Tu(yt), X = Tu(X);
                }
                yt = null;
              }
            else
              yt = null;
            ot !== null && Q0(Nt, ke, ot, yt, !1), xt !== null && ie !== null && Q0(Nt, ie, xt, yt, !0);
          }
        }
        e: {
          if (ke = de ? ci(de) : window, ot = ke.nodeName && ke.nodeName.toLowerCase(), ot === "select" || ot === "input" && ke.type === "file")
            var Dt = Fv;
          else if (U0(ke))
            if (z0)
              Dt = Uv;
            else {
              Dt = V0;
              var Ye = Bv;
            }
          else
            (ot = ke.nodeName) && ot.toLowerCase() === "input" && (ke.type === "checkbox" || ke.type === "radio") && (Dt = li);
          if (Dt && (Dt = Dt(u, de))) {
            Lf(Nt, Dt, m, $e);
            break e;
          }
          Ye && Ye(u, ke, de), u === "focusout" && (Ye = ke._wrapperState) && Ye.controlled && ke.type === "number" && Ci(ke, "number", ke.value);
        }
        switch (Ye = de ? ci(de) : window, u) {
          case "focusin":
            (U0(Ye) || Ye.contentEditable === "true") && (vu = Ye, Wc = de, vl = null);
            break;
          case "focusout":
            vl = Wc = vu = null;
            break;
          case "mousedown":
            Ss = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            Ss = !1, El(Nt, m, $e);
            break;
          case "selectionchange":
            if (K0)
              break;
          case "keydown":
          case "keyup":
            El(Nt, m, $e);
        }
        var wt;
        if (qh)
          e: {
            switch (u) {
              case "compositionstart":
                var Pt = "onCompositionStart";
                break e;
              case "compositionend":
                Pt = "onCompositionEnd";
                break e;
              case "compositionupdate":
                Pt = "onCompositionUpdate";
                break e;
            }
            Pt = void 0;
          }
        else
          gl ? jh(u, m) && (Pt = "onCompositionEnd") : u === "keydown" && m.keyCode === 229 && (Pt = "onCompositionStart");
        Pt && (I0 && m.locale !== "ko" && (gl || Pt !== "onCompositionStart" ? Pt === "onCompositionEnd" && gl && (wt = Ph()) : (Es = $e, Ih = "value" in Es ? Es.value : Es.textContent, gl = !0)), Ye = Uf(de, Pt), 0 < Ye.length && (Pt = new w0(Pt, u, null, m, $e), Nt.push({ event: Pt, listeners: Ye }), wt ? Pt.data = wt : (wt = B0(m), wt !== null && (Pt.data = wt)))), (wt = Mv ? Lv(u, m) : Iv(u, m)) && (de = Uf(de, "onBeforeInput"), 0 < de.length && ($e = new w0(
          "onBeforeInput",
          "beforeinput",
          null,
          m,
          $e
        ), Nt.push({ event: $e, listeners: de }), $e.data = wt));
      }
      If(Nt, d);
    });
  }
  function Kc(u, d, m) {
    return { instance: u, listener: d, currentTarget: m };
  }
  function Uf(u, d) {
    for (var m = d + "Capture", E = []; u !== null; ) {
      var A = u, w = A.stateNode;
      A.tag === 5 && w !== null && (A = w, w = mn(u, m), w != null && E.unshift(Kc(u, w, A)), w = mn(u, d), w != null && E.push(Kc(u, w, A))), u = u.return;
    }
    return E;
  }
  function Tu(u) {
    if (u === null)
      return null;
    do
      u = u.return;
    while (u && u.tag !== 5);
    return u || null;
  }
  function Q0(u, d, m, E, A) {
    for (var w = d._reactName, M = []; m !== null && m !== E; ) {
      var B = m, W = B.alternate, de = B.stateNode;
      if (W !== null && W === E)
        break;
      B.tag === 5 && de !== null && (B = de, A ? (W = mn(m, w), W != null && M.unshift(Kc(m, W, B))) : A || (W = mn(m, w), W != null && M.push(Kc(m, W, B)))), m = m.return;
    }
    M.length !== 0 && u.push({ event: d, listeners: M });
  }
  function Hf() {
  }
  var Jh = null, Zh = null;
  function Cu(u, d) {
    switch (u) {
      case "button":
      case "input":
      case "select":
      case "textarea":
        return !!d.autoFocus;
    }
    return !1;
  }
  function Yc(u, d) {
    return u === "textarea" || u === "option" || u === "noscript" || typeof d.children == "string" || typeof d.children == "number" || typeof d.dangerouslySetInnerHTML == "object" && d.dangerouslySetInnerHTML !== null && d.dangerouslySetInnerHTML.__html != null;
  }
  var Su = typeof setTimeout == "function" ? setTimeout : void 0, X0 = typeof clearTimeout == "function" ? clearTimeout : void 0;
  function zf(u) {
    u.nodeType === 1 ? u.textContent = "" : u.nodeType === 9 && (u = u.body, u != null && (u.textContent = ""));
  }
  function bs(u) {
    for (; u != null; u = u.nextSibling) {
      var d = u.nodeType;
      if (d === 1 || d === 3)
        break;
    }
    return u;
  }
  function J0(u) {
    u = u.previousSibling;
    for (var d = 0; u; ) {
      if (u.nodeType === 8) {
        var m = u.data;
        if (m === "$" || m === "$!" || m === "$?") {
          if (d === 0)
            return u;
          d--;
        } else
          m === "/$" && d++;
      }
      u = u.previousSibling;
    }
    return null;
  }
  var As = 0;
  function qf(u) {
    return { $$typeof: De, toString: u, valueOf: u };
  }
  var Tl = Math.random().toString(36).slice(2), $o = "__reactFiber$" + Tl, jf = "__reactProps$" + Tl, ui = "__reactContainer$" + Tl, Z0 = "__reactEvents$" + Tl;
  function Cl(u) {
    var d = u[$o];
    if (d)
      return d;
    for (var m = u.parentNode; m; ) {
      if (d = m[ui] || m[$o]) {
        if (m = d.alternate, d.child !== null || m !== null && m.child !== null)
          for (u = J0(u); u !== null; ) {
            if (m = u[$o])
              return m;
            u = J0(u);
          }
        return d;
      }
      u = m, m = u.parentNode;
    }
    return null;
  }
  function Ui(u) {
    return u = u[$o] || u[ui], !u || u.tag !== 5 && u.tag !== 6 && u.tag !== 13 && u.tag !== 3 ? null : u;
  }
  function ci(u) {
    if (u.tag === 5 || u.tag === 6)
      return u.stateNode;
    throw Error(r(33));
  }
  function Ra(u) {
    return u[jf] || null;
  }
  function eg(u) {
    var d = u[Z0];
    return d === void 0 && (d = u[Z0] = /* @__PURE__ */ new Set()), d;
  }
  var ep = [], yn = -1;
  function fi(u) {
    return { current: u };
  }
  function Rt(u) {
    0 > yn || (u.current = ep[yn], ep[yn] = null, yn--);
  }
  function St(u, d) {
    yn++, ep[yn] = u.current, u.current = d;
  }
  var xs = {}, Rn = fi(xs), Or = fi(!1), _s = xs;
  function hn(u, d) {
    var m = u.type.contextTypes;
    if (!m)
      return xs;
    var E = u.stateNode;
    if (E && E.__reactInternalMemoizedUnmaskedChildContext === d)
      return E.__reactInternalMemoizedMaskedChildContext;
    var A = {}, w;
    for (w in m)
      A[w] = d[w];
    return E && (u = u.stateNode, u.__reactInternalMemoizedUnmaskedChildContext = d, u.__reactInternalMemoizedMaskedChildContext = A), A;
  }
  function Rr(u) {
    return u = u.childContextTypes, u != null;
  }
  function Go() {
    Rt(Or), Rt(Rn);
  }
  function bu(u, d, m) {
    if (Rn.current !== xs)
      throw Error(r(168));
    St(Rn, d), St(Or, m);
  }
  function Au(u, d, m) {
    var E = u.stateNode;
    if (u = d.childContextTypes, typeof E.getChildContext != "function")
      return m;
    E = E.getChildContext();
    for (var A in E)
      if (!(A in u))
        throw Error(r(108, an(d) || "Unknown", A));
    return e({}, m, E);
  }
  function Zi(u) {
    return u = (u = u.stateNode) && u.__reactInternalMemoizedMergedChildContext || xs, _s = Rn.current, St(Rn, u), St(Or, Or.current), !0;
  }
  function tg(u, d, m) {
    var E = u.stateNode;
    if (!E)
      throw Error(r(169));
    m ? (u = Au(u, d, _s), E.__reactInternalMemoizedMergedChildContext = u, Rt(Or), Rt(Rn), St(Rn, u)) : Rt(Or), St(Or, m);
  }
  var tp = null, Sl = null, Qc = n.unstable_runWithPriority, Ao = n.unstable_scheduleCallback, Xc = n.unstable_cancelCallback, zv = n.unstable_shouldYield, ks = n.unstable_requestPaint, Vf = n.unstable_now, ng = n.unstable_getCurrentPriorityLevel, $f = n.unstable_ImmediatePriority, rg = n.unstable_UserBlockingPriority, np = n.unstable_NormalPriority, rp = n.unstable_LowPriority, ip = n.unstable_IdlePriority, op = {}, ig = ks !== void 0 ? ks : function() {
  }, Wo = null, Gf = null, Jc = !1, og = Vf(), Dr = 1e4 > og ? Vf : function() {
    return Vf() - og;
  };
  function xu() {
    switch (ng()) {
      case $f:
        return 99;
      case rg:
        return 98;
      case np:
        return 97;
      case rp:
        return 96;
      case ip:
        return 95;
      default:
        throw Error(r(332));
    }
  }
  function ap(u) {
    switch (u) {
      case 99:
        return $f;
      case 98:
        return rg;
      case 97:
        return np;
      case 96:
        return rp;
      case 95:
        return ip;
      default:
        throw Error(r(332));
    }
  }
  function bl(u, d) {
    return u = ap(u), Qc(u, d);
  }
  function Al(u, d, m) {
    return u = ap(u), Ao(u, d, m);
  }
  function pr() {
    if (Gf !== null) {
      var u = Gf;
      Gf = null, Xc(u);
    }
    Da();
  }
  function Da() {
    if (!Jc && Wo !== null) {
      Jc = !0;
      var u = 0;
      try {
        var d = Wo;
        bl(99, function() {
          for (; u < d.length; u++) {
            var m = d[u];
            do
              m = m(!0);
            while (m !== null);
          }
        }), Wo = null;
      } catch (m) {
        throw Wo !== null && (Wo = Wo.slice(u + 1)), Ao($f, pr), m;
      } finally {
        Jc = !1;
      }
    }
  }
  var Ns = ee.ReactCurrentBatchConfig;
  function mr(u, d) {
    if (u && u.defaultProps) {
      d = e({}, d), u = u.defaultProps;
      for (var m in u)
        d[m] === void 0 && (d[m] = u[m]);
      return d;
    }
    return d;
  }
  var ws = fi(null), Os = null, Ko = null, Wf = null;
  function sp() {
    Wf = Ko = Os = null;
  }
  function Kf(u) {
    var d = ws.current;
    Rt(ws), u.type._context._currentValue = d;
  }
  function lp(u, d) {
    for (; u !== null; ) {
      var m = u.alternate;
      if ((u.childLanes & d) === d) {
        if (m === null || (m.childLanes & d) === d)
          break;
        m.childLanes |= d;
      } else
        u.childLanes |= d, m !== null && (m.childLanes |= d);
      u = u.return;
    }
  }
  function xl(u, d) {
    Os = u, Wf = Ko = null, u = u.dependencies, u !== null && u.firstContext !== null && (u.lanes & d && (to = !0), u.firstContext = null);
  }
  function Hi(u, d) {
    if (Wf !== u && d !== !1 && d !== 0)
      if ((typeof d != "number" || d === 1073741823) && (Wf = u, d = 1073741823), d = { context: u, observedBits: d, next: null }, Ko === null) {
        if (Os === null)
          throw Error(r(308));
        Ko = d, Os.dependencies = { lanes: 0, firstContext: d, responders: null };
      } else
        Ko = Ko.next = d;
    return u._currentValue;
  }
  var eo = !1;
  function up(u) {
    u.updateQueue = { baseState: u.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null }, effects: null };
  }
  function ag(u, d) {
    u = u.updateQueue, d.updateQueue === u && (d.updateQueue = { baseState: u.baseState, firstBaseUpdate: u.firstBaseUpdate, lastBaseUpdate: u.lastBaseUpdate, shared: u.shared, effects: u.effects });
  }
  function xo(u, d) {
    return { eventTime: u, lane: d, tag: 0, payload: null, callback: null, next: null };
  }
  function Ma(u, d) {
    if (u = u.updateQueue, u !== null) {
      u = u.shared;
      var m = u.pending;
      m === null ? d.next = d : (d.next = m.next, m.next = d), u.pending = d;
    }
  }
  function sg(u, d) {
    var m = u.updateQueue, E = u.alternate;
    if (E !== null && (E = E.updateQueue, m === E)) {
      var A = null, w = null;
      if (m = m.firstBaseUpdate, m !== null) {
        do {
          var M = { eventTime: m.eventTime, lane: m.lane, tag: m.tag, payload: m.payload, callback: m.callback, next: null };
          w === null ? A = w = M : w = w.next = M, m = m.next;
        } while (m !== null);
        w === null ? A = w = d : w = w.next = d;
      } else
        A = w = d;
      m = { baseState: E.baseState, firstBaseUpdate: A, lastBaseUpdate: w, shared: E.shared, effects: E.effects }, u.updateQueue = m;
      return;
    }
    u = m.lastBaseUpdate, u === null ? m.firstBaseUpdate = d : u.next = d, m.lastBaseUpdate = d;
  }
  function La(u, d, m, E) {
    var A = u.updateQueue;
    eo = !1;
    var w = A.firstBaseUpdate, M = A.lastBaseUpdate, B = A.shared.pending;
    if (B !== null) {
      A.shared.pending = null;
      var W = B, de = W.next;
      W.next = null, M === null ? w = de : M.next = de, M = W;
      var $e = u.alternate;
      if ($e !== null) {
        $e = $e.updateQueue;
        var Nt = $e.lastBaseUpdate;
        Nt !== M && (Nt === null ? $e.firstBaseUpdate = de : Nt.next = de, $e.lastBaseUpdate = W);
      }
    }
    if (w !== null) {
      Nt = A.baseState, M = 0, $e = de = W = null;
      do {
        B = w.lane;
        var ke = w.eventTime;
        if ((E & B) === B) {
          $e !== null && ($e = $e.next = {
            eventTime: ke,
            lane: 0,
            tag: w.tag,
            payload: w.payload,
            callback: w.callback,
            next: null
          });
          e: {
            var ot = u, xt = w;
            switch (B = d, ke = m, xt.tag) {
              case 1:
                if (ot = xt.payload, typeof ot == "function") {
                  Nt = ot.call(ke, Nt, B);
                  break e;
                }
                Nt = ot;
                break e;
              case 3:
                ot.flags = ot.flags & -4097 | 64;
              case 0:
                if (ot = xt.payload, B = typeof ot == "function" ? ot.call(ke, Nt, B) : ot, B == null)
                  break e;
                Nt = e({}, Nt, B);
                break e;
              case 2:
                eo = !0;
            }
          }
          w.callback !== null && (u.flags |= 32, B = A.effects, B === null ? A.effects = [w] : B.push(w));
        } else
          ke = { eventTime: ke, lane: B, tag: w.tag, payload: w.payload, callback: w.callback, next: null }, $e === null ? (de = $e = ke, W = Nt) : $e = $e.next = ke, M |= B;
        if (w = w.next, w === null) {
          if (B = A.shared.pending, B === null)
            break;
          w = B.next, B.next = null, A.lastBaseUpdate = B, A.shared.pending = null;
        }
      } while (1);
      $e === null && (W = Nt), A.baseState = W, A.firstBaseUpdate = de, A.lastBaseUpdate = $e, Ml |= M, u.lanes = M, u.memoizedState = Nt;
    }
  }
  function cp(u, d, m) {
    if (u = d.effects, d.effects = null, u !== null)
      for (d = 0; d < u.length; d++) {
        var E = u[d], A = E.callback;
        if (A !== null) {
          if (E.callback = null, E = m, typeof A != "function")
            throw Error(r(191, A));
          A.call(E);
        }
      }
  }
  var Yf = new t.Component().refs;
  function Zc(u, d, m, E) {
    d = u.memoizedState, m = m(E, d), m = m == null ? d : e({}, d, m), u.memoizedState = m, u.lanes === 0 && (u.updateQueue.baseState = m);
  }
  var _u = { isMounted: function(u) {
    return (u = u._reactInternals) ? hr(u) === u : !1;
  }, enqueueSetState: function(u, d, m) {
    u = u._reactInternals;
    var E = zi(), A = ta(u), w = xo(E, A);
    w.payload = d, m != null && (w.callback = m), Ma(u, w), Bs(u, A, E);
  }, enqueueReplaceState: function(u, d, m) {
    u = u._reactInternals;
    var E = zi(), A = ta(u), w = xo(E, A);
    w.tag = 1, w.payload = d, m != null && (w.callback = m), Ma(u, w), Bs(u, A, E);
  }, enqueueForceUpdate: function(u, d) {
    u = u._reactInternals;
    var m = zi(), E = ta(u), A = xo(m, E);
    A.tag = 2, d != null && (A.callback = d), Ma(u, A), Bs(u, E, m);
  } };
  function e1(u, d, m, E, A, w, M) {
    return u = u.stateNode, typeof u.shouldComponentUpdate == "function" ? u.shouldComponentUpdate(E, w, M) : d.prototype && d.prototype.isPureReactComponent ? !$c(m, E) || !$c(A, w) : !0;
  }
  function _l(u, d, m) {
    var E = !1, A = xs, w = d.contextType;
    return typeof w == "object" && w !== null ? w = Hi(w) : (A = Rr(d) ? _s : Rn.current, E = d.contextTypes, w = (E = E != null) ? hn(u, A) : xs), d = new d(m, w), u.memoizedState = d.state !== null && d.state !== void 0 ? d.state : null, d.updater = _u, u.stateNode = d, d._reactInternals = u, E && (u = u.stateNode, u.__reactInternalMemoizedUnmaskedChildContext = A, u.__reactInternalMemoizedMaskedChildContext = w), d;
  }
  function Qf(u, d, m, E) {
    u = d.state, typeof d.componentWillReceiveProps == "function" && d.componentWillReceiveProps(m, E), typeof d.UNSAFE_componentWillReceiveProps == "function" && d.UNSAFE_componentWillReceiveProps(m, E), d.state !== u && _u.enqueueReplaceState(d, d.state, null);
  }
  function Xf(u, d, m, E) {
    var A = u.stateNode;
    A.props = m, A.state = u.memoizedState, A.refs = Yf, up(u);
    var w = d.contextType;
    typeof w == "object" && w !== null ? A.context = Hi(w) : (w = Rr(d) ? _s : Rn.current, A.context = hn(u, w)), La(u, m, A, E), A.state = u.memoizedState, w = d.getDerivedStateFromProps, typeof w == "function" && (Zc(u, d, w, m), A.state = u.memoizedState), typeof d.getDerivedStateFromProps == "function" || typeof A.getSnapshotBeforeUpdate == "function" || typeof A.UNSAFE_componentWillMount != "function" && typeof A.componentWillMount != "function" || (d = A.state, typeof A.componentWillMount == "function" && A.componentWillMount(), typeof A.UNSAFE_componentWillMount == "function" && A.UNSAFE_componentWillMount(), d !== A.state && _u.enqueueReplaceState(A, A.state, null), La(u, m, A, E), A.state = u.memoizedState), typeof A.componentDidMount == "function" && (u.flags |= 4);
  }
  var kl = Array.isArray;
  function ku(u, d, m) {
    if (u = m.ref, u !== null && typeof u != "function" && typeof u != "object") {
      if (m._owner) {
        if (m = m._owner, m) {
          if (m.tag !== 1)
            throw Error(r(309));
          var E = m.stateNode;
        }
        if (!E)
          throw Error(r(147, u));
        var A = "" + u;
        return d !== null && d.ref !== null && typeof d.ref == "function" && d.ref._stringRef === A ? d.ref : (d = function(w) {
          var M = E.refs;
          M === Yf && (M = E.refs = {}), w === null ? delete M[A] : M[A] = w;
        }, d._stringRef = A, d);
      }
      if (typeof u != "string")
        throw Error(r(284));
      if (!m._owner)
        throw Error(r(290, u));
    }
    return u;
  }
  function t1(u, d) {
    if (u.type !== "textarea")
      throw Error(r(31, Object.prototype.toString.call(d) === "[object Object]" ? "object with keys {" + Object.keys(d).join(", ") + "}" : d));
  }
  function fp(u) {
    function d(ie, X) {
      if (u) {
        var ne = ie.lastEffect;
        ne !== null ? (ne.nextEffect = X, ie.lastEffect = X) : ie.firstEffect = ie.lastEffect = X, X.nextEffect = null, X.flags = 8;
      }
    }
    function m(ie, X) {
      if (!u)
        return null;
      for (; X !== null; )
        d(ie, X), X = X.sibling;
      return null;
    }
    function E(ie, X) {
      for (ie = /* @__PURE__ */ new Map(); X !== null; )
        X.key !== null ? ie.set(X.key, X) : ie.set(X.index, X), X = X.sibling;
      return ie;
    }
    function A(ie, X) {
      return ie = qs(ie, X), ie.index = 0, ie.sibling = null, ie;
    }
    function w(ie, X, ne) {
      return ie.index = ne, u ? (ne = ie.alternate, ne !== null ? (ne = ne.index, ne < X ? (ie.flags = 2, X) : ne) : (ie.flags = 2, X)) : X;
    }
    function M(ie) {
      return u && ie.alternate === null && (ie.flags = 2), ie;
    }
    function B(ie, X, ne, ve) {
      return X === null || X.tag !== 6 ? (X = Hp(ne, ie.mode, ve), X.return = ie, X) : (X = A(X, ne), X.return = ie, X);
    }
    function W(ie, X, ne, ve) {
      return X !== null && X.elementType === ne.type ? (ve = A(X, ne.props), ve.ref = ku(ie, X, ne), ve.return = ie, ve) : (ve = A1(ne.type, ne.key, ne.props, null, ie.mode, ve), ve.ref = ku(ie, X, ne), ve.return = ie, ve);
    }
    function de(ie, X, ne, ve) {
      return X === null || X.tag !== 4 || X.stateNode.containerInfo !== ne.containerInfo || X.stateNode.implementation !== ne.implementation ? (X = zp(ne, ie.mode, ve), X.return = ie, X) : (X = A(X, ne.children || []), X.return = ie, X);
    }
    function $e(ie, X, ne, ve, Se) {
      return X === null || X.tag !== 7 ? (X = na(ne, ie.mode, ve, Se), X.return = ie, X) : (X = A(X, ne), X.return = ie, X);
    }
    function Nt(ie, X, ne) {
      if (typeof X == "string" || typeof X == "number")
        return X = Hp("" + X, ie.mode, ne), X.return = ie, X;
      if (typeof X == "object" && X !== null) {
        switch (X.$$typeof) {
          case z:
            return ne = A1(X.type, X.key, X.props, null, ie.mode, ne), ne.ref = ku(ie, null, X), ne.return = ie, ne;
          case H:
            return X = zp(X, ie.mode, ne), X.return = ie, X;
        }
        if (kl(X) || Ze(X))
          return X = na(
            X,
            ie.mode,
            ne,
            null
          ), X.return = ie, X;
        t1(ie, X);
      }
      return null;
    }
    function ke(ie, X, ne, ve) {
      var Se = X !== null ? X.key : null;
      if (typeof ne == "string" || typeof ne == "number")
        return Se !== null ? null : B(ie, X, "" + ne, ve);
      if (typeof ne == "object" && ne !== null) {
        switch (ne.$$typeof) {
          case z:
            return ne.key === Se ? ne.type === Z ? $e(ie, X, ne.props.children, ve, Se) : W(ie, X, ne, ve) : null;
          case H:
            return ne.key === Se ? de(ie, X, ne, ve) : null;
        }
        if (kl(ne) || Ze(ne))
          return Se !== null ? null : $e(ie, X, ne, ve, null);
        t1(ie, ne);
      }
      return null;
    }
    function ot(ie, X, ne, ve, Se) {
      if (typeof ve == "string" || typeof ve == "number")
        return ie = ie.get(ne) || null, B(X, ie, "" + ve, Se);
      if (typeof ve == "object" && ve !== null) {
        switch (ve.$$typeof) {
          case z:
            return ie = ie.get(ve.key === null ? ne : ve.key) || null, ve.type === Z ? $e(X, ie, ve.props.children, Se, ve.key) : W(X, ie, ve, Se);
          case H:
            return ie = ie.get(ve.key === null ? ne : ve.key) || null, de(X, ie, ve, Se);
        }
        if (kl(ve) || Ze(ve))
          return ie = ie.get(ne) || null, $e(X, ie, ve, Se, null);
        t1(X, ve);
      }
      return null;
    }
    function xt(ie, X, ne, ve) {
      for (var Se = null, Dt = null, Ye = X, wt = X = 0, Pt = null; Ye !== null && wt < ne.length; wt++) {
        Ye.index > wt ? (Pt = Ye, Ye = null) : Pt = Ye.sibling;
        var Mt = ke(ie, Ye, ne[wt], ve);
        if (Mt === null) {
          Ye === null && (Ye = Pt);
          break;
        }
        u && Ye && Mt.alternate === null && d(ie, Ye), X = w(Mt, X, wt), Dt === null ? Se = Mt : Dt.sibling = Mt, Dt = Mt, Ye = Pt;
      }
      if (wt === ne.length)
        return m(ie, Ye), Se;
      if (Ye === null) {
        for (; wt < ne.length; wt++)
          Ye = Nt(ie, ne[wt], ve), Ye !== null && (X = w(Ye, X, wt), Dt === null ? Se = Ye : Dt.sibling = Ye, Dt = Ye);
        return Se;
      }
      for (Ye = E(ie, Ye); wt < ne.length; wt++)
        Pt = ot(Ye, ie, wt, ne[wt], ve), Pt !== null && (u && Pt.alternate !== null && Ye.delete(Pt.key === null ? wt : Pt.key), X = w(Pt, X, wt), Dt === null ? Se = Pt : Dt.sibling = Pt, Dt = Pt);
      return u && Ye.forEach(function(js) {
        return d(ie, js);
      }), Se;
    }
    function yt(ie, X, ne, ve) {
      var Se = Ze(ne);
      if (typeof Se != "function")
        throw Error(r(150));
      if (ne = Se.call(ne), ne == null)
        throw Error(r(151));
      for (var Dt = Se = null, Ye = X, wt = X = 0, Pt = null, Mt = ne.next(); Ye !== null && !Mt.done; wt++, Mt = ne.next()) {
        Ye.index > wt ? (Pt = Ye, Ye = null) : Pt = Ye.sibling;
        var js = ke(ie, Ye, Mt.value, ve);
        if (js === null) {
          Ye === null && (Ye = Pt);
          break;
        }
        u && Ye && js.alternate === null && d(ie, Ye), X = w(js, X, wt), Dt === null ? Se = js : Dt.sibling = js, Dt = js, Ye = Pt;
      }
      if (Mt.done)
        return m(ie, Ye), Se;
      if (Ye === null) {
        for (; !Mt.done; wt++, Mt = ne.next())
          Mt = Nt(ie, Mt.value, ve), Mt !== null && (X = w(Mt, X, wt), Dt === null ? Se = Mt : Dt.sibling = Mt, Dt = Mt);
        return Se;
      }
      for (Ye = E(ie, Ye); !Mt.done; wt++, Mt = ne.next())
        Mt = ot(Ye, ie, wt, Mt.value, ve), Mt !== null && (u && Mt.alternate !== null && Ye.delete(Mt.key === null ? wt : Mt.key), X = w(Mt, X, wt), Dt === null ? Se = Mt : Dt.sibling = Mt, Dt = Mt);
      return u && Ye.forEach(function(l5) {
        return d(ie, l5);
      }), Se;
    }
    return function(ie, X, ne, ve) {
      var Se = typeof ne == "object" && ne !== null && ne.type === Z && ne.key === null;
      Se && (ne = ne.props.children);
      var Dt = typeof ne == "object" && ne !== null;
      if (Dt)
        switch (ne.$$typeof) {
          case z:
            e: {
              for (Dt = ne.key, Se = X; Se !== null; ) {
                if (Se.key === Dt) {
                  switch (Se.tag) {
                    case 7:
                      if (ne.type === Z) {
                        m(ie, Se.sibling), X = A(Se, ne.props.children), X.return = ie, ie = X;
                        break e;
                      }
                      break;
                    default:
                      if (Se.elementType === ne.type) {
                        m(ie, Se.sibling), X = A(Se, ne.props), X.ref = ku(ie, Se, ne), X.return = ie, ie = X;
                        break e;
                      }
                  }
                  m(ie, Se);
                  break;
                } else
                  d(ie, Se);
                Se = Se.sibling;
              }
              ne.type === Z ? (X = na(ne.props.children, ie.mode, ve, ne.key), X.return = ie, ie = X) : (ve = A1(ne.type, ne.key, ne.props, null, ie.mode, ve), ve.ref = ku(ie, X, ne), ve.return = ie, ie = ve);
            }
            return M(ie);
          case H:
            e: {
              for (Se = ne.key; X !== null; ) {
                if (X.key === Se)
                  if (X.tag === 4 && X.stateNode.containerInfo === ne.containerInfo && X.stateNode.implementation === ne.implementation) {
                    m(ie, X.sibling), X = A(X, ne.children || []), X.return = ie, ie = X;
                    break e;
                  } else {
                    m(ie, X);
                    break;
                  }
                else
                  d(ie, X);
                X = X.sibling;
              }
              X = zp(ne, ie.mode, ve), X.return = ie, ie = X;
            }
            return M(ie);
        }
      if (typeof ne == "string" || typeof ne == "number")
        return ne = "" + ne, X !== null && X.tag === 6 ? (m(ie, X.sibling), X = A(X, ne), X.return = ie, ie = X) : (m(ie, X), X = Hp(ne, ie.mode, ve), X.return = ie, ie = X), M(ie);
      if (kl(ne))
        return xt(ie, X, ne, ve);
      if (Ze(ne))
        return yt(ie, X, ne, ve);
      if (Dt && t1(ie, ne), typeof ne > "u" && !Se)
        switch (ie.tag) {
          case 1:
          case 22:
          case 0:
          case 11:
          case 15:
            throw Error(r(152, an(ie.type) || "Component"));
        }
      return m(ie, X);
    };
  }
  var n1 = fp(!0), dp = fp(!1), Nl = {}, Yo = fi(Nl), r1 = fi(Nl), i1 = fi(Nl);
  function wl(u) {
    if (u === Nl)
      throw Error(r(174));
    return u;
  }
  function o1(u, d) {
    switch (St(i1, d), St(r1, u), St(Yo, Nl), u = d.nodeType, u) {
      case 9:
      case 11:
        d = (d = d.documentElement) ? d.namespaceURI : st(null, "");
        break;
      default:
        u = u === 8 ? d.parentNode : d, d = u.namespaceURI || null, u = u.tagName, d = st(d, u);
    }
    Rt(Yo), St(Yo, d);
  }
  function Nu() {
    Rt(Yo), Rt(r1), Rt(i1);
  }
  function lg(u) {
    wl(i1.current);
    var d = wl(Yo.current), m = st(d, u.type);
    d !== m && (St(r1, u), St(Yo, m));
  }
  function hp(u) {
    r1.current === u && (Rt(Yo), Rt(r1));
  }
  var zn = fi(0);
  function a1(u) {
    for (var d = u; d !== null; ) {
      if (d.tag === 13) {
        var m = d.memoizedState;
        if (m !== null && (m = m.dehydrated, m === null || m.data === "$?" || m.data === "$!"))
          return d;
      } else if (d.tag === 19 && d.memoizedProps.revealOrder !== void 0) {
        if (d.flags & 64)
          return d;
      } else if (d.child !== null) {
        d.child.return = d, d = d.child;
        continue;
      }
      if (d === u)
        break;
      for (; d.sibling === null; ) {
        if (d.return === null || d.return === u)
          return null;
        d = d.return;
      }
      d.sibling.return = d.return, d = d.sibling;
    }
    return null;
  }
  var Qo = null, Ia = null, Xo = !1;
  function pp(u, d) {
    var m = ro(5, null, null, 0);
    m.elementType = "DELETED", m.type = "DELETED", m.stateNode = d, m.return = u, m.flags = 8, u.lastEffect !== null ? (u.lastEffect.nextEffect = m, u.lastEffect = m) : u.firstEffect = u.lastEffect = m;
  }
  function ug(u, d) {
    switch (u.tag) {
      case 5:
        var m = u.type;
        return d = d.nodeType !== 1 || m.toLowerCase() !== d.nodeName.toLowerCase() ? null : d, d !== null ? (u.stateNode = d, !0) : !1;
      case 6:
        return d = u.pendingProps === "" || d.nodeType !== 3 ? null : d, d !== null ? (u.stateNode = d, !0) : !1;
      case 13:
        return !1;
      default:
        return !1;
    }
  }
  function Rs(u) {
    if (Xo) {
      var d = Ia;
      if (d) {
        var m = d;
        if (!ug(u, d)) {
          if (d = bs(m.nextSibling), !d || !ug(u, d)) {
            u.flags = u.flags & -1025 | 2, Xo = !1, Qo = u;
            return;
          }
          pp(Qo, m);
        }
        Qo = u, Ia = bs(d.firstChild);
      } else
        u.flags = u.flags & -1025 | 2, Xo = !1, Qo = u;
    }
  }
  function s1(u) {
    for (u = u.return; u !== null && u.tag !== 5 && u.tag !== 3 && u.tag !== 13; )
      u = u.return;
    Qo = u;
  }
  function l1(u) {
    if (u !== Qo)
      return !1;
    if (!Xo)
      return s1(u), Xo = !0, !1;
    var d = u.type;
    if (u.tag !== 5 || d !== "head" && d !== "body" && !Yc(d, u.memoizedProps))
      for (d = Ia; d; )
        pp(u, d), d = bs(d.nextSibling);
    if (s1(u), u.tag === 13) {
      if (u = u.memoizedState, u = u !== null ? u.dehydrated : null, !u)
        throw Error(r(317));
      e: {
        for (u = u.nextSibling, d = 0; u; ) {
          if (u.nodeType === 8) {
            var m = u.data;
            if (m === "/$") {
              if (d === 0) {
                Ia = bs(u.nextSibling);
                break e;
              }
              d--;
            } else
              m !== "$" && m !== "$!" && m !== "$?" || d++;
          }
          u = u.nextSibling;
        }
        Ia = null;
      }
    } else
      Ia = Qo ? bs(u.stateNode.nextSibling) : null;
    return !0;
  }
  function wu() {
    Ia = Qo = null, Xo = !1;
  }
  var Ol = [];
  function Ds() {
    for (var u = 0; u < Ol.length; u++)
      Ol[u]._workInProgressVersionPrimary = null;
    Ol.length = 0;
  }
  var Ou = ee.ReactCurrentDispatcher, gr = ee.ReactCurrentBatchConfig, Ru = 0, Dn = null, yr = null, vr = null, u1 = !1, Ms = !1;
  function di() {
    throw Error(r(321));
  }
  function Pa(u, d) {
    if (d === null)
      return !1;
    for (var m = 0; m < d.length && m < u.length; m++)
      if (!Ji(u[m], d[m]))
        return !1;
    return !0;
  }
  function mp(u, d, m, E, A, w) {
    if (Ru = w, Dn = d, d.memoizedState = null, d.updateQueue = null, d.lanes = 0, Ou.current = u === null || u.memoizedState === null ? d1 : jv, u = m(E, A), Ms) {
      w = 0;
      do {
        if (Ms = !1, !(25 > w))
          throw Error(r(301));
        w += 1, vr = yr = null, d.updateQueue = null, Ou.current = Vv, u = m(E, A);
      } while (Ms);
    }
    if (Ou.current = ed, d = yr !== null && yr.next !== null, Ru = 0, vr = yr = Dn = null, u1 = !1, d)
      throw Error(r(300));
    return u;
  }
  function Te() {
    var u = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    return vr === null ? Dn.memoizedState = vr = u : vr = vr.next = u, vr;
  }
  function Qn() {
    if (yr === null) {
      var u = Dn.alternate;
      u = u !== null ? u.memoizedState : null;
    } else
      u = yr.next;
    var d = vr === null ? Dn.memoizedState : vr.next;
    if (d !== null)
      vr = d, yr = u;
    else {
      if (u === null)
        throw Error(r(310));
      yr = u, u = { memoizedState: yr.memoizedState, baseState: yr.baseState, baseQueue: yr.baseQueue, queue: yr.queue, next: null }, vr === null ? Dn.memoizedState = vr = u : vr = vr.next = u;
    }
    return vr;
  }
  function Wt(u, d) {
    return typeof d == "function" ? d(u) : d;
  }
  function Fa(u) {
    var d = Qn(), m = d.queue;
    if (m === null)
      throw Error(r(311));
    m.lastRenderedReducer = u;
    var E = yr, A = E.baseQueue, w = m.pending;
    if (w !== null) {
      if (A !== null) {
        var M = A.next;
        A.next = w.next, w.next = M;
      }
      E.baseQueue = A = w, m.pending = null;
    }
    if (A !== null) {
      A = A.next, E = E.baseState;
      var B = M = w = null, W = A;
      do {
        var de = W.lane;
        if ((Ru & de) === de)
          B !== null && (B = B.next = { lane: 0, action: W.action, eagerReducer: W.eagerReducer, eagerState: W.eagerState, next: null }), E = W.eagerReducer === u ? W.eagerState : u(E, W.action);
        else {
          var $e = {
            lane: de,
            action: W.action,
            eagerReducer: W.eagerReducer,
            eagerState: W.eagerState,
            next: null
          };
          B === null ? (M = B = $e, w = E) : B = B.next = $e, Dn.lanes |= de, Ml |= de;
        }
        W = W.next;
      } while (W !== null && W !== A);
      B === null ? w = E : B.next = M, Ji(E, d.memoizedState) || (to = !0), d.memoizedState = E, d.baseState = w, d.baseQueue = B, m.lastRenderedState = E;
    }
    return [d.memoizedState, m.dispatch];
  }
  function Rl(u) {
    var d = Qn(), m = d.queue;
    if (m === null)
      throw Error(r(311));
    m.lastRenderedReducer = u;
    var E = m.dispatch, A = m.pending, w = d.memoizedState;
    if (A !== null) {
      m.pending = null;
      var M = A = A.next;
      do
        w = u(w, M.action), M = M.next;
      while (M !== A);
      Ji(w, d.memoizedState) || (to = !0), d.memoizedState = w, d.baseQueue === null && (d.baseState = w), m.lastRenderedState = w;
    }
    return [w, E];
  }
  function c1(u, d, m) {
    var E = d._getVersion;
    E = E(d._source);
    var A = d._workInProgressVersionPrimary;
    if (A !== null ? u = A === E : (u = u.mutableReadLanes, (u = (Ru & u) === u) && (d._workInProgressVersionPrimary = E, Ol.push(d))), u)
      return m(d._source);
    throw Ol.push(d), Error(r(350));
  }
  function gp(u, d, m, E) {
    var A = hi;
    if (A === null)
      throw Error(r(349));
    var w = d._getVersion, M = w(d._source), B = Ou.current, W = B.useState(function() {
      return c1(A, d, m);
    }), de = W[1], $e = W[0];
    W = vr;
    var Nt = u.memoizedState, ke = Nt.refs, ot = ke.getSnapshot, xt = Nt.source;
    Nt = Nt.subscribe;
    var yt = Dn;
    return u.memoizedState = { refs: ke, source: d, subscribe: E }, B.useEffect(function() {
      ke.getSnapshot = m, ke.setSnapshot = de;
      var ie = w(d._source);
      if (!Ji(M, ie)) {
        ie = m(d._source), Ji($e, ie) || (de(ie), ie = ta(yt), A.mutableReadLanes |= ie & A.pendingLanes), ie = A.mutableReadLanes, A.entangledLanes |= ie;
        for (var X = A.entanglements, ne = ie; 0 < ne; ) {
          var ve = 31 - Vo(ne), Se = 1 << ve;
          X[ve] |= ie, ne &= ~Se;
        }
      }
    }, [m, d, E]), B.useEffect(function() {
      return E(d._source, function() {
        var ie = ke.getSnapshot, X = ke.setSnapshot;
        try {
          X(ie(d._source));
          var ne = ta(yt);
          A.mutableReadLanes |= ne & A.pendingLanes;
        } catch (ve) {
          X(function() {
            throw ve;
          });
        }
      });
    }, [d, E]), Ji(ot, m) && Ji(xt, d) && Ji(Nt, E) || (u = { pending: null, dispatch: null, lastRenderedReducer: Wt, lastRenderedState: $e }, u.dispatch = de = Tp.bind(null, Dn, u), W.queue = u, W.baseQueue = null, $e = c1(A, d, m), W.memoizedState = W.baseState = $e), $e;
  }
  function yp(u, d, m) {
    var E = Qn();
    return gp(E, u, d, m);
  }
  function Du(u) {
    var d = Te();
    return typeof u == "function" && (u = u()), d.memoizedState = d.baseState = u, u = d.queue = { pending: null, dispatch: null, lastRenderedReducer: Wt, lastRenderedState: u }, u = u.dispatch = Tp.bind(null, Dn, u), [d.memoizedState, u];
  }
  function Mu(u, d, m, E) {
    return u = { tag: u, create: d, destroy: m, deps: E, next: null }, d = Dn.updateQueue, d === null ? (d = { lastEffect: null }, Dn.updateQueue = d, d.lastEffect = u.next = u) : (m = d.lastEffect, m === null ? d.lastEffect = u.next = u : (E = m.next, m.next = u, u.next = E, d.lastEffect = u)), u;
  }
  function vp(u) {
    var d = Te();
    return u = { current: u }, d.memoizedState = u;
  }
  function Ba() {
    return Qn().memoizedState;
  }
  function Lu(u, d, m, E) {
    var A = Te();
    Dn.flags |= u, A.memoizedState = Mu(1 | d, m, void 0, E === void 0 ? null : E);
  }
  function Ls(u, d, m, E) {
    var A = Qn();
    E = E === void 0 ? null : E;
    var w = void 0;
    if (yr !== null) {
      var M = yr.memoizedState;
      if (w = M.destroy, E !== null && Pa(E, M.deps)) {
        Mu(d, m, w, E);
        return;
      }
    }
    Dn.flags |= u, A.memoizedState = Mu(1 | d, m, w, E);
  }
  function Jf(u, d) {
    return Lu(516, 4, u, d);
  }
  function f1(u, d) {
    return Ls(516, 4, u, d);
  }
  function Ep(u, d) {
    return Ls(4, 2, u, d);
  }
  function Zf(u, d) {
    if (typeof d == "function")
      return u = u(), d(u), function() {
        d(null);
      };
    if (d != null)
      return u = u(), d.current = u, function() {
        d.current = null;
      };
  }
  function _o(u, d, m) {
    return m = m != null ? m.concat([u]) : null, Ls(4, 2, Zf.bind(null, d, u), m);
  }
  function Mn() {
  }
  function qv(u, d) {
    var m = Qn();
    d = d === void 0 ? null : d;
    var E = m.memoizedState;
    return E !== null && d !== null && Pa(d, E[1]) ? E[0] : (m.memoizedState = [u, d], u);
  }
  function Tn(u, d) {
    var m = Qn();
    d = d === void 0 ? null : d;
    var E = m.memoizedState;
    return E !== null && d !== null && Pa(d, E[1]) ? E[0] : (u = u(), m.memoizedState = [u, d], u);
  }
  function Iu(u, d) {
    var m = xu();
    bl(98 > m ? 98 : m, function() {
      u(!0);
    }), bl(97 < m ? 97 : m, function() {
      var E = gr.transition;
      gr.transition = 1;
      try {
        u(!1), d();
      } finally {
        gr.transition = E;
      }
    });
  }
  function Tp(u, d, m) {
    var E = zi(), A = ta(u), w = { lane: A, action: m, eagerReducer: null, eagerState: null, next: null }, M = d.pending;
    if (M === null ? w.next = w : (w.next = M.next, M.next = w), d.pending = w, M = u.alternate, u === Dn || M !== null && M === Dn)
      Ms = u1 = !0;
    else {
      if (u.lanes === 0 && (M === null || M.lanes === 0) && (M = d.lastRenderedReducer, M !== null))
        try {
          var B = d.lastRenderedState, W = M(B, m);
          if (w.eagerReducer = M, w.eagerState = W, Ji(W, B))
            return;
        } catch {
        } finally {
        }
      Bs(u, A, E);
    }
  }
  var ed = { readContext: Hi, useCallback: di, useContext: di, useEffect: di, useImperativeHandle: di, useLayoutEffect: di, useMemo: di, useReducer: di, useRef: di, useState: di, useDebugValue: di, useDeferredValue: di, useTransition: di, useMutableSource: di, useOpaqueIdentifier: di, unstable_isNewReconciler: !1 }, d1 = { readContext: Hi, useCallback: function(u, d) {
    return Te().memoizedState = [u, d === void 0 ? null : d], u;
  }, useContext: Hi, useEffect: Jf, useImperativeHandle: function(u, d, m) {
    return m = m != null ? m.concat([u]) : null, Lu(4, 2, Zf.bind(
      null,
      d,
      u
    ), m);
  }, useLayoutEffect: function(u, d) {
    return Lu(4, 2, u, d);
  }, useMemo: function(u, d) {
    var m = Te();
    return d = d === void 0 ? null : d, u = u(), m.memoizedState = [u, d], u;
  }, useReducer: function(u, d, m) {
    var E = Te();
    return d = m !== void 0 ? m(d) : d, E.memoizedState = E.baseState = d, u = E.queue = { pending: null, dispatch: null, lastRenderedReducer: u, lastRenderedState: d }, u = u.dispatch = Tp.bind(null, Dn, u), [E.memoizedState, u];
  }, useRef: vp, useState: Du, useDebugValue: Mn, useDeferredValue: function(u) {
    var d = Du(u), m = d[0], E = d[1];
    return Jf(function() {
      var A = gr.transition;
      gr.transition = 1;
      try {
        E(u);
      } finally {
        gr.transition = A;
      }
    }, [u]), m;
  }, useTransition: function() {
    var u = Du(!1), d = u[0];
    return u = Iu.bind(null, u[1]), vp(u), [u, d];
  }, useMutableSource: function(u, d, m) {
    var E = Te();
    return E.memoizedState = { refs: { getSnapshot: d, setSnapshot: null }, source: u, subscribe: m }, gp(E, u, d, m);
  }, useOpaqueIdentifier: function() {
    if (Xo) {
      var u = !1, d = qf(function() {
        throw u || (u = !0, m("r:" + (As++).toString(36))), Error(r(355));
      }), m = Du(d)[1];
      return !(Dn.mode & 2) && (Dn.flags |= 516, Mu(
        5,
        function() {
          m("r:" + (As++).toString(36));
        },
        void 0,
        null
      )), d;
    }
    return d = "r:" + (As++).toString(36), Du(d), d;
  }, unstable_isNewReconciler: !1 }, jv = { readContext: Hi, useCallback: qv, useContext: Hi, useEffect: f1, useImperativeHandle: _o, useLayoutEffect: Ep, useMemo: Tn, useReducer: Fa, useRef: Ba, useState: function() {
    return Fa(Wt);
  }, useDebugValue: Mn, useDeferredValue: function(u) {
    var d = Fa(Wt), m = d[0], E = d[1];
    return f1(function() {
      var A = gr.transition;
      gr.transition = 1;
      try {
        E(u);
      } finally {
        gr.transition = A;
      }
    }, [u]), m;
  }, useTransition: function() {
    var u = Fa(Wt)[0];
    return [
      Ba().current,
      u
    ];
  }, useMutableSource: yp, useOpaqueIdentifier: function() {
    return Fa(Wt)[0];
  }, unstable_isNewReconciler: !1 }, Vv = { readContext: Hi, useCallback: qv, useContext: Hi, useEffect: f1, useImperativeHandle: _o, useLayoutEffect: Ep, useMemo: Tn, useReducer: Rl, useRef: Ba, useState: function() {
    return Rl(Wt);
  }, useDebugValue: Mn, useDeferredValue: function(u) {
    var d = Rl(Wt), m = d[0], E = d[1];
    return f1(function() {
      var A = gr.transition;
      gr.transition = 1;
      try {
        E(u);
      } finally {
        gr.transition = A;
      }
    }, [u]), m;
  }, useTransition: function() {
    var u = Rl(Wt)[0];
    return [
      Ba().current,
      u
    ];
  }, useMutableSource: yp, useOpaqueIdentifier: function() {
    return Rl(Wt)[0];
  }, unstable_isNewReconciler: !1 }, $v = ee.ReactCurrentOwner, to = !1;
  function Ai(u, d, m, E) {
    d.child = u === null ? dp(d, null, m, E) : n1(d, u.child, m, E);
  }
  function Cp(u, d, m, E, A) {
    m = m.render;
    var w = d.ref;
    return xl(d, A), E = mp(u, d, m, E, w, A), u !== null && !to ? (d.updateQueue = u.updateQueue, d.flags &= -517, u.lanes &= ~A, Ua(u, d, A)) : (d.flags |= 1, Ai(u, d, E, A), d.child);
  }
  function Sp(u, d, m, E, A, w) {
    if (u === null) {
      var M = m.type;
      return typeof M == "function" && !ud(M) && M.defaultProps === void 0 && m.compare === null && m.defaultProps === void 0 ? (d.tag = 15, d.type = M, cg(u, d, M, E, A, w)) : (u = A1(m.type, null, E, d, d.mode, w), u.ref = d.ref, u.return = d, d.child = u);
    }
    return M = u.child, !(A & w) && (A = M.memoizedProps, m = m.compare, m = m !== null ? m : $c, m(A, E) && u.ref === d.ref) ? Ua(u, d, w) : (d.flags |= 1, u = qs(M, E), u.ref = d.ref, u.return = d, d.child = u);
  }
  function cg(u, d, m, E, A, w) {
    if (u !== null && $c(u.memoizedProps, E) && u.ref === d.ref)
      if (to = !1, (w & A) !== 0)
        u.flags & 16384 && (to = !0);
      else
        return d.lanes = u.lanes, Ua(u, d, w);
    return bp(u, d, m, E, w);
  }
  function Pu(u, d, m) {
    var E = d.pendingProps, A = E.children, w = u !== null ? u.memoizedState : null;
    if (E.mode === "hidden" || E.mode === "unstable-defer-without-hiding")
      if (!(d.mode & 4))
        d.memoizedState = { baseLanes: 0 }, sd(d, m);
      else if (m & 1073741824)
        d.memoizedState = { baseLanes: 0 }, sd(d, w !== null ? w.baseLanes : m);
      else
        return u = w !== null ? w.baseLanes | m : m, d.lanes = d.childLanes = 1073741824, d.memoizedState = { baseLanes: u }, sd(d, u), null;
    else
      w !== null ? (E = w.baseLanes | m, d.memoizedState = null) : E = m, sd(d, E);
    return Ai(u, d, A, m), d.child;
  }
  function fg(u, d) {
    var m = d.ref;
    (u === null && m !== null || u !== null && u.ref !== m) && (d.flags |= 128);
  }
  function bp(u, d, m, E, A) {
    var w = Rr(m) ? _s : Rn.current;
    return w = hn(d, w), xl(d, A), m = mp(u, d, m, E, w, A), u !== null && !to ? (d.updateQueue = u.updateQueue, d.flags &= -517, u.lanes &= ~A, Ua(u, d, A)) : (d.flags |= 1, Ai(u, d, m, A), d.child);
  }
  function dg(u, d, m, E, A) {
    if (Rr(m)) {
      var w = !0;
      Zi(d);
    } else
      w = !1;
    if (xl(d, A), d.stateNode === null)
      u !== null && (u.alternate = null, d.alternate = null, d.flags |= 2), _l(d, m, E), Xf(d, m, E, A), E = !0;
    else if (u === null) {
      var M = d.stateNode, B = d.memoizedProps;
      M.props = B;
      var W = M.context, de = m.contextType;
      typeof de == "object" && de !== null ? de = Hi(de) : (de = Rr(m) ? _s : Rn.current, de = hn(d, de));
      var $e = m.getDerivedStateFromProps, Nt = typeof $e == "function" || typeof M.getSnapshotBeforeUpdate == "function";
      Nt || typeof M.UNSAFE_componentWillReceiveProps != "function" && typeof M.componentWillReceiveProps != "function" || (B !== E || W !== de) && Qf(d, M, E, de), eo = !1;
      var ke = d.memoizedState;
      M.state = ke, La(d, E, M, A), W = d.memoizedState, B !== E || ke !== W || Or.current || eo ? (typeof $e == "function" && (Zc(d, m, $e, E), W = d.memoizedState), (B = eo || e1(d, m, B, E, ke, W, de)) ? (Nt || typeof M.UNSAFE_componentWillMount != "function" && typeof M.componentWillMount != "function" || (typeof M.componentWillMount == "function" && M.componentWillMount(), typeof M.UNSAFE_componentWillMount == "function" && M.UNSAFE_componentWillMount()), typeof M.componentDidMount == "function" && (d.flags |= 4)) : (typeof M.componentDidMount == "function" && (d.flags |= 4), d.memoizedProps = E, d.memoizedState = W), M.props = E, M.state = W, M.context = de, E = B) : (typeof M.componentDidMount == "function" && (d.flags |= 4), E = !1);
    } else {
      M = d.stateNode, ag(u, d), B = d.memoizedProps, de = d.type === d.elementType ? B : mr(d.type, B), M.props = de, Nt = d.pendingProps, ke = M.context, W = m.contextType, typeof W == "object" && W !== null ? W = Hi(W) : (W = Rr(m) ? _s : Rn.current, W = hn(d, W));
      var ot = m.getDerivedStateFromProps;
      ($e = typeof ot == "function" || typeof M.getSnapshotBeforeUpdate == "function") || typeof M.UNSAFE_componentWillReceiveProps != "function" && typeof M.componentWillReceiveProps != "function" || (B !== Nt || ke !== W) && Qf(d, M, E, W), eo = !1, ke = d.memoizedState, M.state = ke, La(d, E, M, A);
      var xt = d.memoizedState;
      B !== Nt || ke !== xt || Or.current || eo ? (typeof ot == "function" && (Zc(d, m, ot, E), xt = d.memoizedState), (de = eo || e1(d, m, de, E, ke, xt, W)) ? ($e || typeof M.UNSAFE_componentWillUpdate != "function" && typeof M.componentWillUpdate != "function" || (typeof M.componentWillUpdate == "function" && M.componentWillUpdate(
        E,
        xt,
        W
      ), typeof M.UNSAFE_componentWillUpdate == "function" && M.UNSAFE_componentWillUpdate(E, xt, W)), typeof M.componentDidUpdate == "function" && (d.flags |= 4), typeof M.getSnapshotBeforeUpdate == "function" && (d.flags |= 256)) : (typeof M.componentDidUpdate != "function" || B === u.memoizedProps && ke === u.memoizedState || (d.flags |= 4), typeof M.getSnapshotBeforeUpdate != "function" || B === u.memoizedProps && ke === u.memoizedState || (d.flags |= 256), d.memoizedProps = E, d.memoizedState = xt), M.props = E, M.state = xt, M.context = W, E = de) : (typeof M.componentDidUpdate != "function" || B === u.memoizedProps && ke === u.memoizedState || (d.flags |= 4), typeof M.getSnapshotBeforeUpdate != "function" || B === u.memoizedProps && ke === u.memoizedState || (d.flags |= 256), E = !1);
    }
    return Ap(u, d, m, E, w, A);
  }
  function Ap(u, d, m, E, A, w) {
    fg(u, d);
    var M = (d.flags & 64) !== 0;
    if (!E && !M)
      return A && tg(d, m, !1), Ua(u, d, w);
    E = d.stateNode, $v.current = d;
    var B = M && typeof m.getDerivedStateFromError != "function" ? null : E.render();
    return d.flags |= 1, u !== null && M ? (d.child = n1(d, u.child, null, w), d.child = n1(d, null, B, w)) : Ai(u, d, B, w), d.memoizedState = E.state, A && tg(d, m, !0), d.child;
  }
  function hg(u) {
    var d = u.stateNode;
    d.pendingContext ? bu(u, d.pendingContext, d.pendingContext !== d.context) : d.context && bu(u, d.context, !1), o1(u, d.containerInfo);
  }
  var Er = { dehydrated: null, retryLane: 0 };
  function Is(u, d, m) {
    var E = d.pendingProps, A = zn.current, w = !1, M;
    return (M = (d.flags & 64) !== 0) || (M = u !== null && u.memoizedState === null ? !1 : (A & 2) !== 0), M ? (w = !0, d.flags &= -65) : u !== null && u.memoizedState === null || E.fallback === void 0 || E.unstable_avoidThisFallback === !0 || (A |= 1), St(zn, A & 1), u === null ? (E.fallback !== void 0 && Rs(d), u = E.children, A = E.fallback, w ? (u = pg(d, u, A, m), d.child.memoizedState = { baseLanes: m }, d.memoizedState = Er, u) : typeof E.unstable_expectedLoadTime == "number" ? (u = pg(d, u, A, m), d.child.memoizedState = { baseLanes: m }, d.memoizedState = Er, d.lanes = 33554432, u) : (m = Bl({ mode: "visible", children: u }, d.mode, m, null), m.return = d, d.child = m)) : u.memoizedState !== null ? w ? (E = Ps(u, d, E.children, E.fallback, m), w = d.child, A = u.child.memoizedState, w.memoizedState = A === null ? { baseLanes: m } : { baseLanes: A.baseLanes | m }, w.childLanes = u.childLanes & ~m, d.memoizedState = Er, E) : (m = Mr(u, d, E.children, m), d.memoizedState = null, m) : w ? (E = Ps(u, d, E.children, E.fallback, m), w = d.child, A = u.child.memoizedState, w.memoizedState = A === null ? { baseLanes: m } : { baseLanes: A.baseLanes | m }, w.childLanes = u.childLanes & ~m, d.memoizedState = Er, E) : (m = Mr(u, d, E.children, m), d.memoizedState = null, m);
  }
  function pg(u, d, m, E) {
    var A = u.mode, w = u.child;
    return d = { mode: "hidden", children: d }, !(A & 2) && w !== null ? (w.childLanes = 0, w.pendingProps = d) : w = Bl(d, A, 0, null), m = na(m, A, E, null), w.return = u, m.return = u, w.sibling = m, u.child = w, m;
  }
  function Mr(u, d, m, E) {
    var A = u.child;
    return u = A.sibling, m = qs(A, { mode: "visible", children: m }), !(d.mode & 2) && (m.lanes = E), m.return = d, m.sibling = null, u !== null && (u.nextEffect = null, u.flags = 8, d.firstEffect = d.lastEffect = u), d.child = m;
  }
  function Ps(u, d, m, E, A) {
    var w = d.mode, M = u.child;
    u = M.sibling;
    var B = { mode: "hidden", children: m };
    return !(w & 2) && d.child !== M ? (m = d.child, m.childLanes = 0, m.pendingProps = B, M = m.lastEffect, M !== null ? (d.firstEffect = m.firstEffect, d.lastEffect = M, M.nextEffect = null) : d.firstEffect = d.lastEffect = null) : m = qs(M, B), u !== null ? E = qs(u, E) : (E = na(E, w, A, null), E.flags |= 2), E.return = d, m.return = d, m.sibling = E, d.child = m, E;
  }
  function fn(u, d) {
    u.lanes |= d;
    var m = u.alternate;
    m !== null && (m.lanes |= d), lp(u.return, d);
  }
  function Fu(u, d, m, E, A, w) {
    var M = u.memoizedState;
    M === null ? u.memoizedState = { isBackwards: d, rendering: null, renderingStartTime: 0, last: E, tail: m, tailMode: A, lastEffect: w } : (M.isBackwards = d, M.rendering = null, M.renderingStartTime = 0, M.last = E, M.tail = m, M.tailMode = A, M.lastEffect = w);
  }
  function Gv(u, d, m) {
    var E = d.pendingProps, A = E.revealOrder, w = E.tail;
    if (Ai(u, d, E.children, m), E = zn.current, E & 2)
      E = E & 1 | 2, d.flags |= 64;
    else {
      if (u !== null && u.flags & 64)
        e:
          for (u = d.child; u !== null; ) {
            if (u.tag === 13)
              u.memoizedState !== null && fn(u, m);
            else if (u.tag === 19)
              fn(u, m);
            else if (u.child !== null) {
              u.child.return = u, u = u.child;
              continue;
            }
            if (u === d)
              break e;
            for (; u.sibling === null; ) {
              if (u.return === null || u.return === d)
                break e;
              u = u.return;
            }
            u.sibling.return = u.return, u = u.sibling;
          }
      E &= 1;
    }
    if (St(zn, E), !(d.mode & 2))
      d.memoizedState = null;
    else
      switch (A) {
        case "forwards":
          for (m = d.child, A = null; m !== null; )
            u = m.alternate, u !== null && a1(u) === null && (A = m), m = m.sibling;
          m = A, m === null ? (A = d.child, d.child = null) : (A = m.sibling, m.sibling = null), Fu(d, !1, A, m, w, d.lastEffect);
          break;
        case "backwards":
          for (m = null, A = d.child, d.child = null; A !== null; ) {
            if (u = A.alternate, u !== null && a1(u) === null) {
              d.child = A;
              break;
            }
            u = A.sibling, A.sibling = m, m = A, A = u;
          }
          Fu(d, !0, m, null, w, d.lastEffect);
          break;
        case "together":
          Fu(d, !1, null, null, void 0, d.lastEffect);
          break;
        default:
          d.memoizedState = null;
      }
    return d.child;
  }
  function Ua(u, d, m) {
    if (u !== null && (d.dependencies = u.dependencies), Ml |= d.lanes, m & d.childLanes) {
      if (u !== null && d.child !== u.child)
        throw Error(r(153));
      if (d.child !== null) {
        for (u = d.child, m = qs(u, u.pendingProps), d.child = m, m.return = d; u.sibling !== null; )
          u = u.sibling, m = m.sibling = qs(u, u.pendingProps), m.return = d;
        m.sibling = null;
      }
      return d.child;
    }
    return null;
  }
  var td, Bu, mg, xp;
  td = function(u, d) {
    for (var m = d.child; m !== null; ) {
      if (m.tag === 5 || m.tag === 6)
        u.appendChild(m.stateNode);
      else if (m.tag !== 4 && m.child !== null) {
        m.child.return = m, m = m.child;
        continue;
      }
      if (m === d)
        break;
      for (; m.sibling === null; ) {
        if (m.return === null || m.return === d)
          return;
        m = m.return;
      }
      m.sibling.return = m.return, m = m.sibling;
    }
  }, Bu = function() {
  }, mg = function(u, d, m, E) {
    var A = u.memoizedProps;
    if (A !== E) {
      u = d.stateNode, wl(Yo.current);
      var w = null;
      switch (m) {
        case "input":
          A = cr(u, A), E = cr(u, E), w = [];
          break;
        case "option":
          A = jr(u, A), E = jr(u, E), w = [];
          break;
        case "select":
          A = e({}, A, { value: void 0 }), E = e({}, E, { value: void 0 }), w = [];
          break;
        case "textarea":
          A = le(u, A), E = le(u, E), w = [];
          break;
        default:
          typeof A.onClick != "function" && typeof E.onClick == "function" && (u.onclick = Hf);
      }
      Yi(m, E);
      var M;
      m = null;
      for (de in A)
        if (!E.hasOwnProperty(de) && A.hasOwnProperty(de) && A[de] != null)
          if (de === "style") {
            var B = A[de];
            for (M in B)
              B.hasOwnProperty(M) && (m || (m = {}), m[M] = "");
          } else
            de !== "dangerouslySetInnerHTML" && de !== "children" && de !== "suppressContentEditableWarning" && de !== "suppressHydrationWarning" && de !== "autoFocus" && (s.hasOwnProperty(de) ? w || (w = []) : (w = w || []).push(de, null));
      for (de in E) {
        var W = E[de];
        if (B = A != null ? A[de] : void 0, E.hasOwnProperty(de) && W !== B && (W != null || B != null))
          if (de === "style")
            if (B) {
              for (M in B)
                !B.hasOwnProperty(M) || W && W.hasOwnProperty(M) || (m || (m = {}), m[M] = "");
              for (M in W)
                W.hasOwnProperty(M) && B[M] !== W[M] && (m || (m = {}), m[M] = W[M]);
            } else
              m || (w || (w = []), w.push(de, m)), m = W;
          else
            de === "dangerouslySetInnerHTML" ? (W = W ? W.__html : void 0, B = B ? B.__html : void 0, W != null && B !== W && (w = w || []).push(de, W)) : de === "children" ? typeof W != "string" && typeof W != "number" || (w = w || []).push(de, "" + W) : de !== "suppressContentEditableWarning" && de !== "suppressHydrationWarning" && (s.hasOwnProperty(de) ? (W != null && de === "onScroll" && Cn("scroll", u), w || B === W || (w = [])) : typeof W == "object" && W !== null && W.$$typeof === De ? W.toString() : (w = w || []).push(de, W));
      }
      m && (w = w || []).push(
        "style",
        m
      );
      var de = w;
      (d.updateQueue = de) && (d.flags |= 4);
    }
  }, xp = function(u, d, m, E) {
    m !== E && (d.flags |= 4);
  };
  function h1(u, d) {
    if (!Xo)
      switch (u.tailMode) {
        case "hidden":
          d = u.tail;
          for (var m = null; d !== null; )
            d.alternate !== null && (m = d), d = d.sibling;
          m === null ? u.tail = null : m.sibling = null;
          break;
        case "collapsed":
          m = u.tail;
          for (var E = null; m !== null; )
            m.alternate !== null && (E = m), m = m.sibling;
          E === null ? d || u.tail === null ? u.tail = null : u.tail.sibling = null : E.sibling = null;
      }
  }
  function Wv(u, d, m) {
    var E = d.pendingProps;
    switch (d.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return null;
      case 1:
        return Rr(d.type) && Go(), null;
      case 3:
        return Nu(), Rt(Or), Rt(Rn), Ds(), E = d.stateNode, E.pendingContext && (E.context = E.pendingContext, E.pendingContext = null), (u === null || u.child === null) && (l1(d) ? d.flags |= 4 : E.hydrate || (d.flags |= 256)), Bu(d), null;
      case 5:
        hp(d);
        var A = wl(i1.current);
        if (m = d.type, u !== null && d.stateNode != null)
          mg(u, d, m, E, A), u.ref !== d.ref && (d.flags |= 128);
        else {
          if (!E) {
            if (d.stateNode === null)
              throw Error(r(166));
            return null;
          }
          if (u = wl(Yo.current), l1(d)) {
            E = d.stateNode, m = d.type;
            var w = d.memoizedProps;
            switch (E[$o] = d, E[jf] = w, m) {
              case "dialog":
                Cn("cancel", E), Cn("close", E);
                break;
              case "iframe":
              case "object":
              case "embed":
                Cn("load", E);
                break;
              case "video":
              case "audio":
                for (u = 0; u < Eu.length; u++)
                  Cn(Eu[u], E);
                break;
              case "source":
                Cn("error", E);
                break;
              case "img":
              case "image":
              case "link":
                Cn("error", E), Cn("load", E);
                break;
              case "details":
                Cn("toggle", E);
                break;
              case "input":
                yo(E, w), Cn("invalid", E);
                break;
              case "select":
                E._wrapperState = { wasMultiple: !!w.multiple }, Cn("invalid", E);
                break;
              case "textarea":
                Re(E, w), Cn("invalid", E);
            }
            Yi(m, w), u = null;
            for (var M in w)
              w.hasOwnProperty(M) && (A = w[M], M === "children" ? typeof A == "string" ? E.textContent !== A && (u = ["children", A]) : typeof A == "number" && E.textContent !== "" + A && (u = ["children", "" + A]) : s.hasOwnProperty(M) && A != null && M === "onScroll" && Cn("scroll", E));
            switch (m) {
              case "input":
                wn(E), vo(E, w, !0);
                break;
              case "textarea":
                wn(E), Bt(E);
                break;
              case "select":
              case "option":
                break;
              default:
                typeof w.onClick == "function" && (E.onclick = Hf);
            }
            E = u, d.updateQueue = E, E !== null && (d.flags |= 4);
          } else {
            switch (M = A.nodeType === 9 ? A : A.ownerDocument, u === be.html && (u = ze(m)), u === be.html ? m === "script" ? (u = M.createElement("div"), u.innerHTML = "<script><\/script>", u = u.removeChild(u.firstChild)) : typeof E.is == "string" ? u = M.createElement(m, { is: E.is }) : (u = M.createElement(m), m === "select" && (M = u, E.multiple ? M.multiple = !0 : E.size && (M.size = E.size))) : u = M.createElementNS(u, m), u[$o] = d, u[jf] = E, td(u, d, !1, !1), d.stateNode = u, M = Eo(m, E), m) {
              case "dialog":
                Cn("cancel", u), Cn("close", u), A = E;
                break;
              case "iframe":
              case "object":
              case "embed":
                Cn("load", u), A = E;
                break;
              case "video":
              case "audio":
                for (A = 0; A < Eu.length; A++)
                  Cn(Eu[A], u);
                A = E;
                break;
              case "source":
                Cn("error", u), A = E;
                break;
              case "img":
              case "image":
              case "link":
                Cn("error", u), Cn("load", u), A = E;
                break;
              case "details":
                Cn("toggle", u), A = E;
                break;
              case "input":
                yo(u, E), A = cr(u, E), Cn("invalid", u);
                break;
              case "option":
                A = jr(u, E);
                break;
              case "select":
                u._wrapperState = { wasMultiple: !!E.multiple }, A = e({}, E, { value: void 0 }), Cn("invalid", u);
                break;
              case "textarea":
                Re(u, E), A = le(u, E), Cn("invalid", u);
                break;
              default:
                A = E;
            }
            Yi(m, A);
            var B = A;
            for (w in B)
              if (B.hasOwnProperty(w)) {
                var W = B[w];
                w === "style" ? Vr(u, W) : w === "dangerouslySetInnerHTML" ? (W = W ? W.__html : void 0, W != null && en(u, W)) : w === "children" ? typeof W == "string" ? (m !== "textarea" || W !== "") && tn(u, W) : typeof W == "number" && tn(u, "" + W) : w !== "suppressContentEditableWarning" && w !== "suppressHydrationWarning" && w !== "autoFocus" && (s.hasOwnProperty(w) ? W != null && w === "onScroll" && Cn("scroll", u) : W != null && oe(u, w, W, M));
              }
            switch (m) {
              case "input":
                wn(u), vo(u, E, !1);
                break;
              case "textarea":
                wn(u), Bt(u);
                break;
              case "option":
                E.value != null && u.setAttribute("value", "" + Xt(E.value));
                break;
              case "select":
                u.multiple = !!E.multiple, w = E.value, w != null ? gn(u, !!E.multiple, w, !1) : E.defaultValue != null && gn(u, !!E.multiple, E.defaultValue, !0);
                break;
              default:
                typeof A.onClick == "function" && (u.onclick = Hf);
            }
            Cu(m, E) && (d.flags |= 4);
          }
          d.ref !== null && (d.flags |= 128);
        }
        return null;
      case 6:
        if (u && d.stateNode != null)
          xp(u, d, u.memoizedProps, E);
        else {
          if (typeof E != "string" && d.stateNode === null)
            throw Error(r(166));
          m = wl(i1.current), wl(Yo.current), l1(d) ? (E = d.stateNode, m = d.memoizedProps, E[$o] = d, E.nodeValue !== m && (d.flags |= 4)) : (E = (m.nodeType === 9 ? m : m.ownerDocument).createTextNode(E), E[$o] = d, d.stateNode = E);
        }
        return null;
      case 13:
        return Rt(zn), E = d.memoizedState, d.flags & 64 ? (d.lanes = m, d) : (E = E !== null, m = !1, u === null ? d.memoizedProps.fallback !== void 0 && l1(d) : m = u.memoizedState !== null, E && !m && d.mode & 2 && (u === null && d.memoizedProps.unstable_avoidThisFallback !== !0 || zn.current & 1 ? Tr === 0 && (Tr = 3) : ((Tr === 0 || Tr === 3) && (Tr = 4), hi === null || !(Ml & 134217727) && !(Zo & 134217727) || qu(hi, Lr))), (E || m) && (d.flags |= 4), null);
      case 4:
        return Nu(), Bu(d), u === null && Xh(d.stateNode.containerInfo), null;
      case 10:
        return Kf(d), null;
      case 17:
        return Rr(d.type) && Go(), null;
      case 19:
        if (Rt(zn), E = d.memoizedState, E === null)
          return null;
        if (w = (d.flags & 64) !== 0, M = E.rendering, M === null)
          if (w)
            h1(E, !1);
          else {
            if (Tr !== 0 || u !== null && u.flags & 64)
              for (u = d.child; u !== null; ) {
                if (M = a1(u), M !== null) {
                  for (d.flags |= 64, h1(E, !1), w = M.updateQueue, w !== null && (d.updateQueue = w, d.flags |= 4), E.lastEffect === null && (d.firstEffect = null), d.lastEffect = E.lastEffect, E = m, m = d.child; m !== null; )
                    w = m, u = E, w.flags &= 2, w.nextEffect = null, w.firstEffect = null, w.lastEffect = null, M = w.alternate, M === null ? (w.childLanes = 0, w.lanes = u, w.child = null, w.memoizedProps = null, w.memoizedState = null, w.updateQueue = null, w.dependencies = null, w.stateNode = null) : (w.childLanes = M.childLanes, w.lanes = M.lanes, w.child = M.child, w.memoizedProps = M.memoizedProps, w.memoizedState = M.memoizedState, w.updateQueue = M.updateQueue, w.type = M.type, u = M.dependencies, w.dependencies = u === null ? null : { lanes: u.lanes, firstContext: u.firstContext }), m = m.sibling;
                  return St(zn, zn.current & 1 | 2), d.child;
                }
                u = u.sibling;
              }
            E.tail !== null && Dr() > Ll && (d.flags |= 64, w = !0, h1(E, !1), d.lanes = 33554432);
          }
        else {
          if (!w)
            if (u = a1(M), u !== null) {
              if (d.flags |= 64, w = !0, m = u.updateQueue, m !== null && (d.updateQueue = m, d.flags |= 4), h1(E, !0), E.tail === null && E.tailMode === "hidden" && !M.alternate && !Xo)
                return d = d.lastEffect = E.lastEffect, d !== null && (d.nextEffect = null), null;
            } else
              2 * Dr() - E.renderingStartTime > Ll && m !== 1073741824 && (d.flags |= 64, w = !0, h1(E, !1), d.lanes = 33554432);
          E.isBackwards ? (M.sibling = d.child, d.child = M) : (m = E.last, m !== null ? m.sibling = M : d.child = M, E.last = M);
        }
        return E.tail !== null ? (m = E.tail, E.rendering = m, E.tail = m.sibling, E.lastEffect = d.lastEffect, E.renderingStartTime = Dr(), m.sibling = null, d = zn.current, St(zn, w ? d & 1 | 2 : d & 1), m) : null;
      case 23:
      case 24:
        return Fp(), u !== null && u.memoizedState !== null != (d.memoizedState !== null) && E.mode !== "unstable-defer-without-hiding" && (d.flags |= 4), null;
    }
    throw Error(r(156, d.tag));
  }
  function gg(u) {
    switch (u.tag) {
      case 1:
        Rr(u.type) && Go();
        var d = u.flags;
        return d & 4096 ? (u.flags = d & -4097 | 64, u) : null;
      case 3:
        if (Nu(), Rt(Or), Rt(Rn), Ds(), d = u.flags, d & 64)
          throw Error(r(285));
        return u.flags = d & -4097 | 64, u;
      case 5:
        return hp(u), null;
      case 13:
        return Rt(zn), d = u.flags, d & 4096 ? (u.flags = d & -4097 | 64, u) : null;
      case 19:
        return Rt(zn), null;
      case 4:
        return Nu(), null;
      case 10:
        return Kf(u), null;
      case 23:
      case 24:
        return Fp(), null;
      default:
        return null;
    }
  }
  function _p(u, d) {
    try {
      var m = "", E = d;
      do
        m += En(E), E = E.return;
      while (E);
      var A = m;
    } catch (w) {
      A = `
Error generating stack: ` + w.message + `
` + w.stack;
    }
    return { value: u, source: d, stack: A };
  }
  function kp(u, d) {
    try {
      console.error(d.value);
    } catch (m) {
      setTimeout(function() {
        throw m;
      });
    }
  }
  var yg = typeof WeakMap == "function" ? WeakMap : Map;
  function vg(u, d, m) {
    m = xo(-1, m), m.tag = 3, m.payload = { element: null };
    var E = d.value;
    return m.callback = function() {
      E1 || (E1 = !0, Dp = E), kp(u, d);
    }, m;
  }
  function Eg(u, d, m) {
    m = xo(-1, m), m.tag = 3;
    var E = u.type.getDerivedStateFromError;
    if (typeof E == "function") {
      var A = d.value;
      m.payload = function() {
        return kp(u, d), E(A);
      };
    }
    var w = u.stateNode;
    return w !== null && typeof w.componentDidCatch == "function" && (m.callback = function() {
      typeof E != "function" && (ea === null ? ea = /* @__PURE__ */ new Set([this]) : ea.add(this), kp(u, d));
      var M = d.stack;
      this.componentDidCatch(d.value, { componentStack: M !== null ? M : "" });
    }), m;
  }
  var Kv = typeof WeakSet == "function" ? WeakSet : Set;
  function Tg(u) {
    var d = u.ref;
    if (d !== null)
      if (typeof d == "function")
        try {
          d(null);
        } catch (m) {
          zs(u, m);
        }
      else
        d.current = null;
  }
  function Yv(u, d) {
    switch (d.tag) {
      case 0:
      case 11:
      case 15:
      case 22:
        return;
      case 1:
        if (d.flags & 256 && u !== null) {
          var m = u.memoizedProps, E = u.memoizedState;
          u = d.stateNode, d = u.getSnapshotBeforeUpdate(d.elementType === d.type ? m : mr(d.type, m), E), u.__reactInternalSnapshotBeforeUpdate = d;
        }
        return;
      case 3:
        d.flags & 256 && zf(d.stateNode.containerInfo);
        return;
      case 5:
      case 6:
      case 4:
      case 17:
        return;
    }
    throw Error(r(163));
  }
  function Np(u, d, m) {
    switch (m.tag) {
      case 0:
      case 11:
      case 15:
      case 22:
        if (d = m.updateQueue, d = d !== null ? d.lastEffect : null, d !== null) {
          u = d = d.next;
          do {
            if ((u.tag & 3) === 3) {
              var E = u.create;
              u.destroy = E();
            }
            u = u.next;
          } while (u !== d);
        }
        if (d = m.updateQueue, d = d !== null ? d.lastEffect : null, d !== null) {
          u = d = d.next;
          do {
            var A = u;
            E = A.next, A = A.tag, A & 4 && A & 1 && (Up(m, u), Dg(m, u)), u = E;
          } while (u !== d);
        }
        return;
      case 1:
        u = m.stateNode, m.flags & 4 && (d === null ? u.componentDidMount() : (E = m.elementType === m.type ? d.memoizedProps : mr(m.type, d.memoizedProps), u.componentDidUpdate(
          E,
          d.memoizedState,
          u.__reactInternalSnapshotBeforeUpdate
        ))), d = m.updateQueue, d !== null && cp(m, d, u);
        return;
      case 3:
        if (d = m.updateQueue, d !== null) {
          if (u = null, m.child !== null)
            switch (m.child.tag) {
              case 5:
                u = m.child.stateNode;
                break;
              case 1:
                u = m.child.stateNode;
            }
          cp(m, d, u);
        }
        return;
      case 5:
        u = m.stateNode, d === null && m.flags & 4 && Cu(m.type, m.memoizedProps) && u.focus();
        return;
      case 6:
        return;
      case 4:
        return;
      case 12:
        return;
      case 13:
        m.memoizedState === null && (m = m.alternate, m !== null && (m = m.memoizedState, m !== null && (m = m.dehydrated, m !== null && _f(m))));
        return;
      case 19:
      case 17:
      case 20:
      case 21:
      case 23:
      case 24:
        return;
    }
    throw Error(r(163));
  }
  function wp(u, d) {
    for (var m = u; ; ) {
      if (m.tag === 5) {
        var E = m.stateNode;
        if (d)
          E = E.style, typeof E.setProperty == "function" ? E.setProperty("display", "none", "important") : E.display = "none";
        else {
          E = m.stateNode;
          var A = m.memoizedProps.style;
          A = A != null && A.hasOwnProperty("display") ? A.display : null, E.style.display = Gt("display", A);
        }
      } else if (m.tag === 6)
        m.stateNode.nodeValue = d ? "" : m.memoizedProps;
      else if ((m.tag !== 23 && m.tag !== 24 || m.memoizedState === null || m === u) && m.child !== null) {
        m.child.return = m, m = m.child;
        continue;
      }
      if (m === u)
        break;
      for (; m.sibling === null; ) {
        if (m.return === null || m.return === u)
          return;
        m = m.return;
      }
      m.sibling.return = m.return, m = m.sibling;
    }
  }
  function Cg(u, d) {
    if (Sl && typeof Sl.onCommitFiberUnmount == "function")
      try {
        Sl.onCommitFiberUnmount(tp, d);
      } catch {
      }
    switch (d.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
      case 22:
        if (u = d.updateQueue, u !== null && (u = u.lastEffect, u !== null)) {
          var m = u = u.next;
          do {
            var E = m, A = E.destroy;
            if (E = E.tag, A !== void 0)
              if (E & 4)
                Up(d, m);
              else {
                E = d;
                try {
                  A();
                } catch (w) {
                  zs(E, w);
                }
              }
            m = m.next;
          } while (m !== u);
        }
        break;
      case 1:
        if (Tg(d), u = d.stateNode, typeof u.componentWillUnmount == "function")
          try {
            u.props = d.memoizedProps, u.state = d.memoizedState, u.componentWillUnmount();
          } catch (w) {
            zs(
              d,
              w
            );
          }
        break;
      case 5:
        Tg(d);
        break;
      case 4:
        xg(u, d);
    }
  }
  function Sg(u) {
    u.alternate = null, u.child = null, u.dependencies = null, u.firstEffect = null, u.lastEffect = null, u.memoizedProps = null, u.memoizedState = null, u.pendingProps = null, u.return = null, u.updateQueue = null;
  }
  function bg(u) {
    return u.tag === 5 || u.tag === 3 || u.tag === 4;
  }
  function Ag(u) {
    e: {
      for (var d = u.return; d !== null; ) {
        if (bg(d))
          break e;
        d = d.return;
      }
      throw Error(r(160));
    }
    var m = d;
    switch (d = m.stateNode, m.tag) {
      case 5:
        var E = !1;
        break;
      case 3:
        d = d.containerInfo, E = !0;
        break;
      case 4:
        d = d.containerInfo, E = !0;
        break;
      default:
        throw Error(r(161));
    }
    m.flags & 16 && (tn(d, ""), m.flags &= -17);
    e:
      t:
        for (m = u; ; ) {
          for (; m.sibling === null; ) {
            if (m.return === null || bg(m.return)) {
              m = null;
              break e;
            }
            m = m.return;
          }
          for (m.sibling.return = m.return, m = m.sibling; m.tag !== 5 && m.tag !== 6 && m.tag !== 18; ) {
            if (m.flags & 2 || m.child === null || m.tag === 4)
              continue t;
            m.child.return = m, m = m.child;
          }
          if (!(m.flags & 2)) {
            m = m.stateNode;
            break e;
          }
        }
    E ? p1(u, m, d) : m1(u, m, d);
  }
  function p1(u, d, m) {
    var E = u.tag, A = E === 5 || E === 6;
    if (A)
      u = A ? u.stateNode : u.stateNode.instance, d ? m.nodeType === 8 ? m.parentNode.insertBefore(u, d) : m.insertBefore(u, d) : (m.nodeType === 8 ? (d = m.parentNode, d.insertBefore(u, m)) : (d = m, d.appendChild(u)), m = m._reactRootContainer, m != null || d.onclick !== null || (d.onclick = Hf));
    else if (E !== 4 && (u = u.child, u !== null))
      for (p1(u, d, m), u = u.sibling; u !== null; )
        p1(u, d, m), u = u.sibling;
  }
  function m1(u, d, m) {
    var E = u.tag, A = E === 5 || E === 6;
    if (A)
      u = A ? u.stateNode : u.stateNode.instance, d ? m.insertBefore(u, d) : m.appendChild(u);
    else if (E !== 4 && (u = u.child, u !== null))
      for (m1(u, d, m), u = u.sibling; u !== null; )
        m1(u, d, m), u = u.sibling;
  }
  function xg(u, d) {
    for (var m = d, E = !1, A, w; ; ) {
      if (!E) {
        E = m.return;
        e:
          for (; ; ) {
            if (E === null)
              throw Error(r(160));
            switch (A = E.stateNode, E.tag) {
              case 5:
                w = !1;
                break e;
              case 3:
                A = A.containerInfo, w = !0;
                break e;
              case 4:
                A = A.containerInfo, w = !0;
                break e;
            }
            E = E.return;
          }
        E = !0;
      }
      if (m.tag === 5 || m.tag === 6) {
        e:
          for (var M = u, B = m, W = B; ; )
            if (Cg(M, W), W.child !== null && W.tag !== 4)
              W.child.return = W, W = W.child;
            else {
              if (W === B)
                break e;
              for (; W.sibling === null; ) {
                if (W.return === null || W.return === B)
                  break e;
                W = W.return;
              }
              W.sibling.return = W.return, W = W.sibling;
            }
        w ? (M = A, B = m.stateNode, M.nodeType === 8 ? M.parentNode.removeChild(B) : M.removeChild(B)) : A.removeChild(m.stateNode);
      } else if (m.tag === 4) {
        if (m.child !== null) {
          A = m.stateNode.containerInfo, w = !0, m.child.return = m, m = m.child;
          continue;
        }
      } else if (Cg(u, m), m.child !== null) {
        m.child.return = m, m = m.child;
        continue;
      }
      if (m === d)
        break;
      for (; m.sibling === null; ) {
        if (m.return === null || m.return === d)
          return;
        m = m.return, m.tag === 4 && (E = !1);
      }
      m.sibling.return = m.return, m = m.sibling;
    }
  }
  function Op(u, d) {
    switch (d.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
      case 22:
        var m = d.updateQueue;
        if (m = m !== null ? m.lastEffect : null, m !== null) {
          var E = m = m.next;
          do
            (E.tag & 3) === 3 && (u = E.destroy, E.destroy = void 0, u !== void 0 && u()), E = E.next;
          while (E !== m);
        }
        return;
      case 1:
        return;
      case 5:
        if (m = d.stateNode, m != null) {
          E = d.memoizedProps;
          var A = u !== null ? u.memoizedProps : E;
          u = d.type;
          var w = d.updateQueue;
          if (d.updateQueue = null, w !== null) {
            for (m[jf] = E, u === "input" && E.type === "radio" && E.name != null && fr(m, E), Eo(u, A), d = Eo(u, E), A = 0; A < w.length; A += 2) {
              var M = w[A], B = w[A + 1];
              M === "style" ? Vr(m, B) : M === "dangerouslySetInnerHTML" ? en(m, B) : M === "children" ? tn(m, B) : oe(m, M, B, d);
            }
            switch (u) {
              case "input":
                ni(m, E);
                break;
              case "textarea":
                at(m, E);
                break;
              case "select":
                u = m._wrapperState.wasMultiple, m._wrapperState.wasMultiple = !!E.multiple, w = E.value, w != null ? gn(m, !!E.multiple, w, !1) : u !== !!E.multiple && (E.defaultValue != null ? gn(m, !!E.multiple, E.defaultValue, !0) : gn(m, !!E.multiple, E.multiple ? [] : "", !1));
            }
          }
        }
        return;
      case 6:
        if (d.stateNode === null)
          throw Error(r(162));
        d.stateNode.nodeValue = d.memoizedProps;
        return;
      case 3:
        m = d.stateNode, m.hydrate && (m.hydrate = !1, _f(m.containerInfo));
        return;
      case 12:
        return;
      case 13:
        d.memoizedState !== null && (v1 = Dr(), wp(d.child, !0)), _g(d);
        return;
      case 19:
        _g(d);
        return;
      case 17:
        return;
      case 23:
      case 24:
        wp(d, d.memoizedState !== null);
        return;
    }
    throw Error(r(163));
  }
  function _g(u) {
    var d = u.updateQueue;
    if (d !== null) {
      u.updateQueue = null;
      var m = u.stateNode;
      m === null && (m = u.stateNode = new Kv()), d.forEach(function(E) {
        var A = t5.bind(null, u, E);
        m.has(E) || (m.add(E), E.then(A, A));
      });
    }
  }
  function Qv(u, d) {
    return u !== null && (u = u.memoizedState, u === null || u.dehydrated !== null) ? (d = d.memoizedState, d !== null && d.dehydrated === null) : !1;
  }
  var g1 = Math.ceil, Uu = ee.ReactCurrentDispatcher, Dl = ee.ReactCurrentOwner, kt = 0, hi = null, Xn = null, Lr = 0, Jo = 0, Hu = fi(0), Tr = 0, Yr = null, ko = 0, Ml = 0, Zo = 0, Rp = 0, y1 = null, v1 = 0, Ll = 1 / 0;
  function zu() {
    Ll = Dr() + 500;
  }
  var Ke = null, E1 = !1, Dp = null, ea = null, Fs = !1, Il = null, T1 = 90, Mp = [], Lp = [], Ha = null, C1 = 0, nd = null, rd = -1, za = 0, id = 0, S1 = null, od = !1;
  function zi() {
    return kt & 48 ? Dr() : rd !== -1 ? rd : rd = Dr();
  }
  function ta(u) {
    if (u = u.mode, !(u & 2))
      return 1;
    if (!(u & 4))
      return xu() === 99 ? 1 : 2;
    if (za === 0 && (za = ko), Ns.transition !== 0) {
      id !== 0 && (id = y1 !== null ? y1.pendingLanes : 0), u = za;
      var d = 4186112 & ~id;
      return d &= -d, d === 0 && (u = 4186112 & ~u, d = u & -u, d === 0 && (d = 8192)), d;
    }
    return u = xu(), kt & 4 && u === 98 ? u = wr(12, za) : (u = kn(u), u = wr(u, za)), u;
  }
  function Bs(u, d, m) {
    if (50 < C1)
      throw C1 = 0, nd = null, Error(r(185));
    if (u = ad(u, d), u === null)
      return null;
    vs(u, d, m), u === hi && (Zo |= d, Tr === 4 && qu(u, Lr));
    var E = xu();
    d === 1 ? kt & 8 && !(kt & 48) ? Pp(u) : (no(u, m), kt === 0 && (zu(), pr())) : (!(kt & 4) || E !== 98 && E !== 99 || (Ha === null ? Ha = /* @__PURE__ */ new Set([u]) : Ha.add(u)), no(u, m)), y1 = u;
  }
  function ad(u, d) {
    u.lanes |= d;
    var m = u.alternate;
    for (m !== null && (m.lanes |= d), m = u, u = u.return; u !== null; )
      u.childLanes |= d, m = u.alternate, m !== null && (m.childLanes |= d), m = u, u = u.return;
    return m.tag === 3 ? m.stateNode : null;
  }
  function no(u, d) {
    for (var m = u.callbackNode, E = u.suspendedLanes, A = u.pingedLanes, w = u.expirationTimes, M = u.pendingLanes; 0 < M; ) {
      var B = 31 - Vo(M), W = 1 << B, de = w[B];
      if (de === -1) {
        if (!(W & E) || W & A) {
          de = d, sn(W);
          var $e = ut;
          w[B] = 10 <= $e ? de + 250 : 6 <= $e ? de + 5e3 : -1;
        }
      } else
        de <= d && (u.expiredLanes |= W);
      M &= ~W;
    }
    if (E = Yn(u, u === hi ? Lr : 0), d = ut, E === 0)
      m !== null && (m !== op && Xc(m), u.callbackNode = null, u.callbackPriority = 0);
    else {
      if (m !== null) {
        if (u.callbackPriority === d)
          return;
        m !== op && Xc(m);
      }
      d === 15 ? (m = Pp.bind(null, u), Wo === null ? (Wo = [m], Gf = Ao($f, Da)) : Wo.push(m), m = op) : d === 14 ? m = Al(99, Pp.bind(null, u)) : (m = Fn(d), m = Al(m, Ip.bind(null, u))), u.callbackPriority = d, u.callbackNode = m;
    }
  }
  function Ip(u) {
    if (rd = -1, id = za = 0, kt & 48)
      throw Error(r(327));
    var d = u.callbackNode;
    if (Hs() && u.callbackNode !== d)
      return null;
    var m = Yn(u, u === hi ? Lr : 0);
    if (m === 0)
      return null;
    var E = m, A = kt;
    kt |= 16;
    var w = ju();
    (hi !== u || Lr !== E) && (zu(), Pl(u, E));
    do
      try {
        Og();
        break;
      } catch (B) {
        ld(u, B);
      }
    while (1);
    if (sp(), Uu.current = w, kt = A, Xn !== null ? E = 0 : (hi = null, Lr = 0, E = Tr), ko & Zo)
      Pl(u, 0);
    else if (E !== 0) {
      if (E === 2 && (kt |= 64, u.hydrate && (u.hydrate = !1, zf(u.containerInfo)), m = Nr(u), m !== 0 && (E = b1(u, m))), E === 1)
        throw d = Yr, Pl(u, 0), qu(u, m), no(u, Dr()), d;
      switch (u.finishedWork = u.current.alternate, u.finishedLanes = m, E) {
        case 0:
        case 1:
          throw Error(r(345));
        case 2:
          Us(u);
          break;
        case 3:
          if (qu(u, m), (m & 62914560) === m && (E = v1 + 500 - Dr(), 10 < E)) {
            if (Yn(u, 0) !== 0)
              break;
            if (A = u.suspendedLanes, (A & m) !== m) {
              zi(), u.pingedLanes |= u.suspendedLanes & A;
              break;
            }
            u.timeoutHandle = Su(Us.bind(null, u), E);
            break;
          }
          Us(u);
          break;
        case 4:
          if (qu(u, m), (m & 4186112) === m)
            break;
          for (E = u.eventTimes, A = -1; 0 < m; ) {
            var M = 31 - Vo(m);
            w = 1 << M, M = E[M], M > A && (A = M), m &= ~w;
          }
          if (m = A, m = Dr() - m, m = (120 > m ? 120 : 480 > m ? 480 : 1080 > m ? 1080 : 1920 > m ? 1920 : 3e3 > m ? 3e3 : 4320 > m ? 4320 : 1960 * g1(m / 1960)) - m, 10 < m) {
            u.timeoutHandle = Su(Us.bind(null, u), m);
            break;
          }
          Us(u);
          break;
        case 5:
          Us(u);
          break;
        default:
          throw Error(r(329));
      }
    }
    return no(u, Dr()), u.callbackNode === d ? Ip.bind(null, u) : null;
  }
  function qu(u, d) {
    for (d &= ~Rp, d &= ~Zo, u.suspendedLanes |= d, u.pingedLanes &= ~d, u = u.expirationTimes; 0 < d; ) {
      var m = 31 - Vo(d), E = 1 << m;
      u[m] = -1, d &= ~E;
    }
  }
  function Pp(u) {
    if (kt & 48)
      throw Error(r(327));
    if (Hs(), u === hi && u.expiredLanes & Lr) {
      var d = Lr, m = b1(u, d);
      ko & Zo && (d = Yn(u, d), m = b1(u, d));
    } else
      d = Yn(u, 0), m = b1(u, d);
    if (u.tag !== 0 && m === 2 && (kt |= 64, u.hydrate && (u.hydrate = !1, zf(u.containerInfo)), d = Nr(u), d !== 0 && (m = b1(u, d))), m === 1)
      throw m = Yr, Pl(u, 0), qu(u, d), no(u, Dr()), m;
    return u.finishedWork = u.current.alternate, u.finishedLanes = d, Us(u), no(u, Dr()), null;
  }
  function Xv() {
    if (Ha !== null) {
      var u = Ha;
      Ha = null, u.forEach(function(d) {
        d.expiredLanes |= 24 & d.pendingLanes, no(d, Dr());
      });
    }
    pr();
  }
  function kg(u, d) {
    var m = kt;
    kt |= 1;
    try {
      return u(d);
    } finally {
      kt = m, kt === 0 && (zu(), pr());
    }
  }
  function Ng(u, d) {
    var m = kt;
    kt &= -2, kt |= 8;
    try {
      return u(d);
    } finally {
      kt = m, kt === 0 && (zu(), pr());
    }
  }
  function sd(u, d) {
    St(Hu, Jo), Jo |= d, ko |= d;
  }
  function Fp() {
    Jo = Hu.current, Rt(Hu);
  }
  function Pl(u, d) {
    u.finishedWork = null, u.finishedLanes = 0;
    var m = u.timeoutHandle;
    if (m !== -1 && (u.timeoutHandle = -1, X0(m)), Xn !== null)
      for (m = Xn.return; m !== null; ) {
        var E = m;
        switch (E.tag) {
          case 1:
            E = E.type.childContextTypes, E != null && Go();
            break;
          case 3:
            Nu(), Rt(Or), Rt(Rn), Ds();
            break;
          case 5:
            hp(E);
            break;
          case 4:
            Nu();
            break;
          case 13:
            Rt(zn);
            break;
          case 19:
            Rt(zn);
            break;
          case 10:
            Kf(E);
            break;
          case 23:
          case 24:
            Fp();
        }
        m = m.return;
      }
    hi = u, Xn = qs(u.current, null), Lr = Jo = ko = d, Tr = 0, Yr = null, Rp = Zo = Ml = 0;
  }
  function ld(u, d) {
    do {
      var m = Xn;
      try {
        if (sp(), Ou.current = ed, u1) {
          for (var E = Dn.memoizedState; E !== null; ) {
            var A = E.queue;
            A !== null && (A.pending = null), E = E.next;
          }
          u1 = !1;
        }
        if (Ru = 0, vr = yr = Dn = null, Ms = !1, Dl.current = null, m === null || m.return === null) {
          Tr = 1, Yr = d, Xn = null;
          break;
        }
        e: {
          var w = u, M = m.return, B = m, W = d;
          if (d = Lr, B.flags |= 2048, B.firstEffect = B.lastEffect = null, W !== null && typeof W == "object" && typeof W.then == "function") {
            var de = W;
            if (!(B.mode & 2)) {
              var $e = B.alternate;
              $e ? (B.updateQueue = $e.updateQueue, B.memoizedState = $e.memoizedState, B.lanes = $e.lanes) : (B.updateQueue = null, B.memoizedState = null);
            }
            var Nt = (zn.current & 1) !== 0, ke = M;
            do {
              var ot;
              if (ot = ke.tag === 13) {
                var xt = ke.memoizedState;
                if (xt !== null)
                  ot = xt.dehydrated !== null;
                else {
                  var yt = ke.memoizedProps;
                  ot = yt.fallback === void 0 ? !1 : yt.unstable_avoidThisFallback !== !0 ? !0 : !Nt;
                }
              }
              if (ot) {
                var ie = ke.updateQueue;
                if (ie === null) {
                  var X = /* @__PURE__ */ new Set();
                  X.add(de), ke.updateQueue = X;
                } else
                  ie.add(de);
                if (!(ke.mode & 2)) {
                  if (ke.flags |= 64, B.flags |= 16384, B.flags &= -2981, B.tag === 1)
                    if (B.alternate === null)
                      B.tag = 17;
                    else {
                      var ne = xo(-1, 1);
                      ne.tag = 2, Ma(B, ne);
                    }
                  B.lanes |= 1;
                  break e;
                }
                W = void 0, B = d;
                var ve = w.pingCache;
                if (ve === null ? (ve = w.pingCache = new yg(), W = /* @__PURE__ */ new Set(), ve.set(de, W)) : (W = ve.get(de), W === void 0 && (W = /* @__PURE__ */ new Set(), ve.set(de, W))), !W.has(B)) {
                  W.add(B);
                  var Se = e5.bind(null, w, de, B);
                  de.then(Se, Se);
                }
                ke.flags |= 4096, ke.lanes = d;
                break e;
              }
              ke = ke.return;
            } while (ke !== null);
            W = Error((an(B.type) || "A React component") + ` suspended while rendering, but no fallback UI was specified.

Add a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.`);
          }
          Tr !== 5 && (Tr = 2), W = _p(W, B), ke = M;
          do {
            switch (ke.tag) {
              case 3:
                w = W, ke.flags |= 4096, d &= -d, ke.lanes |= d;
                var Dt = vg(ke, w, d);
                sg(ke, Dt);
                break e;
              case 1:
                w = W;
                var Ye = ke.type, wt = ke.stateNode;
                if (!(ke.flags & 64) && (typeof Ye.getDerivedStateFromError == "function" || wt !== null && typeof wt.componentDidCatch == "function" && (ea === null || !ea.has(wt)))) {
                  ke.flags |= 4096, d &= -d, ke.lanes |= d;
                  var Pt = Eg(ke, w, d);
                  sg(ke, Pt);
                  break e;
                }
            }
            ke = ke.return;
          } while (ke !== null);
        }
        Rg(m);
      } catch (Mt) {
        d = Mt, Xn === m && m !== null && (Xn = m = m.return);
        continue;
      }
      break;
    } while (1);
  }
  function ju() {
    var u = Uu.current;
    return Uu.current = ed, u === null ? ed : u;
  }
  function b1(u, d) {
    var m = kt;
    kt |= 16;
    var E = ju();
    hi === u && Lr === d || Pl(u, d);
    do
      try {
        wg();
        break;
      } catch (A) {
        ld(u, A);
      }
    while (1);
    if (sp(), kt = m, Uu.current = E, Xn !== null)
      throw Error(r(261));
    return hi = null, Lr = 0, Tr;
  }
  function wg() {
    for (; Xn !== null; )
      Bp(Xn);
  }
  function Og() {
    for (; Xn !== null && !zv(); )
      Bp(Xn);
  }
  function Bp(u) {
    var d = Lg(u.alternate, u, Jo);
    u.memoizedProps = u.pendingProps, d === null ? Rg(u) : Xn = d, Dl.current = null;
  }
  function Rg(u) {
    var d = u;
    do {
      var m = d.alternate;
      if (u = d.return, d.flags & 2048) {
        if (m = gg(d), m !== null) {
          m.flags &= 2047, Xn = m;
          return;
        }
        u !== null && (u.firstEffect = u.lastEffect = null, u.flags |= 2048);
      } else {
        if (m = Wv(m, d, Jo), m !== null) {
          Xn = m;
          return;
        }
        if (m = d, m.tag !== 24 && m.tag !== 23 || m.memoizedState === null || Jo & 1073741824 || !(m.mode & 4)) {
          for (var E = 0, A = m.child; A !== null; )
            E |= A.lanes | A.childLanes, A = A.sibling;
          m.childLanes = E;
        }
        u !== null && !(u.flags & 2048) && (u.firstEffect === null && (u.firstEffect = d.firstEffect), d.lastEffect !== null && (u.lastEffect !== null && (u.lastEffect.nextEffect = d.firstEffect), u.lastEffect = d.lastEffect), 1 < d.flags && (u.lastEffect !== null ? u.lastEffect.nextEffect = d : u.firstEffect = d, u.lastEffect = d));
      }
      if (d = d.sibling, d !== null) {
        Xn = d;
        return;
      }
      Xn = d = u;
    } while (d !== null);
    Tr === 0 && (Tr = 5);
  }
  function Us(u) {
    var d = xu();
    return bl(99, Jv.bind(null, u, d)), null;
  }
  function Jv(u, d) {
    do
      Hs();
    while (Il !== null);
    if (kt & 48)
      throw Error(r(327));
    var m = u.finishedWork;
    if (m === null)
      return null;
    if (u.finishedWork = null, u.finishedLanes = 0, m === u.current)
      throw Error(r(177));
    u.callbackNode = null;
    var E = m.lanes | m.childLanes, A = E, w = u.pendingLanes & ~A;
    u.pendingLanes = A, u.suspendedLanes = 0, u.pingedLanes = 0, u.expiredLanes &= A, u.mutableReadLanes &= A, u.entangledLanes &= A, A = u.entanglements;
    for (var M = u.eventTimes, B = u.expirationTimes; 0 < w; ) {
      var W = 31 - Vo(w), de = 1 << W;
      A[W] = 0, M[W] = -1, B[W] = -1, w &= ~de;
    }
    if (Ha !== null && !(E & 24) && Ha.has(u) && Ha.delete(u), u === hi && (Xn = hi = null, Lr = 0), 1 < m.flags ? m.lastEffect !== null ? (m.lastEffect.nextEffect = m, E = m.firstEffect) : E = m : E = m.firstEffect, E !== null) {
      if (A = kt, kt |= 32, Dl.current = null, Jh = Bc, M = Gc(), yl(M)) {
        if ("selectionStart" in M)
          B = { start: M.selectionStart, end: M.selectionEnd };
        else
          e:
            if (B = (B = M.ownerDocument) && B.defaultView || window, (de = B.getSelection && B.getSelection()) && de.rangeCount !== 0) {
              B = de.anchorNode, w = de.anchorOffset, W = de.focusNode, de = de.focusOffset;
              try {
                B.nodeType, W.nodeType;
              } catch {
                B = null;
                break e;
              }
              var $e = 0, Nt = -1, ke = -1, ot = 0, xt = 0, yt = M, ie = null;
              t:
                for (; ; ) {
                  for (var X; yt !== B || w !== 0 && yt.nodeType !== 3 || (Nt = $e + w), yt !== W || de !== 0 && yt.nodeType !== 3 || (ke = $e + de), yt.nodeType === 3 && ($e += yt.nodeValue.length), (X = yt.firstChild) !== null; )
                    ie = yt, yt = X;
                  for (; ; ) {
                    if (yt === M)
                      break t;
                    if (ie === B && ++ot === w && (Nt = $e), ie === W && ++xt === de && (ke = $e), (X = yt.nextSibling) !== null)
                      break;
                    yt = ie, ie = yt.parentNode;
                  }
                  yt = X;
                }
              B = Nt === -1 || ke === -1 ? null : { start: Nt, end: ke };
            } else
              B = null;
        B = B || { start: 0, end: 0 };
      } else
        B = null;
      Zh = { focusedElem: M, selectionRange: B }, Bc = !1, S1 = null, od = !1, Ke = E;
      do
        try {
          Zv();
        } catch (Mt) {
          if (Ke === null)
            throw Error(r(330));
          zs(Ke, Mt), Ke = Ke.nextEffect;
        }
      while (Ke !== null);
      S1 = null, Ke = E;
      do
        try {
          for (M = u; Ke !== null; ) {
            var ne = Ke.flags;
            if (ne & 16 && tn(Ke.stateNode, ""), ne & 128) {
              var ve = Ke.alternate;
              if (ve !== null) {
                var Se = ve.ref;
                Se !== null && (typeof Se == "function" ? Se(null) : Se.current = null);
              }
            }
            switch (ne & 1038) {
              case 2:
                Ag(Ke), Ke.flags &= -3;
                break;
              case 6:
                Ag(Ke), Ke.flags &= -3, Op(Ke.alternate, Ke);
                break;
              case 1024:
                Ke.flags &= -1025;
                break;
              case 1028:
                Ke.flags &= -1025, Op(Ke.alternate, Ke);
                break;
              case 4:
                Op(Ke.alternate, Ke);
                break;
              case 8:
                B = Ke, xg(M, B);
                var Dt = B.alternate;
                Sg(B), Dt !== null && Sg(Dt);
            }
            Ke = Ke.nextEffect;
          }
        } catch (Mt) {
          if (Ke === null)
            throw Error(r(330));
          zs(Ke, Mt), Ke = Ke.nextEffect;
        }
      while (Ke !== null);
      if (Se = Zh, ve = Gc(), ne = Se.focusedElem, M = Se.selectionRange, ve !== ne && ne && ne.ownerDocument && Wh(ne.ownerDocument.documentElement, ne)) {
        for (M !== null && yl(ne) && (ve = M.start, Se = M.end, Se === void 0 && (Se = ve), "selectionStart" in ne ? (ne.selectionStart = ve, ne.selectionEnd = Math.min(Se, ne.value.length)) : (Se = (ve = ne.ownerDocument || document) && ve.defaultView || window, Se.getSelection && (Se = Se.getSelection(), B = ne.textContent.length, Dt = Math.min(M.start, B), M = M.end === void 0 ? Dt : Math.min(M.end, B), !Se.extend && Dt > M && (B = M, M = Dt, Dt = B), B = W0(ne, Dt), w = W0(ne, M), B && w && (Se.rangeCount !== 1 || Se.anchorNode !== B.node || Se.anchorOffset !== B.offset || Se.focusNode !== w.node || Se.focusOffset !== w.offset) && (ve = ve.createRange(), ve.setStart(B.node, B.offset), Se.removeAllRanges(), Dt > M ? (Se.addRange(ve), Se.extend(w.node, w.offset)) : (ve.setEnd(w.node, w.offset), Se.addRange(ve)))))), ve = [], Se = ne; Se = Se.parentNode; )
          Se.nodeType === 1 && ve.push({ element: Se, left: Se.scrollLeft, top: Se.scrollTop });
        for (typeof ne.focus == "function" && ne.focus(), ne = 0; ne < ve.length; ne++)
          Se = ve[ne], Se.element.scrollLeft = Se.left, Se.element.scrollTop = Se.top;
      }
      Bc = !!Jh, Zh = Jh = null, u.current = m, Ke = E;
      do
        try {
          for (ne = u; Ke !== null; ) {
            var Ye = Ke.flags;
            if (Ye & 36 && Np(ne, Ke.alternate, Ke), Ye & 128) {
              ve = void 0;
              var wt = Ke.ref;
              if (wt !== null) {
                var Pt = Ke.stateNode;
                switch (Ke.tag) {
                  case 5:
                    ve = Pt;
                    break;
                  default:
                    ve = Pt;
                }
                typeof wt == "function" ? wt(ve) : wt.current = ve;
              }
            }
            Ke = Ke.nextEffect;
          }
        } catch (Mt) {
          if (Ke === null)
            throw Error(r(330));
          zs(Ke, Mt), Ke = Ke.nextEffect;
        }
      while (Ke !== null);
      Ke = null, ig(), kt = A;
    } else
      u.current = m;
    if (Fs)
      Fs = !1, Il = u, T1 = d;
    else
      for (Ke = E; Ke !== null; )
        d = Ke.nextEffect, Ke.nextEffect = null, Ke.flags & 8 && (Ye = Ke, Ye.sibling = null, Ye.stateNode = null), Ke = d;
    if (E = u.pendingLanes, E === 0 && (ea = null), E === 1 ? u === nd ? C1++ : (C1 = 0, nd = u) : C1 = 0, m = m.stateNode, Sl && typeof Sl.onCommitFiberRoot == "function")
      try {
        Sl.onCommitFiberRoot(tp, m, void 0, (m.current.flags & 64) === 64);
      } catch {
      }
    if (no(u, Dr()), E1)
      throw E1 = !1, u = Dp, Dp = null, u;
    return kt & 8 || pr(), null;
  }
  function Zv() {
    for (; Ke !== null; ) {
      var u = Ke.alternate;
      od || S1 === null || (Ke.flags & 8 ? Ho(Ke, S1) && (od = !0) : Ke.tag === 13 && Qv(u, Ke) && Ho(Ke, S1) && (od = !0));
      var d = Ke.flags;
      d & 256 && Yv(u, Ke), !(d & 512) || Fs || (Fs = !0, Al(97, function() {
        return Hs(), null;
      })), Ke = Ke.nextEffect;
    }
  }
  function Hs() {
    if (T1 !== 90) {
      var u = 97 < T1 ? 97 : T1;
      return T1 = 90, bl(u, Mg);
    }
    return !1;
  }
  function Dg(u, d) {
    Mp.push(d, u), Fs || (Fs = !0, Al(97, function() {
      return Hs(), null;
    }));
  }
  function Up(u, d) {
    Lp.push(d, u), Fs || (Fs = !0, Al(97, function() {
      return Hs(), null;
    }));
  }
  function Mg() {
    if (Il === null)
      return !1;
    var u = Il;
    if (Il = null, kt & 48)
      throw Error(r(331));
    var d = kt;
    kt |= 32;
    var m = Lp;
    Lp = [];
    for (var E = 0; E < m.length; E += 2) {
      var A = m[E], w = m[E + 1], M = A.destroy;
      if (A.destroy = void 0, typeof M == "function")
        try {
          M();
        } catch (W) {
          if (w === null)
            throw Error(r(330));
          zs(w, W);
        }
    }
    for (m = Mp, Mp = [], E = 0; E < m.length; E += 2) {
      A = m[E], w = m[E + 1];
      try {
        var B = A.create;
        A.destroy = B();
      } catch (W) {
        if (w === null)
          throw Error(r(330));
        zs(w, W);
      }
    }
    for (B = u.current.firstEffect; B !== null; )
      u = B.nextEffect, B.nextEffect = null, B.flags & 8 && (B.sibling = null, B.stateNode = null), B = u;
    return kt = d, pr(), !0;
  }
  function Fl(u, d, m) {
    d = _p(m, d), d = vg(u, d, 1), Ma(u, d), d = zi(), u = ad(u, 1), u !== null && (vs(u, 1, d), no(u, d));
  }
  function zs(u, d) {
    if (u.tag === 3)
      Fl(u, u, d);
    else
      for (var m = u.return; m !== null; ) {
        if (m.tag === 3) {
          Fl(m, u, d);
          break;
        } else if (m.tag === 1) {
          var E = m.stateNode;
          if (typeof m.type.getDerivedStateFromError == "function" || typeof E.componentDidCatch == "function" && (ea === null || !ea.has(E))) {
            u = _p(d, u);
            var A = Eg(m, u, 1);
            if (Ma(m, A), A = zi(), m = ad(m, 1), m !== null)
              vs(m, 1, A), no(m, A);
            else if (typeof E.componentDidCatch == "function" && (ea === null || !ea.has(E)))
              try {
                E.componentDidCatch(d, u);
              } catch {
              }
            break;
          }
        }
        m = m.return;
      }
  }
  function e5(u, d, m) {
    var E = u.pingCache;
    E !== null && E.delete(d), d = zi(), u.pingedLanes |= u.suspendedLanes & m, hi === u && (Lr & m) === m && (Tr === 4 || Tr === 3 && (Lr & 62914560) === Lr && 500 > Dr() - v1 ? Pl(u, 0) : Rp |= m), no(u, d);
  }
  function t5(u, d) {
    var m = u.stateNode;
    m !== null && m.delete(d), d = 0, d === 0 && (d = u.mode, d & 2 ? d & 4 ? (za === 0 && (za = ko), d = Bi(62914560 & ~za), d === 0 && (d = 4194304)) : d = xu() === 99 ? 1 : 2 : d = 1), m = zi(), u = ad(u, d), u !== null && (vs(u, d, m), no(u, m));
  }
  var Lg;
  Lg = function(u, d, m) {
    var E = d.lanes;
    if (u !== null)
      if (u.memoizedProps !== d.pendingProps || Or.current)
        to = !0;
      else if (m & E)
        to = !!(u.flags & 16384);
      else {
        switch (to = !1, d.tag) {
          case 3:
            hg(d), wu();
            break;
          case 5:
            lg(d);
            break;
          case 1:
            Rr(d.type) && Zi(d);
            break;
          case 4:
            o1(d, d.stateNode.containerInfo);
            break;
          case 10:
            E = d.memoizedProps.value;
            var A = d.type._context;
            St(ws, A._currentValue), A._currentValue = E;
            break;
          case 13:
            if (d.memoizedState !== null)
              return m & d.child.childLanes ? Is(u, d, m) : (St(zn, zn.current & 1), d = Ua(u, d, m), d !== null ? d.sibling : null);
            St(zn, zn.current & 1);
            break;
          case 19:
            if (E = (m & d.childLanes) !== 0, u.flags & 64) {
              if (E)
                return Gv(u, d, m);
              d.flags |= 64;
            }
            if (A = d.memoizedState, A !== null && (A.rendering = null, A.tail = null, A.lastEffect = null), St(zn, zn.current), E)
              break;
            return null;
          case 23:
          case 24:
            return d.lanes = 0, Pu(u, d, m);
        }
        return Ua(u, d, m);
      }
    else
      to = !1;
    switch (d.lanes = 0, d.tag) {
      case 2:
        if (E = d.type, u !== null && (u.alternate = null, d.alternate = null, d.flags |= 2), u = d.pendingProps, A = hn(d, Rn.current), xl(d, m), A = mp(null, d, E, u, A, m), d.flags |= 1, typeof A == "object" && A !== null && typeof A.render == "function" && A.$$typeof === void 0) {
          if (d.tag = 1, d.memoizedState = null, d.updateQueue = null, Rr(E)) {
            var w = !0;
            Zi(d);
          } else
            w = !1;
          d.memoizedState = A.state !== null && A.state !== void 0 ? A.state : null, up(d);
          var M = E.getDerivedStateFromProps;
          typeof M == "function" && Zc(d, E, M, u), A.updater = _u, d.stateNode = A, A._reactInternals = d, Xf(d, E, u, m), d = Ap(null, d, E, !0, w, m);
        } else
          d.tag = 0, Ai(null, d, A, m), d = d.child;
        return d;
      case 16:
        A = d.elementType;
        e: {
          switch (u !== null && (u.alternate = null, d.alternate = null, d.flags |= 2), u = d.pendingProps, w = A._init, A = w(A._payload), d.type = A, w = d.tag = r5(A), u = mr(A, u), w) {
            case 0:
              d = bp(null, d, A, u, m);
              break e;
            case 1:
              d = dg(null, d, A, u, m);
              break e;
            case 11:
              d = Cp(null, d, A, u, m);
              break e;
            case 14:
              d = Sp(null, d, A, mr(A.type, u), E, m);
              break e;
          }
          throw Error(r(306, A, ""));
        }
        return d;
      case 0:
        return E = d.type, A = d.pendingProps, A = d.elementType === E ? A : mr(E, A), bp(u, d, E, A, m);
      case 1:
        return E = d.type, A = d.pendingProps, A = d.elementType === E ? A : mr(E, A), dg(u, d, E, A, m);
      case 3:
        if (hg(d), E = d.updateQueue, u === null || E === null)
          throw Error(r(282));
        if (E = d.pendingProps, A = d.memoizedState, A = A !== null ? A.element : null, ag(u, d), La(d, E, null, m), E = d.memoizedState.element, E === A)
          wu(), d = Ua(u, d, m);
        else {
          if (A = d.stateNode, (w = A.hydrate) && (Ia = bs(d.stateNode.containerInfo.firstChild), Qo = d, w = Xo = !0), w) {
            if (u = A.mutableSourceEagerHydrationData, u != null)
              for (A = 0; A < u.length; A += 2)
                w = u[A], w._workInProgressVersionPrimary = u[A + 1], Ol.push(w);
            for (m = dp(d, null, E, m), d.child = m; m; )
              m.flags = m.flags & -3 | 1024, m = m.sibling;
          } else
            Ai(u, d, E, m), wu();
          d = d.child;
        }
        return d;
      case 5:
        return lg(d), u === null && Rs(d), E = d.type, A = d.pendingProps, w = u !== null ? u.memoizedProps : null, M = A.children, Yc(E, A) ? M = null : w !== null && Yc(E, w) && (d.flags |= 16), fg(u, d), Ai(u, d, M, m), d.child;
      case 6:
        return u === null && Rs(d), null;
      case 13:
        return Is(u, d, m);
      case 4:
        return o1(d, d.stateNode.containerInfo), E = d.pendingProps, u === null ? d.child = n1(d, null, E, m) : Ai(u, d, E, m), d.child;
      case 11:
        return E = d.type, A = d.pendingProps, A = d.elementType === E ? A : mr(E, A), Cp(u, d, E, A, m);
      case 7:
        return Ai(u, d, d.pendingProps, m), d.child;
      case 8:
        return Ai(
          u,
          d,
          d.pendingProps.children,
          m
        ), d.child;
      case 12:
        return Ai(u, d, d.pendingProps.children, m), d.child;
      case 10:
        e: {
          E = d.type._context, A = d.pendingProps, M = d.memoizedProps, w = A.value;
          var B = d.type._context;
          if (St(ws, B._currentValue), B._currentValue = w, M !== null)
            if (B = M.value, w = Ji(B, w) ? 0 : (typeof E._calculateChangedBits == "function" ? E._calculateChangedBits(B, w) : 1073741823) | 0, w === 0) {
              if (M.children === A.children && !Or.current) {
                d = Ua(u, d, m);
                break e;
              }
            } else
              for (B = d.child, B !== null && (B.return = d); B !== null; ) {
                var W = B.dependencies;
                if (W !== null) {
                  M = B.child;
                  for (var de = W.firstContext; de !== null; ) {
                    if (de.context === E && de.observedBits & w) {
                      B.tag === 1 && (de = xo(-1, m & -m), de.tag = 2, Ma(B, de)), B.lanes |= m, de = B.alternate, de !== null && (de.lanes |= m), lp(B.return, m), W.lanes |= m;
                      break;
                    }
                    de = de.next;
                  }
                } else
                  M = B.tag === 10 && B.type === d.type ? null : B.child;
                if (M !== null)
                  M.return = B;
                else
                  for (M = B; M !== null; ) {
                    if (M === d) {
                      M = null;
                      break;
                    }
                    if (B = M.sibling, B !== null) {
                      B.return = M.return, M = B;
                      break;
                    }
                    M = M.return;
                  }
                B = M;
              }
          Ai(u, d, A.children, m), d = d.child;
        }
        return d;
      case 9:
        return A = d.type, w = d.pendingProps, E = w.children, xl(d, m), A = Hi(
          A,
          w.unstable_observedBits
        ), E = E(A), d.flags |= 1, Ai(u, d, E, m), d.child;
      case 14:
        return A = d.type, w = mr(A, d.pendingProps), w = mr(A.type, w), Sp(u, d, A, w, E, m);
      case 15:
        return cg(u, d, d.type, d.pendingProps, E, m);
      case 17:
        return E = d.type, A = d.pendingProps, A = d.elementType === E ? A : mr(E, A), u !== null && (u.alternate = null, d.alternate = null, d.flags |= 2), d.tag = 1, Rr(E) ? (u = !0, Zi(d)) : u = !1, xl(d, m), _l(d, E, A), Xf(d, E, A, m), Ap(null, d, E, !0, u, m);
      case 19:
        return Gv(u, d, m);
      case 23:
        return Pu(u, d, m);
      case 24:
        return Pu(u, d, m);
    }
    throw Error(r(156, d.tag));
  };
  function n5(u, d, m, E) {
    this.tag = u, this.key = m, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = d, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = E, this.flags = 0, this.lastEffect = this.firstEffect = this.nextEffect = null, this.childLanes = this.lanes = 0, this.alternate = null;
  }
  function ro(u, d, m, E) {
    return new n5(u, d, m, E);
  }
  function ud(u) {
    return u = u.prototype, !(!u || !u.isReactComponent);
  }
  function r5(u) {
    if (typeof u == "function")
      return ud(u) ? 1 : 0;
    if (u != null) {
      if (u = u.$$typeof, u === Ce)
        return 11;
      if (u === lt)
        return 14;
    }
    return 2;
  }
  function qs(u, d) {
    var m = u.alternate;
    return m === null ? (m = ro(u.tag, d, u.key, u.mode), m.elementType = u.elementType, m.type = u.type, m.stateNode = u.stateNode, m.alternate = u, u.alternate = m) : (m.pendingProps = d, m.type = u.type, m.flags = 0, m.nextEffect = null, m.firstEffect = null, m.lastEffect = null), m.childLanes = u.childLanes, m.lanes = u.lanes, m.child = u.child, m.memoizedProps = u.memoizedProps, m.memoizedState = u.memoizedState, m.updateQueue = u.updateQueue, d = u.dependencies, m.dependencies = d === null ? null : { lanes: d.lanes, firstContext: d.firstContext }, m.sibling = u.sibling, m.index = u.index, m.ref = u.ref, m;
  }
  function A1(u, d, m, E, A, w) {
    var M = 2;
    if (E = u, typeof u == "function")
      ud(u) && (M = 1);
    else if (typeof u == "string")
      M = 5;
    else
      e:
        switch (u) {
          case Z:
            return na(m.children, A, w, d);
          case We:
            M = 8, A |= 16;
            break;
          case me:
            M = 8, A |= 1;
            break;
          case Ie:
            return u = ro(12, m, d, A | 8), u.elementType = Ie, u.type = Ie, u.lanes = w, u;
          case Be:
            return u = ro(13, m, d, A), u.type = Be, u.elementType = Be, u.lanes = w, u;
          case J:
            return u = ro(19, m, d, A), u.elementType = J, u.lanes = w, u;
          case I:
            return Bl(m, A, w, d);
          case F:
            return u = ro(24, m, d, A), u.elementType = F, u.lanes = w, u;
          default:
            if (typeof u == "object" && u !== null)
              switch (u.$$typeof) {
                case fe:
                  M = 10;
                  break e;
                case pe:
                  M = 9;
                  break e;
                case Ce:
                  M = 11;
                  break e;
                case lt:
                  M = 14;
                  break e;
                case te:
                  M = 16, E = null;
                  break e;
                case he:
                  M = 22;
                  break e;
              }
            throw Error(r(130, u == null ? u : typeof u, ""));
        }
    return d = ro(M, m, d, A), d.elementType = u, d.type = E, d.lanes = w, d;
  }
  function na(u, d, m, E) {
    return u = ro(7, u, E, d), u.lanes = m, u;
  }
  function Bl(u, d, m, E) {
    return u = ro(23, u, E, d), u.elementType = I, u.lanes = m, u;
  }
  function Hp(u, d, m) {
    return u = ro(6, u, null, d), u.lanes = m, u;
  }
  function zp(u, d, m) {
    return d = ro(4, u.children !== null ? u.children : [], u.key, d), d.lanes = m, d.stateNode = { containerInfo: u.containerInfo, pendingChildren: null, implementation: u.implementation }, d;
  }
  function i5(u, d, m) {
    this.tag = d, this.containerInfo = u, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.pendingContext = this.context = null, this.hydrate = m, this.callbackNode = null, this.callbackPriority = 0, this.eventTimes = ys(0), this.expirationTimes = ys(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = ys(0), this.mutableSourceEagerHydrationData = null;
  }
  function cd(u, d, m) {
    var E = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
    return { $$typeof: H, key: E == null ? null : "" + E, children: u, containerInfo: d, implementation: m };
  }
  function fd(u, d, m, E) {
    var A = d.current, w = zi(), M = ta(A);
    e:
      if (m) {
        m = m._reactInternals;
        t: {
          if (hr(m) !== m || m.tag !== 1)
            throw Error(r(170));
          var B = m;
          do {
            switch (B.tag) {
              case 3:
                B = B.stateNode.context;
                break t;
              case 1:
                if (Rr(B.type)) {
                  B = B.stateNode.__reactInternalMemoizedMergedChildContext;
                  break t;
                }
            }
            B = B.return;
          } while (B !== null);
          throw Error(r(171));
        }
        if (m.tag === 1) {
          var W = m.type;
          if (Rr(W)) {
            m = Au(m, W, B);
            break e;
          }
        }
        m = B;
      } else
        m = xs;
    return d.context === null ? d.context = m : d.pendingContext = m, d = xo(w, M), d.payload = { element: u }, E = E === void 0 ? null : E, E !== null && (d.callback = E), Ma(A, d), Bs(A, M, w), M;
  }
  function dd(u) {
    if (u = u.current, !u.child)
      return null;
    switch (u.child.tag) {
      case 5:
        return u.child.stateNode;
      default:
        return u.child.stateNode;
    }
  }
  function Ig(u, d) {
    if (u = u.memoizedState, u !== null && u.dehydrated !== null) {
      var m = u.retryLane;
      u.retryLane = m !== 0 && m < d ? m : d;
    }
  }
  function hd(u, d) {
    Ig(u, d), (u = u.alternate) && Ig(u, d);
  }
  function Pg() {
    return null;
  }
  function qp(u, d, m) {
    var E = m != null && m.hydrationOptions != null && m.hydrationOptions.mutableSources || null;
    if (m = new i5(u, d, m != null && m.hydrate === !0), d = ro(3, null, null, d === 2 ? 7 : d === 1 ? 3 : 0), m.current = d, d.stateNode = m, up(d), u[ui] = m.current, Xh(u.nodeType === 8 ? u.parentNode : u), E)
      for (u = 0; u < E.length; u++) {
        d = E[u];
        var A = d._getVersion;
        A = A(d._source), m.mutableSourceEagerHydrationData == null ? m.mutableSourceEagerHydrationData = [d, A] : m.mutableSourceEagerHydrationData.push(d, A);
      }
    this._internalRoot = m;
  }
  qp.prototype.render = function(u) {
    fd(u, this._internalRoot, null, null);
  }, qp.prototype.unmount = function() {
    var u = this._internalRoot, d = u.containerInfo;
    fd(null, u, null, function() {
      d[ui] = null;
    });
  };
  function x1(u) {
    return !(!u || u.nodeType !== 1 && u.nodeType !== 9 && u.nodeType !== 11 && (u.nodeType !== 8 || u.nodeValue !== " react-mount-point-unstable "));
  }
  function o5(u, d) {
    if (d || (d = u ? u.nodeType === 9 ? u.documentElement : u.firstChild : null, d = !(!d || d.nodeType !== 1 || !d.hasAttribute("data-reactroot"))), !d)
      for (var m; m = u.lastChild; )
        u.removeChild(m);
    return new qp(u, 0, d ? { hydrate: !0 } : void 0);
  }
  function pd(u, d, m, E, A) {
    var w = m._reactRootContainer;
    if (w) {
      var M = w._internalRoot;
      if (typeof A == "function") {
        var B = A;
        A = function() {
          var de = dd(M);
          B.call(de);
        };
      }
      fd(d, M, u, A);
    } else {
      if (w = m._reactRootContainer = o5(m, E), M = w._internalRoot, typeof A == "function") {
        var W = A;
        A = function() {
          var de = dd(M);
          W.call(de);
        };
      }
      Ng(function() {
        fd(d, M, u, A);
      });
    }
    return dd(M);
  }
  Af = function(u) {
    if (u.tag === 13) {
      var d = zi();
      Bs(u, 4, d), hd(u, 4);
    }
  }, hs = function(u) {
    if (u.tag === 13) {
      var d = zi();
      Bs(u, 67108864, d), hd(u, 67108864);
    }
  }, Ic = function(u) {
    if (u.tag === 13) {
      var d = zi(), m = ta(u);
      Bs(u, m, d), hd(u, m);
    }
  }, ps = function(u, d) {
    return d();
  }, Ii = function(u, d, m) {
    switch (d) {
      case "input":
        if (ni(u, m), d = m.name, m.type === "radio" && d != null) {
          for (m = u; m.parentNode; )
            m = m.parentNode;
          for (m = m.querySelectorAll("input[name=" + JSON.stringify("" + d) + '][type="radio"]'), d = 0; d < m.length; d++) {
            var E = m[d];
            if (E !== u && E.form === u.form) {
              var A = Ra(E);
              if (!A)
                throw Error(r(90));
              zr(E), ni(E, A);
            }
          }
        }
        break;
      case "textarea":
        at(u, m);
        break;
      case "select":
        d = m.value, d != null && gn(u, !!m.multiple, d, !1);
    }
  }, G = kg, _e = function(u, d, m, E, A) {
    var w = kt;
    kt |= 4;
    try {
      return bl(98, u.bind(null, d, m, E, A));
    } finally {
      kt = w, kt === 0 && (zu(), pr());
    }
  }, qe = function() {
    !(kt & 49) && (Xv(), Hs());
  }, ct = function(u, d) {
    var m = kt;
    kt |= 2;
    try {
      return u(d);
    } finally {
      kt = m, kt === 0 && (zu(), pr());
    }
  };
  function Fg(u, d) {
    var m = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
    if (!x1(d))
      throw Error(r(200));
    return cd(u, d, null, m);
  }
  var a5 = { Events: [Ui, ci, Ra, Pn, xa, Hs, { current: !1 }] }, _1 = { findFiberByHostInstance: Cl, bundleType: 0, version: "17.0.2", rendererPackageName: "react-dom" }, s5 = { bundleType: _1.bundleType, version: _1.version, rendererPackageName: _1.rendererPackageName, rendererConfig: _1.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ee.ReactCurrentDispatcher, findHostInstanceByFiber: function(u) {
    return u = ds(u), u === null ? null : u.stateNode;
  }, findFiberByHostInstance: _1.findFiberByHostInstance || Pg, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null };
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
    var md = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!md.isDisabled && md.supportsFiber)
      try {
        tp = md.inject(s5), Sl = md;
      } catch {
      }
  }
  return Mo.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = a5, Mo.createPortal = Fg, Mo.findDOMNode = function(u) {
    if (u == null)
      return null;
    if (u.nodeType === 1)
      return u;
    var d = u._reactInternals;
    if (d === void 0)
      throw typeof u.render == "function" ? Error(r(188)) : Error(r(268, Object.keys(u)));
    return u = ds(d), u = u === null ? null : u.stateNode, u;
  }, Mo.flushSync = function(u, d) {
    var m = kt;
    if (m & 48)
      return u(d);
    kt |= 1;
    try {
      if (u)
        return bl(99, u.bind(null, d));
    } finally {
      kt = m, pr();
    }
  }, Mo.hydrate = function(u, d, m) {
    if (!x1(d))
      throw Error(r(200));
    return pd(null, u, d, !0, m);
  }, Mo.render = function(u, d, m) {
    if (!x1(d))
      throw Error(r(200));
    return pd(null, u, d, !1, m);
  }, Mo.unmountComponentAtNode = function(u) {
    if (!x1(u))
      throw Error(r(40));
    return u._reactRootContainer ? (Ng(function() {
      pd(null, null, u, !1, function() {
        u._reactRootContainer = null, u[ui] = null;
      });
    }), !0) : !1;
  }, Mo.unstable_batchedUpdates = kg, Mo.unstable_createPortal = function(u, d) {
    return Fg(u, d, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null);
  }, Mo.unstable_renderSubtreeIntoContainer = function(u, d, m, E) {
    if (!x1(m))
      throw Error(r(200));
    if (u == null || u._reactInternals === void 0)
      throw Error(r(38));
    return pd(u, d, m, !1, E);
  }, Mo.version = "17.0.2", Mo;
}
var Lo = {}, vy = {}, sq = {
  get exports() {
    return vy;
  },
  set exports(t) {
    vy = t;
  }
}, Wa = {};
/** @license React v0.20.2
 * scheduler-tracing.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Qx;
function lq() {
  if (Qx)
    return Wa;
  Qx = 1;
  var t = 0;
  return Wa.__interactionsRef = null, Wa.__subscriberRef = null, Wa.unstable_clear = function(e) {
    return e();
  }, Wa.unstable_getCurrent = function() {
    return null;
  }, Wa.unstable_getThreadID = function() {
    return ++t;
  }, Wa.unstable_subscribe = function() {
  }, Wa.unstable_trace = function(e, n, r) {
    return r();
  }, Wa.unstable_unsubscribe = function() {
  }, Wa.unstable_wrap = function(e) {
    return e;
  }, Wa;
}
var s4 = {};
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Xx;
function uq() {
  return Xx || (Xx = 1, function(t) {
    process.env.NODE_ENV !== "production" && function() {
      var e = 0, n = 0, r = 0;
      t.__interactionsRef = null, t.__subscriberRef = null, t.__interactionsRef = {
        current: /* @__PURE__ */ new Set()
      }, t.__subscriberRef = {
        current: null
      };
      function i(Y) {
        var j = t.__interactionsRef.current;
        t.__interactionsRef.current = /* @__PURE__ */ new Set();
        try {
          return Y();
        } finally {
          t.__interactionsRef.current = j;
        }
      }
      function s() {
        return t.__interactionsRef.current;
      }
      function l() {
        return ++r;
      }
      function c(Y, j, oe) {
        var ee = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : e, z = {
          __count: 1,
          id: n++,
          name: Y,
          timestamp: j
        }, H = t.__interactionsRef.current, Z = new Set(H);
        Z.add(z), t.__interactionsRef.current = Z;
        var me = t.__subscriberRef.current, Ie;
        try {
          me !== null && me.onInteractionTraced(z);
        } finally {
          try {
            me !== null && me.onWorkStarted(Z, ee);
          } finally {
            try {
              Ie = oe();
            } finally {
              t.__interactionsRef.current = H;
              try {
                me !== null && me.onWorkStopped(Z, ee);
              } finally {
                z.__count--, me !== null && z.__count === 0 && me.onInteractionScheduledWorkCompleted(z);
              }
            }
          }
        }
        return Ie;
      }
      function h(Y) {
        var j = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e, oe = t.__interactionsRef.current, ee = t.__subscriberRef.current;
        ee !== null && ee.onWorkScheduled(oe, j), oe.forEach(function(Z) {
          Z.__count++;
        });
        var z = !1;
        function H() {
          var Z = t.__interactionsRef.current;
          t.__interactionsRef.current = oe, ee = t.__subscriberRef.current;
          try {
            var me;
            try {
              ee !== null && ee.onWorkStarted(oe, j);
            } finally {
              try {
                me = Y.apply(void 0, arguments);
              } finally {
                t.__interactionsRef.current = Z, ee !== null && ee.onWorkStopped(oe, j);
              }
            }
            return me;
          } finally {
            z || (z = !0, oe.forEach(function(Ie) {
              Ie.__count--, ee !== null && Ie.__count === 0 && ee.onInteractionScheduledWorkCompleted(Ie);
            }));
          }
        }
        return H.cancel = function() {
          ee = t.__subscriberRef.current;
          try {
            ee !== null && ee.onWorkCanceled(oe, j);
          } finally {
            oe.forEach(function(me) {
              me.__count--, ee && me.__count === 0 && ee.onInteractionScheduledWorkCompleted(me);
            });
          }
        }, H;
      }
      var g = null;
      g = /* @__PURE__ */ new Set();
      function v(Y) {
        g.add(Y), g.size === 1 && (t.__subscriberRef.current = {
          onInteractionScheduledWorkCompleted: b,
          onInteractionTraced: S,
          onWorkCanceled: P,
          onWorkScheduled: N,
          onWorkStarted: O,
          onWorkStopped: L
        });
      }
      function C(Y) {
        g.delete(Y), g.size === 0 && (t.__subscriberRef.current = null);
      }
      function S(Y) {
        var j = !1, oe = null;
        if (g.forEach(function(ee) {
          try {
            ee.onInteractionTraced(Y);
          } catch (z) {
            j || (j = !0, oe = z);
          }
        }), j)
          throw oe;
      }
      function b(Y) {
        var j = !1, oe = null;
        if (g.forEach(function(ee) {
          try {
            ee.onInteractionScheduledWorkCompleted(Y);
          } catch (z) {
            j || (j = !0, oe = z);
          }
        }), j)
          throw oe;
      }
      function N(Y, j) {
        var oe = !1, ee = null;
        if (g.forEach(function(z) {
          try {
            z.onWorkScheduled(Y, j);
          } catch (H) {
            oe || (oe = !0, ee = H);
          }
        }), oe)
          throw ee;
      }
      function O(Y, j) {
        var oe = !1, ee = null;
        if (g.forEach(function(z) {
          try {
            z.onWorkStarted(Y, j);
          } catch (H) {
            oe || (oe = !0, ee = H);
          }
        }), oe)
          throw ee;
      }
      function L(Y, j) {
        var oe = !1, ee = null;
        if (g.forEach(function(z) {
          try {
            z.onWorkStopped(Y, j);
          } catch (H) {
            oe || (oe = !0, ee = H);
          }
        }), oe)
          throw ee;
      }
      function P(Y, j) {
        var oe = !1, ee = null;
        if (g.forEach(function(z) {
          try {
            z.onWorkCanceled(Y, j);
          } catch (H) {
            oe || (oe = !0, ee = H);
          }
        }), oe)
          throw ee;
      }
      t.unstable_clear = i, t.unstable_getCurrent = s, t.unstable_getThreadID = l, t.unstable_subscribe = v, t.unstable_trace = c, t.unstable_unsubscribe = C, t.unstable_wrap = h;
    }();
  }(s4)), s4;
}
var Jx;
function cq() {
  return Jx || (Jx = 1, function(t) {
    process.env.NODE_ENV === "production" ? t.exports = lq() : t.exports = uq();
  }(sq)), vy;
}
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Zx;
function fq() {
  return Zx || (Zx = 1, process.env.NODE_ENV !== "production" && function() {
    var t = va, e = Ah(), n = UN(), r = cq(), i = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function s(o) {
      {
        for (var a = arguments.length, f = new Array(a > 1 ? a - 1 : 0), p = 1; p < a; p++)
          f[p - 1] = arguments[p];
        c("warn", o, f);
      }
    }
    function l(o) {
      {
        for (var a = arguments.length, f = new Array(a > 1 ? a - 1 : 0), p = 1; p < a; p++)
          f[p - 1] = arguments[p];
        c("error", o, f);
      }
    }
    function c(o, a, f) {
      {
        var p = i.ReactDebugCurrentFrame, y = p.getStackAddendum();
        y !== "" && (a += "%s", f = f.concat([y]));
        var T = f.map(function(x) {
          return "" + x;
        });
        T.unshift("Warning: " + a), Function.prototype.apply.call(console[o], console, T);
      }
    }
    if (!t)
      throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
    var h = 0, g = 1, v = 2, C = 3, S = 4, b = 5, N = 6, O = 7, L = 8, P = 9, Y = 10, j = 11, oe = 12, ee = 13, z = 14, H = 15, Z = 16, me = 17, Ie = 18, fe = 19, pe = 20, Ce = 21, Be = 22, J = 23, lt = 24, te = !0, he = !1, De = !1, We = !1, I = /* @__PURE__ */ new Set(), F = {}, we = {};
    function Je(o, a) {
      Ze(o, a), Ze(o + "Capture", a);
    }
    function Ze(o, a) {
      F[o] && l("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", o), F[o] = a;
      {
        var f = o.toLowerCase();
        we[f] = o, o === "onDoubleClick" && (we.ondblclick = o);
      }
      for (var p = 0; p < a.length; p++)
        I.add(a[p]);
    }
    var rt = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Yt = 0, Lt = 1, It = 2, En = 3, an = 4, Xt = 5, Hr = 6, ur = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", wn = ur + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", zr = "data-reactroot", qr = new RegExp("^[" + ur + "][" + wn + "]*$"), cr = Object.prototype.hasOwnProperty, yo = {}, fr = {};
    function ni(o) {
      return cr.call(fr, o) ? !0 : cr.call(yo, o) ? !1 : qr.test(o) ? (fr[o] = !0, !0) : (yo[o] = !0, l("Invalid attribute name: `%s`", o), !1);
    }
    function vo(o, a, f) {
      return a !== null ? a.type === Yt : f ? !1 : o.length > 2 && (o[0] === "o" || o[0] === "O") && (o[1] === "n" || o[1] === "N");
    }
    function Ci(o, a, f, p) {
      if (f !== null && f.type === Yt)
        return !1;
      switch (typeof a) {
        case "function":
        case "symbol":
          return !0;
        case "boolean": {
          if (p)
            return !1;
          if (f !== null)
            return !f.acceptsBooleans;
          var y = o.toLowerCase().slice(0, 5);
          return y !== "data-" && y !== "aria-";
        }
        default:
          return !1;
      }
    }
    function ir(o, a, f, p) {
      if (a === null || typeof a > "u" || Ci(o, a, f, p))
        return !0;
      if (p)
        return !1;
      if (f !== null)
        switch (f.type) {
          case En:
            return !a;
          case an:
            return a === !1;
          case Xt:
            return isNaN(a);
          case Hr:
            return isNaN(a) || a < 1;
        }
      return !1;
    }
    function jr(o) {
      return le.hasOwnProperty(o) ? le[o] : null;
    }
    function gn(o, a, f, p, y, T, x) {
      this.acceptsBooleans = a === It || a === En || a === an, this.attributeName = p, this.attributeNamespace = y, this.mustUseProperty = f, this.propertyName = o, this.type = a, this.sanitizeURL = T, this.removeEmptyString = x;
    }
    var le = {}, Re = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    Re.forEach(function(o) {
      le[o] = new gn(
        o,
        Yt,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(o) {
      var a = o[0], f = o[1];
      le[a] = new gn(
        a,
        Lt,
        !1,
        // mustUseProperty
        f,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(o) {
      le[o] = new gn(
        o,
        It,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(o) {
      le[o] = new gn(
        o,
        It,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(o) {
      le[o] = new gn(
        o,
        En,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      le[o] = new gn(
        o,
        En,
        !0,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      le[o] = new gn(
        o,
        an,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      le[o] = new gn(
        o,
        Hr,
        !1,
        // mustUseProperty
        o,
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), ["rowSpan", "start"].forEach(function(o) {
      le[o] = new gn(
        o,
        Xt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var at = /[\-\:]([a-z])/g, Bt = function(o) {
      return o[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      var a = o.replace(at, Bt);
      le[a] = new gn(
        a,
        Lt,
        !1,
        // mustUseProperty
        o,
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      var a = o.replace(at, Bt);
      le[a] = new gn(
        a,
        Lt,
        !1,
        // mustUseProperty
        o,
        "http://www.w3.org/1999/xlink",
        !1,
        // sanitizeURL
        !1
      );
    }), [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(o) {
      var a = o.replace(at, Bt);
      le[a] = new gn(
        a,
        Lt,
        !1,
        // mustUseProperty
        o,
        "http://www.w3.org/XML/1998/namespace",
        !1,
        // sanitizeURL
        !1
      );
    }), ["tabIndex", "crossOrigin"].forEach(function(o) {
      le[o] = new gn(
        o,
        Lt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !1,
        // sanitizeURL
        !1
      );
    });
    var be = "xlinkHref";
    le[be] = new gn(
      "xlinkHref",
      Lt,
      !1,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      !0,
      // sanitizeURL
      !1
    ), ["src", "href", "action", "formAction"].forEach(function(o) {
      le[o] = new gn(
        o,
        Lt,
        !1,
        // mustUseProperty
        o.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        !0,
        // sanitizeURL
        !0
      );
    });
    var ze = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, st = !1;
    function Ot(o) {
      !st && ze.test(o) && (st = !0, l("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(o)));
    }
    function en(o, a, f, p) {
      if (p.mustUseProperty) {
        var y = p.propertyName;
        return o[y];
      } else {
        p.sanitizeURL && Ot("" + f);
        var T = p.attributeName, x = null;
        if (p.type === an) {
          if (o.hasAttribute(T)) {
            var k = o.getAttribute(T);
            return k === "" ? !0 : ir(a, f, p, !1) ? k : k === "" + f ? f : k;
          }
        } else if (o.hasAttribute(T)) {
          if (ir(a, f, p, !1))
            return o.getAttribute(T);
          if (p.type === En)
            return f;
          x = o.getAttribute(T);
        }
        return ir(a, f, p, !1) ? x === null ? f : x : x === "" + f ? f : x;
      }
    }
    function tn(o, a, f) {
      {
        if (!ni(a))
          return;
        if (ZD(f))
          return f;
        if (!o.hasAttribute(a))
          return f === void 0 ? void 0 : null;
        var p = o.getAttribute(a);
        return p === "" + f ? f : p;
      }
    }
    function Tt(o, a, f, p) {
      var y = jr(a);
      if (!vo(a, y, p)) {
        if (ir(a, f, y, p) && (f = null), p || y === null) {
          if (ni(a)) {
            var T = a;
            f === null ? o.removeAttribute(T) : o.setAttribute(T, "" + f);
          }
          return;
        }
        var x = y.mustUseProperty;
        if (x) {
          var k = y.propertyName;
          if (f === null) {
            var R = y.type;
            o[k] = R === En ? !1 : "";
          } else
            o[k] = f;
          return;
        }
        var U = y.attributeName, q = y.attributeNamespace;
        if (f === null)
          o.removeAttribute(U);
        else {
          var ae = y.type, K;
          ae === En || ae === an && f === !0 ? K = "" : (K = "" + f, y.sanitizeURL && Ot(K.toString())), q ? o.setAttributeNS(q, U, K) : o.setAttribute(U, K);
        }
      }
    }
    var On = 60103, Gt = 60106, Vr = 60107, us = 60108, Yi = 60114, Eo = 60109, Uo = 60110, Ii = 60112, $r = 60113, Gr = 60120, To = 60115, Pn = 60116, xa = 60121, G = 60119, _e = 60128, qe = 60129, ct = 60130, Ut = 60131;
    if (typeof Symbol == "function" && Symbol.for) {
      var ht = Symbol.for;
      On = ht("react.element"), Gt = ht("react.portal"), Vr = ht("react.fragment"), us = ht("react.strict_mode"), Yi = ht("react.profiler"), Eo = ht("react.provider"), Uo = ht("react.context"), Ii = ht("react.forward_ref"), $r = ht("react.suspense"), Gr = ht("react.suspense_list"), To = ht("react.memo"), Pn = ht("react.lazy"), xa = ht("react.block"), ht("react.server.block"), ht("react.fundamental"), G = ht("react.scope"), _e = ht("react.opaque.id"), qe = ht("react.debug_trace_mode"), ct = ht("react.offscreen"), Ut = ht("react.legacy_hidden");
    }
    var Ht = typeof Symbol == "function" && Symbol.iterator, qt = "@@iterator";
    function mn(o) {
      if (o === null || typeof o != "object")
        return null;
      var a = Ht && o[Ht] || o[qt];
      return typeof a == "function" ? a : null;
    }
    var Jt = 0, dn, ri, Wr, Co, dr, hl, Mc;
    function Lc() {
    }
    Lc.__reactDisabledLog = !0;
    function Qi() {
      {
        if (Jt === 0) {
          dn = console.log, ri = console.info, Wr = console.warn, Co = console.error, dr = console.group, hl = console.groupCollapsed, Mc = console.groupEnd;
          var o = {
            configurable: !0,
            enumerable: !0,
            value: Lc,
            writable: !0
          };
          Object.defineProperties(console, {
            info: o,
            log: o,
            warn: o,
            error: o,
            group: o,
            groupCollapsed: o,
            groupEnd: o
          });
        }
        Jt++;
      }
    }
    function hr() {
      {
        if (Jt--, Jt === 0) {
          var o = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: e({}, o, {
              value: dn
            }),
            info: e({}, o, {
              value: ri
            }),
            warn: e({}, o, {
              value: Wr
            }),
            error: e({}, o, {
              value: Co
            }),
            group: e({}, o, {
              value: dr
            }),
            groupCollapsed: e({}, o, {
              value: hl
            }),
            groupEnd: e({}, o, {
              value: Mc
            })
          });
        }
        Jt < 0 && l("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var cs = i.ReactCurrentDispatcher, fs;
    function Pi(o, a, f) {
      {
        if (fs === void 0)
          try {
            throw Error();
          } catch (y) {
            var p = y.stack.trim().match(/\n( *(at )?)/);
            fs = p && p[1] || "";
          }
        return `
` + fs + o;
      }
    }
    var ds = !1, Ho;
    {
      var Af = typeof WeakMap == "function" ? WeakMap : Map;
      Ho = new Af();
    }
    function hs(o, a) {
      if (!o || ds)
        return "";
      {
        var f = Ho.get(o);
        if (f !== void 0)
          return f;
      }
      var p;
      ds = !0;
      var y = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var T;
      T = cs.current, cs.current = null, Qi();
      try {
        if (a) {
          var x = function() {
            throw Error();
          };
          if (Object.defineProperty(x.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(x, []);
            } catch (Ae) {
              p = Ae;
            }
            Reflect.construct(o, [], x);
          } else {
            try {
              x.call();
            } catch (Ae) {
              p = Ae;
            }
            o.call(x.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Ae) {
            p = Ae;
          }
          o();
        }
      } catch (Ae) {
        if (Ae && p && typeof Ae.stack == "string") {
          for (var k = Ae.stack.split(`
`), R = p.stack.split(`
`), U = k.length - 1, q = R.length - 1; U >= 1 && q >= 0 && k[U] !== R[q]; )
            q--;
          for (; U >= 1 && q >= 0; U--, q--)
            if (k[U] !== R[q]) {
              if (U !== 1 || q !== 1)
                do
                  if (U--, q--, q < 0 || k[U] !== R[q]) {
                    var ae = `
` + k[U].replace(" at new ", " at ");
                    return typeof o == "function" && Ho.set(o, ae), ae;
                  }
                while (U >= 1 && q >= 0);
              break;
            }
        }
      } finally {
        ds = !1, cs.current = T, hr(), Error.prepareStackTrace = y;
      }
      var K = o ? o.displayName || o.name : "", ue = K ? Pi(K) : "";
      return typeof o == "function" && Ho.set(o, ue), ue;
    }
    function Ic(o, a, f) {
      return hs(o, !0);
    }
    function ps(o, a, f) {
      return hs(o, !1);
    }
    function ms(o) {
      var a = o.prototype;
      return !!(a && a.isReactComponent);
    }
    function ii(o, a, f) {
      if (o == null)
        return "";
      if (typeof o == "function")
        return hs(o, ms(o));
      if (typeof o == "string")
        return Pi(o);
      switch (o) {
        case $r:
          return Pi("Suspense");
        case Gr:
          return Pi("SuspenseList");
      }
      if (typeof o == "object")
        switch (o.$$typeof) {
          case Ii:
            return ps(o.render);
          case To:
            return ii(o.type, a, f);
          case xa:
            return ps(o._render);
          case Pn: {
            var p = o, y = p._payload, T = p._init;
            try {
              return ii(T(y), a, f);
            } catch {
            }
          }
        }
      return "";
    }
    function So(o) {
      switch (o._debugOwner && o._debugOwner.type, o._debugSource, o.tag) {
        case b:
          return Pi(o.type);
        case Z:
          return Pi("Lazy");
        case ee:
          return Pi("Suspense");
        case fe:
          return Pi("SuspenseList");
        case h:
        case v:
        case H:
          return ps(o.type);
        case j:
          return ps(o.type.render);
        case Be:
          return ps(o.type._render);
        case g:
          return Ic(o.type);
        default:
          return "";
      }
    }
    function Si(o) {
      try {
        var a = "", f = o;
        do
          a += So(f), f = f.return;
        while (f);
        return a;
      } catch (p) {
        return `
Error generating stack: ` + p.message + `
` + p.stack;
      }
    }
    function zo(o, a, f) {
      var p = a.displayName || a.name || "";
      return o.displayName || (p !== "" ? f + "(" + p + ")" : f);
    }
    function Fi(o) {
      return o.displayName || "Context";
    }
    function He(o) {
      if (o == null)
        return null;
      if (typeof o.tag == "number" && l("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."), typeof o == "function")
        return o.displayName || o.name || null;
      if (typeof o == "string")
        return o;
      switch (o) {
        case Vr:
          return "Fragment";
        case Gt:
          return "Portal";
        case Yi:
          return "Profiler";
        case us:
          return "StrictMode";
        case $r:
          return "Suspense";
        case Gr:
          return "SuspenseList";
      }
      if (typeof o == "object")
        switch (o.$$typeof) {
          case Uo:
            var a = o;
            return Fi(a) + ".Consumer";
          case Eo:
            var f = o;
            return Fi(f._context) + ".Provider";
          case Ii:
            return zo(o, o.render, "ForwardRef");
          case To:
            return He(o.type);
          case xa:
            return He(o._render);
          case Pn: {
            var p = o, y = p._payload, T = p._init;
            try {
              return He(T(y));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var _a = i.ReactDebugCurrentFrame, _r = null, qo = !1;
    function ka() {
      {
        if (_r === null)
          return null;
        var o = _r._debugOwner;
        if (o !== null && typeof o < "u")
          return He(o.type);
      }
      return null;
    }
    function pl() {
      return _r === null ? "" : Si(_r);
    }
    function kr() {
      _a.getCurrentStack = null, _r = null, qo = !1;
    }
    function $n(o) {
      _a.getCurrentStack = pl, _r = o, qo = !1;
    }
    function Kr(o) {
      qo = o;
    }
    function xf() {
      return qo;
    }
    function oi(o) {
      return "" + o;
    }
    function ai(o) {
      switch (typeof o) {
        case "boolean":
        case "number":
        case "object":
        case "string":
        case "undefined":
          return o;
        default:
          return "";
      }
    }
    var _f = {
      button: !0,
      checkbox: !0,
      image: !0,
      hidden: !0,
      radio: !0,
      reset: !0,
      submit: !0
    };
    function gs(o, a) {
      _f[a.type] || a.onChange || a.onInput || a.readOnly || a.disabled || a.value == null || l("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), a.onChange || a.readOnly || a.disabled || a.checked == null || l("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function jo(o) {
      var a = o.type, f = o.nodeName;
      return f && f.toLowerCase() === "input" && (a === "checkbox" || a === "radio");
    }
    function uu(o) {
      return o._valueTracker;
    }
    function kf(o) {
      o._valueTracker = null;
    }
    function cu(o) {
      var a = "";
      return o && (jo(o) ? a = o.checked ? "true" : "false" : a = o.value), a;
    }
    function Nf(o) {
      var a = jo(o) ? "checked" : "value", f = Object.getOwnPropertyDescriptor(o.constructor.prototype, a), p = "" + o[a];
      if (!(o.hasOwnProperty(a) || typeof f > "u" || typeof f.get != "function" || typeof f.set != "function")) {
        var y = f.get, T = f.set;
        Object.defineProperty(o, a, {
          configurable: !0,
          get: function() {
            return y.call(this);
          },
          set: function(k) {
            p = "" + k, T.call(this, k);
          }
        }), Object.defineProperty(o, a, {
          enumerable: f.enumerable
        });
        var x = {
          getValue: function() {
            return p;
          },
          setValue: function(k) {
            p = "" + k;
          },
          stopTracking: function() {
            kf(o), delete o[a];
          }
        };
        return x;
      }
    }
    function D(o) {
      uu(o) || (o._valueTracker = Nf(o));
    }
    function Q(o) {
      if (!o)
        return !1;
      var a = uu(o);
      if (!a)
        return !0;
      var f = a.getValue(), p = cu(o);
      return p !== f ? (a.setValue(p), !0) : !1;
    }
    function ce(o) {
      if (o = o || (typeof document < "u" ? document : void 0), typeof o > "u")
        return null;
      try {
        return o.activeElement || o.body;
      } catch {
        return o.body;
      }
    }
    var ye = !1, je = !1, Ct = !1, dt = !1;
    function pt(o) {
      var a = o.type === "checkbox" || o.type === "radio";
      return a ? o.checked != null : o.value != null;
    }
    function ut(o, a) {
      var f = o, p = a.checked, y = e({}, a, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: p ?? f._wrapperState.initialChecked
      });
      return y;
    }
    function sn(o, a) {
      gs("input", a), a.checked !== void 0 && a.defaultChecked !== void 0 && !je && (l("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", ka() || "A component", a.type), je = !0), a.value !== void 0 && a.defaultValue !== void 0 && !ye && (l("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", ka() || "A component", a.type), ye = !0);
      var f = o, p = a.defaultValue == null ? "" : a.defaultValue;
      f._wrapperState = {
        initialChecked: a.checked != null ? a.checked : a.defaultChecked,
        initialValue: ai(a.value != null ? a.value : p),
        controlled: pt(a)
      };
    }
    function kn(o, a) {
      var f = o, p = a.checked;
      p != null && Tt(f, "checked", p, !1);
    }
    function Fn(o, a) {
      var f = o;
      {
        var p = pt(a);
        !f._wrapperState.controlled && p && !dt && (l("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), dt = !0), f._wrapperState.controlled && !p && !Ct && (l("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), Ct = !0);
      }
      kn(o, a);
      var y = ai(a.value), T = a.type;
      if (y != null)
        T === "number" ? (y === 0 && f.value === "" || // We explicitly want to coerce to number here if possible.
        // eslint-disable-next-line
        f.value != y) && (f.value = oi(y)) : f.value !== oi(y) && (f.value = oi(y));
      else if (T === "submit" || T === "reset") {
        f.removeAttribute("value");
        return;
      }
      a.hasOwnProperty("value") ? Bi(f, a.type, y) : a.hasOwnProperty("defaultValue") && Bi(f, a.type, ai(a.defaultValue)), a.checked == null && a.defaultChecked != null && (f.defaultChecked = !!a.defaultChecked);
    }
    function Yn(o, a, f) {
      var p = o;
      if (a.hasOwnProperty("value") || a.hasOwnProperty("defaultValue")) {
        var y = a.type, T = y === "submit" || y === "reset";
        if (T && (a.value === void 0 || a.value === null))
          return;
        var x = oi(p._wrapperState.initialValue);
        f || x !== p.value && (p.value = x), p.defaultValue = x;
      }
      var k = p.name;
      k !== "" && (p.name = ""), p.defaultChecked = !p.defaultChecked, p.defaultChecked = !!p._wrapperState.initialChecked, k !== "" && (p.name = k);
    }
    function Nr(o, a) {
      var f = o;
      Fn(f, a), wr(f, a);
    }
    function wr(o, a) {
      var f = a.name;
      if (a.type === "radio" && f != null) {
        for (var p = o; p.parentNode; )
          p = p.parentNode;
        for (var y = p.querySelectorAll("input[name=" + JSON.stringify("" + f) + '][type="radio"]'), T = 0; T < y.length; T++) {
          var x = y[T];
          if (!(x === o || x.form !== o.form)) {
            var k = Yg(x);
            if (!k)
              throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            Q(x), Fn(x, k);
          }
        }
      }
    }
    function Bi(o, a, f) {
      // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      (a !== "number" || ce(o.ownerDocument) !== o) && (f == null ? o.defaultValue = oi(o._wrapperState.initialValue) : o.defaultValue !== oi(f) && (o.defaultValue = oi(f)));
    }
    var ys = !1, vs = !1;
    function Vo(o) {
      var a = "";
      return t.Children.forEach(o, function(f) {
        f != null && (a += f);
      }), a;
    }
    function Pc(o, a) {
      typeof a.children == "object" && a.children !== null && t.Children.forEach(a.children, function(f) {
        f != null && (typeof f == "string" || typeof f == "number" || typeof f.type == "string" && (vs || (vs = !0, l("Only strings and numbers are supported as <option> children."))));
      }), a.selected != null && !ys && (l("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), ys = !0);
    }
    function Lh(o, a) {
      a.value != null && o.setAttribute("value", oi(ai(a.value)));
    }
    function fu(o, a) {
      var f = e({
        children: void 0
      }, a), p = Vo(a.children);
      return p && (f.children = p), f;
    }
    var Fc;
    Fc = !1;
    function _0() {
      var o = ka();
      return o ? `

Check the render method of \`` + o + "`." : "";
    }
    var Bc = ["value", "defaultValue"];
    function Av(o) {
      {
        gs("select", o);
        for (var a = 0; a < Bc.length; a++) {
          var f = Bc[a];
          if (o[f] != null) {
            var p = Array.isArray(o[f]);
            o.multiple && !p ? l("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", f, _0()) : !o.multiple && p && l("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", f, _0());
          }
        }
      }
    }
    function du(o, a, f, p) {
      var y = o.options;
      if (a) {
        for (var T = f, x = {}, k = 0; k < T.length; k++)
          x["$" + T[k]] = !0;
        for (var R = 0; R < y.length; R++) {
          var U = x.hasOwnProperty("$" + y[R].value);
          y[R].selected !== U && (y[R].selected = U), U && p && (y[R].defaultSelected = !0);
        }
      } else {
        for (var q = oi(ai(f)), ae = null, K = 0; K < y.length; K++) {
          if (y[K].value === q) {
            y[K].selected = !0, p && (y[K].defaultSelected = !0);
            return;
          }
          ae === null && !y[K].disabled && (ae = y[K]);
        }
        ae !== null && (ae.selected = !0);
      }
    }
    function Uc(o, a) {
      return e({}, a, {
        value: void 0
      });
    }
    function wf(o, a) {
      var f = o;
      Av(a), f._wrapperState = {
        wasMultiple: !!a.multiple
      }, a.value !== void 0 && a.defaultValue !== void 0 && !Fc && (l("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), Fc = !0);
    }
    function Es(o, a) {
      var f = o;
      f.multiple = !!a.multiple;
      var p = a.value;
      p != null ? du(f, !!a.multiple, p, !1) : a.defaultValue != null && du(f, !!a.multiple, a.defaultValue, !0);
    }
    function Ih(o, a) {
      var f = o, p = f._wrapperState.wasMultiple;
      f._wrapperState.wasMultiple = !!a.multiple;
      var y = a.value;
      y != null ? du(f, !!a.multiple, y, !1) : p !== !!a.multiple && (a.defaultValue != null ? du(f, !!a.multiple, a.defaultValue, !0) : du(f, !!a.multiple, a.multiple ? [] : "", !1));
    }
    function Of(o, a) {
      var f = o, p = a.value;
      p != null && du(f, !!a.multiple, p, !1);
    }
    var Ph = !1;
    function hu(o, a) {
      var f = o;
      if (a.dangerouslySetInnerHTML != null)
        throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
      var p = e({}, a, {
        value: void 0,
        defaultValue: void 0,
        children: oi(f._wrapperState.initialValue)
      });
      return p;
    }
    function Hc(o, a) {
      var f = o;
      gs("textarea", a), a.value !== void 0 && a.defaultValue !== void 0 && !Ph && (l("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", ka() || "A component"), Ph = !0);
      var p = a.value;
      if (p == null) {
        var y = a.children, T = a.defaultValue;
        if (y != null) {
          l("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
          {
            if (T != null)
              throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            if (Array.isArray(y)) {
              if (!(y.length <= 1))
                throw Error("<textarea> can only have at most one child.");
              y = y[0];
            }
            T = y;
          }
        }
        T == null && (T = ""), p = T;
      }
      f._wrapperState = {
        initialValue: ai(p)
      };
    }
    function Fh(o, a) {
      var f = o, p = ai(a.value), y = ai(a.defaultValue);
      if (p != null) {
        var T = oi(p);
        T !== f.value && (f.value = T), a.defaultValue == null && f.defaultValue !== T && (f.defaultValue = T);
      }
      y != null && (f.defaultValue = oi(y));
    }
    function bi(o, a) {
      var f = o, p = f.textContent;
      p === f._wrapperState.initialValue && p !== "" && p !== null && (f.value = p);
    }
    function pu(o, a) {
      Fh(o, a);
    }
    var mu = "http://www.w3.org/1999/xhtml", gu = "http://www.w3.org/1998/Math/MathML", Bh = "http://www.w3.org/2000/svg", Rf = {
      html: mu,
      mathml: gu,
      svg: Bh
    };
    function zc(o) {
      switch (o) {
        case "svg":
          return Bh;
        case "math":
          return gu;
        default:
          return mu;
      }
    }
    function ml(o, a) {
      return o == null || o === mu ? zc(a) : o === Bh && a === "foreignObject" ? mu : o;
    }
    var Df = function(o) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(a, f, p, y) {
        MSApp.execUnsafeLocalFunction(function() {
          return o(a, f, p, y);
        });
      } : o;
    }, qc, k0 = Df(function(o, a) {
      if (o.namespaceURI === Rf.svg && !("innerHTML" in o)) {
        qc = qc || document.createElement("div"), qc.innerHTML = "<svg>" + a.valueOf().toString() + "</svg>";
        for (var f = qc.firstChild; o.firstChild; )
          o.removeChild(o.firstChild);
        for (; f.firstChild; )
          o.appendChild(f.firstChild);
        return;
      }
      o.innerHTML = a;
    }), Xi = 1, Na = 3, si = 8, Ts = 9, N0 = 11, Mf = function(o, a) {
      if (a) {
        var f = o.firstChild;
        if (f && f === o.lastChild && f.nodeType === Na) {
          f.nodeValue = a;
          return;
        }
      }
      o.textContent = a;
    }, xv = {
      animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
      background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
      backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
      border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
      borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
      borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
      borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
      borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
      borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
      borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
      borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
      borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
      borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
      borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
      borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
      borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
      columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
      columns: ["columnCount", "columnWidth"],
      flex: ["flexBasis", "flexGrow", "flexShrink"],
      flexFlow: ["flexDirection", "flexWrap"],
      font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
      fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
      gap: ["columnGap", "rowGap"],
      grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
      gridColumn: ["gridColumnEnd", "gridColumnStart"],
      gridColumnGap: ["columnGap"],
      gridGap: ["columnGap", "rowGap"],
      gridRow: ["gridRowEnd", "gridRowStart"],
      gridRowGap: ["rowGap"],
      gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
      listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
      margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
      marker: ["markerEnd", "markerMid", "markerStart"],
      mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
      maskPosition: ["maskPositionX", "maskPositionY"],
      outline: ["outlineColor", "outlineStyle", "outlineWidth"],
      overflow: ["overflowX", "overflowY"],
      padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
      placeContent: ["alignContent", "justifyContent"],
      placeItems: ["alignItems", "justifyItems"],
      placeSelf: ["alignSelf", "justifySelf"],
      textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
      textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
      transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
      wordWrap: ["overflowWrap"]
    }, jc = {
      animationIterationCount: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      // SVG-related properties
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    };
    function w0(o, a) {
      return o + a.charAt(0).toUpperCase() + a.substring(1);
    }
    var _v = ["Webkit", "ms", "Moz", "O"];
    Object.keys(jc).forEach(function(o) {
      _v.forEach(function(a) {
        jc[w0(a, o)] = jc[o];
      });
    });
    function Uh(o, a, f) {
      var p = a == null || typeof a == "boolean" || a === "";
      return p ? "" : !f && typeof a == "number" && a !== 0 && !(jc.hasOwnProperty(o) && jc[o]) ? a + "px" : ("" + a).trim();
    }
    var kv = /([A-Z])/g, Nv = /^ms-/;
    function Hh(o) {
      return o.replace(kv, "-$1").toLowerCase().replace(Nv, "-ms-");
    }
    var O0 = function() {
    };
    {
      var wv = /^(?:webkit|moz|o)[A-Z]/, Ov = /^-ms-/, R0 = /-(.)/g, D0 = /;\s*$/, yu = {}, zh = {}, M0 = !1, L0 = !1, Rv = function(o) {
        return o.replace(R0, function(a, f) {
          return f.toUpperCase();
        });
      }, Dv = function(o) {
        yu.hasOwnProperty(o) && yu[o] || (yu[o] = !0, l(
          "Unsupported style property %s. Did you mean %s?",
          o,
          // As Andi Smith suggests
          // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
          // is converted to lowercase `ms`.
          Rv(o.replace(Ov, "ms-"))
        ));
      }, qh = function(o) {
        yu.hasOwnProperty(o) && yu[o] || (yu[o] = !0, l("Unsupported vendor-prefixed style property %s. Did you mean %s?", o, o.charAt(0).toUpperCase() + o.slice(1)));
      }, Vc = function(o, a) {
        zh.hasOwnProperty(a) && zh[a] || (zh[a] = !0, l(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, o, a.replace(D0, "")));
      }, Mv = function(o, a) {
        M0 || (M0 = !0, l("`NaN` is an invalid value for the `%s` css style property.", o));
      }, I0 = function(o, a) {
        L0 || (L0 = !0, l("`Infinity` is an invalid value for the `%s` css style property.", o));
      };
      O0 = function(o, a) {
        o.indexOf("-") > -1 ? Dv(o) : wv.test(o) ? qh(o) : D0.test(a) && Vc(o, a), typeof a == "number" && (isNaN(a) ? Mv(o, a) : isFinite(a) || I0(o, a));
      };
    }
    var P0 = O0;
    function F0(o) {
      {
        var a = "", f = "";
        for (var p in o)
          if (o.hasOwnProperty(p)) {
            var y = o[p];
            if (y != null) {
              var T = p.indexOf("--") === 0;
              a += f + (T ? p : Hh(p)) + ":", a += Uh(p, y, T), f = ";";
            }
          }
        return a || null;
      }
    }
    function jh(o, a) {
      var f = o.style;
      for (var p in a)
        if (a.hasOwnProperty(p)) {
          var y = p.indexOf("--") === 0;
          y || P0(p, a[p]);
          var T = Uh(p, a[p], y);
          p === "float" && (p = "cssFloat"), y ? f.setProperty(p, T) : f[p] = T;
        }
    }
    function B0(o) {
      return o == null || typeof o == "boolean" || o === "";
    }
    function gl(o) {
      var a = {};
      for (var f in o)
        for (var p = xv[f] || [f], y = 0; y < p.length; y++)
          a[p[y]] = f;
      return a;
    }
    function Lv(o, a) {
      {
        if (!a)
          return;
        var f = gl(o), p = gl(a), y = {};
        for (var T in f) {
          var x = f[T], k = p[T];
          if (k && x !== k) {
            var R = x + "," + k;
            if (y[R])
              continue;
            y[R] = !0, l("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", B0(o[x]) ? "Removing" : "Updating", x, k);
          }
        }
      }
    }
    var Iv = {
      area: !0,
      base: !0,
      br: !0,
      col: !0,
      embed: !0,
      hr: !0,
      img: !0,
      input: !0,
      keygen: !0,
      link: !0,
      meta: !0,
      param: !0,
      source: !0,
      track: !0,
      wbr: !0
      // NOTE: menuitem's close tag should be omitted, but that causes problems.
    }, Pv = e({
      menuitem: !0
    }, Iv), U0 = "__html";
    function Lf(o, a) {
      if (a) {
        if (Pv[o] && !(a.children == null && a.dangerouslySetInnerHTML == null))
          throw Error(o + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
        if (a.dangerouslySetInnerHTML != null) {
          if (a.children != null)
            throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (!(typeof a.dangerouslySetInnerHTML == "object" && U0 in a.dangerouslySetInnerHTML))
            throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!a.suppressContentEditableWarning && a.contentEditable && a.children != null && l("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), !(a.style == null || typeof a.style == "object"))
          throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
      }
    }
    function bo(o, a) {
      if (o.indexOf("-") === -1)
        return typeof a.is == "string";
      switch (o) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var Cs = {
      // HTML
      accept: "accept",
      acceptcharset: "acceptCharset",
      "accept-charset": "acceptCharset",
      accesskey: "accessKey",
      action: "action",
      allowfullscreen: "allowFullScreen",
      alt: "alt",
      as: "as",
      async: "async",
      autocapitalize: "autoCapitalize",
      autocomplete: "autoComplete",
      autocorrect: "autoCorrect",
      autofocus: "autoFocus",
      autoplay: "autoPlay",
      autosave: "autoSave",
      capture: "capture",
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      challenge: "challenge",
      charset: "charSet",
      checked: "checked",
      children: "children",
      cite: "cite",
      class: "className",
      classid: "classID",
      classname: "className",
      cols: "cols",
      colspan: "colSpan",
      content: "content",
      contenteditable: "contentEditable",
      contextmenu: "contextMenu",
      controls: "controls",
      controlslist: "controlsList",
      coords: "coords",
      crossorigin: "crossOrigin",
      dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
      data: "data",
      datetime: "dateTime",
      default: "default",
      defaultchecked: "defaultChecked",
      defaultvalue: "defaultValue",
      defer: "defer",
      dir: "dir",
      disabled: "disabled",
      disablepictureinpicture: "disablePictureInPicture",
      disableremoteplayback: "disableRemotePlayback",
      download: "download",
      draggable: "draggable",
      enctype: "encType",
      enterkeyhint: "enterKeyHint",
      for: "htmlFor",
      form: "form",
      formmethod: "formMethod",
      formaction: "formAction",
      formenctype: "formEncType",
      formnovalidate: "formNoValidate",
      formtarget: "formTarget",
      frameborder: "frameBorder",
      headers: "headers",
      height: "height",
      hidden: "hidden",
      high: "high",
      href: "href",
      hreflang: "hrefLang",
      htmlfor: "htmlFor",
      httpequiv: "httpEquiv",
      "http-equiv": "httpEquiv",
      icon: "icon",
      id: "id",
      innerhtml: "innerHTML",
      inputmode: "inputMode",
      integrity: "integrity",
      is: "is",
      itemid: "itemID",
      itemprop: "itemProp",
      itemref: "itemRef",
      itemscope: "itemScope",
      itemtype: "itemType",
      keyparams: "keyParams",
      keytype: "keyType",
      kind: "kind",
      label: "label",
      lang: "lang",
      list: "list",
      loop: "loop",
      low: "low",
      manifest: "manifest",
      marginwidth: "marginWidth",
      marginheight: "marginHeight",
      max: "max",
      maxlength: "maxLength",
      media: "media",
      mediagroup: "mediaGroup",
      method: "method",
      min: "min",
      minlength: "minLength",
      multiple: "multiple",
      muted: "muted",
      name: "name",
      nomodule: "noModule",
      nonce: "nonce",
      novalidate: "noValidate",
      open: "open",
      optimum: "optimum",
      pattern: "pattern",
      placeholder: "placeholder",
      playsinline: "playsInline",
      poster: "poster",
      preload: "preload",
      profile: "profile",
      radiogroup: "radioGroup",
      readonly: "readOnly",
      referrerpolicy: "referrerPolicy",
      rel: "rel",
      required: "required",
      reversed: "reversed",
      role: "role",
      rows: "rows",
      rowspan: "rowSpan",
      sandbox: "sandbox",
      scope: "scope",
      scoped: "scoped",
      scrolling: "scrolling",
      seamless: "seamless",
      selected: "selected",
      shape: "shape",
      size: "size",
      sizes: "sizes",
      span: "span",
      spellcheck: "spellCheck",
      src: "src",
      srcdoc: "srcDoc",
      srclang: "srcLang",
      srcset: "srcSet",
      start: "start",
      step: "step",
      style: "style",
      summary: "summary",
      tabindex: "tabIndex",
      target: "target",
      title: "title",
      type: "type",
      usemap: "useMap",
      value: "value",
      width: "width",
      wmode: "wmode",
      wrap: "wrap",
      // SVG
      about: "about",
      accentheight: "accentHeight",
      "accent-height": "accentHeight",
      accumulate: "accumulate",
      additive: "additive",
      alignmentbaseline: "alignmentBaseline",
      "alignment-baseline": "alignmentBaseline",
      allowreorder: "allowReorder",
      alphabetic: "alphabetic",
      amplitude: "amplitude",
      arabicform: "arabicForm",
      "arabic-form": "arabicForm",
      ascent: "ascent",
      attributename: "attributeName",
      attributetype: "attributeType",
      autoreverse: "autoReverse",
      azimuth: "azimuth",
      basefrequency: "baseFrequency",
      baselineshift: "baselineShift",
      "baseline-shift": "baselineShift",
      baseprofile: "baseProfile",
      bbox: "bbox",
      begin: "begin",
      bias: "bias",
      by: "by",
      calcmode: "calcMode",
      capheight: "capHeight",
      "cap-height": "capHeight",
      clip: "clip",
      clippath: "clipPath",
      "clip-path": "clipPath",
      clippathunits: "clipPathUnits",
      cliprule: "clipRule",
      "clip-rule": "clipRule",
      color: "color",
      colorinterpolation: "colorInterpolation",
      "color-interpolation": "colorInterpolation",
      colorinterpolationfilters: "colorInterpolationFilters",
      "color-interpolation-filters": "colorInterpolationFilters",
      colorprofile: "colorProfile",
      "color-profile": "colorProfile",
      colorrendering: "colorRendering",
      "color-rendering": "colorRendering",
      contentscripttype: "contentScriptType",
      contentstyletype: "contentStyleType",
      cursor: "cursor",
      cx: "cx",
      cy: "cy",
      d: "d",
      datatype: "datatype",
      decelerate: "decelerate",
      descent: "descent",
      diffuseconstant: "diffuseConstant",
      direction: "direction",
      display: "display",
      divisor: "divisor",
      dominantbaseline: "dominantBaseline",
      "dominant-baseline": "dominantBaseline",
      dur: "dur",
      dx: "dx",
      dy: "dy",
      edgemode: "edgeMode",
      elevation: "elevation",
      enablebackground: "enableBackground",
      "enable-background": "enableBackground",
      end: "end",
      exponent: "exponent",
      externalresourcesrequired: "externalResourcesRequired",
      fill: "fill",
      fillopacity: "fillOpacity",
      "fill-opacity": "fillOpacity",
      fillrule: "fillRule",
      "fill-rule": "fillRule",
      filter: "filter",
      filterres: "filterRes",
      filterunits: "filterUnits",
      floodopacity: "floodOpacity",
      "flood-opacity": "floodOpacity",
      floodcolor: "floodColor",
      "flood-color": "floodColor",
      focusable: "focusable",
      fontfamily: "fontFamily",
      "font-family": "fontFamily",
      fontsize: "fontSize",
      "font-size": "fontSize",
      fontsizeadjust: "fontSizeAdjust",
      "font-size-adjust": "fontSizeAdjust",
      fontstretch: "fontStretch",
      "font-stretch": "fontStretch",
      fontstyle: "fontStyle",
      "font-style": "fontStyle",
      fontvariant: "fontVariant",
      "font-variant": "fontVariant",
      fontweight: "fontWeight",
      "font-weight": "fontWeight",
      format: "format",
      from: "from",
      fx: "fx",
      fy: "fy",
      g1: "g1",
      g2: "g2",
      glyphname: "glyphName",
      "glyph-name": "glyphName",
      glyphorientationhorizontal: "glyphOrientationHorizontal",
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphorientationvertical: "glyphOrientationVertical",
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphref: "glyphRef",
      gradienttransform: "gradientTransform",
      gradientunits: "gradientUnits",
      hanging: "hanging",
      horizadvx: "horizAdvX",
      "horiz-adv-x": "horizAdvX",
      horizoriginx: "horizOriginX",
      "horiz-origin-x": "horizOriginX",
      ideographic: "ideographic",
      imagerendering: "imageRendering",
      "image-rendering": "imageRendering",
      in2: "in2",
      in: "in",
      inlist: "inlist",
      intercept: "intercept",
      k1: "k1",
      k2: "k2",
      k3: "k3",
      k4: "k4",
      k: "k",
      kernelmatrix: "kernelMatrix",
      kernelunitlength: "kernelUnitLength",
      kerning: "kerning",
      keypoints: "keyPoints",
      keysplines: "keySplines",
      keytimes: "keyTimes",
      lengthadjust: "lengthAdjust",
      letterspacing: "letterSpacing",
      "letter-spacing": "letterSpacing",
      lightingcolor: "lightingColor",
      "lighting-color": "lightingColor",
      limitingconeangle: "limitingConeAngle",
      local: "local",
      markerend: "markerEnd",
      "marker-end": "markerEnd",
      markerheight: "markerHeight",
      markermid: "markerMid",
      "marker-mid": "markerMid",
      markerstart: "markerStart",
      "marker-start": "markerStart",
      markerunits: "markerUnits",
      markerwidth: "markerWidth",
      mask: "mask",
      maskcontentunits: "maskContentUnits",
      maskunits: "maskUnits",
      mathematical: "mathematical",
      mode: "mode",
      numoctaves: "numOctaves",
      offset: "offset",
      opacity: "opacity",
      operator: "operator",
      order: "order",
      orient: "orient",
      orientation: "orientation",
      origin: "origin",
      overflow: "overflow",
      overlineposition: "overlinePosition",
      "overline-position": "overlinePosition",
      overlinethickness: "overlineThickness",
      "overline-thickness": "overlineThickness",
      paintorder: "paintOrder",
      "paint-order": "paintOrder",
      panose1: "panose1",
      "panose-1": "panose1",
      pathlength: "pathLength",
      patterncontentunits: "patternContentUnits",
      patterntransform: "patternTransform",
      patternunits: "patternUnits",
      pointerevents: "pointerEvents",
      "pointer-events": "pointerEvents",
      points: "points",
      pointsatx: "pointsAtX",
      pointsaty: "pointsAtY",
      pointsatz: "pointsAtZ",
      prefix: "prefix",
      preservealpha: "preserveAlpha",
      preserveaspectratio: "preserveAspectRatio",
      primitiveunits: "primitiveUnits",
      property: "property",
      r: "r",
      radius: "radius",
      refx: "refX",
      refy: "refY",
      renderingintent: "renderingIntent",
      "rendering-intent": "renderingIntent",
      repeatcount: "repeatCount",
      repeatdur: "repeatDur",
      requiredextensions: "requiredExtensions",
      requiredfeatures: "requiredFeatures",
      resource: "resource",
      restart: "restart",
      result: "result",
      results: "results",
      rotate: "rotate",
      rx: "rx",
      ry: "ry",
      scale: "scale",
      security: "security",
      seed: "seed",
      shaperendering: "shapeRendering",
      "shape-rendering": "shapeRendering",
      slope: "slope",
      spacing: "spacing",
      specularconstant: "specularConstant",
      specularexponent: "specularExponent",
      speed: "speed",
      spreadmethod: "spreadMethod",
      startoffset: "startOffset",
      stddeviation: "stdDeviation",
      stemh: "stemh",
      stemv: "stemv",
      stitchtiles: "stitchTiles",
      stopcolor: "stopColor",
      "stop-color": "stopColor",
      stopopacity: "stopOpacity",
      "stop-opacity": "stopOpacity",
      strikethroughposition: "strikethroughPosition",
      "strikethrough-position": "strikethroughPosition",
      strikethroughthickness: "strikethroughThickness",
      "strikethrough-thickness": "strikethroughThickness",
      string: "string",
      stroke: "stroke",
      strokedasharray: "strokeDasharray",
      "stroke-dasharray": "strokeDasharray",
      strokedashoffset: "strokeDashoffset",
      "stroke-dashoffset": "strokeDashoffset",
      strokelinecap: "strokeLinecap",
      "stroke-linecap": "strokeLinecap",
      strokelinejoin: "strokeLinejoin",
      "stroke-linejoin": "strokeLinejoin",
      strokemiterlimit: "strokeMiterlimit",
      "stroke-miterlimit": "strokeMiterlimit",
      strokewidth: "strokeWidth",
      "stroke-width": "strokeWidth",
      strokeopacity: "strokeOpacity",
      "stroke-opacity": "strokeOpacity",
      suppresscontenteditablewarning: "suppressContentEditableWarning",
      suppresshydrationwarning: "suppressHydrationWarning",
      surfacescale: "surfaceScale",
      systemlanguage: "systemLanguage",
      tablevalues: "tableValues",
      targetx: "targetX",
      targety: "targetY",
      textanchor: "textAnchor",
      "text-anchor": "textAnchor",
      textdecoration: "textDecoration",
      "text-decoration": "textDecoration",
      textlength: "textLength",
      textrendering: "textRendering",
      "text-rendering": "textRendering",
      to: "to",
      transform: "transform",
      typeof: "typeof",
      u1: "u1",
      u2: "u2",
      underlineposition: "underlinePosition",
      "underline-position": "underlinePosition",
      underlinethickness: "underlineThickness",
      "underline-thickness": "underlineThickness",
      unicode: "unicode",
      unicodebidi: "unicodeBidi",
      "unicode-bidi": "unicodeBidi",
      unicoderange: "unicodeRange",
      "unicode-range": "unicodeRange",
      unitsperem: "unitsPerEm",
      "units-per-em": "unitsPerEm",
      unselectable: "unselectable",
      valphabetic: "vAlphabetic",
      "v-alphabetic": "vAlphabetic",
      values: "values",
      vectoreffect: "vectorEffect",
      "vector-effect": "vectorEffect",
      version: "version",
      vertadvy: "vertAdvY",
      "vert-adv-y": "vertAdvY",
      vertoriginx: "vertOriginX",
      "vert-origin-x": "vertOriginX",
      vertoriginy: "vertOriginY",
      "vert-origin-y": "vertOriginY",
      vhanging: "vHanging",
      "v-hanging": "vHanging",
      videographic: "vIdeographic",
      "v-ideographic": "vIdeographic",
      viewbox: "viewBox",
      viewtarget: "viewTarget",
      visibility: "visibility",
      vmathematical: "vMathematical",
      "v-mathematical": "vMathematical",
      vocab: "vocab",
      widths: "widths",
      wordspacing: "wordSpacing",
      "word-spacing": "wordSpacing",
      writingmode: "writingMode",
      "writing-mode": "writingMode",
      x1: "x1",
      x2: "x2",
      x: "x",
      xchannelselector: "xChannelSelector",
      xheight: "xHeight",
      "x-height": "xHeight",
      xlinkactuate: "xlinkActuate",
      "xlink:actuate": "xlinkActuate",
      xlinkarcrole: "xlinkArcrole",
      "xlink:arcrole": "xlinkArcrole",
      xlinkhref: "xlinkHref",
      "xlink:href": "xlinkHref",
      xlinkrole: "xlinkRole",
      "xlink:role": "xlinkRole",
      xlinkshow: "xlinkShow",
      "xlink:show": "xlinkShow",
      xlinktitle: "xlinkTitle",
      "xlink:title": "xlinkTitle",
      xlinktype: "xlinkType",
      "xlink:type": "xlinkType",
      xmlbase: "xmlBase",
      "xml:base": "xmlBase",
      xmllang: "xmlLang",
      "xml:lang": "xmlLang",
      xmlns: "xmlns",
      "xml:space": "xmlSpace",
      xmlnsxlink: "xmlnsXlink",
      "xmlns:xlink": "xmlnsXlink",
      xmlspace: "xmlSpace",
      y1: "y1",
      y2: "y2",
      y: "y",
      ychannelselector: "yChannelSelector",
      z: "z",
      zoomandpan: "zoomAndPan"
    }, H0 = {
      "aria-current": 0,
      // state
      "aria-details": 0,
      "aria-disabled": 0,
      // state
      "aria-hidden": 0,
      // state
      "aria-invalid": 0,
      // state
      "aria-keyshortcuts": 0,
      "aria-label": 0,
      "aria-roledescription": 0,
      // Widget Attributes
      "aria-autocomplete": 0,
      "aria-checked": 0,
      "aria-expanded": 0,
      "aria-haspopup": 0,
      "aria-level": 0,
      "aria-modal": 0,
      "aria-multiline": 0,
      "aria-multiselectable": 0,
      "aria-orientation": 0,
      "aria-placeholder": 0,
      "aria-pressed": 0,
      "aria-readonly": 0,
      "aria-required": 0,
      "aria-selected": 0,
      "aria-sort": 0,
      "aria-valuemax": 0,
      "aria-valuemin": 0,
      "aria-valuenow": 0,
      "aria-valuetext": 0,
      // Live Region Attributes
      "aria-atomic": 0,
      "aria-busy": 0,
      "aria-live": 0,
      "aria-relevant": 0,
      // Drag-and-Drop Attributes
      "aria-dropeffect": 0,
      "aria-grabbed": 0,
      // Relationship Attributes
      "aria-activedescendant": 0,
      "aria-colcount": 0,
      "aria-colindex": 0,
      "aria-colspan": 0,
      "aria-controls": 0,
      "aria-describedby": 0,
      "aria-errormessage": 0,
      "aria-flowto": 0,
      "aria-labelledby": 0,
      "aria-owns": 0,
      "aria-posinset": 0,
      "aria-rowcount": 0,
      "aria-rowindex": 0,
      "aria-rowspan": 0,
      "aria-setsize": 0
    }, wa = {}, Fv = new RegExp("^(aria)-[" + wn + "]*$"), z0 = new RegExp("^(aria)[A-Z][" + wn + "]*$"), Vh = Object.prototype.hasOwnProperty;
    function $h(o, a) {
      {
        if (Vh.call(wa, a) && wa[a])
          return !0;
        if (z0.test(a)) {
          var f = "aria-" + a.slice(4).toLowerCase(), p = H0.hasOwnProperty(f) ? f : null;
          if (p == null)
            return l("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", a), wa[a] = !0, !0;
          if (a !== p)
            return l("Invalid ARIA attribute `%s`. Did you mean `%s`?", a, p), wa[a] = !0, !0;
        }
        if (Fv.test(a)) {
          var y = a.toLowerCase(), T = H0.hasOwnProperty(y) ? y : null;
          if (T == null)
            return wa[a] = !0, !1;
          if (a !== T)
            return l("Unknown ARIA attribute `%s`. Did you mean `%s`?", a, T), wa[a] = !0, !0;
        }
      }
      return !0;
    }
    function q0(o, a) {
      {
        var f = [];
        for (var p in a) {
          var y = $h(o, p);
          y || f.push(p);
        }
        var T = f.map(function(x) {
          return "`" + x + "`";
        }).join(", ");
        f.length === 1 ? l("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, o) : f.length > 1 && l("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", T, o);
      }
    }
    function j0(o, a) {
      bo(o, a) || q0(o, a);
    }
    var Gh = !1;
    function Bv(o, a) {
      {
        if (o !== "input" && o !== "textarea" && o !== "select")
          return;
        a != null && a.value === null && !Gh && (Gh = !0, o === "select" && a.multiple ? l("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", o) : l("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", o));
      }
    }
    var V0 = function() {
    };
    {
      var li = {}, Uv = Object.prototype.hasOwnProperty, $0 = /^on./, Ji = /^on[^A-Z]/, Hv = new RegExp("^(aria)-[" + wn + "]*$"), $c = new RegExp("^(aria)[A-Z][" + wn + "]*$");
      V0 = function(o, a, f, p) {
        if (Uv.call(li, a) && li[a])
          return !0;
        var y = a.toLowerCase();
        if (y === "onfocusin" || y === "onfocusout")
          return l("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), li[a] = !0, !0;
        if (p != null) {
          var T = p.registrationNameDependencies, x = p.possibleRegistrationNames;
          if (T.hasOwnProperty(a))
            return !0;
          var k = x.hasOwnProperty(y) ? x[y] : null;
          if (k != null)
            return l("Invalid event handler property `%s`. Did you mean `%s`?", a, k), li[a] = !0, !0;
          if ($0.test(a))
            return l("Unknown event handler property `%s`. It will be ignored.", a), li[a] = !0, !0;
        } else if ($0.test(a))
          return Ji.test(a) && l("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", a), li[a] = !0, !0;
        if (Hv.test(a) || $c.test(a))
          return !0;
        if (y === "innerhtml")
          return l("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), li[a] = !0, !0;
        if (y === "aria")
          return l("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), li[a] = !0, !0;
        if (y === "is" && f !== null && f !== void 0 && typeof f != "string")
          return l("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof f), li[a] = !0, !0;
        if (typeof f == "number" && isNaN(f))
          return l("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", a), li[a] = !0, !0;
        var R = jr(a), U = R !== null && R.type === Yt;
        if (Cs.hasOwnProperty(y)) {
          var q = Cs[y];
          if (q !== a)
            return l("Invalid DOM property `%s`. Did you mean `%s`?", a, q), li[a] = !0, !0;
        } else if (!U && a !== y)
          return l("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", a, y), li[a] = !0, !0;
        return typeof f == "boolean" && Ci(a, f, R, !1) ? (f ? l('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', f, a, a, f, a) : l('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', f, a, a, f, a, a, a), li[a] = !0, !0) : U ? !0 : Ci(a, f, R, !1) ? (li[a] = !0, !1) : ((f === "false" || f === "true") && R !== null && R.type === En && (l("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", f, a, f === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', a, f), li[a] = !0), !0);
      };
    }
    var G0 = function(o, a, f) {
      {
        var p = [];
        for (var y in a) {
          var T = V0(o, y, a[y], f);
          T || p.push(y);
        }
        var x = p.map(function(k) {
          return "`" + k + "`";
        }).join(", ");
        p.length === 1 ? l("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", x, o) : p.length > 1 && l("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", x, o);
      }
    };
    function W0(o, a, f) {
      bo(o, a) || G0(o, a, f);
    }
    var Wh = 1, Gc = 1 << 1, yl = 1 << 2, K0 = 1 << 4, vu = Wh | Gc | yl;
    function Wc(o) {
      var a = o.target || o.srcElement || window;
      return a.correspondingUseElement && (a = a.correspondingUseElement), a.nodeType === Na ? a.parentNode : a;
    }
    var vl = null, Ss = null, El = null;
    function Kh(o) {
      var a = Vu(o);
      if (a) {
        if (typeof vl != "function")
          throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var f = a.stateNode;
        if (f) {
          var p = Yg(f);
          vl(a.stateNode, a.type, p);
        }
      }
    }
    function Yh(o) {
      vl = o;
    }
    function Eu(o) {
      Ss ? El ? El.push(o) : El = [o] : Ss = o;
    }
    function Y0() {
      return Ss !== null || El !== null;
    }
    function Qh() {
      if (Ss) {
        var o = Ss, a = El;
        if (Ss = null, El = null, Kh(o), a)
          for (var f = 0; f < a.length; f++)
            Kh(a[f]);
      }
    }
    var If = function(o, a) {
      return o(a);
    }, Cn = function(o, a, f, p, y) {
      return o(a, f, p, y);
    }, Pf = function() {
    }, Xh = If, Oa = !1, Ff = !1;
    function Bf() {
      var o = Y0();
      o && (Pf(), Qh());
    }
    function Kc(o, a) {
      if (Oa)
        return o(a);
      Oa = !0;
      try {
        return If(o, a);
      } finally {
        Oa = !1, Bf();
      }
    }
    function Uf(o, a, f) {
      if (Ff)
        return o(a, f);
      Ff = !0;
      try {
        return Xh(o, a, f);
      } finally {
        Ff = !1, Bf();
      }
    }
    function Tu(o, a, f, p, y) {
      var T = Oa;
      Oa = !0;
      try {
        return Cn(o, a, f, p, y);
      } finally {
        Oa = T, Oa || Bf();
      }
    }
    function Q0(o) {
      Oa || Pf();
    }
    function Hf(o, a, f, p) {
      If = o, Cn = a, Pf = f, Xh = p;
    }
    function Jh(o) {
      return o === "button" || o === "input" || o === "select" || o === "textarea";
    }
    function Zh(o, a, f) {
      switch (o) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          return !!(f.disabled && Jh(a));
        default:
          return !1;
      }
    }
    function Cu(o, a) {
      var f = o.stateNode;
      if (f === null)
        return null;
      var p = Yg(f);
      if (p === null)
        return null;
      var y = p[a];
      if (Zh(a, o.type, p))
        return null;
      if (!(!y || typeof y == "function"))
        throw Error("Expected `" + a + "` listener to be a function, instead got a value of `" + typeof y + "` type.");
      return y;
    }
    var Yc = !1;
    if (rt)
      try {
        var Su = {};
        Object.defineProperty(Su, "passive", {
          get: function() {
            Yc = !0;
          }
        }), window.addEventListener("test", Su, Su), window.removeEventListener("test", Su, Su);
      } catch {
        Yc = !1;
      }
    function X0(o, a, f, p, y, T, x, k, R) {
      var U = Array.prototype.slice.call(arguments, 3);
      try {
        a.apply(f, U);
      } catch (q) {
        this.onError(q);
      }
    }
    var zf = X0;
    if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
      var bs = document.createElement("react");
      zf = function(a, f, p, y, T, x, k, R, U) {
        if (!(typeof document < "u"))
          throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
        var q = document.createEvent("Event"), ae = !1, K = !0, ue = window.event, Ae = Object.getOwnPropertyDescriptor(window, "event");
        function Ue() {
          bs.removeEventListener(ge, Ft, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = ue);
        }
        var mt = Array.prototype.slice.call(arguments, 3);
        function Ft() {
          ae = !0, Ue(), f.apply(p, mt), K = !1;
        }
        var At, ln = !1, bn = !1;
        function se(re) {
          if (At = re.error, ln = !0, At === null && re.colno === 0 && re.lineno === 0 && (bn = !0), re.defaultPrevented && At != null && typeof At == "object")
            try {
              At._suppressLogging = !0;
            } catch {
            }
        }
        var ge = "react-" + (a || "invokeguardedcallback");
        if (window.addEventListener("error", se), bs.addEventListener(ge, Ft, !1), q.initEvent(ge, !1, !1), bs.dispatchEvent(q), Ae && Object.defineProperty(window, "event", Ae), ae && K && (ln ? bn && (At = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : At = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(At)), window.removeEventListener("error", se), !ae)
          return Ue(), X0.apply(this, arguments);
      };
    }
    var J0 = zf, As = !1, qf = null, Tl = !1, $o = null, jf = {
      onError: function(o) {
        As = !0, qf = o;
      }
    };
    function ui(o, a, f, p, y, T, x, k, R) {
      As = !1, qf = null, J0.apply(jf, arguments);
    }
    function Z0(o, a, f, p, y, T, x, k, R) {
      if (ui.apply(this, arguments), As) {
        var U = ci();
        Tl || (Tl = !0, $o = U);
      }
    }
    function Cl() {
      if (Tl) {
        var o = $o;
        throw Tl = !1, $o = null, o;
      }
    }
    function Ui() {
      return As;
    }
    function ci() {
      if (As) {
        var o = qf;
        return As = !1, qf = null, o;
      } else
        throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    function Ra(o) {
      return o._reactInternals;
    }
    function eg(o) {
      return o._reactInternals !== void 0;
    }
    function ep(o, a) {
      o._reactInternals = a;
    }
    var yn = (
      /*                      */
      0
    ), fi = (
      /*                */
      1
    ), Rt = (
      /*                    */
      2
    ), St = (
      /*                       */
      4
    ), xs = (
      /*           */
      6
    ), Rn = (
      /*                     */
      8
    ), Or = (
      /*                 */
      16
    ), _s = (
      /*                     */
      32
    ), hn = (
      /*                   */
      64
    ), Rr = (
      /*                          */
      128
    ), Go = (
      /*                     */
      256
    ), bu = (
      /*                      */
      512
    ), Au = (
      /*     */
      8192
    ), Zi = (
      /*                    */
      1024
    ), tg = (
      /*           */
      1028
    ), tp = (
      /*          */
      932
    ), Sl = (
      /*               */
      2047
    ), Qc = (
      /*                   */
      2048
    ), Ao = (
      /*                */
      4096
    ), Xc = (
      /* */
      16384
    ), zv = i.ReactCurrentOwner;
    function ks(o) {
      var a = o, f = o;
      if (o.alternate)
        for (; a.return; )
          a = a.return;
      else {
        var p = a;
        do
          a = p, (a.flags & (Rt | Zi)) !== yn && (f = a.return), p = a.return;
        while (p);
      }
      return a.tag === C ? f : null;
    }
    function Vf(o) {
      if (o.tag === ee) {
        var a = o.memoizedState;
        if (a === null) {
          var f = o.alternate;
          f !== null && (a = f.memoizedState);
        }
        if (a !== null)
          return a.dehydrated;
      }
      return null;
    }
    function ng(o) {
      return o.tag === C ? o.stateNode.containerInfo : null;
    }
    function $f(o) {
      return ks(o) === o;
    }
    function rg(o) {
      {
        var a = zv.current;
        if (a !== null && a.tag === g) {
          var f = a, p = f.stateNode;
          p._warnedAboutRefsInRender || l("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", He(f.type) || "A component"), p._warnedAboutRefsInRender = !0;
        }
      }
      var y = Ra(o);
      return y ? ks(y) === y : !1;
    }
    function np(o) {
      if (ks(o) !== o)
        throw Error("Unable to find node on an unmounted component.");
    }
    function rp(o) {
      var a = o.alternate;
      if (!a) {
        var f = ks(o);
        if (f === null)
          throw Error("Unable to find node on an unmounted component.");
        return f !== o ? null : o;
      }
      for (var p = o, y = a; ; ) {
        var T = p.return;
        if (T === null)
          break;
        var x = T.alternate;
        if (x === null) {
          var k = T.return;
          if (k !== null) {
            p = y = k;
            continue;
          }
          break;
        }
        if (T.child === x.child) {
          for (var R = T.child; R; ) {
            if (R === p)
              return np(T), o;
            if (R === y)
              return np(T), a;
            R = R.sibling;
          }
          throw Error("Unable to find node on an unmounted component.");
        }
        if (p.return !== y.return)
          p = T, y = x;
        else {
          for (var U = !1, q = T.child; q; ) {
            if (q === p) {
              U = !0, p = T, y = x;
              break;
            }
            if (q === y) {
              U = !0, y = T, p = x;
              break;
            }
            q = q.sibling;
          }
          if (!U) {
            for (q = x.child; q; ) {
              if (q === p) {
                U = !0, p = x, y = T;
                break;
              }
              if (q === y) {
                U = !0, y = x, p = T;
                break;
              }
              q = q.sibling;
            }
            if (!U)
              throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
          }
        }
        if (p.alternate !== y)
          throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
      }
      if (p.tag !== C)
        throw Error("Unable to find node on an unmounted component.");
      return p.stateNode.current === p ? o : a;
    }
    function ip(o) {
      var a = rp(o);
      if (!a)
        return null;
      for (var f = a; ; ) {
        if (f.tag === b || f.tag === N)
          return f;
        if (f.child) {
          f.child.return = f, f = f.child;
          continue;
        }
        if (f === a)
          return null;
        for (; !f.sibling; ) {
          if (!f.return || f.return === a)
            return null;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
      return null;
    }
    function op(o) {
      var a = rp(o);
      if (!a)
        return null;
      for (var f = a; ; ) {
        if (f.tag === b || f.tag === N || he)
          return f;
        if (f.child && f.tag !== S) {
          f.child.return = f, f = f.child;
          continue;
        }
        if (f === a)
          return null;
        for (; !f.sibling; ) {
          if (!f.return || f.return === a)
            return null;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
      return null;
    }
    function ig(o, a) {
      for (var f = a, p = o.alternate; f !== null; ) {
        if (f === o || f === p)
          return !0;
        f = f.return;
      }
      return !1;
    }
    var Wo;
    function Gf(o) {
      Wo = o;
    }
    var Jc;
    function og(o) {
      Jc = o;
    }
    var Dr;
    function xu(o) {
      Dr = o;
    }
    var ap;
    function bl(o) {
      ap = o;
    }
    var Al = !1, pr = [], Da = null, Ns = null, mr = null, ws = /* @__PURE__ */ new Map(), Os = /* @__PURE__ */ new Map(), Ko = [];
    function Wf() {
      return pr.length > 0;
    }
    var sp = [
      "mousedown",
      "mouseup",
      "touchcancel",
      "touchend",
      "touchstart",
      "auxclick",
      "dblclick",
      "pointercancel",
      "pointerdown",
      "pointerup",
      "dragend",
      "dragstart",
      "drop",
      "compositionend",
      "compositionstart",
      "keydown",
      "keypress",
      "keyup",
      "input",
      "textInput",
      // Intentionally camelCase
      "copy",
      "cut",
      "paste",
      "click",
      "change",
      "contextmenu",
      "reset",
      "submit"
    ];
    function Kf(o) {
      return sp.indexOf(o) > -1;
    }
    function lp(o, a, f, p, y) {
      return {
        blockedOn: o,
        domEventName: a,
        eventSystemFlags: f | K0,
        nativeEvent: y,
        targetContainers: [p]
      };
    }
    function xl(o, a, f, p, y) {
      var T = lp(o, a, f, p, y);
      pr.push(T);
    }
    function Hi(o, a) {
      switch (o) {
        case "focusin":
        case "focusout":
          Da = null;
          break;
        case "dragenter":
        case "dragleave":
          Ns = null;
          break;
        case "mouseover":
        case "mouseout":
          mr = null;
          break;
        case "pointerover":
        case "pointerout": {
          var f = a.pointerId;
          ws.delete(f);
          break;
        }
        case "gotpointercapture":
        case "lostpointercapture": {
          var p = a.pointerId;
          Os.delete(p);
          break;
        }
      }
    }
    function eo(o, a, f, p, y, T) {
      if (o === null || o.nativeEvent !== T) {
        var x = lp(a, f, p, y, T);
        if (a !== null) {
          var k = Vu(a);
          k !== null && Jc(k);
        }
        return x;
      }
      o.eventSystemFlags |= p;
      var R = o.targetContainers;
      return y !== null && R.indexOf(y) === -1 && R.push(y), o;
    }
    function up(o, a, f, p, y) {
      switch (a) {
        case "focusin": {
          var T = y;
          return Da = eo(Da, o, a, f, p, T), !0;
        }
        case "dragenter": {
          var x = y;
          return Ns = eo(Ns, o, a, f, p, x), !0;
        }
        case "mouseover": {
          var k = y;
          return mr = eo(mr, o, a, f, p, k), !0;
        }
        case "pointerover": {
          var R = y, U = R.pointerId;
          return ws.set(U, eo(ws.get(U) || null, o, a, f, p, R)), !0;
        }
        case "gotpointercapture": {
          var q = y, ae = q.pointerId;
          return Os.set(ae, eo(Os.get(ae) || null, o, a, f, p, q)), !0;
        }
      }
      return !1;
    }
    function ag(o) {
      var a = w1(o.target);
      if (a !== null) {
        var f = ks(a);
        if (f !== null) {
          var p = f.tag;
          if (p === ee) {
            var y = Vf(f);
            if (y !== null) {
              o.blockedOn = y, ap(o.lanePriority, function() {
                n.unstable_runWithPriority(o.priority, function() {
                  Dr(f);
                });
              });
              return;
            }
          } else if (p === C) {
            var T = f.stateNode;
            if (T.hydrate) {
              o.blockedOn = ng(f);
              return;
            }
          }
        }
      }
      o.blockedOn = null;
    }
    function xo(o) {
      if (o.blockedOn !== null)
        return !1;
      for (var a = o.targetContainers; a.length > 0; ) {
        var f = a[0], p = m1(o.domEventName, o.eventSystemFlags, f, o.nativeEvent);
        if (p !== null) {
          var y = Vu(p);
          return y !== null && Jc(y), o.blockedOn = p, !1;
        }
        a.shift();
      }
      return !0;
    }
    function Ma(o, a, f) {
      xo(o) && f.delete(a);
    }
    function sg() {
      for (Al = !1; pr.length > 0; ) {
        var o = pr[0];
        if (o.blockedOn !== null) {
          var a = Vu(o.blockedOn);
          a !== null && Wo(a);
          break;
        }
        for (var f = o.targetContainers; f.length > 0; ) {
          var p = f[0], y = m1(o.domEventName, o.eventSystemFlags, p, o.nativeEvent);
          if (y !== null) {
            o.blockedOn = y;
            break;
          }
          f.shift();
        }
        o.blockedOn === null && pr.shift();
      }
      Da !== null && xo(Da) && (Da = null), Ns !== null && xo(Ns) && (Ns = null), mr !== null && xo(mr) && (mr = null), ws.forEach(Ma), Os.forEach(Ma);
    }
    function La(o, a) {
      o.blockedOn === a && (o.blockedOn = null, Al || (Al = !0, n.unstable_scheduleCallback(n.unstable_NormalPriority, sg)));
    }
    function cp(o) {
      if (pr.length > 0) {
        La(pr[0], o);
        for (var a = 1; a < pr.length; a++) {
          var f = pr[a];
          f.blockedOn === o && (f.blockedOn = null);
        }
      }
      Da !== null && La(Da, o), Ns !== null && La(Ns, o), mr !== null && La(mr, o);
      var p = function(k) {
        return La(k, o);
      };
      ws.forEach(p), Os.forEach(p);
      for (var y = 0; y < Ko.length; y++) {
        var T = Ko[y];
        T.blockedOn === o && (T.blockedOn = null);
      }
      for (; Ko.length > 0; ) {
        var x = Ko[0];
        if (x.blockedOn !== null)
          break;
        ag(x), x.blockedOn === null && Ko.shift();
      }
    }
    var Yf = 0, Zc = 1, _u = 2;
    function e1(o, a) {
      var f = {};
      return f[o.toLowerCase()] = a.toLowerCase(), f["Webkit" + o] = "webkit" + a, f["Moz" + o] = "moz" + a, f;
    }
    var _l = {
      animationend: e1("Animation", "AnimationEnd"),
      animationiteration: e1("Animation", "AnimationIteration"),
      animationstart: e1("Animation", "AnimationStart"),
      transitionend: e1("Transition", "TransitionEnd")
    }, Qf = {}, Xf = {};
    rt && (Xf = document.createElement("div").style, "AnimationEvent" in window || (delete _l.animationend.animation, delete _l.animationiteration.animation, delete _l.animationstart.animation), "TransitionEvent" in window || delete _l.transitionend.transition);
    function kl(o) {
      if (Qf[o])
        return Qf[o];
      if (!_l[o])
        return o;
      var a = _l[o];
      for (var f in a)
        if (a.hasOwnProperty(f) && f in Xf)
          return Qf[o] = a[f];
      return o;
    }
    var ku = kl("animationend"), t1 = kl("animationiteration"), fp = kl("animationstart"), n1 = kl("transitionend"), dp = /* @__PURE__ */ new Map(), Nl = /* @__PURE__ */ new Map(), Yo = [
      "cancel",
      "cancel",
      "click",
      "click",
      "close",
      "close",
      "contextmenu",
      "contextMenu",
      "copy",
      "copy",
      "cut",
      "cut",
      "auxclick",
      "auxClick",
      "dblclick",
      "doubleClick",
      // Careful!
      "dragend",
      "dragEnd",
      "dragstart",
      "dragStart",
      "drop",
      "drop",
      "focusin",
      "focus",
      // Careful!
      "focusout",
      "blur",
      // Careful!
      "input",
      "input",
      "invalid",
      "invalid",
      "keydown",
      "keyDown",
      "keypress",
      "keyPress",
      "keyup",
      "keyUp",
      "mousedown",
      "mouseDown",
      "mouseup",
      "mouseUp",
      "paste",
      "paste",
      "pause",
      "pause",
      "play",
      "play",
      "pointercancel",
      "pointerCancel",
      "pointerdown",
      "pointerDown",
      "pointerup",
      "pointerUp",
      "ratechange",
      "rateChange",
      "reset",
      "reset",
      "seeked",
      "seeked",
      "submit",
      "submit",
      "touchcancel",
      "touchCancel",
      "touchend",
      "touchEnd",
      "touchstart",
      "touchStart",
      "volumechange",
      "volumeChange"
    ], r1 = ["change", "selectionchange", "textInput", "compositionstart", "compositionend", "compositionupdate"], i1 = ["drag", "drag", "dragenter", "dragEnter", "dragexit", "dragExit", "dragleave", "dragLeave", "dragover", "dragOver", "mousemove", "mouseMove", "mouseout", "mouseOut", "mouseover", "mouseOver", "pointermove", "pointerMove", "pointerout", "pointerOut", "pointerover", "pointerOver", "scroll", "scroll", "toggle", "toggle", "touchmove", "touchMove", "wheel", "wheel"], wl = ["abort", "abort", ku, "animationEnd", t1, "animationIteration", fp, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", n1, "transitionEnd", "waiting", "waiting"];
    function o1(o, a) {
      for (var f = 0; f < o.length; f += 2) {
        var p = o[f], y = o[f + 1], T = y[0].toUpperCase() + y.slice(1), x = "on" + T;
        Nl.set(p, a), dp.set(p, x), Je(x, [p]);
      }
    }
    function Nu(o, a) {
      for (var f = 0; f < o.length; f++)
        Nl.set(o[f], a);
    }
    function lg(o) {
      var a = Nl.get(o);
      return a === void 0 ? _u : a;
    }
    function hp() {
      o1(Yo, Yf), o1(i1, Zc), o1(wl, _u), Nu(r1, Yf);
    }
    var zn = n.unstable_now;
    if (!(r.__interactionsRef != null && r.__interactionsRef.current != null))
      throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
    var a1 = 99, Qo = 98, Ia = 97, Xo = 96, pp = 95, ug = 90;
    zn();
    var Rs = 15, s1 = 14, l1 = 13, wu = 12, Ol = 11, Ds = 10, Ou = 9, gr = 8, Ru = 7, Dn = 6, yr = 5, vr = 4, u1 = 3, Ms = 2, di = 1, Pa = 0, mp = 31, Te = (
      /*                        */
      0
    ), Qn = (
      /*                          */
      0
    ), Wt = (
      /*                        */
      1
    ), Fa = (
      /*                 */
      2
    ), Rl = (
      /*      */
      4
    ), c1 = (
      /*                    */
      24
    ), gp = (
      /*           */
      32
    ), yp = (
      /*                  */
      192
    ), Du = (
      /*            */
      256
    ), Mu = (
      /*                   */
      3584
    ), vp = (
      /*                */
      4096
    ), Ba = (
      /*                       */
      4186112
    ), Lu = (
      /*                            */
      62914560
    ), Ls = (
      /*                  */
      33554432
    ), Jf = (
      /*          */
      67108864
    ), f1 = (
      /*                                 */
      134217727
    ), Ep = (
      /*               */
      134217728
    ), Zf = (
      /*                             */
      805306368
    ), _o = (
      /*                   */
      1073741824
    ), Mn = -1;
    function qv(o) {
    }
    var Tn = gr;
    function Iu(o) {
      if ((Wt & o) !== Te)
        return Tn = Rs, Wt;
      if ((Fa & o) !== Te)
        return Tn = s1, Fa;
      if ((Rl & o) !== Te)
        return Tn = l1, Rl;
      var a = c1 & o;
      if (a !== Te)
        return Tn = wu, a;
      if ((o & gp) !== Te)
        return Tn = Ol, gp;
      var f = yp & o;
      if (f !== Te)
        return Tn = Ds, f;
      if ((o & Du) !== Te)
        return Tn = Ou, Du;
      var p = Mu & o;
      if (p !== Te)
        return Tn = gr, p;
      if ((o & vp) !== Te)
        return Tn = Ru, vp;
      var y = Ba & o;
      if (y !== Te)
        return Tn = Dn, y;
      var T = Lu & o;
      if (T !== Te)
        return Tn = yr, T;
      if (o & Jf)
        return Tn = vr, Jf;
      if ((o & Ep) !== Te)
        return Tn = u1, Ep;
      var x = Zf & o;
      return x !== Te ? (Tn = Ms, x) : (_o & o) !== Te ? (Tn = di, _o) : (l("Should have found matching lanes. This is a bug in React."), Tn = gr, o);
    }
    function Tp(o) {
      switch (o) {
        case a1:
          return Rs;
        case Qo:
          return Ds;
        case Ia:
        case Xo:
          return gr;
        case pp:
          return Ms;
        default:
          return Pa;
      }
    }
    function ed(o) {
      switch (o) {
        case Rs:
        case s1:
          return a1;
        case l1:
        case wu:
        case Ol:
        case Ds:
          return Qo;
        case Ou:
        case gr:
        case Ru:
        case Dn:
        case vr:
        case yr:
          return Ia;
        case u1:
        case Ms:
        case di:
          return pp;
        case Pa:
          return ug;
        default:
          throw Error("Invalid update priority: " + o + ". This is a bug in React.");
      }
    }
    function d1(o, a) {
      var f = o.pendingLanes;
      if (f === Te)
        return Tn = Pa, Te;
      var p = Te, y = Pa, T = o.expiredLanes, x = o.suspendedLanes, k = o.pingedLanes;
      if (T !== Te)
        p = T, y = Tn = Rs;
      else {
        var R = f & f1;
        if (R !== Te) {
          var U = R & ~x;
          if (U !== Te)
            p = Iu(U), y = Tn;
          else {
            var q = R & k;
            q !== Te && (p = Iu(q), y = Tn);
          }
        } else {
          var ae = f & ~x;
          ae !== Te ? (p = Iu(ae), y = Tn) : k !== Te && (p = Iu(k), y = Tn);
        }
      }
      if (p === Te)
        return Te;
      if (p = f & hg(p), a !== Te && a !== p && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (a & x) === Te) {
        Iu(a);
        var K = Tn;
        if (y <= K)
          return a;
        Tn = y;
      }
      var ue = o.entangledLanes;
      if (ue !== Te)
        for (var Ae = o.entanglements, Ue = p & ue; Ue > 0; ) {
          var mt = Is(Ue), Ft = 1 << mt;
          p |= Ae[mt], Ue &= ~Ft;
        }
      return p;
    }
    function jv(o, a) {
      for (var f = o.eventTimes, p = Mn; a > 0; ) {
        var y = Is(a), T = 1 << y, x = f[y];
        x > p && (p = x), a &= ~T;
      }
      return p;
    }
    function Vv(o, a) {
      Iu(o);
      var f = Tn;
      return f >= Ds ? a + 250 : f >= Dn ? a + 5e3 : Mn;
    }
    function $v(o, a) {
      for (var f = o.pendingLanes, p = o.suspendedLanes, y = o.pingedLanes, T = o.expirationTimes, x = f; x > 0; ) {
        var k = Is(x), R = 1 << k, U = T[k];
        U === Mn ? ((R & p) === Te || (R & y) !== Te) && (T[k] = Vv(R, a)) : U <= a && (o.expiredLanes |= R), x &= ~R;
      }
    }
    function to(o) {
      var a = o.pendingLanes & ~_o;
      return a !== Te ? a : a & _o ? _o : Te;
    }
    function Ai() {
      return Tn;
    }
    function Cp(o) {
      return (o & f1) !== Te;
    }
    function Sp(o) {
      return (o & Lu) === o;
    }
    function cg(o) {
      return (o & Ba) === o;
    }
    function Pu(o, a) {
      switch (o) {
        case Pa:
          break;
        case Rs:
          return Wt;
        case s1:
          return Fa;
        case wu: {
          var f = Er(c1 & ~a);
          return f === Qn ? Pu(Ds, a) : f;
        }
        case Ds: {
          var p = Er(yp & ~a);
          return p === Qn ? Pu(gr, a) : p;
        }
        case gr: {
          var y = Er(Mu & ~a);
          return y === Qn && (y = Er(Ba & ~a), y === Qn && (y = Er(Mu))), y;
        }
        case Dn:
        case yr:
          break;
        case Ms:
          var T = Er(Zf & ~a);
          return T === Qn && (T = Er(Zf)), T;
      }
      throw Error("Invalid update priority: " + o + ". This is a bug in React.");
    }
    function fg(o, a) {
      var f = Er(Ba & ~a);
      return f === Qn && (f = Er(Ba & ~o), f === Qn && (f = Er(Ba))), f;
    }
    function bp(o) {
      var a = Er(Lu & ~o);
      return a === Qn && (a = Er(Lu)), a;
    }
    function dg(o) {
      return o & -o;
    }
    function Ap(o) {
      var a = 31 - yg(o);
      return a < 0 ? Te : 1 << a;
    }
    function hg(o) {
      return (Ap(o) << 1) - 1;
    }
    function Er(o) {
      return dg(o);
    }
    function Is(o) {
      return 31 - yg(o);
    }
    function pg(o) {
      return Is(o);
    }
    function Mr(o, a) {
      return (o & a) !== Te;
    }
    function Ps(o, a) {
      return (o & a) === a;
    }
    function fn(o, a) {
      return o | a;
    }
    function Fu(o, a) {
      return o & ~a;
    }
    function Gv(o) {
      return o;
    }
    function Ua(o, a) {
      return o !== Qn && o < a ? o : a;
    }
    function td(o) {
      for (var a = [], f = 0; f < mp; f++)
        a.push(o);
      return a;
    }
    function Bu(o, a, f) {
      o.pendingLanes |= a;
      var p = a - 1;
      o.suspendedLanes &= p, o.pingedLanes &= p;
      var y = o.eventTimes, T = pg(a);
      y[T] = f;
    }
    function mg(o, a) {
      o.suspendedLanes |= a, o.pingedLanes &= ~a;
      for (var f = o.expirationTimes, p = a; p > 0; ) {
        var y = Is(p), T = 1 << y;
        f[y] = Mn, p &= ~T;
      }
    }
    function xp(o, a, f) {
      o.pingedLanes |= o.suspendedLanes & a;
    }
    function h1(o) {
      o.expiredLanes |= c1 & o.pendingLanes;
    }
    function Wv(o) {
      return (o & c1) !== Te;
    }
    function gg(o, a) {
      o.mutableReadLanes |= a & o.pendingLanes;
    }
    function _p(o, a) {
      var f = o.pendingLanes & ~a;
      o.pendingLanes = a, o.suspendedLanes = 0, o.pingedLanes = 0, o.expiredLanes &= a, o.mutableReadLanes &= a, o.entangledLanes &= a;
      for (var p = o.entanglements, y = o.eventTimes, T = o.expirationTimes, x = f; x > 0; ) {
        var k = Is(x), R = 1 << k;
        p[k] = Te, y[k] = Mn, T[k] = Mn, x &= ~R;
      }
    }
    function kp(o, a) {
      o.entangledLanes |= a;
      for (var f = o.entanglements, p = a; p > 0; ) {
        var y = Is(p), T = 1 << y;
        f[y] |= a, p &= ~T;
      }
    }
    var yg = Math.clz32 ? Math.clz32 : Kv, vg = Math.log, Eg = Math.LN2;
    function Kv(o) {
      return o === 0 ? 32 : 31 - (vg(o) / Eg | 0) | 0;
    }
    var Tg = n.unstable_UserBlockingPriority, Yv = n.unstable_runWithPriority, Np = !0;
    function wp(o) {
      Np = !!o;
    }
    function Cg() {
      return Np;
    }
    function Sg(o, a, f) {
      var p = lg(a), y;
      switch (p) {
        case Yf:
          y = bg;
          break;
        case Zc:
          y = Ag;
          break;
        case _u:
        default:
          y = p1;
          break;
      }
      return y.bind(null, a, f, o);
    }
    function bg(o, a, f, p) {
      Q0(p.timeStamp), Tu(p1, o, a, f, p);
    }
    function Ag(o, a, f, p) {
      Yv(Tg, p1.bind(null, o, a, f, p));
    }
    function p1(o, a, f, p) {
      if (Np) {
        var y = !0;
        if (y = (a & yl) === 0, y && Wf() && Kf(o)) {
          xl(
            null,
            // Flags that we're not actually blocked on anything as far as we know.
            o,
            a,
            f,
            p
          );
          return;
        }
        var T = m1(o, a, f, p);
        if (T === null) {
          y && Hi(o, p);
          return;
        }
        if (y) {
          if (Kf(o)) {
            xl(T, o, a, f, p);
            return;
          }
          if (up(T, o, a, f, p))
            return;
          Hi(o, p);
        }
        hb(o, a, p, null, f);
      }
    }
    function m1(o, a, f, p) {
      var y = Wc(p), T = w1(y);
      if (T !== null) {
        var x = ks(T);
        if (x === null)
          T = null;
        else {
          var k = x.tag;
          if (k === ee) {
            var R = Vf(x);
            if (R !== null)
              return R;
            T = null;
          } else if (k === C) {
            var U = x.stateNode;
            if (U.hydrate)
              return ng(x);
            T = null;
          } else
            x !== T && (T = null);
        }
      }
      return hb(o, a, p, T, f), null;
    }
    function xg(o, a, f) {
      return o.addEventListener(a, f, !1), f;
    }
    function Op(o, a, f) {
      return o.addEventListener(a, f, !0), f;
    }
    function _g(o, a, f, p) {
      return o.addEventListener(a, f, {
        capture: !0,
        passive: p
      }), f;
    }
    function Qv(o, a, f, p) {
      return o.addEventListener(a, f, {
        passive: p
      }), f;
    }
    var g1 = null, Uu = null, Dl = null;
    function kt(o) {
      return g1 = o, Uu = Lr(), !0;
    }
    function hi() {
      g1 = null, Uu = null, Dl = null;
    }
    function Xn() {
      if (Dl)
        return Dl;
      var o, a = Uu, f = a.length, p, y = Lr(), T = y.length;
      for (o = 0; o < f && a[o] === y[o]; o++)
        ;
      var x = f - o;
      for (p = 1; p <= x && a[f - p] === y[T - p]; p++)
        ;
      var k = p > 1 ? 1 - p : void 0;
      return Dl = y.slice(o, k), Dl;
    }
    function Lr() {
      return "value" in g1 ? g1.value : g1.textContent;
    }
    function Jo(o) {
      var a, f = o.keyCode;
      return "charCode" in o ? (a = o.charCode, a === 0 && f === 13 && (a = 13)) : a = f, a === 10 && (a = 13), a >= 32 || a === 13 ? a : 0;
    }
    function Hu() {
      return !0;
    }
    function Tr() {
      return !1;
    }
    function Yr(o) {
      function a(f, p, y, T, x) {
        this._reactName = f, this._targetInst = y, this.type = p, this.nativeEvent = T, this.target = x, this.currentTarget = null;
        for (var k in o)
          if (o.hasOwnProperty(k)) {
            var R = o[k];
            R ? this[k] = R(T) : this[k] = T[k];
          }
        var U = T.defaultPrevented != null ? T.defaultPrevented : T.returnValue === !1;
        return U ? this.isDefaultPrevented = Hu : this.isDefaultPrevented = Tr, this.isPropagationStopped = Tr, this;
      }
      return e(a.prototype, {
        preventDefault: function() {
          this.defaultPrevented = !0;
          var f = this.nativeEvent;
          f && (f.preventDefault ? f.preventDefault() : typeof f.returnValue != "unknown" && (f.returnValue = !1), this.isDefaultPrevented = Hu);
        },
        stopPropagation: function() {
          var f = this.nativeEvent;
          f && (f.stopPropagation ? f.stopPropagation() : typeof f.cancelBubble != "unknown" && (f.cancelBubble = !0), this.isPropagationStopped = Hu);
        },
        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function() {
        },
        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: Hu
      }), a;
    }
    var ko = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function(o) {
        return o.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    }, Ml = Yr(ko), Zo = e({}, ko, {
      view: 0,
      detail: 0
    }), Rp = Yr(Zo), y1, v1, Ll;
    function zu(o) {
      o !== Ll && (Ll && o.type === "mousemove" ? (y1 = o.screenX - Ll.screenX, v1 = o.screenY - Ll.screenY) : (y1 = 0, v1 = 0), Ll = o);
    }
    var Ke = e({}, Zo, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: ta,
      button: 0,
      buttons: 0,
      relatedTarget: function(o) {
        return o.relatedTarget === void 0 ? o.fromElement === o.srcElement ? o.toElement : o.fromElement : o.relatedTarget;
      },
      movementX: function(o) {
        return "movementX" in o ? o.movementX : (zu(o), y1);
      },
      movementY: function(o) {
        return "movementY" in o ? o.movementY : v1;
      }
    }), E1 = Yr(Ke), Dp = e({}, Ke, {
      dataTransfer: 0
    }), ea = Yr(Dp), Fs = e({}, Zo, {
      relatedTarget: 0
    }), Il = Yr(Fs), T1 = e({}, ko, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), Mp = Yr(T1), Lp = e({}, ko, {
      clipboardData: function(o) {
        return "clipboardData" in o ? o.clipboardData : window.clipboardData;
      }
    }), Ha = Yr(Lp), C1 = e({}, ko, {
      data: 0
    }), nd = Yr(C1), rd = nd, za = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, id = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    };
    function S1(o) {
      if (o.key) {
        var a = za[o.key] || o.key;
        if (a !== "Unidentified")
          return a;
      }
      if (o.type === "keypress") {
        var f = Jo(o);
        return f === 13 ? "Enter" : String.fromCharCode(f);
      }
      return o.type === "keydown" || o.type === "keyup" ? id[o.keyCode] || "Unidentified" : "";
    }
    var od = {
      Alt: "altKey",
      Control: "ctrlKey",
      Meta: "metaKey",
      Shift: "shiftKey"
    };
    function zi(o) {
      var a = this, f = a.nativeEvent;
      if (f.getModifierState)
        return f.getModifierState(o);
      var p = od[o];
      return p ? !!f[p] : !1;
    }
    function ta(o) {
      return zi;
    }
    var Bs = e({}, Zo, {
      key: S1,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: ta,
      // Legacy Interface
      charCode: function(o) {
        return o.type === "keypress" ? Jo(o) : 0;
      },
      keyCode: function(o) {
        return o.type === "keydown" || o.type === "keyup" ? o.keyCode : 0;
      },
      which: function(o) {
        return o.type === "keypress" ? Jo(o) : o.type === "keydown" || o.type === "keyup" ? o.keyCode : 0;
      }
    }), ad = Yr(Bs), no = e({}, Ke, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    }), Ip = Yr(no), qu = e({}, Zo, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: ta
    }), Pp = Yr(qu), Xv = e({}, ko, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    }), kg = Yr(Xv), Ng = e({}, Ke, {
      deltaX: function(o) {
        return "deltaX" in o ? o.deltaX : (
          // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
          "wheelDeltaX" in o ? -o.wheelDeltaX : 0
        );
      },
      deltaY: function(o) {
        return "deltaY" in o ? o.deltaY : (
          // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
          "wheelDeltaY" in o ? -o.wheelDeltaY : (
            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            "wheelDelta" in o ? -o.wheelDelta : 0
          )
        );
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    }), sd = Yr(Ng), Fp = [9, 13, 27, 32], Pl = 229, ld = rt && "CompositionEvent" in window, ju = null;
    rt && "documentMode" in document && (ju = document.documentMode);
    var b1 = rt && "TextEvent" in window && !ju, wg = rt && (!ld || ju && ju > 8 && ju <= 11), Og = 32, Bp = String.fromCharCode(Og);
    function Rg() {
      Je("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), Je("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Je("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), Je("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
    }
    var Us = !1;
    function Jv(o) {
      return (o.ctrlKey || o.altKey || o.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(o.ctrlKey && o.altKey);
    }
    function Zv(o) {
      switch (o) {
        case "compositionstart":
          return "onCompositionStart";
        case "compositionend":
          return "onCompositionEnd";
        case "compositionupdate":
          return "onCompositionUpdate";
      }
    }
    function Hs(o, a) {
      return o === "keydown" && a.keyCode === Pl;
    }
    function Dg(o, a) {
      switch (o) {
        case "keyup":
          return Fp.indexOf(a.keyCode) !== -1;
        case "keydown":
          return a.keyCode !== Pl;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function Up(o) {
      var a = o.detail;
      return typeof a == "object" && "data" in a ? a.data : null;
    }
    function Mg(o) {
      return o.locale === "ko";
    }
    var Fl = !1;
    function zs(o, a, f, p, y) {
      var T, x;
      if (ld ? T = Zv(a) : Fl ? Dg(a, p) && (T = "onCompositionEnd") : Hs(a, p) && (T = "onCompositionStart"), !T)
        return null;
      wg && !Mg(p) && (!Fl && T === "onCompositionStart" ? Fl = kt(y) : T === "onCompositionEnd" && Fl && (x = Xn()));
      var k = Bg(f, T);
      if (k.length > 0) {
        var R = new nd(T, a, null, p, y);
        if (o.push({
          event: R,
          listeners: k
        }), x)
          R.data = x;
        else {
          var U = Up(p);
          U !== null && (R.data = U);
        }
      }
    }
    function e5(o, a) {
      switch (o) {
        case "compositionend":
          return Up(a);
        case "keypress":
          var f = a.which;
          return f !== Og ? null : (Us = !0, Bp);
        case "textInput":
          var p = a.data;
          return p === Bp && Us ? null : p;
        default:
          return null;
      }
    }
    function t5(o, a) {
      if (Fl) {
        if (o === "compositionend" || !ld && Dg(o, a)) {
          var f = Xn();
          return hi(), Fl = !1, f;
        }
        return null;
      }
      switch (o) {
        case "paste":
          return null;
        case "keypress":
          if (!Jv(a)) {
            if (a.char && a.char.length > 1)
              return a.char;
            if (a.which)
              return String.fromCharCode(a.which);
          }
          return null;
        case "compositionend":
          return wg && !Mg(a) ? null : a.data;
        default:
          return null;
      }
    }
    function Lg(o, a, f, p, y) {
      var T;
      if (b1 ? T = e5(a, p) : T = t5(a, p), !T)
        return null;
      var x = Bg(f, "onBeforeInput");
      if (x.length > 0) {
        var k = new rd("onBeforeInput", "beforeinput", null, p, y);
        o.push({
          event: k,
          listeners: x
        }), k.data = T;
      }
    }
    function n5(o, a, f, p, y, T, x) {
      zs(o, a, f, p, y), Lg(o, a, f, p, y);
    }
    var ro = {
      color: !0,
      date: !0,
      datetime: !0,
      "datetime-local": !0,
      email: !0,
      month: !0,
      number: !0,
      password: !0,
      range: !0,
      search: !0,
      tel: !0,
      text: !0,
      time: !0,
      url: !0,
      week: !0
    };
    function ud(o) {
      var a = o && o.nodeName && o.nodeName.toLowerCase();
      return a === "input" ? !!ro[o.type] : a === "textarea";
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */
    function r5(o) {
      if (!rt)
        return !1;
      var a = "on" + o, f = a in document;
      if (!f) {
        var p = document.createElement("div");
        p.setAttribute(a, "return;"), f = typeof p[a] == "function";
      }
      return f;
    }
    function qs() {
      Je("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
    }
    function A1(o, a, f, p) {
      Eu(p);
      var y = Bg(a, "onChange");
      if (y.length > 0) {
        var T = new Ml("onChange", "change", null, f, p);
        o.push({
          event: T,
          listeners: y
        });
      }
    }
    var na = null, Bl = null;
    function Hp(o) {
      var a = o.nodeName && o.nodeName.toLowerCase();
      return a === "select" || a === "input" && o.type === "file";
    }
    function zp(o) {
      var a = [];
      A1(a, Bl, o, Wc(o)), Kc(i5, a);
    }
    function i5(o) {
      sb(o, 0);
    }
    function cd(o) {
      var a = Ed(o);
      if (Q(a))
        return o;
    }
    function fd(o, a) {
      if (o === "change")
        return a;
    }
    var dd = !1;
    rt && (dd = r5("input") && (!document.documentMode || document.documentMode > 9));
    function Ig(o, a) {
      na = o, Bl = a, na.attachEvent("onpropertychange", Pg);
    }
    function hd() {
      na && (na.detachEvent("onpropertychange", Pg), na = null, Bl = null);
    }
    function Pg(o) {
      o.propertyName === "value" && cd(Bl) && zp(o);
    }
    function qp(o, a, f) {
      o === "focusin" ? (hd(), Ig(a, f)) : o === "focusout" && hd();
    }
    function x1(o, a) {
      if (o === "selectionchange" || o === "keyup" || o === "keydown")
        return cd(Bl);
    }
    function o5(o) {
      var a = o.nodeName;
      return a && a.toLowerCase() === "input" && (o.type === "checkbox" || o.type === "radio");
    }
    function pd(o, a) {
      if (o === "click")
        return cd(a);
    }
    function Fg(o, a) {
      if (o === "input" || o === "change")
        return cd(a);
    }
    function a5(o) {
      var a = o._wrapperState;
      !a || !a.controlled || o.type !== "number" || Bi(o, "number", o.value);
    }
    function _1(o, a, f, p, y, T, x) {
      var k = f ? Ed(f) : window, R, U;
      if (Hp(k) ? R = fd : ud(k) ? dd ? R = Fg : (R = x1, U = qp) : o5(k) && (R = pd), R) {
        var q = R(a, f);
        if (q) {
          A1(o, q, p, y);
          return;
        }
      }
      U && U(a, k, f), a === "focusout" && a5(k);
    }
    function s5() {
      Ze("onMouseEnter", ["mouseout", "mouseover"]), Ze("onMouseLeave", ["mouseout", "mouseover"]), Ze("onPointerEnter", ["pointerout", "pointerover"]), Ze("onPointerLeave", ["pointerout", "pointerover"]);
    }
    function md(o, a, f, p, y, T, x) {
      var k = a === "mouseover" || a === "pointerover", R = a === "mouseout" || a === "pointerout";
      if (k && !(T & K0)) {
        var U = p.relatedTarget || p.fromElement;
        if (U && (w1(U) || Kg(U)))
          return;
      }
      if (!(!R && !k)) {
        var q;
        if (y.window === y)
          q = y;
        else {
          var ae = y.ownerDocument;
          ae ? q = ae.defaultView || ae.parentWindow : q = window;
        }
        var K, ue;
        if (R) {
          var Ae = p.relatedTarget || p.toElement;
          if (K = f, ue = Ae ? w1(Ae) : null, ue !== null) {
            var Ue = ks(ue);
            (ue !== Ue || ue.tag !== b && ue.tag !== N) && (ue = null);
          }
        } else
          K = null, ue = f;
        if (K !== ue) {
          var mt = E1, Ft = "onMouseLeave", At = "onMouseEnter", ln = "mouse";
          (a === "pointerout" || a === "pointerover") && (mt = Ip, Ft = "onPointerLeave", At = "onPointerEnter", ln = "pointer");
          var bn = K == null ? q : Ed(K), se = ue == null ? q : Ed(ue), ge = new mt(Ft, ln + "leave", K, p, y);
          ge.target = bn, ge.relatedTarget = se;
          var re = null, Ne = w1(y);
          if (Ne === f) {
            var Ve = new mt(At, ln + "enter", ue, p, y);
            Ve.target = se, Ve.relatedTarget = bn, re = Ve;
          }
          jR(o, ge, re, K, ue);
        }
      }
    }
    function u(o, a) {
      return o === a && (o !== 0 || 1 / o === 1 / a) || o !== o && a !== a;
    }
    var d = typeof Object.is == "function" ? Object.is : u, m = Object.prototype.hasOwnProperty;
    function E(o, a) {
      if (d(o, a))
        return !0;
      if (typeof o != "object" || o === null || typeof a != "object" || a === null)
        return !1;
      var f = Object.keys(o), p = Object.keys(a);
      if (f.length !== p.length)
        return !1;
      for (var y = 0; y < f.length; y++)
        if (!m.call(a, f[y]) || !d(o[f[y]], a[f[y]]))
          return !1;
      return !0;
    }
    function A(o) {
      for (; o && o.firstChild; )
        o = o.firstChild;
      return o;
    }
    function w(o) {
      for (; o; ) {
        if (o.nextSibling)
          return o.nextSibling;
        o = o.parentNode;
      }
    }
    function M(o, a) {
      for (var f = A(o), p = 0, y = 0; f; ) {
        if (f.nodeType === Na) {
          if (y = p + f.textContent.length, p <= a && y >= a)
            return {
              node: f,
              offset: a - p
            };
          p = y;
        }
        f = A(w(f));
      }
    }
    function B(o) {
      var a = o.ownerDocument, f = a && a.defaultView || window, p = f.getSelection && f.getSelection();
      if (!p || p.rangeCount === 0)
        return null;
      var y = p.anchorNode, T = p.anchorOffset, x = p.focusNode, k = p.focusOffset;
      try {
        y.nodeType, x.nodeType;
      } catch {
        return null;
      }
      return W(o, y, T, x, k);
    }
    function W(o, a, f, p, y) {
      var T = 0, x = -1, k = -1, R = 0, U = 0, q = o, ae = null;
      e:
        for (; ; ) {
          for (var K = null; q === a && (f === 0 || q.nodeType === Na) && (x = T + f), q === p && (y === 0 || q.nodeType === Na) && (k = T + y), q.nodeType === Na && (T += q.nodeValue.length), (K = q.firstChild) !== null; )
            ae = q, q = K;
          for (; ; ) {
            if (q === o)
              break e;
            if (ae === a && ++R === f && (x = T), ae === p && ++U === y && (k = T), (K = q.nextSibling) !== null)
              break;
            q = ae, ae = q.parentNode;
          }
          q = K;
        }
      return x === -1 || k === -1 ? null : {
        start: x,
        end: k
      };
    }
    function de(o, a) {
      var f = o.ownerDocument || document, p = f && f.defaultView || window;
      if (p.getSelection) {
        var y = p.getSelection(), T = o.textContent.length, x = Math.min(a.start, T), k = a.end === void 0 ? x : Math.min(a.end, T);
        if (!y.extend && x > k) {
          var R = k;
          k = x, x = R;
        }
        var U = M(o, x), q = M(o, k);
        if (U && q) {
          if (y.rangeCount === 1 && y.anchorNode === U.node && y.anchorOffset === U.offset && y.focusNode === q.node && y.focusOffset === q.offset)
            return;
          var ae = f.createRange();
          ae.setStart(U.node, U.offset), y.removeAllRanges(), x > k ? (y.addRange(ae), y.extend(q.node, q.offset)) : (ae.setEnd(q.node, q.offset), y.addRange(ae));
        }
      }
    }
    function $e(o) {
      return o && o.nodeType === Na;
    }
    function Nt(o, a) {
      return !o || !a ? !1 : o === a ? !0 : $e(o) ? !1 : $e(a) ? Nt(o, a.parentNode) : "contains" in o ? o.contains(a) : o.compareDocumentPosition ? !!(o.compareDocumentPosition(a) & 16) : !1;
    }
    function ke(o) {
      return o && o.ownerDocument && Nt(o.ownerDocument.documentElement, o);
    }
    function ot(o) {
      try {
        return typeof o.contentWindow.location.href == "string";
      } catch {
        return !1;
      }
    }
    function xt() {
      for (var o = window, a = ce(); a instanceof o.HTMLIFrameElement; ) {
        if (ot(a))
          o = a.contentWindow;
        else
          return a;
        a = ce(o.document);
      }
      return a;
    }
    function yt(o) {
      var a = o && o.nodeName && o.nodeName.toLowerCase();
      return a && (a === "input" && (o.type === "text" || o.type === "search" || o.type === "tel" || o.type === "url" || o.type === "password") || a === "textarea" || o.contentEditable === "true");
    }
    function ie() {
      var o = xt();
      return {
        focusedElem: o,
        selectionRange: yt(o) ? ne(o) : null
      };
    }
    function X(o) {
      var a = xt(), f = o.focusedElem, p = o.selectionRange;
      if (a !== f && ke(f)) {
        p !== null && yt(f) && ve(f, p);
        for (var y = [], T = f; T = T.parentNode; )
          T.nodeType === Xi && y.push({
            element: T,
            left: T.scrollLeft,
            top: T.scrollTop
          });
        typeof f.focus == "function" && f.focus();
        for (var x = 0; x < y.length; x++) {
          var k = y[x];
          k.element.scrollLeft = k.left, k.element.scrollTop = k.top;
        }
      }
    }
    function ne(o) {
      var a;
      return "selectionStart" in o ? a = {
        start: o.selectionStart,
        end: o.selectionEnd
      } : a = B(o), a || {
        start: 0,
        end: 0
      };
    }
    function ve(o, a) {
      var f = a.start, p = a.end;
      p === void 0 && (p = f), "selectionStart" in o ? (o.selectionStart = f, o.selectionEnd = Math.min(p, o.value.length)) : de(o, a);
    }
    var Se = rt && "documentMode" in document && document.documentMode <= 11;
    function Dt() {
      Je("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
    }
    var Ye = null, wt = null, Pt = null, Mt = !1;
    function js(o) {
      if ("selectionStart" in o && yt(o))
        return {
          start: o.selectionStart,
          end: o.selectionEnd
        };
      var a = o.ownerDocument && o.ownerDocument.defaultView || window, f = a.getSelection();
      return {
        anchorNode: f.anchorNode,
        anchorOffset: f.anchorOffset,
        focusNode: f.focusNode,
        focusOffset: f.focusOffset
      };
    }
    function l5(o) {
      return o.window === o ? o.document : o.nodeType === Ts ? o : o.ownerDocument;
    }
    function ib(o, a, f) {
      var p = l5(f);
      if (!(Mt || Ye == null || Ye !== ce(p))) {
        var y = js(Ye);
        if (!Pt || !E(Pt, y)) {
          Pt = y;
          var T = Bg(wt, "onSelect");
          if (T.length > 0) {
            var x = new Ml("onSelect", "select", null, a, f);
            o.push({
              event: x,
              listeners: T
            }), x.target = Ye;
          }
        }
      }
    }
    function PR(o, a, f, p, y, T, x) {
      var k = f ? Ed(f) : window;
      switch (a) {
        case "focusin":
          (ud(k) || k.contentEditable === "true") && (Ye = k, wt = f, Pt = null);
          break;
        case "focusout":
          Ye = null, wt = null, Pt = null;
          break;
        case "mousedown":
          Mt = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Mt = !1, ib(o, p, y);
          break;
        case "selectionchange":
          if (Se)
            break;
        case "keydown":
        case "keyup":
          ib(o, p, y);
      }
    }
    function FR(o, a, f, p, y, T, x) {
      var k = dp.get(a);
      if (k !== void 0) {
        var R = Ml, U = a;
        switch (a) {
          case "keypress":
            if (Jo(p) === 0)
              return;
          case "keydown":
          case "keyup":
            R = ad;
            break;
          case "focusin":
            U = "focus", R = Il;
            break;
          case "focusout":
            U = "blur", R = Il;
            break;
          case "beforeblur":
          case "afterblur":
            R = Il;
            break;
          case "click":
            if (p.button === 2)
              return;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            R = E1;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            R = ea;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            R = Pp;
            break;
          case ku:
          case t1:
          case fp:
            R = Mp;
            break;
          case n1:
            R = kg;
            break;
          case "scroll":
            R = Rp;
            break;
          case "wheel":
            R = sd;
            break;
          case "copy":
          case "cut":
          case "paste":
            R = Ha;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            R = Ip;
            break;
        }
        var q = (T & yl) !== 0;
        {
          var ae = !q && // TODO: ideally, we'd eventually add all events from
          // nonDelegatedEvents list in DOMPluginEventSystem.
          // Then we can remove this special list.
          // This is a breaking change that can wait until React 18.
          a === "scroll", K = zR(f, k, p.type, q, ae);
          if (K.length > 0) {
            var ue = new R(k, U, null, p, y);
            o.push({
              event: ue,
              listeners: K
            });
          }
        }
      }
    }
    hp(), s5(), qs(), Dt(), Rg();
    function BR(o, a, f, p, y, T, x) {
      FR(o, a, f, p, y, T);
      var k = (T & vu) === 0;
      k && (md(o, a, f, p, y, T), _1(o, a, f, p, y), PR(o, a, f, p, y), n5(o, a, f, p, y));
    }
    var jp = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], ob = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(jp));
    function ab(o, a, f) {
      var p = o.type || "unknown-event";
      o.currentTarget = f, Z0(p, a, void 0, o), o.currentTarget = null;
    }
    function UR(o, a, f) {
      var p;
      if (f)
        for (var y = a.length - 1; y >= 0; y--) {
          var T = a[y], x = T.instance, k = T.currentTarget, R = T.listener;
          if (x !== p && o.isPropagationStopped())
            return;
          ab(o, R, k), p = x;
        }
      else
        for (var U = 0; U < a.length; U++) {
          var q = a[U], ae = q.instance, K = q.currentTarget, ue = q.listener;
          if (ae !== p && o.isPropagationStopped())
            return;
          ab(o, ue, K), p = ae;
        }
    }
    function sb(o, a) {
      for (var f = (a & yl) !== 0, p = 0; p < o.length; p++) {
        var y = o[p], T = y.event, x = y.listeners;
        UR(T, x, f);
      }
      Cl();
    }
    function HR(o, a, f, p, y) {
      var T = Wc(f), x = [];
      BR(x, o, p, f, T, a), sb(x, a);
    }
    function Bn(o, a) {
      var f = !1, p = Hb(a), y = mb(o, f);
      p.has(y) || (fb(a, o, Gc, f), p.add(y));
    }
    var lb = "_reactListening" + Math.random().toString(36).slice(2);
    function ub(o) {
      {
        if (o[lb])
          return;
        o[lb] = !0, I.forEach(function(a) {
          ob.has(a) || cb(a, !1, o, null), cb(a, !0, o, null);
        });
      }
    }
    function cb(o, a, f, p) {
      var y = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, T = f;
      if (o === "selectionchange" && f.nodeType !== Ts && (T = f.ownerDocument), p !== null && !a && ob.has(o)) {
        if (o !== "scroll")
          return;
        y |= Gc, T = p;
      }
      var x = Hb(T), k = mb(o, a);
      x.has(k) || (a && (y |= yl), fb(T, o, y, a), x.add(k));
    }
    function fb(o, a, f, p, y) {
      var T = Sg(o, a, f), x = void 0;
      Yc && (a === "touchstart" || a === "touchmove" || a === "wheel") && (x = !0), o = o, p ? x !== void 0 ? _g(o, a, T, x) : Op(o, a, T) : x !== void 0 ? Qv(o, a, T, x) : xg(o, a, T);
    }
    function db(o, a) {
      return o === a || o.nodeType === si && o.parentNode === a;
    }
    function hb(o, a, f, p, y) {
      var T = p;
      if (!(a & Wh) && !(a & Gc)) {
        var x = y;
        if (p !== null) {
          var k = p;
          e:
            for (; ; ) {
              if (k === null)
                return;
              var R = k.tag;
              if (R === C || R === S) {
                var U = k.stateNode.containerInfo;
                if (db(U, x))
                  break;
                if (R === S)
                  for (var q = k.return; q !== null; ) {
                    var ae = q.tag;
                    if (ae === C || ae === S) {
                      var K = q.stateNode.containerInfo;
                      if (db(K, x))
                        return;
                    }
                    q = q.return;
                  }
                for (; U !== null; ) {
                  var ue = w1(U);
                  if (ue === null)
                    return;
                  var Ae = ue.tag;
                  if (Ae === b || Ae === N) {
                    k = T = ue;
                    continue e;
                  }
                  U = U.parentNode;
                }
              }
              k = k.return;
            }
        }
      }
      Uf(function() {
        return HR(o, a, f, T);
      });
    }
    function Vp(o, a, f) {
      return {
        instance: o,
        listener: a,
        currentTarget: f
      };
    }
    function zR(o, a, f, p, y) {
      for (var T = a !== null ? a + "Capture" : null, x = p ? T : a, k = [], R = o, U = null; R !== null; ) {
        var q = R, ae = q.stateNode, K = q.tag;
        if (K === b && ae !== null && (U = ae, x !== null)) {
          var ue = Cu(R, x);
          ue != null && k.push(Vp(R, ue, U));
        }
        if (y)
          break;
        R = R.return;
      }
      return k;
    }
    function Bg(o, a) {
      for (var f = a + "Capture", p = [], y = o; y !== null; ) {
        var T = y, x = T.stateNode, k = T.tag;
        if (k === b && x !== null) {
          var R = x, U = Cu(y, f);
          U != null && p.unshift(Vp(y, U, R));
          var q = Cu(y, a);
          q != null && p.push(Vp(y, q, R));
        }
        y = y.return;
      }
      return p;
    }
    function gd(o) {
      if (o === null)
        return null;
      do
        o = o.return;
      while (o && o.tag !== b);
      return o || null;
    }
    function qR(o, a) {
      for (var f = o, p = a, y = 0, T = f; T; T = gd(T))
        y++;
      for (var x = 0, k = p; k; k = gd(k))
        x++;
      for (; y - x > 0; )
        f = gd(f), y--;
      for (; x - y > 0; )
        p = gd(p), x--;
      for (var R = y; R--; ) {
        if (f === p || p !== null && f === p.alternate)
          return f;
        f = gd(f), p = gd(p);
      }
      return null;
    }
    function pb(o, a, f, p, y) {
      for (var T = a._reactName, x = [], k = f; k !== null && k !== p; ) {
        var R = k, U = R.alternate, q = R.stateNode, ae = R.tag;
        if (U !== null && U === p)
          break;
        if (ae === b && q !== null) {
          var K = q;
          if (y) {
            var ue = Cu(k, T);
            ue != null && x.unshift(Vp(k, ue, K));
          } else if (!y) {
            var Ae = Cu(k, T);
            Ae != null && x.push(Vp(k, Ae, K));
          }
        }
        k = k.return;
      }
      x.length !== 0 && o.push({
        event: a,
        listeners: x
      });
    }
    function jR(o, a, f, p, y) {
      var T = p && y ? qR(p, y) : null;
      p !== null && pb(o, a, p, T, !1), y !== null && f !== null && pb(o, f, y, T, !0);
    }
    function mb(o, a) {
      return o + "__" + (a ? "capture" : "bubble");
    }
    var io = !1, $p = "dangerouslySetInnerHTML", Ug = "suppressContentEditableWarning", Gp = "suppressHydrationWarning", gb = "autoFocus", k1 = "children", N1 = "style", Hg = "__html", yd = Rf.html, u5, Wp, zg, qg, Kp, yb, jg, vb, Yp, Eb;
    {
      u5 = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: !0,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: !0
      }, zg = function(o, a) {
        j0(o, a), Bv(o, a), W0(o, a, {
          registrationNameDependencies: F,
          possibleRegistrationNames: we
        });
      }, vb = rt && !document.documentMode;
      var VR = /\r\n?/g, $R = /\u0000|\uFFFD/g;
      Yp = function(o) {
        var a = typeof o == "string" ? o : "" + o;
        return a.replace(VR, `
`).replace($R, "");
      }, qg = function(o, a) {
        if (!io) {
          var f = Yp(a), p = Yp(o);
          p !== f && (io = !0, l('Text content did not match. Server: "%s" Client: "%s"', p, f));
        }
      }, Kp = function(o, a, f) {
        if (!io) {
          var p = Yp(f), y = Yp(a);
          y !== p && (io = !0, l("Prop `%s` did not match. Server: %s Client: %s", o, JSON.stringify(y), JSON.stringify(p)));
        }
      }, yb = function(o) {
        if (!io) {
          io = !0;
          var a = [];
          o.forEach(function(f) {
            a.push(f);
          }), l("Extra attributes from the server: %s", a);
        }
      }, jg = function(o, a) {
        a === !1 ? l("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", o, o, o) : l("Expected `%s` listener to be a function, instead got a value of `%s` type.", o, typeof a);
      }, Eb = function(o, a) {
        var f = o.namespaceURI === yd ? o.ownerDocument.createElement(o.tagName) : o.ownerDocument.createElementNS(o.namespaceURI, o.tagName);
        return f.innerHTML = a, f.innerHTML;
      };
    }
    function Tb(o) {
      return o.nodeType === Ts ? o : o.ownerDocument;
    }
    function GR() {
    }
    function Vg(o) {
      o.onclick = GR;
    }
    function WR(o, a, f, p, y) {
      for (var T in p)
        if (p.hasOwnProperty(T)) {
          var x = p[T];
          if (T === N1)
            x && Object.freeze(x), jh(a, x);
          else if (T === $p) {
            var k = x ? x[Hg] : void 0;
            k != null && k0(a, k);
          } else if (T === k1)
            if (typeof x == "string") {
              var R = o !== "textarea" || x !== "";
              R && Mf(a, x);
            } else
              typeof x == "number" && Mf(a, "" + x);
          else
            T === Ug || T === Gp || T === gb || (F.hasOwnProperty(T) ? x != null && (typeof x != "function" && jg(T, x), T === "onScroll" && Bn("scroll", a)) : x != null && Tt(a, T, x, y));
        }
    }
    function KR(o, a, f, p) {
      for (var y = 0; y < a.length; y += 2) {
        var T = a[y], x = a[y + 1];
        T === N1 ? jh(o, x) : T === $p ? k0(o, x) : T === k1 ? Mf(o, x) : Tt(o, T, x, p);
      }
    }
    function YR(o, a, f, p) {
      var y, T = Tb(f), x, k = p;
      if (k === yd && (k = zc(o)), k === yd) {
        if (y = bo(o, a), !y && o !== o.toLowerCase() && l("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", o), o === "script") {
          var R = T.createElement("div");
          R.innerHTML = "<script><\/script>";
          var U = R.firstChild;
          x = R.removeChild(U);
        } else if (typeof a.is == "string")
          x = T.createElement(o, {
            is: a.is
          });
        else if (x = T.createElement(o), o === "select") {
          var q = x;
          a.multiple ? q.multiple = !0 : a.size && (q.size = a.size);
        }
      } else
        x = T.createElementNS(k, o);
      return k === yd && !y && Object.prototype.toString.call(x) === "[object HTMLUnknownElement]" && !Object.prototype.hasOwnProperty.call(u5, o) && (u5[o] = !0, l("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", o)), x;
    }
    function QR(o, a) {
      return Tb(a).createTextNode(o);
    }
    function XR(o, a, f, p) {
      var y = bo(a, f);
      zg(a, f);
      var T;
      switch (a) {
        case "dialog":
          Bn("cancel", o), Bn("close", o), T = f;
          break;
        case "iframe":
        case "object":
        case "embed":
          Bn("load", o), T = f;
          break;
        case "video":
        case "audio":
          for (var x = 0; x < jp.length; x++)
            Bn(jp[x], o);
          T = f;
          break;
        case "source":
          Bn("error", o), T = f;
          break;
        case "img":
        case "image":
        case "link":
          Bn("error", o), Bn("load", o), T = f;
          break;
        case "details":
          Bn("toggle", o), T = f;
          break;
        case "input":
          sn(o, f), T = ut(o, f), Bn("invalid", o);
          break;
        case "option":
          Pc(o, f), T = fu(o, f);
          break;
        case "select":
          wf(o, f), T = Uc(o, f), Bn("invalid", o);
          break;
        case "textarea":
          Hc(o, f), T = hu(o, f), Bn("invalid", o);
          break;
        default:
          T = f;
      }
      switch (Lf(a, T), WR(a, o, p, T, y), a) {
        case "input":
          D(o), Yn(o, f, !1);
          break;
        case "textarea":
          D(o), bi(o);
          break;
        case "option":
          Lh(o, f);
          break;
        case "select":
          Es(o, f);
          break;
        default:
          typeof T.onClick == "function" && Vg(o);
          break;
      }
    }
    function JR(o, a, f, p, y) {
      zg(a, p);
      var T = null, x, k;
      switch (a) {
        case "input":
          x = ut(o, f), k = ut(o, p), T = [];
          break;
        case "option":
          x = fu(o, f), k = fu(o, p), T = [];
          break;
        case "select":
          x = Uc(o, f), k = Uc(o, p), T = [];
          break;
        case "textarea":
          x = hu(o, f), k = hu(o, p), T = [];
          break;
        default:
          x = f, k = p, typeof x.onClick != "function" && typeof k.onClick == "function" && Vg(o);
          break;
      }
      Lf(a, k);
      var R, U, q = null;
      for (R in x)
        if (!(k.hasOwnProperty(R) || !x.hasOwnProperty(R) || x[R] == null))
          if (R === N1) {
            var ae = x[R];
            for (U in ae)
              ae.hasOwnProperty(U) && (q || (q = {}), q[U] = "");
          } else
            R === $p || R === k1 || R === Ug || R === Gp || R === gb || (F.hasOwnProperty(R) ? T || (T = []) : (T = T || []).push(R, null));
      for (R in k) {
        var K = k[R], ue = x != null ? x[R] : void 0;
        if (!(!k.hasOwnProperty(R) || K === ue || K == null && ue == null))
          if (R === N1)
            if (K && Object.freeze(K), ue) {
              for (U in ue)
                ue.hasOwnProperty(U) && (!K || !K.hasOwnProperty(U)) && (q || (q = {}), q[U] = "");
              for (U in K)
                K.hasOwnProperty(U) && ue[U] !== K[U] && (q || (q = {}), q[U] = K[U]);
            } else
              q || (T || (T = []), T.push(R, q)), q = K;
          else if (R === $p) {
            var Ae = K ? K[Hg] : void 0, Ue = ue ? ue[Hg] : void 0;
            Ae != null && Ue !== Ae && (T = T || []).push(R, Ae);
          } else
            R === k1 ? (typeof K == "string" || typeof K == "number") && (T = T || []).push(R, "" + K) : R === Ug || R === Gp || (F.hasOwnProperty(R) ? (K != null && (typeof K != "function" && jg(R, K), R === "onScroll" && Bn("scroll", o)), !T && ue !== K && (T = [])) : typeof K == "object" && K !== null && K.$$typeof === _e ? K.toString() : (T = T || []).push(R, K));
      }
      return q && (Lv(q, k[N1]), (T = T || []).push(N1, q)), T;
    }
    function ZR(o, a, f, p, y) {
      f === "input" && y.type === "radio" && y.name != null && kn(o, y);
      var T = bo(f, p), x = bo(f, y);
      switch (KR(o, a, T, x), f) {
        case "input":
          Fn(o, y);
          break;
        case "textarea":
          Fh(o, y);
          break;
        case "select":
          Ih(o, y);
          break;
      }
    }
    function eD(o) {
      {
        var a = o.toLowerCase();
        return Cs.hasOwnProperty(a) && Cs[a] || null;
      }
    }
    function tD(o, a, f, p, y) {
      var T, x;
      switch (Wp = f[Gp] === !0, T = bo(a, f), zg(a, f), a) {
        case "dialog":
          Bn("cancel", o), Bn("close", o);
          break;
        case "iframe":
        case "object":
        case "embed":
          Bn("load", o);
          break;
        case "video":
        case "audio":
          for (var k = 0; k < jp.length; k++)
            Bn(jp[k], o);
          break;
        case "source":
          Bn("error", o);
          break;
        case "img":
        case "image":
        case "link":
          Bn("error", o), Bn("load", o);
          break;
        case "details":
          Bn("toggle", o);
          break;
        case "input":
          sn(o, f), Bn("invalid", o);
          break;
        case "option":
          Pc(o, f);
          break;
        case "select":
          wf(o, f), Bn("invalid", o);
          break;
        case "textarea":
          Hc(o, f), Bn("invalid", o);
          break;
      }
      Lf(a, f);
      {
        x = /* @__PURE__ */ new Set();
        for (var R = o.attributes, U = 0; U < R.length; U++) {
          var q = R[U].name.toLowerCase();
          switch (q) {
            case "data-reactroot":
              break;
            case "value":
              break;
            case "checked":
              break;
            case "selected":
              break;
            default:
              x.add(R[U].name);
          }
        }
      }
      var ae = null;
      for (var K in f)
        if (f.hasOwnProperty(K)) {
          var ue = f[K];
          if (K === k1)
            typeof ue == "string" ? o.textContent !== ue && (Wp || qg(o.textContent, ue), ae = [k1, ue]) : typeof ue == "number" && o.textContent !== "" + ue && (Wp || qg(o.textContent, ue), ae = [k1, "" + ue]);
          else if (F.hasOwnProperty(K))
            ue != null && (typeof ue != "function" && jg(K, ue), K === "onScroll" && Bn("scroll", o));
          else if (
            // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof T == "boolean"
          ) {
            var Ae = void 0, Ue = jr(K);
            if (!Wp) {
              if (!(K === Ug || K === Gp || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              K === "value" || K === "checked" || K === "selected")) {
                if (K === $p) {
                  var mt = o.innerHTML, Ft = ue ? ue[Hg] : void 0;
                  if (Ft != null) {
                    var At = Eb(o, Ft);
                    At !== mt && Kp(K, mt, At);
                  }
                } else if (K === N1) {
                  if (x.delete(K), vb) {
                    var ln = F0(ue);
                    Ae = o.getAttribute("style"), ln !== Ae && Kp(K, Ae, ln);
                  }
                } else if (T)
                  x.delete(K.toLowerCase()), Ae = tn(o, K, ue), ue !== Ae && Kp(K, Ae, ue);
                else if (!vo(K, Ue, T) && !ir(K, ue, Ue, T)) {
                  var bn = !1;
                  if (Ue !== null)
                    x.delete(Ue.attributeName), Ae = en(o, K, ue, Ue);
                  else {
                    var se = p;
                    if (se === yd && (se = zc(a)), se === yd)
                      x.delete(K.toLowerCase());
                    else {
                      var ge = eD(K);
                      ge !== null && ge !== K && (bn = !0, x.delete(ge)), x.delete(K);
                    }
                    Ae = tn(o, K, ue);
                  }
                  ue !== Ae && !bn && Kp(K, Ae, ue);
                }
              }
            }
          }
        }
      switch (x.size > 0 && !Wp && yb(x), a) {
        case "input":
          D(o), Yn(o, f, !0);
          break;
        case "textarea":
          D(o), bi(o);
          break;
        case "select":
        case "option":
          break;
        default:
          typeof f.onClick == "function" && Vg(o);
          break;
      }
      return ae;
    }
    function nD(o, a) {
      var f = o.nodeValue !== a;
      return f;
    }
    function Cb(o, a) {
      qg(o.nodeValue, a);
    }
    function Sb(o, a) {
      {
        if (io)
          return;
        io = !0, l("Did not expect server HTML to contain a <%s> in <%s>.", a.nodeName.toLowerCase(), o.nodeName.toLowerCase());
      }
    }
    function bb(o, a) {
      {
        if (io)
          return;
        io = !0, l('Did not expect server HTML to contain the text node "%s" in <%s>.', a.nodeValue, o.nodeName.toLowerCase());
      }
    }
    function Ab(o, a, f) {
      {
        if (io)
          return;
        io = !0, l("Expected server HTML to contain a matching <%s> in <%s>.", a, o.nodeName.toLowerCase());
      }
    }
    function xb(o, a) {
      {
        if (a === "" || io)
          return;
        io = !0, l('Expected server HTML to contain a matching text node for "%s" in <%s>.', a, o.nodeName.toLowerCase());
      }
    }
    function rD(o, a, f) {
      switch (a) {
        case "input":
          Nr(o, f);
          return;
        case "textarea":
          pu(o, f);
          return;
        case "select":
          Of(o, f);
          return;
      }
    }
    var Qp = function() {
    }, Xp = function() {
    };
    {
      var iD = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], _b = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
      ], oD = _b.concat(["button"]), aD = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], kb = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      Xp = function(o, a) {
        var f = e({}, o || kb), p = {
          tag: a
        };
        return _b.indexOf(a) !== -1 && (f.aTagInScope = null, f.buttonTagInScope = null, f.nobrTagInScope = null), oD.indexOf(a) !== -1 && (f.pTagInButtonScope = null), iD.indexOf(a) !== -1 && a !== "address" && a !== "div" && a !== "p" && (f.listItemTagAutoclosing = null, f.dlItemTagAutoclosing = null), f.current = p, a === "form" && (f.formTag = p), a === "a" && (f.aTagInScope = p), a === "button" && (f.buttonTagInScope = p), a === "nobr" && (f.nobrTagInScope = p), a === "p" && (f.pTagInButtonScope = p), a === "li" && (f.listItemTagAutoclosing = p), (a === "dd" || a === "dt") && (f.dlItemTagAutoclosing = p), f;
      };
      var sD = function(o, a) {
        switch (a) {
          case "select":
            return o === "option" || o === "optgroup" || o === "#text";
          case "optgroup":
            return o === "option" || o === "#text";
          case "option":
            return o === "#text";
          case "tr":
            return o === "th" || o === "td" || o === "style" || o === "script" || o === "template";
          case "tbody":
          case "thead":
          case "tfoot":
            return o === "tr" || o === "style" || o === "script" || o === "template";
          case "colgroup":
            return o === "col" || o === "template";
          case "table":
            return o === "caption" || o === "colgroup" || o === "tbody" || o === "tfoot" || o === "thead" || o === "style" || o === "script" || o === "template";
          case "head":
            return o === "base" || o === "basefont" || o === "bgsound" || o === "link" || o === "meta" || o === "title" || o === "noscript" || o === "noframes" || o === "style" || o === "script" || o === "template";
          case "html":
            return o === "head" || o === "body" || o === "frameset";
          case "frameset":
            return o === "frame";
          case "#document":
            return o === "html";
        }
        switch (o) {
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return a !== "h1" && a !== "h2" && a !== "h3" && a !== "h4" && a !== "h5" && a !== "h6";
          case "rp":
          case "rt":
            return aD.indexOf(a) === -1;
          case "body":
          case "caption":
          case "col":
          case "colgroup":
          case "frameset":
          case "frame":
          case "head":
          case "html":
          case "tbody":
          case "td":
          case "tfoot":
          case "th":
          case "thead":
          case "tr":
            return a == null;
        }
        return !0;
      }, lD = function(o, a) {
        switch (o) {
          case "address":
          case "article":
          case "aside":
          case "blockquote":
          case "center":
          case "details":
          case "dialog":
          case "dir":
          case "div":
          case "dl":
          case "fieldset":
          case "figcaption":
          case "figure":
          case "footer":
          case "header":
          case "hgroup":
          case "main":
          case "menu":
          case "nav":
          case "ol":
          case "p":
          case "section":
          case "summary":
          case "ul":
          case "pre":
          case "listing":
          case "table":
          case "hr":
          case "xmp":
          case "h1":
          case "h2":
          case "h3":
          case "h4":
          case "h5":
          case "h6":
            return a.pTagInButtonScope;
          case "form":
            return a.formTag || a.pTagInButtonScope;
          case "li":
            return a.listItemTagAutoclosing;
          case "dd":
          case "dt":
            return a.dlItemTagAutoclosing;
          case "button":
            return a.buttonTagInScope;
          case "a":
            return a.aTagInScope;
          case "nobr":
            return a.nobrTagInScope;
        }
        return null;
      }, Nb = {};
      Qp = function(o, a, f) {
        f = f || kb;
        var p = f.current, y = p && p.tag;
        a != null && (o != null && l("validateDOMNesting: when childText is passed, childTag should be null"), o = "#text");
        var T = sD(o, y) ? null : p, x = T ? null : lD(o, f), k = T || x;
        if (k) {
          var R = k.tag, U = !!T + "|" + o + "|" + R;
          if (!Nb[U]) {
            Nb[U] = !0;
            var q = o, ae = "";
            if (o === "#text" ? /\S/.test(a) ? q = "Text nodes" : (q = "Whitespace text nodes", ae = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : q = "<" + o + ">", T) {
              var K = "";
              R === "table" && o === "tr" && (K += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), l("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", q, R, ae, K);
            } else
              l("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", q, R);
          }
        }
      };
    }
    var vd;
    vd = "suppressHydrationWarning";
    var wb = "$", Ob = "/$", c5 = "$?", f5 = "$!", uD = "style", d5 = null, h5 = null;
    function Rb(o, a) {
      switch (o) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          return !!a.autoFocus;
      }
      return !1;
    }
    function cD(o) {
      var a, f, p = o.nodeType;
      switch (p) {
        case Ts:
        case N0: {
          a = p === Ts ? "#document" : "#fragment";
          var y = o.documentElement;
          f = y ? y.namespaceURI : ml(null, "");
          break;
        }
        default: {
          var T = p === si ? o.parentNode : o, x = T.namespaceURI || null;
          a = T.tagName, f = ml(x, a);
          break;
        }
      }
      {
        var k = a.toLowerCase(), R = Xp(null, k);
        return {
          namespace: f,
          ancestorInfo: R
        };
      }
    }
    function fD(o, a, f) {
      {
        var p = o, y = ml(p.namespace, a), T = Xp(p.ancestorInfo, a);
        return {
          namespace: y,
          ancestorInfo: T
        };
      }
    }
    function jte(o) {
      return o;
    }
    function dD(o) {
      d5 = Cg(), h5 = ie();
      var a = null;
      return wp(!1), a;
    }
    function hD(o) {
      X(h5), wp(d5), d5 = null, h5 = null;
    }
    function pD(o, a, f, p, y) {
      var T;
      {
        var x = p;
        if (Qp(o, null, x.ancestorInfo), typeof a.children == "string" || typeof a.children == "number") {
          var k = "" + a.children, R = Xp(x.ancestorInfo, o);
          Qp(null, k, R);
        }
        T = x.namespace;
      }
      var U = YR(o, a, f, T);
      return Wg(y, U), y5(U, a), U;
    }
    function mD(o, a) {
      o.appendChild(a);
    }
    function gD(o, a, f, p, y) {
      return XR(o, a, f, p), Rb(a, f);
    }
    function yD(o, a, f, p, y, T) {
      {
        var x = T;
        if (typeof p.children != typeof f.children && (typeof p.children == "string" || typeof p.children == "number")) {
          var k = "" + p.children, R = Xp(x.ancestorInfo, a);
          Qp(null, k, R);
        }
      }
      return JR(o, a, f, p);
    }
    function p5(o, a) {
      return o === "textarea" || o === "option" || o === "noscript" || typeof a.children == "string" || typeof a.children == "number" || typeof a.dangerouslySetInnerHTML == "object" && a.dangerouslySetInnerHTML !== null && a.dangerouslySetInnerHTML.__html != null;
    }
    function vD(o, a, f, p) {
      {
        var y = f;
        Qp(null, o, y.ancestorInfo);
      }
      var T = QR(o, a);
      return Wg(p, T), T;
    }
    var Db = typeof setTimeout == "function" ? setTimeout : void 0, ED = typeof clearTimeout == "function" ? clearTimeout : void 0, m5 = -1;
    function TD(o, a, f, p) {
      Rb(a, f) && o.focus();
    }
    function CD(o, a, f, p, y, T) {
      y5(o, y), ZR(o, a, f, p, y);
    }
    function Mb(o) {
      Mf(o, "");
    }
    function SD(o, a, f) {
      o.nodeValue = f;
    }
    function bD(o, a) {
      o.appendChild(a);
    }
    function AD(o, a) {
      var f;
      o.nodeType === si ? (f = o.parentNode, f.insertBefore(a, o)) : (f = o, f.appendChild(a));
      var p = o._reactRootContainer;
      p == null && f.onclick === null && Vg(f);
    }
    function xD(o, a, f) {
      o.insertBefore(a, f);
    }
    function _D(o, a, f) {
      o.nodeType === si ? o.parentNode.insertBefore(a, f) : o.insertBefore(a, f);
    }
    function kD(o, a) {
      o.removeChild(a);
    }
    function ND(o, a) {
      o.nodeType === si ? o.parentNode.removeChild(a) : o.removeChild(a);
    }
    function wD(o) {
      o = o;
      var a = o.style;
      typeof a.setProperty == "function" ? a.setProperty("display", "none", "important") : a.display = "none";
    }
    function OD(o) {
      o.nodeValue = "";
    }
    function RD(o, a) {
      o = o;
      var f = a[uD], p = f != null && f.hasOwnProperty("display") ? f.display : null;
      o.style.display = Uh("display", p);
    }
    function DD(o, a) {
      o.nodeValue = a;
    }
    function g5(o) {
      if (o.nodeType === Xi)
        o.textContent = "";
      else if (o.nodeType === Ts) {
        var a = o.body;
        a != null && (a.textContent = "");
      }
    }
    function MD(o, a, f) {
      return o.nodeType !== Xi || a.toLowerCase() !== o.nodeName.toLowerCase() ? null : o;
    }
    function LD(o, a) {
      return a === "" || o.nodeType !== Na ? null : o;
    }
    function ID(o) {
      return o.data === c5;
    }
    function PD(o) {
      return o.data === f5;
    }
    function Lb(o) {
      for (; o != null; o = o.nextSibling) {
        var a = o.nodeType;
        if (a === Xi || a === Na)
          break;
      }
      return o;
    }
    function $g(o) {
      return Lb(o.nextSibling);
    }
    function Ib(o) {
      return Lb(o.firstChild);
    }
    function FD(o, a, f, p, y, T) {
      Wg(T, o), y5(o, f);
      var x;
      {
        var k = y;
        x = k.namespace;
      }
      return tD(o, a, f, x);
    }
    function BD(o, a, f) {
      return Wg(f, o), nD(o, a);
    }
    function UD(o) {
      for (var a = o.nextSibling, f = 0; a; ) {
        if (a.nodeType === si) {
          var p = a.data;
          if (p === Ob) {
            if (f === 0)
              return $g(a);
            f--;
          } else
            (p === wb || p === f5 || p === c5) && f++;
        }
        a = a.nextSibling;
      }
      return null;
    }
    function Pb(o) {
      for (var a = o.previousSibling, f = 0; a; ) {
        if (a.nodeType === si) {
          var p = a.data;
          if (p === wb || p === f5 || p === c5) {
            if (f === 0)
              return a;
            f--;
          } else
            p === Ob && f++;
        }
        a = a.previousSibling;
      }
      return null;
    }
    function HD(o) {
      cp(o);
    }
    function zD(o) {
      cp(o);
    }
    function qD(o, a, f) {
      Cb(a, f);
    }
    function jD(o, a, f, p, y) {
      a[vd] !== !0 && Cb(p, y);
    }
    function VD(o, a) {
      a.nodeType === Xi ? Sb(o, a) : a.nodeType === si || bb(o, a);
    }
    function $D(o, a, f, p) {
      a[vd] !== !0 && (p.nodeType === Xi ? Sb(f, p) : p.nodeType === si || bb(f, p));
    }
    function GD(o, a, f) {
      Ab(o, a);
    }
    function WD(o, a) {
      xb(o, a);
    }
    function KD(o, a, f, p, y) {
      a[vd] !== !0 && Ab(f, p);
    }
    function YD(o, a, f, p) {
      a[vd] !== !0 && xb(f, p);
    }
    function QD(o, a, f) {
      a[vd];
    }
    var XD = 0;
    function JD(o) {
      var a = "r:" + (XD++).toString(36);
      return {
        toString: function() {
          return o(), a;
        },
        valueOf: function() {
          return o(), a;
        }
      };
    }
    function ZD(o) {
      return o !== null && typeof o == "object" && o.$$typeof === _e;
    }
    function eM(o) {
      return {
        $$typeof: _e,
        toString: o,
        valueOf: o
      };
    }
    function tM(o) {
      ub(o);
    }
    var Gg = Math.random().toString(36).slice(2), Jp = "__reactFiber$" + Gg, Fb = "__reactProps$" + Gg, Zp = "__reactContainer$" + Gg, Bb = "__reactEvents$" + Gg;
    function Wg(o, a) {
      a[Jp] = o;
    }
    function nM(o, a) {
      a[Zp] = o;
    }
    function Ub(o) {
      o[Zp] = null;
    }
    function Kg(o) {
      return !!o[Zp];
    }
    function w1(o) {
      var a = o[Jp];
      if (a)
        return a;
      for (var f = o.parentNode; f; ) {
        if (a = f[Zp] || f[Jp], a) {
          var p = a.alternate;
          if (a.child !== null || p !== null && p.child !== null)
            for (var y = Pb(o); y !== null; ) {
              var T = y[Jp];
              if (T)
                return T;
              y = Pb(y);
            }
          return a;
        }
        o = f, f = o.parentNode;
      }
      return null;
    }
    function Vu(o) {
      var a = o[Jp] || o[Zp];
      return a && (a.tag === b || a.tag === N || a.tag === ee || a.tag === C) ? a : null;
    }
    function Ed(o) {
      if (o.tag === b || o.tag === N)
        return o.stateNode;
      throw Error("getNodeFromInstance: Invalid argument.");
    }
    function Yg(o) {
      return o[Fb] || null;
    }
    function y5(o, a) {
      o[Fb] = a;
    }
    function Hb(o) {
      var a = o[Bb];
      return a === void 0 && (a = o[Bb] = /* @__PURE__ */ new Set()), a;
    }
    var zb = {}, qb = i.ReactDebugCurrentFrame;
    function Qg(o) {
      if (o) {
        var a = o._owner, f = ii(o.type, o._source, a ? a.type : null);
        qb.setExtraStackFrame(f);
      } else
        qb.setExtraStackFrame(null);
    }
    function qa(o, a, f, p, y) {
      {
        var T = Function.call.bind(Object.prototype.hasOwnProperty);
        for (var x in o)
          if (T(o, x)) {
            var k = void 0;
            try {
              if (typeof o[x] != "function") {
                var R = Error((p || "React class") + ": " + f + " type `" + x + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof o[x] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw R.name = "Invariant Violation", R;
              }
              k = o[x](a, x, p, f, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (U) {
              k = U;
            }
            k && !(k instanceof Error) && (Qg(y), l("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", p || "React class", f, x, typeof k), Qg(null)), k instanceof Error && !(k.message in zb) && (zb[k.message] = !0, Qg(y), l("Failed %s type: %s", f, k.message), Qg(null));
          }
      }
    }
    var v5 = [], Xg;
    Xg = [];
    var Ul = -1;
    function $u(o) {
      return {
        current: o
      };
    }
    function xi(o, a) {
      if (Ul < 0) {
        l("Unexpected pop.");
        return;
      }
      a !== Xg[Ul] && l("Unexpected Fiber popped."), o.current = v5[Ul], v5[Ul] = null, Xg[Ul] = null, Ul--;
    }
    function _i(o, a, f) {
      Ul++, v5[Ul] = o.current, Xg[Ul] = f, o.current = a;
    }
    var E5;
    E5 = {};
    var No = {};
    Object.freeze(No);
    var Hl = $u(No), Vs = $u(!1), T5 = No;
    function Td(o, a, f) {
      return f && $s(a) ? T5 : Hl.current;
    }
    function jb(o, a, f) {
      {
        var p = o.stateNode;
        p.__reactInternalMemoizedUnmaskedChildContext = a, p.__reactInternalMemoizedMaskedChildContext = f;
      }
    }
    function Cd(o, a) {
      {
        var f = o.type, p = f.contextTypes;
        if (!p)
          return No;
        var y = o.stateNode;
        if (y && y.__reactInternalMemoizedUnmaskedChildContext === a)
          return y.__reactInternalMemoizedMaskedChildContext;
        var T = {};
        for (var x in p)
          T[x] = a[x];
        {
          var k = He(f) || "Unknown";
          qa(p, T, "context", k);
        }
        return y && jb(o, a, T), T;
      }
    }
    function Jg() {
      return Vs.current;
    }
    function $s(o) {
      {
        var a = o.childContextTypes;
        return a != null;
      }
    }
    function Zg(o) {
      xi(Vs, o), xi(Hl, o);
    }
    function C5(o) {
      xi(Vs, o), xi(Hl, o);
    }
    function Vb(o, a, f) {
      {
        if (Hl.current !== No)
          throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        _i(Hl, a, o), _i(Vs, f, o);
      }
    }
    function $b(o, a, f) {
      {
        var p = o.stateNode, y = a.childContextTypes;
        if (typeof p.getChildContext != "function") {
          {
            var T = He(a) || "Unknown";
            E5[T] || (E5[T] = !0, l("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", T, T));
          }
          return f;
        }
        var x = p.getChildContext();
        for (var k in x)
          if (!(k in y))
            throw Error((He(a) || "Unknown") + '.getChildContext(): key "' + k + '" is not defined in childContextTypes.');
        {
          var R = He(a) || "Unknown";
          qa(y, x, "child context", R);
        }
        return e({}, f, x);
      }
    }
    function e2(o) {
      {
        var a = o.stateNode, f = a && a.__reactInternalMemoizedMergedChildContext || No;
        return T5 = Hl.current, _i(Hl, f, o), _i(Vs, Vs.current, o), !0;
      }
    }
    function Gb(o, a, f) {
      {
        var p = o.stateNode;
        if (!p)
          throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (f) {
          var y = $b(o, a, T5);
          p.__reactInternalMemoizedMergedChildContext = y, xi(Vs, o), xi(Hl, o), _i(Hl, y, o), _i(Vs, f, o);
        } else
          xi(Vs, o), _i(Vs, f, o);
      }
    }
    function rM(o) {
      {
        if (!($f(o) && o.tag === g))
          throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var a = o;
        do {
          switch (a.tag) {
            case C:
              return a.stateNode.context;
            case g: {
              var f = a.type;
              if ($s(f))
                return a.stateNode.__reactInternalMemoizedMergedChildContext;
              break;
            }
          }
          a = a.return;
        } while (a !== null);
        throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
      }
    }
    var S5 = 0, Wb = 1, Kb = 2, t2 = null, Gs = null, Sd = !1, iM = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
    function oM(o) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
        return !1;
      var a = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (a.isDisabled)
        return !0;
      if (!a.supportsFiber)
        return l("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
      try {
        t2 = a.inject(o), Gs = a;
      } catch (f) {
        l("React instrumentation encountered an error: %s.", f);
      }
      return !0;
    }
    function aM(o, a) {
      if (Gs && typeof Gs.onScheduleFiberRoot == "function")
        try {
          Gs.onScheduleFiberRoot(t2, o, a);
        } catch (f) {
          Sd || (Sd = !0, l("React instrumentation encountered an error: %s", f));
        }
    }
    function sM(o, a) {
      if (Gs && typeof Gs.onCommitFiberRoot == "function")
        try {
          var f = (o.current.flags & hn) === hn;
          te && Gs.onCommitFiberRoot(t2, o, a, f);
        } catch (p) {
          Sd || (Sd = !0, l("React instrumentation encountered an error: %s", p));
        }
    }
    function lM(o) {
      if (Gs && typeof Gs.onCommitFiberUnmount == "function")
        try {
          Gs.onCommitFiberUnmount(t2, o);
        } catch (a) {
          Sd || (Sd = !0, l("React instrumentation encountered an error: %s", a));
        }
    }
    var uM = n.unstable_runWithPriority, b5 = n.unstable_scheduleCallback, Yb = n.unstable_cancelCallback, cM = n.unstable_shouldYield, Qb = n.unstable_requestPaint, A5 = n.unstable_now, fM = n.unstable_getCurrentPriorityLevel, n2 = n.unstable_ImmediatePriority, Xb = n.unstable_UserBlockingPriority, Jb = n.unstable_NormalPriority, Zb = n.unstable_LowPriority, eA = n.unstable_IdlePriority;
    if (!(r.__interactionsRef != null && r.__interactionsRef.current != null))
      throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
    var tA = {}, ra = 99, O1 = 98, zl = 97, nA = 96, rA = 95, x5 = 90, dM = cM, hM = (
      // Fall back gracefully if we're running an older version of Scheduler.
      Qb !== void 0 ? Qb : function() {
      }
    ), ql = null, r2 = null, _5 = !1, iA = A5(), ki = iA < 1e4 ? A5 : function() {
      return A5() - iA;
    };
    function bd() {
      switch (fM()) {
        case n2:
          return ra;
        case Xb:
          return O1;
        case Jb:
          return zl;
        case Zb:
          return nA;
        case eA:
          return rA;
        default:
          throw Error("Unknown priority level.");
      }
    }
    function oA(o) {
      switch (o) {
        case ra:
          return n2;
        case O1:
          return Xb;
        case zl:
          return Jb;
        case nA:
          return Zb;
        case rA:
          return eA;
        default:
          throw Error("Unknown priority level.");
      }
    }
    function R1(o, a) {
      var f = oA(o);
      return uM(f, a);
    }
    function Gu(o, a, f) {
      var p = oA(o);
      return b5(p, a, f);
    }
    function pM(o) {
      return ql === null ? (ql = [o], r2 = b5(n2, sA)) : ql.push(o), tA;
    }
    function aA(o) {
      o !== tA && Yb(o);
    }
    function Ws() {
      if (r2 !== null) {
        var o = r2;
        r2 = null, Yb(o);
      }
      sA();
    }
    function sA() {
      if (!_5 && ql !== null) {
        _5 = !0;
        var o = 0;
        try {
          var a = !0, f = ql;
          R1(ra, function() {
            for (; o < f.length; o++) {
              var p = f[o];
              do
                p = p(a);
              while (p !== null);
            }
          }), ql = null;
        } catch (p) {
          throw ql !== null && (ql = ql.slice(o + 1)), b5(n2, Ws), p;
        } finally {
          _5 = !1;
        }
      }
    }
    var lA = "17.0.2", qn = 0, Jn = 1, oo = 2, D1 = 4, wo = 8, mM = 16, gM = i.ReactCurrentBatchConfig, yM = 0;
    function vM() {
      return gM.transition;
    }
    var ja = {
      recordUnsafeLifecycleWarnings: function(o, a) {
      },
      flushPendingUnsafeLifecycleWarnings: function() {
      },
      recordLegacyContextWarning: function(o, a) {
      },
      flushLegacyContextWarning: function() {
      },
      discardPendingWarnings: function() {
      }
    };
    {
      var EM = function(o) {
        for (var a = null, f = o; f !== null; )
          f.mode & Jn && (a = f), f = f.return;
        return a;
      }, M1 = function(o) {
        var a = [];
        return o.forEach(function(f) {
          a.push(f);
        }), a.sort().join(", ");
      }, em = [], tm = [], nm = [], rm = [], im = [], om = [], L1 = /* @__PURE__ */ new Set();
      ja.recordUnsafeLifecycleWarnings = function(o, a) {
        L1.has(o.type) || (typeof a.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        a.componentWillMount.__suppressDeprecationWarning !== !0 && em.push(o), o.mode & Jn && typeof a.UNSAFE_componentWillMount == "function" && tm.push(o), typeof a.componentWillReceiveProps == "function" && a.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && nm.push(o), o.mode & Jn && typeof a.UNSAFE_componentWillReceiveProps == "function" && rm.push(o), typeof a.componentWillUpdate == "function" && a.componentWillUpdate.__suppressDeprecationWarning !== !0 && im.push(o), o.mode & Jn && typeof a.UNSAFE_componentWillUpdate == "function" && om.push(o));
      }, ja.flushPendingUnsafeLifecycleWarnings = function() {
        var o = /* @__PURE__ */ new Set();
        em.length > 0 && (em.forEach(function(K) {
          o.add(He(K.type) || "Component"), L1.add(K.type);
        }), em = []);
        var a = /* @__PURE__ */ new Set();
        tm.length > 0 && (tm.forEach(function(K) {
          a.add(He(K.type) || "Component"), L1.add(K.type);
        }), tm = []);
        var f = /* @__PURE__ */ new Set();
        nm.length > 0 && (nm.forEach(function(K) {
          f.add(He(K.type) || "Component"), L1.add(K.type);
        }), nm = []);
        var p = /* @__PURE__ */ new Set();
        rm.length > 0 && (rm.forEach(function(K) {
          p.add(He(K.type) || "Component"), L1.add(K.type);
        }), rm = []);
        var y = /* @__PURE__ */ new Set();
        im.length > 0 && (im.forEach(function(K) {
          y.add(He(K.type) || "Component"), L1.add(K.type);
        }), im = []);
        var T = /* @__PURE__ */ new Set();
        if (om.length > 0 && (om.forEach(function(K) {
          T.add(He(K.type) || "Component"), L1.add(K.type);
        }), om = []), a.size > 0) {
          var x = M1(a);
          l(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, x);
        }
        if (p.size > 0) {
          var k = M1(p);
          l(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, k);
        }
        if (T.size > 0) {
          var R = M1(T);
          l(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, R);
        }
        if (o.size > 0) {
          var U = M1(o);
          s(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, U);
        }
        if (f.size > 0) {
          var q = M1(f);
          s(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, q);
        }
        if (y.size > 0) {
          var ae = M1(y);
          s(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, ae);
        }
      };
      var i2 = /* @__PURE__ */ new Map(), uA = /* @__PURE__ */ new Set();
      ja.recordLegacyContextWarning = function(o, a) {
        var f = EM(o);
        if (f === null) {
          l("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        if (!uA.has(o.type)) {
          var p = i2.get(f);
          (o.type.contextTypes != null || o.type.childContextTypes != null || a !== null && typeof a.getChildContext == "function") && (p === void 0 && (p = [], i2.set(f, p)), p.push(o));
        }
      }, ja.flushLegacyContextWarning = function() {
        i2.forEach(function(o, a) {
          if (o.length !== 0) {
            var f = o[0], p = /* @__PURE__ */ new Set();
            o.forEach(function(T) {
              p.add(He(T.type) || "Component"), uA.add(T.type);
            });
            var y = M1(p);
            try {
              $n(f), l(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, y);
            } finally {
              kr();
            }
          }
        });
      }, ja.discardPendingWarnings = function() {
        em = [], tm = [], nm = [], rm = [], im = [], om = [], i2 = /* @__PURE__ */ new Map();
      };
    }
    function Va(o, a) {
      if (o && o.defaultProps) {
        var f = e({}, a), p = o.defaultProps;
        for (var y in p)
          f[y] === void 0 && (f[y] = p[y]);
        return f;
      }
      return a;
    }
    var o2 = 1073741823, k5 = $u(null), N5;
    N5 = {};
    var a2 = null, Ad = null, s2 = null, l2 = !1;
    function u2() {
      a2 = null, Ad = null, s2 = null, l2 = !1;
    }
    function cA() {
      l2 = !0;
    }
    function fA() {
      l2 = !1;
    }
    function dA(o, a) {
      var f = o.type._context;
      _i(k5, f._currentValue, o), f._currentValue = a, f._currentRenderer !== void 0 && f._currentRenderer !== null && f._currentRenderer !== N5 && l("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), f._currentRenderer = N5;
    }
    function w5(o) {
      var a = k5.current;
      xi(k5, o);
      var f = o.type._context;
      f._currentValue = a;
    }
    function TM(o, a, f) {
      if (d(f, a))
        return 0;
      var p = typeof o._calculateChangedBits == "function" ? o._calculateChangedBits(f, a) : o2;
      return (p & o2) !== p && l("calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", p), p | 0;
    }
    function hA(o, a) {
      for (var f = o; f !== null; ) {
        var p = f.alternate;
        if (!Ps(f.childLanes, a))
          f.childLanes = fn(f.childLanes, a), p !== null && (p.childLanes = fn(p.childLanes, a));
        else if (p !== null && !Ps(p.childLanes, a))
          p.childLanes = fn(p.childLanes, a);
        else
          break;
        f = f.return;
      }
    }
    function CM(o, a, f, p) {
      var y = o.child;
      for (y !== null && (y.return = o); y !== null; ) {
        var T = void 0, x = y.dependencies;
        if (x !== null) {
          T = y.child;
          for (var k = x.firstContext; k !== null; ) {
            if (k.context === a && k.observedBits & f) {
              if (y.tag === g) {
                var R = Wu(Mn, Er(p));
                R.tag = c2, Ku(y, R);
              }
              y.lanes = fn(y.lanes, p);
              var U = y.alternate;
              U !== null && (U.lanes = fn(U.lanes, p)), hA(y.return, p), x.lanes = fn(x.lanes, p);
              break;
            }
            k = k.next;
          }
        } else
          y.tag === Y ? T = y.type === o.type ? null : y.child : T = y.child;
        if (T !== null)
          T.return = y;
        else
          for (T = y; T !== null; ) {
            if (T === o) {
              T = null;
              break;
            }
            var q = T.sibling;
            if (q !== null) {
              q.return = T.return, T = q;
              break;
            }
            T = T.return;
          }
        y = T;
      }
    }
    function xd(o, a) {
      a2 = o, Ad = null, s2 = null;
      var f = o.dependencies;
      if (f !== null) {
        var p = f.firstContext;
        p !== null && (Mr(f.lanes, a) && FE(), f.firstContext = null);
      }
    }
    function Cr(o, a) {
      if (l2 && l("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), s2 !== o) {
        if (!(a === !1 || a === 0)) {
          var f;
          typeof a != "number" || a === o2 ? (s2 = o, f = o2) : f = a;
          var p = {
            context: o,
            observedBits: f,
            next: null
          };
          if (Ad === null) {
            if (a2 === null)
              throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            Ad = p, a2.dependencies = {
              lanes: Te,
              firstContext: p,
              responders: null
            };
          } else
            Ad = Ad.next = p;
        }
      }
      return o._currentValue;
    }
    var pA = 0, mA = 1, c2 = 2, O5 = 3, f2 = !1, R5, d2;
    R5 = !1, d2 = null;
    function D5(o) {
      var a = {
        baseState: o.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null
        },
        effects: null
      };
      o.updateQueue = a;
    }
    function gA(o, a) {
      var f = a.updateQueue, p = o.updateQueue;
      if (f === p) {
        var y = {
          baseState: p.baseState,
          firstBaseUpdate: p.firstBaseUpdate,
          lastBaseUpdate: p.lastBaseUpdate,
          shared: p.shared,
          effects: p.effects
        };
        a.updateQueue = y;
      }
    }
    function Wu(o, a) {
      var f = {
        eventTime: o,
        lane: a,
        tag: pA,
        payload: null,
        callback: null,
        next: null
      };
      return f;
    }
    function Ku(o, a) {
      var f = o.updateQueue;
      if (f !== null) {
        var p = f.shared, y = p.pending;
        y === null ? a.next = a : (a.next = y.next, y.next = a), p.pending = a, d2 === p && !R5 && (l("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), R5 = !0);
      }
    }
    function yA(o, a) {
      var f = o.updateQueue, p = o.alternate;
      if (p !== null) {
        var y = p.updateQueue;
        if (f === y) {
          var T = null, x = null, k = f.firstBaseUpdate;
          if (k !== null) {
            var R = k;
            do {
              var U = {
                eventTime: R.eventTime,
                lane: R.lane,
                tag: R.tag,
                payload: R.payload,
                callback: R.callback,
                next: null
              };
              x === null ? T = x = U : (x.next = U, x = U), R = R.next;
            } while (R !== null);
            x === null ? T = x = a : (x.next = a, x = a);
          } else
            T = x = a;
          f = {
            baseState: y.baseState,
            firstBaseUpdate: T,
            lastBaseUpdate: x,
            shared: y.shared,
            effects: y.effects
          }, o.updateQueue = f;
          return;
        }
      }
      var q = f.lastBaseUpdate;
      q === null ? f.firstBaseUpdate = a : q.next = a, f.lastBaseUpdate = a;
    }
    function SM(o, a, f, p, y, T) {
      switch (f.tag) {
        case mA: {
          var x = f.payload;
          if (typeof x == "function") {
            cA();
            var k = x.call(T, p, y);
            {
              if (o.mode & Jn) {
                Qi();
                try {
                  x.call(T, p, y);
                } finally {
                  hr();
                }
              }
              fA();
            }
            return k;
          }
          return x;
        }
        case O5:
          o.flags = o.flags & ~Ao | hn;
        case pA: {
          var R = f.payload, U;
          if (typeof R == "function") {
            cA(), U = R.call(T, p, y);
            {
              if (o.mode & Jn) {
                Qi();
                try {
                  R.call(T, p, y);
                } finally {
                  hr();
                }
              }
              fA();
            }
          } else
            U = R;
          return U == null ? p : e({}, p, U);
        }
        case c2:
          return f2 = !0, p;
      }
      return p;
    }
    function am(o, a, f, p) {
      var y = o.updateQueue;
      f2 = !1, d2 = y.shared;
      var T = y.firstBaseUpdate, x = y.lastBaseUpdate, k = y.shared.pending;
      if (k !== null) {
        y.shared.pending = null;
        var R = k, U = R.next;
        R.next = null, x === null ? T = U : x.next = U, x = R;
        var q = o.alternate;
        if (q !== null) {
          var ae = q.updateQueue, K = ae.lastBaseUpdate;
          K !== x && (K === null ? ae.firstBaseUpdate = U : K.next = U, ae.lastBaseUpdate = R);
        }
      }
      if (T !== null) {
        var ue = y.baseState, Ae = Te, Ue = null, mt = null, Ft = null, At = T;
        do {
          var ln = At.lane, bn = At.eventTime;
          if (Ps(p, ln)) {
            if (Ft !== null) {
              var ge = {
                eventTime: bn,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: Qn,
                tag: At.tag,
                payload: At.payload,
                callback: At.callback,
                next: null
              };
              Ft = Ft.next = ge;
            }
            ue = SM(o, y, At, ue, a, f);
            var re = At.callback;
            if (re !== null) {
              o.flags |= _s;
              var Ne = y.effects;
              Ne === null ? y.effects = [At] : Ne.push(At);
            }
          } else {
            var se = {
              eventTime: bn,
              lane: ln,
              tag: At.tag,
              payload: At.payload,
              callback: At.callback,
              next: null
            };
            Ft === null ? (mt = Ft = se, Ue = ue) : Ft = Ft.next = se, Ae = fn(Ae, ln);
          }
          if (At = At.next, At === null) {
            if (k = y.shared.pending, k === null)
              break;
            var Ve = k, tt = Ve.next;
            Ve.next = null, At = tt, y.lastBaseUpdate = Ve, y.shared.pending = null;
          }
        } while (!0);
        Ft === null && (Ue = ue), y.baseState = Ue, y.firstBaseUpdate = mt, y.lastBaseUpdate = Ft, lT(Ae), o.lanes = Ae, o.memoizedState = ue;
      }
      d2 = null;
    }
    function bM(o, a) {
      if (typeof o != "function")
        throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + o);
      o.call(a);
    }
    function vA() {
      f2 = !1;
    }
    function h2() {
      return f2;
    }
    function EA(o, a, f) {
      var p = a.effects;
      if (a.effects = null, p !== null)
        for (var y = 0; y < p.length; y++) {
          var T = p[y], x = T.callback;
          x !== null && (T.callback = null, bM(x, f));
        }
    }
    var M5 = {}, AM = Array.isArray, TA = new t.Component().refs, L5, I5, P5, F5, B5, CA, p2, U5, H5, z5;
    {
      L5 = /* @__PURE__ */ new Set(), I5 = /* @__PURE__ */ new Set(), P5 = /* @__PURE__ */ new Set(), F5 = /* @__PURE__ */ new Set(), U5 = /* @__PURE__ */ new Set(), B5 = /* @__PURE__ */ new Set(), H5 = /* @__PURE__ */ new Set(), z5 = /* @__PURE__ */ new Set();
      var SA = /* @__PURE__ */ new Set();
      p2 = function(o, a) {
        if (!(o === null || typeof o == "function")) {
          var f = a + "_" + o;
          SA.has(f) || (SA.add(f), l("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", a, o));
        }
      }, CA = function(o, a) {
        if (a === void 0) {
          var f = He(o) || "Component";
          B5.has(f) || (B5.add(f), l("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", f));
        }
      }, Object.defineProperty(M5, "_processChildContext", {
        enumerable: !1,
        value: function() {
          throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
      }), Object.freeze(M5);
    }
    function m2(o, a, f, p) {
      var y = o.memoizedState;
      if (o.mode & Jn) {
        Qi();
        try {
          f(p, y);
        } finally {
          hr();
        }
      }
      var T = f(p, y);
      CA(a, T);
      var x = T == null ? y : e({}, y, T);
      if (o.memoizedState = x, o.lanes === Te) {
        var k = o.updateQueue;
        k.baseState = x;
      }
    }
    var q5 = {
      isMounted: rg,
      enqueueSetState: function(o, a, f) {
        var p = Ra(o), y = Ro(), T = Ju(p), x = Wu(y, T);
        x.payload = a, f != null && (p2(f, "setState"), x.callback = f), Ku(p, x), wi(p, T, y);
      },
      enqueueReplaceState: function(o, a, f) {
        var p = Ra(o), y = Ro(), T = Ju(p), x = Wu(y, T);
        x.tag = mA, x.payload = a, f != null && (p2(f, "replaceState"), x.callback = f), Ku(p, x), wi(p, T, y);
      },
      enqueueForceUpdate: function(o, a) {
        var f = Ra(o), p = Ro(), y = Ju(f), T = Wu(p, y);
        T.tag = c2, a != null && (p2(a, "forceUpdate"), T.callback = a), Ku(f, T), wi(f, y, p);
      }
    };
    function bA(o, a, f, p, y, T, x) {
      var k = o.stateNode;
      if (typeof k.shouldComponentUpdate == "function") {
        if (o.mode & Jn) {
          Qi();
          try {
            k.shouldComponentUpdate(p, T, x);
          } finally {
            hr();
          }
        }
        var R = k.shouldComponentUpdate(p, T, x);
        return R === void 0 && l("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", He(a) || "Component"), R;
      }
      return a.prototype && a.prototype.isPureReactComponent ? !E(f, p) || !E(y, T) : !0;
    }
    function xM(o, a, f) {
      var p = o.stateNode;
      {
        var y = He(a) || "Component", T = p.render;
        T || (a.prototype && typeof a.prototype.render == "function" ? l("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", y) : l("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", y)), p.getInitialState && !p.getInitialState.isReactClassApproved && !p.state && l("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", y), p.getDefaultProps && !p.getDefaultProps.isReactClassApproved && l("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", y), p.propTypes && l("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", y), p.contextType && l("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", y), p.contextTypes && l("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", y), a.contextType && a.contextTypes && !H5.has(a) && (H5.add(a), l("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", y)), typeof p.componentShouldUpdate == "function" && l("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", y), a.prototype && a.prototype.isPureReactComponent && typeof p.shouldComponentUpdate < "u" && l("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", He(a) || "A pure component"), typeof p.componentDidUnmount == "function" && l("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", y), typeof p.componentDidReceiveProps == "function" && l("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", y), typeof p.componentWillRecieveProps == "function" && l("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", y), typeof p.UNSAFE_componentWillRecieveProps == "function" && l("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", y);
        var x = p.props !== f;
        p.props !== void 0 && x && l("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", y, y), p.defaultProps && l("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", y, y), typeof p.getSnapshotBeforeUpdate == "function" && typeof p.componentDidUpdate != "function" && !P5.has(a) && (P5.add(a), l("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", He(a))), typeof p.getDerivedStateFromProps == "function" && l("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", y), typeof p.getDerivedStateFromError == "function" && l("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", y), typeof a.getSnapshotBeforeUpdate == "function" && l("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", y);
        var k = p.state;
        k && (typeof k != "object" || AM(k)) && l("%s.state: must be set to an object or null", y), typeof p.getChildContext == "function" && typeof a.childContextTypes != "object" && l("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", y);
      }
    }
    function AA(o, a) {
      a.updater = q5, o.stateNode = a, ep(a, o), a._reactInternalInstance = M5;
    }
    function xA(o, a, f) {
      var p = !1, y = No, T = No, x = a.contextType;
      if ("contextType" in a) {
        var k = (
          // Allow null for conditional declaration
          x === null || x !== void 0 && x.$$typeof === Uo && x._context === void 0
        );
        if (!k && !z5.has(a)) {
          z5.add(a);
          var R = "";
          x === void 0 ? R = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof x != "object" ? R = " However, it is set to a " + typeof x + "." : x.$$typeof === Eo ? R = " Did you accidentally pass the Context.Provider instead?" : x._context !== void 0 ? R = " Did you accidentally pass the Context.Consumer instead?" : R = " However, it is set to an object with keys {" + Object.keys(x).join(", ") + "}.", l("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", He(a) || "Component", R);
        }
      }
      if (typeof x == "object" && x !== null)
        T = Cr(x);
      else {
        y = Td(o, a, !0);
        var U = a.contextTypes;
        p = U != null, T = p ? Cd(o, y) : No;
      }
      if (o.mode & Jn) {
        Qi();
        try {
          new a(f, T);
        } finally {
          hr();
        }
      }
      var q = new a(f, T), ae = o.memoizedState = q.state !== null && q.state !== void 0 ? q.state : null;
      AA(o, q);
      {
        if (typeof a.getDerivedStateFromProps == "function" && ae === null) {
          var K = He(a) || "Component";
          I5.has(K) || (I5.add(K), l("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", K, q.state === null ? "null" : "undefined", K));
        }
        if (typeof a.getDerivedStateFromProps == "function" || typeof q.getSnapshotBeforeUpdate == "function") {
          var ue = null, Ae = null, Ue = null;
          if (typeof q.componentWillMount == "function" && q.componentWillMount.__suppressDeprecationWarning !== !0 ? ue = "componentWillMount" : typeof q.UNSAFE_componentWillMount == "function" && (ue = "UNSAFE_componentWillMount"), typeof q.componentWillReceiveProps == "function" && q.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? Ae = "componentWillReceiveProps" : typeof q.UNSAFE_componentWillReceiveProps == "function" && (Ae = "UNSAFE_componentWillReceiveProps"), typeof q.componentWillUpdate == "function" && q.componentWillUpdate.__suppressDeprecationWarning !== !0 ? Ue = "componentWillUpdate" : typeof q.UNSAFE_componentWillUpdate == "function" && (Ue = "UNSAFE_componentWillUpdate"), ue !== null || Ae !== null || Ue !== null) {
            var mt = He(a) || "Component", Ft = typeof a.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
            F5.has(mt) || (F5.add(mt), l(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, mt, Ft, ue !== null ? `
  ` + ue : "", Ae !== null ? `
  ` + Ae : "", Ue !== null ? `
  ` + Ue : ""));
          }
        }
      }
      return p && jb(o, y, T), q;
    }
    function _M(o, a) {
      var f = a.state;
      typeof a.componentWillMount == "function" && a.componentWillMount(), typeof a.UNSAFE_componentWillMount == "function" && a.UNSAFE_componentWillMount(), f !== a.state && (l("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", He(o.type) || "Component"), q5.enqueueReplaceState(a, a.state, null));
    }
    function _A(o, a, f, p) {
      var y = a.state;
      if (typeof a.componentWillReceiveProps == "function" && a.componentWillReceiveProps(f, p), typeof a.UNSAFE_componentWillReceiveProps == "function" && a.UNSAFE_componentWillReceiveProps(f, p), a.state !== y) {
        {
          var T = He(o.type) || "Component";
          L5.has(T) || (L5.add(T), l("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", T));
        }
        q5.enqueueReplaceState(a, a.state, null);
      }
    }
    function j5(o, a, f, p) {
      xM(o, a, f);
      var y = o.stateNode;
      y.props = f, y.state = o.memoizedState, y.refs = TA, D5(o);
      var T = a.contextType;
      if (typeof T == "object" && T !== null)
        y.context = Cr(T);
      else {
        var x = Td(o, a, !0);
        y.context = Cd(o, x);
      }
      {
        if (y.state === f) {
          var k = He(a) || "Component";
          U5.has(k) || (U5.add(k), l("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", k));
        }
        o.mode & Jn && ja.recordLegacyContextWarning(o, y), ja.recordUnsafeLifecycleWarnings(o, y);
      }
      am(o, f, y, p), y.state = o.memoizedState;
      var R = a.getDerivedStateFromProps;
      typeof R == "function" && (m2(o, a, R, f), y.state = o.memoizedState), typeof a.getDerivedStateFromProps != "function" && typeof y.getSnapshotBeforeUpdate != "function" && (typeof y.UNSAFE_componentWillMount == "function" || typeof y.componentWillMount == "function") && (_M(o, y), am(o, f, y, p), y.state = o.memoizedState), typeof y.componentDidMount == "function" && (o.flags |= St);
    }
    function kM(o, a, f, p) {
      var y = o.stateNode, T = o.memoizedProps;
      y.props = T;
      var x = y.context, k = a.contextType, R = No;
      if (typeof k == "object" && k !== null)
        R = Cr(k);
      else {
        var U = Td(o, a, !0);
        R = Cd(o, U);
      }
      var q = a.getDerivedStateFromProps, ae = typeof q == "function" || typeof y.getSnapshotBeforeUpdate == "function";
      !ae && (typeof y.UNSAFE_componentWillReceiveProps == "function" || typeof y.componentWillReceiveProps == "function") && (T !== f || x !== R) && _A(o, y, f, R), vA();
      var K = o.memoizedState, ue = y.state = K;
      if (am(o, f, y, p), ue = o.memoizedState, T === f && K === ue && !Jg() && !h2())
        return typeof y.componentDidMount == "function" && (o.flags |= St), !1;
      typeof q == "function" && (m2(o, a, q, f), ue = o.memoizedState);
      var Ae = h2() || bA(o, a, T, f, K, ue, R);
      return Ae ? (!ae && (typeof y.UNSAFE_componentWillMount == "function" || typeof y.componentWillMount == "function") && (typeof y.componentWillMount == "function" && y.componentWillMount(), typeof y.UNSAFE_componentWillMount == "function" && y.UNSAFE_componentWillMount()), typeof y.componentDidMount == "function" && (o.flags |= St)) : (typeof y.componentDidMount == "function" && (o.flags |= St), o.memoizedProps = f, o.memoizedState = ue), y.props = f, y.state = ue, y.context = R, Ae;
    }
    function NM(o, a, f, p, y) {
      var T = a.stateNode;
      gA(o, a);
      var x = a.memoizedProps, k = a.type === a.elementType ? x : Va(a.type, x);
      T.props = k;
      var R = a.pendingProps, U = T.context, q = f.contextType, ae = No;
      if (typeof q == "object" && q !== null)
        ae = Cr(q);
      else {
        var K = Td(a, f, !0);
        ae = Cd(a, K);
      }
      var ue = f.getDerivedStateFromProps, Ae = typeof ue == "function" || typeof T.getSnapshotBeforeUpdate == "function";
      !Ae && (typeof T.UNSAFE_componentWillReceiveProps == "function" || typeof T.componentWillReceiveProps == "function") && (x !== R || U !== ae) && _A(a, T, p, ae), vA();
      var Ue = a.memoizedState, mt = T.state = Ue;
      if (am(a, p, T, y), mt = a.memoizedState, x === R && Ue === mt && !Jg() && !h2())
        return typeof T.componentDidUpdate == "function" && (x !== o.memoizedProps || Ue !== o.memoizedState) && (a.flags |= St), typeof T.getSnapshotBeforeUpdate == "function" && (x !== o.memoizedProps || Ue !== o.memoizedState) && (a.flags |= Go), !1;
      typeof ue == "function" && (m2(a, f, ue, p), mt = a.memoizedState);
      var Ft = h2() || bA(a, f, k, p, Ue, mt, ae);
      return Ft ? (!Ae && (typeof T.UNSAFE_componentWillUpdate == "function" || typeof T.componentWillUpdate == "function") && (typeof T.componentWillUpdate == "function" && T.componentWillUpdate(p, mt, ae), typeof T.UNSAFE_componentWillUpdate == "function" && T.UNSAFE_componentWillUpdate(p, mt, ae)), typeof T.componentDidUpdate == "function" && (a.flags |= St), typeof T.getSnapshotBeforeUpdate == "function" && (a.flags |= Go)) : (typeof T.componentDidUpdate == "function" && (x !== o.memoizedProps || Ue !== o.memoizedState) && (a.flags |= St), typeof T.getSnapshotBeforeUpdate == "function" && (x !== o.memoizedProps || Ue !== o.memoizedState) && (a.flags |= Go), a.memoizedProps = p, a.memoizedState = mt), T.props = p, T.state = mt, T.context = ae, Ft;
    }
    var V5, $5, G5, W5, K5, kA = function(o, a) {
    };
    V5 = !1, $5 = !1, G5 = {}, W5 = {}, K5 = {}, kA = function(o, a) {
      if (!(o === null || typeof o != "object") && !(!o._store || o._store.validated || o.key != null)) {
        if (typeof o._store != "object")
          throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        o._store.validated = !0;
        var f = He(a.type) || "Component";
        W5[f] || (W5[f] = !0, l('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
      }
    };
    var g2 = Array.isArray;
    function sm(o, a, f) {
      var p = f.ref;
      if (p !== null && typeof p != "function" && typeof p != "object") {
        if ((o.mode & Jn || We) && // We warn in ReactElement.js if owner and self are equal for string refs
        // because these cannot be automatically converted to an arrow function
        // using a codemod. Therefore, we don't have to warn about string refs again.
        !(f._owner && f._self && f._owner.stateNode !== f._self)) {
          var y = He(o.type) || "Component";
          G5[y] || (l('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', p), G5[y] = !0);
        }
        if (f._owner) {
          var T = f._owner, x;
          if (T) {
            var k = T;
            if (k.tag !== g)
              throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
            x = k.stateNode;
          }
          if (!x)
            throw Error("Missing owner for string ref " + p + ". This error is likely caused by a bug in React. Please file an issue.");
          var R = "" + p;
          if (a !== null && a.ref !== null && typeof a.ref == "function" && a.ref._stringRef === R)
            return a.ref;
          var U = function(q) {
            var ae = x.refs;
            ae === TA && (ae = x.refs = {}), q === null ? delete ae[R] : ae[R] = q;
          };
          return U._stringRef = R, U;
        } else {
          if (typeof p != "string")
            throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
          if (!f._owner)
            throw Error("Element ref was specified as a string (" + p + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
        }
      }
      return p;
    }
    function y2(o, a) {
      if (o.type !== "textarea")
        throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(a) === "[object Object]" ? "object with keys {" + Object.keys(a).join(", ") + "}" : a) + "). If you meant to render a collection of children, use an array instead.");
    }
    function v2(o) {
      {
        var a = He(o.type) || "Component";
        if (K5[a])
          return;
        K5[a] = !0, l("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
    }
    function NA(o) {
      function a(se, ge) {
        if (o) {
          var re = se.lastEffect;
          re !== null ? (re.nextEffect = ge, se.lastEffect = ge) : se.firstEffect = se.lastEffect = ge, ge.nextEffect = null, ge.flags = Rn;
        }
      }
      function f(se, ge) {
        if (!o)
          return null;
        for (var re = ge; re !== null; )
          a(se, re), re = re.sibling;
        return null;
      }
      function p(se, ge) {
        for (var re = /* @__PURE__ */ new Map(), Ne = ge; Ne !== null; )
          Ne.key !== null ? re.set(Ne.key, Ne) : re.set(Ne.index, Ne), Ne = Ne.sibling;
        return re;
      }
      function y(se, ge) {
        var re = $1(se, ge);
        return re.index = 0, re.sibling = null, re;
      }
      function T(se, ge, re) {
        if (se.index = re, !o)
          return ge;
        var Ne = se.alternate;
        if (Ne !== null) {
          var Ve = Ne.index;
          return Ve < ge ? (se.flags = Rt, ge) : Ve;
        } else
          return se.flags = Rt, ge;
      }
      function x(se) {
        return o && se.alternate === null && (se.flags = Rt), se;
      }
      function k(se, ge, re, Ne) {
        if (ge === null || ge.tag !== N) {
          var Ve = ST(re, se.mode, Ne);
          return Ve.return = se, Ve;
        } else {
          var tt = y(ge, re);
          return tt.return = se, tt;
        }
      }
      function R(se, ge, re, Ne) {
        if (ge !== null && (ge.elementType === re.type || // Keep this check inline so it only runs on the false path:
        l3(ge, re))) {
          var Ve = y(ge, re.props);
          return Ve.ref = sm(se, ge, re), Ve.return = se, Ve._debugSource = re._source, Ve._debugOwner = re._owner, Ve;
        }
        var tt = TT(re, se.mode, Ne);
        return tt.ref = sm(se, ge, re), tt.return = se, tt;
      }
      function U(se, ge, re, Ne) {
        if (ge === null || ge.tag !== S || ge.stateNode.containerInfo !== re.containerInfo || ge.stateNode.implementation !== re.implementation) {
          var Ve = bT(re, se.mode, Ne);
          return Ve.return = se, Ve;
        } else {
          var tt = y(ge, re.children || []);
          return tt.return = se, tt;
        }
      }
      function q(se, ge, re, Ne, Ve) {
        if (ge === null || ge.tag !== O) {
          var tt = G1(re, se.mode, Ne, Ve);
          return tt.return = se, tt;
        } else {
          var nn = y(ge, re);
          return nn.return = se, nn;
        }
      }
      function ae(se, ge, re) {
        if (typeof ge == "string" || typeof ge == "number") {
          var Ne = ST("" + ge, se.mode, re);
          return Ne.return = se, Ne;
        }
        if (typeof ge == "object" && ge !== null) {
          switch (ge.$$typeof) {
            case On: {
              var Ve = TT(ge, se.mode, re);
              return Ve.ref = sm(se, null, ge), Ve.return = se, Ve;
            }
            case Gt: {
              var tt = bT(ge, se.mode, re);
              return tt.return = se, tt;
            }
          }
          if (g2(ge) || mn(ge)) {
            var nn = G1(ge, se.mode, re, null);
            return nn.return = se, nn;
          }
          y2(se, ge);
        }
        return typeof ge == "function" && v2(se), null;
      }
      function K(se, ge, re, Ne) {
        var Ve = ge !== null ? ge.key : null;
        if (typeof re == "string" || typeof re == "number")
          return Ve !== null ? null : k(se, ge, "" + re, Ne);
        if (typeof re == "object" && re !== null) {
          switch (re.$$typeof) {
            case On:
              return re.key === Ve ? re.type === Vr ? q(se, ge, re.props.children, Ne, Ve) : R(se, ge, re, Ne) : null;
            case Gt:
              return re.key === Ve ? U(se, ge, re, Ne) : null;
          }
          if (g2(re) || mn(re))
            return Ve !== null ? null : q(se, ge, re, Ne, null);
          y2(se, re);
        }
        return typeof re == "function" && v2(se), null;
      }
      function ue(se, ge, re, Ne, Ve) {
        if (typeof Ne == "string" || typeof Ne == "number") {
          var tt = se.get(re) || null;
          return k(ge, tt, "" + Ne, Ve);
        }
        if (typeof Ne == "object" && Ne !== null) {
          switch (Ne.$$typeof) {
            case On: {
              var nn = se.get(Ne.key === null ? re : Ne.key) || null;
              return Ne.type === Vr ? q(ge, nn, Ne.props.children, Ve, Ne.key) : R(ge, nn, Ne, Ve);
            }
            case Gt: {
              var Ln = se.get(Ne.key === null ? re : Ne.key) || null;
              return U(ge, Ln, Ne, Ve);
            }
          }
          if (g2(Ne) || mn(Ne)) {
            var jn = se.get(re) || null;
            return q(ge, jn, Ne, Ve, null);
          }
          y2(ge, Ne);
        }
        return typeof Ne == "function" && v2(ge), null;
      }
      function Ae(se, ge, re) {
        {
          if (typeof se != "object" || se === null)
            return ge;
          switch (se.$$typeof) {
            case On:
            case Gt:
              kA(se, re);
              var Ne = se.key;
              if (typeof Ne != "string")
                break;
              if (ge === null) {
                ge = /* @__PURE__ */ new Set(), ge.add(Ne);
                break;
              }
              if (!ge.has(Ne)) {
                ge.add(Ne);
                break;
              }
              l("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.", Ne);
              break;
          }
        }
        return ge;
      }
      function Ue(se, ge, re, Ne) {
        for (var Ve = null, tt = 0; tt < re.length; tt++) {
          var nn = re[tt];
          Ve = Ae(nn, Ve, se);
        }
        for (var Ln = null, jn = null, vn = ge, Sr = 0, pn = 0, Vn = null; vn !== null && pn < re.length; pn++) {
          vn.index > pn ? (Vn = vn, vn = null) : Vn = vn.sibling;
          var Xr = K(se, vn, re[pn], Ne);
          if (Xr === null) {
            vn === null && (vn = Vn);
            break;
          }
          o && vn && Xr.alternate === null && a(se, vn), Sr = T(Xr, Sr, pn), jn === null ? Ln = Xr : jn.sibling = Xr, jn = Xr, vn = Vn;
        }
        if (pn === re.length)
          return f(se, vn), Ln;
        if (vn === null) {
          for (; pn < re.length; pn++) {
            var or = ae(se, re[pn], Ne);
            or !== null && (Sr = T(or, Sr, pn), jn === null ? Ln = or : jn.sibling = or, jn = or);
          }
          return Ln;
        }
        for (var Zs = p(se, vn); pn < re.length; pn++) {
          var ar = ue(Zs, se, pn, re[pn], Ne);
          ar !== null && (o && ar.alternate !== null && Zs.delete(ar.key === null ? pn : ar.key), Sr = T(ar, Sr, pn), jn === null ? Ln = ar : jn.sibling = ar, jn = ar);
        }
        return o && Zs.forEach(function(el) {
          return a(se, el);
        }), Ln;
      }
      function mt(se, ge, re, Ne) {
        var Ve = mn(re);
        if (typeof Ve != "function")
          throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
        {
          typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
          re[Symbol.toStringTag] === "Generator" && ($5 || l("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), $5 = !0), re.entries === Ve && (V5 || l("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), V5 = !0);
          var tt = Ve.call(re);
          if (tt)
            for (var nn = null, Ln = tt.next(); !Ln.done; Ln = tt.next()) {
              var jn = Ln.value;
              nn = Ae(jn, nn, se);
            }
        }
        var vn = Ve.call(re);
        if (vn == null)
          throw Error("An iterable object provided no iterator.");
        for (var Sr = null, pn = null, Vn = ge, Xr = 0, or = 0, Zs = null, ar = vn.next(); Vn !== null && !ar.done; or++, ar = vn.next()) {
          Vn.index > or ? (Zs = Vn, Vn = null) : Zs = Vn.sibling;
          var el = K(se, Vn, ar.value, Ne);
          if (el === null) {
            Vn === null && (Vn = Zs);
            break;
          }
          o && Vn && el.alternate === null && a(se, Vn), Xr = T(el, Xr, or), pn === null ? Sr = el : pn.sibling = el, pn = el, Vn = Zs;
        }
        if (ar.done)
          return f(se, Vn), Sr;
        if (Vn === null) {
          for (; !ar.done; or++, ar = vn.next()) {
            var W1 = ae(se, ar.value, Ne);
            W1 !== null && (Xr = T(W1, Xr, or), pn === null ? Sr = W1 : pn.sibling = W1, pn = W1);
          }
          return Sr;
        }
        for (var OT = p(se, Vn); !ar.done; or++, ar = vn.next()) {
          var tc = ue(OT, se, or, ar.value, Ne);
          tc !== null && (o && tc.alternate !== null && OT.delete(tc.key === null ? or : tc.key), Xr = T(tc, Xr, or), pn === null ? Sr = tc : pn.sibling = tc, pn = tc);
        }
        return o && OT.forEach(function(kP) {
          return a(se, kP);
        }), Sr;
      }
      function Ft(se, ge, re, Ne) {
        if (ge !== null && ge.tag === N) {
          f(se, ge.sibling);
          var Ve = y(ge, re);
          return Ve.return = se, Ve;
        }
        f(se, ge);
        var tt = ST(re, se.mode, Ne);
        return tt.return = se, tt;
      }
      function At(se, ge, re, Ne) {
        for (var Ve = re.key, tt = ge; tt !== null; ) {
          if (tt.key === Ve) {
            switch (tt.tag) {
              case O: {
                if (re.type === Vr) {
                  f(se, tt.sibling);
                  var nn = y(tt, re.props.children);
                  return nn.return = se, nn._debugSource = re._source, nn._debugOwner = re._owner, nn;
                }
                break;
              }
              case Be:
              default: {
                if (tt.elementType === re.type || // Keep this check inline so it only runs on the false path:
                l3(tt, re)) {
                  f(se, tt.sibling);
                  var Ln = y(tt, re.props);
                  return Ln.ref = sm(se, tt, re), Ln.return = se, Ln._debugSource = re._source, Ln._debugOwner = re._owner, Ln;
                }
                break;
              }
            }
            f(se, tt);
            break;
          } else
            a(se, tt);
          tt = tt.sibling;
        }
        if (re.type === Vr) {
          var jn = G1(re.props.children, se.mode, Ne, re.key);
          return jn.return = se, jn;
        } else {
          var vn = TT(re, se.mode, Ne);
          return vn.ref = sm(se, ge, re), vn.return = se, vn;
        }
      }
      function ln(se, ge, re, Ne) {
        for (var Ve = re.key, tt = ge; tt !== null; ) {
          if (tt.key === Ve)
            if (tt.tag === S && tt.stateNode.containerInfo === re.containerInfo && tt.stateNode.implementation === re.implementation) {
              f(se, tt.sibling);
              var nn = y(tt, re.children || []);
              return nn.return = se, nn;
            } else {
              f(se, tt);
              break;
            }
          else
            a(se, tt);
          tt = tt.sibling;
        }
        var Ln = bT(re, se.mode, Ne);
        return Ln.return = se, Ln;
      }
      function bn(se, ge, re, Ne) {
        var Ve = typeof re == "object" && re !== null && re.type === Vr && re.key === null;
        Ve && (re = re.props.children);
        var tt = typeof re == "object" && re !== null;
        if (tt)
          switch (re.$$typeof) {
            case On:
              return x(At(se, ge, re, Ne));
            case Gt:
              return x(ln(se, ge, re, Ne));
          }
        if (typeof re == "string" || typeof re == "number")
          return x(Ft(se, ge, "" + re, Ne));
        if (g2(re))
          return Ue(se, ge, re, Ne);
        if (mn(re))
          return mt(se, ge, re, Ne);
        if (tt && y2(se, re), typeof re == "function" && v2(se), typeof re > "u" && !Ve)
          switch (se.tag) {
            case g: {
              var nn = se.stateNode;
              if (nn.render._isMockFunction)
                break;
            }
            case Be:
            case h:
            case j:
            case H:
              throw Error((He(se.type) || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
          }
        return f(se, ge);
      }
      return bn;
    }
    var E2 = NA(!0), wA = NA(!1);
    function wM(o, a) {
      if (!(o === null || a.child === o.child))
        throw Error("Resuming work not yet implemented.");
      if (a.child !== null) {
        var f = a.child, p = $1(f, f.pendingProps);
        for (a.child = p, p.return = a; f.sibling !== null; )
          f = f.sibling, p = p.sibling = $1(f, f.pendingProps), p.return = a;
        p.sibling = null;
      }
    }
    function OM(o, a) {
      for (var f = o.child; f !== null; )
        jI(f, a), f = f.sibling;
    }
    var lm = {}, Yu = $u(lm), um = $u(lm), T2 = $u(lm);
    function C2(o) {
      if (o === lm)
        throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
      return o;
    }
    function OA() {
      var o = C2(T2.current);
      return o;
    }
    function Y5(o, a) {
      _i(T2, a, o), _i(um, o, o), _i(Yu, lm, o);
      var f = cD(a);
      xi(Yu, o), _i(Yu, f, o);
    }
    function _d(o) {
      xi(Yu, o), xi(um, o), xi(T2, o);
    }
    function Q5() {
      var o = C2(Yu.current);
      return o;
    }
    function RA(o) {
      C2(T2.current);
      var a = C2(Yu.current), f = fD(a, o.type);
      a !== f && (_i(um, o, o), _i(Yu, f, o));
    }
    function X5(o) {
      um.current === o && (xi(Yu, o), xi(um, o));
    }
    var RM = 0, DA = 1, J5 = 1, cm = 2, $a = $u(RM);
    function S2(o, a) {
      return (o & a) !== 0;
    }
    function fm(o) {
      return o & DA;
    }
    function Z5(o, a) {
      return o & DA | a;
    }
    function DM(o, a) {
      return o | a;
    }
    function I1(o, a) {
      _i($a, a, o);
    }
    function kd(o) {
      xi($a, o);
    }
    function MM(o, a) {
      var f = o.memoizedState;
      if (f !== null)
        return f.dehydrated !== null;
      var p = o.memoizedProps;
      return p.fallback === void 0 ? !1 : p.unstable_avoidThisFallback !== !0 ? !0 : !a;
    }
    function b2(o) {
      for (var a = o; a !== null; ) {
        if (a.tag === ee) {
          var f = a.memoizedState;
          if (f !== null) {
            var p = f.dehydrated;
            if (p === null || ID(p) || PD(p))
              return a;
          }
        } else if (a.tag === fe && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        a.memoizedProps.revealOrder !== void 0) {
          var y = (a.flags & hn) !== yn;
          if (y)
            return a;
        } else if (a.child !== null) {
          a.child.return = a, a = a.child;
          continue;
        }
        if (a === o)
          return null;
        for (; a.sibling === null; ) {
          if (a.return === null || a.return === o)
            return null;
          a = a.return;
        }
        a.sibling.return = a.return, a = a.sibling;
      }
      return null;
    }
    var eE = (
      /*  */
      0
    ), Nd = (
      /* */
      1
    ), wd = (
      /*    */
      2
    ), dm = (
      /*   */
      4
    ), ia = null, P1 = null, Qu = !1;
    function LM(o) {
      var a = o.stateNode.containerInfo;
      return P1 = Ib(a), ia = o, Qu = !0, !0;
    }
    function MA(o, a) {
      switch (o.tag) {
        case C:
          VD(o.stateNode.containerInfo, a);
          break;
        case b:
          $D(o.type, o.memoizedProps, o.stateNode, a);
          break;
      }
      var f = YI();
      f.stateNode = a, f.return = o, f.flags = Rn, o.lastEffect !== null ? (o.lastEffect.nextEffect = f, o.lastEffect = f) : o.firstEffect = o.lastEffect = f;
    }
    function LA(o, a) {
      switch (a.flags = a.flags & ~Zi | Rt, o.tag) {
        case C: {
          var f = o.stateNode.containerInfo;
          switch (a.tag) {
            case b:
              var p = a.type;
              a.pendingProps, GD(f, p);
              break;
            case N:
              var y = a.pendingProps;
              WD(f, y);
              break;
          }
          break;
        }
        case b: {
          var T = o.type, x = o.memoizedProps, k = o.stateNode;
          switch (a.tag) {
            case b:
              var R = a.type;
              a.pendingProps, KD(T, x, k, R);
              break;
            case N:
              var U = a.pendingProps;
              YD(T, x, k, U);
              break;
            case ee:
              QD(T, x);
              break;
          }
          break;
        }
        default:
          return;
      }
    }
    function IA(o, a) {
      switch (o.tag) {
        case b: {
          var f = o.type;
          o.pendingProps;
          var p = MD(a, f);
          return p !== null ? (o.stateNode = p, !0) : !1;
        }
        case N: {
          var y = o.pendingProps, T = LD(a, y);
          return T !== null ? (o.stateNode = T, !0) : !1;
        }
        case ee:
          return !1;
        default:
          return !1;
      }
    }
    function tE(o) {
      if (Qu) {
        var a = P1;
        if (!a) {
          LA(ia, o), Qu = !1, ia = o;
          return;
        }
        var f = a;
        if (!IA(o, a)) {
          if (a = $g(f), !a || !IA(o, a)) {
            LA(ia, o), Qu = !1, ia = o;
            return;
          }
          MA(ia, f);
        }
        ia = o, P1 = Ib(a);
      }
    }
    function IM(o, a, f) {
      var p = o.stateNode, y = FD(p, o.type, o.memoizedProps, a, f, o);
      return o.updateQueue = y, y !== null;
    }
    function PM(o) {
      var a = o.stateNode, f = o.memoizedProps, p = BD(a, f, o);
      if (p) {
        var y = ia;
        if (y !== null)
          switch (y.tag) {
            case C: {
              var T = y.stateNode.containerInfo;
              qD(T, a, f);
              break;
            }
            case b: {
              var x = y.type, k = y.memoizedProps, R = y.stateNode;
              jD(x, k, R, a, f);
              break;
            }
          }
      }
      return p;
    }
    function FM(o) {
      var a = o.memoizedState, f = a !== null ? a.dehydrated : null;
      if (!f)
        throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
      return UD(f);
    }
    function PA(o) {
      for (var a = o.return; a !== null && a.tag !== b && a.tag !== C && a.tag !== ee; )
        a = a.return;
      ia = a;
    }
    function A2(o) {
      if (o !== ia)
        return !1;
      if (!Qu)
        return PA(o), Qu = !0, !1;
      var a = o.type;
      if (o.tag !== b || a !== "head" && a !== "body" && !p5(a, o.memoizedProps))
        for (var f = P1; f; )
          MA(o, f), f = $g(f);
      return PA(o), o.tag === ee ? P1 = FM(o) : P1 = ia ? $g(o.stateNode) : null, !0;
    }
    function nE() {
      ia = null, P1 = null, Qu = !1;
    }
    function rE() {
      return Qu;
    }
    var hm = [], iE;
    iE = {};
    function BM(o) {
      hm.push(o);
    }
    function oE() {
      for (var o = 0; o < hm.length; o++) {
        var a = hm[o];
        a._workInProgressVersionPrimary = null;
      }
      hm.length = 0;
    }
    function UM(o) {
      return o._workInProgressVersionPrimary;
    }
    function FA(o, a) {
      o._workInProgressVersionPrimary = a, hm.push(o);
    }
    function HM(o) {
      o._currentPrimaryRenderer == null ? o._currentPrimaryRenderer = iE : o._currentPrimaryRenderer !== iE && l("Detected multiple renderers concurrently rendering the same mutable source. This is currently unsupported.");
    }
    var Ge = i.ReactCurrentDispatcher, oa = i.ReactCurrentBatchConfig, aE, sE;
    sE = {}, aE = /* @__PURE__ */ new Set();
    var pm = Te, Nn = null, Ni = null, Qr = null, x2 = !1, mm = !1, zM = 25, xe = null, aa = null, Xu = -1, lE = !1;
    function Sn() {
      {
        var o = xe;
        aa === null ? aa = [o] : aa.push(o);
      }
    }
    function Qe() {
      {
        var o = xe;
        aa !== null && (Xu++, aa[Xu] !== o && qM(o));
      }
    }
    function gm(o) {
      o != null && !Array.isArray(o) && l("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", xe, typeof o);
    }
    function qM(o) {
      {
        var a = He(Nn.type);
        if (!aE.has(a) && (aE.add(a), aa !== null)) {
          for (var f = "", p = 30, y = 0; y <= Xu; y++) {
            for (var T = aa[y], x = y === Xu ? o : T, k = y + 1 + ". " + T; k.length < p; )
              k += " ";
            k += x + `
`, f += k;
          }
          l(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, a, f);
        }
      }
    }
    function ao() {
      throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
    }
    function uE(o, a) {
      if (lE)
        return !1;
      if (a === null)
        return l("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", xe), !1;
      o.length !== a.length && l(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, xe, "[" + a.join(", ") + "]", "[" + o.join(", ") + "]");
      for (var f = 0; f < a.length && f < o.length; f++)
        if (!d(o[f], a[f]))
          return !1;
      return !0;
    }
    function Od(o, a, f, p, y, T) {
      pm = T, Nn = a, aa = o !== null ? o._debugHookTypes : null, Xu = -1, lE = o !== null && o.type !== a.type, a.memoizedState = null, a.updateQueue = null, a.lanes = Te, o !== null && o.memoizedState !== null ? Ge.current = JA : aa !== null ? Ge.current = XA : Ge.current = QA;
      var x = f(p, y);
      if (mm) {
        var k = 0;
        do {
          if (mm = !1, !(k < zM))
            throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          k += 1, lE = !1, Ni = null, Qr = null, a.updateQueue = null, Xu = -1, Ge.current = ZA, x = f(p, y);
        } while (mm);
      }
      Ge.current = F2, a._debugHookTypes = aa;
      var R = Ni !== null && Ni.next !== null;
      if (pm = Te, Nn = null, Ni = null, Qr = null, xe = null, aa = null, Xu = -1, x2 = !1, R)
        throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
      return x;
    }
    function BA(o, a, f) {
      a.updateQueue = o.updateQueue, a.flags &= ~(bu | St), o.lanes = Fu(o.lanes, f);
    }
    function UA() {
      if (Ge.current = F2, x2) {
        for (var o = Nn.memoizedState; o !== null; ) {
          var a = o.queue;
          a !== null && (a.pending = null), o = o.next;
        }
        x2 = !1;
      }
      pm = Te, Nn = null, Ni = null, Qr = null, aa = null, Xu = -1, xe = null, P2 = !1, mm = !1;
    }
    function F1() {
      var o = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      return Qr === null ? Nn.memoizedState = Qr = o : Qr = Qr.next = o, Qr;
    }
    function B1() {
      var o;
      if (Ni === null) {
        var a = Nn.alternate;
        a !== null ? o = a.memoizedState : o = null;
      } else
        o = Ni.next;
      var f;
      if (Qr === null ? f = Nn.memoizedState : f = Qr.next, f !== null)
        Qr = f, f = Qr.next, Ni = o;
      else {
        if (o === null)
          throw Error("Rendered more hooks than during the previous render.");
        Ni = o;
        var p = {
          memoizedState: Ni.memoizedState,
          baseState: Ni.baseState,
          baseQueue: Ni.baseQueue,
          queue: Ni.queue,
          next: null
        };
        Qr === null ? Nn.memoizedState = Qr = p : Qr = Qr.next = p;
      }
      return Qr;
    }
    function jM() {
      return {
        lastEffect: null
      };
    }
    function _2(o, a) {
      return typeof a == "function" ? a(o) : a;
    }
    function cE(o, a, f) {
      var p = F1(), y;
      f !== void 0 ? y = f(a) : y = a, p.memoizedState = p.baseState = y;
      var T = p.queue = {
        pending: null,
        dispatch: null,
        lastRenderedReducer: o,
        lastRenderedState: y
      }, x = T.dispatch = bE.bind(null, Nn, T);
      return [p.memoizedState, x];
    }
    function fE(o, a, f) {
      var p = B1(), y = p.queue;
      if (y === null)
        throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      y.lastRenderedReducer = o;
      var T = Ni, x = T.baseQueue, k = y.pending;
      if (k !== null) {
        if (x !== null) {
          var R = x.next, U = k.next;
          x.next = U, k.next = R;
        }
        T.baseQueue !== x && l("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), T.baseQueue = x = k, y.pending = null;
      }
      if (x !== null) {
        var q = x.next, ae = T.baseState, K = null, ue = null, Ae = null, Ue = q;
        do {
          var mt = Ue.lane;
          if (Ps(pm, mt)) {
            if (Ae !== null) {
              var At = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: Qn,
                action: Ue.action,
                eagerReducer: Ue.eagerReducer,
                eagerState: Ue.eagerState,
                next: null
              };
              Ae = Ae.next = At;
            }
            if (Ue.eagerReducer === o)
              ae = Ue.eagerState;
            else {
              var ln = Ue.action;
              ae = o(ae, ln);
            }
          } else {
            var Ft = {
              lane: mt,
              action: Ue.action,
              eagerReducer: Ue.eagerReducer,
              eagerState: Ue.eagerState,
              next: null
            };
            Ae === null ? (ue = Ae = Ft, K = ae) : Ae = Ae.next = Ft, Nn.lanes = fn(Nn.lanes, mt), lT(mt);
          }
          Ue = Ue.next;
        } while (Ue !== null && Ue !== q);
        Ae === null ? K = ae : Ae.next = ue, d(ae, p.memoizedState) || FE(), p.memoizedState = ae, p.baseState = K, p.baseQueue = Ae, y.lastRenderedState = ae;
      }
      var bn = y.dispatch;
      return [p.memoizedState, bn];
    }
    function dE(o, a, f) {
      var p = B1(), y = p.queue;
      if (y === null)
        throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
      y.lastRenderedReducer = o;
      var T = y.dispatch, x = y.pending, k = p.memoizedState;
      if (x !== null) {
        y.pending = null;
        var R = x.next, U = R;
        do {
          var q = U.action;
          k = o(k, q), U = U.next;
        } while (U !== R);
        d(k, p.memoizedState) || FE(), p.memoizedState = k, p.baseQueue === null && (p.baseState = k), y.lastRenderedState = k;
      }
      return [k, T];
    }
    function HA(o, a, f) {
      HM(a);
      var p = a._getVersion, y = p(a._source), T = !1, x = UM(a);
      if (x !== null ? T = x === y : (T = Ps(pm, o.mutableReadLanes), T && FA(a, y)), T) {
        var k = f(a._source);
        return typeof k == "function" && l("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing."), k;
      } else
        throw BM(a), Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
    }
    function zA(o, a, f, p) {
      var y = WL();
      if (y === null)
        throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
      var T = a._getVersion, x = T(a._source), k = Ge.current, R = k.useState(function() {
        return HA(y, a, f);
      }), U = R[0], q = R[1], ae = U, K = Qr, ue = o.memoizedState, Ae = ue.refs, Ue = Ae.getSnapshot, mt = ue.source, Ft = ue.subscribe, At = Nn;
      if (o.memoizedState = {
        refs: Ae,
        source: a,
        subscribe: p
      }, k.useEffect(function() {
        Ae.getSnapshot = f, Ae.setSnapshot = q;
        var bn = T(a._source);
        if (!d(x, bn)) {
          var se = f(a._source);
          if (typeof se == "function" && l("Mutable source should not return a function as the snapshot value. Functions may close over mutable values and cause tearing."), !d(ae, se)) {
            q(se);
            var ge = Ju(At);
            gg(y, ge);
          }
          kp(y, y.mutableReadLanes);
        }
      }, [f, a, p]), k.useEffect(function() {
        var bn = function() {
          var ge = Ae.getSnapshot, re = Ae.setSnapshot;
          try {
            re(ge(a._source));
            var Ne = Ju(At);
            gg(y, Ne);
          } catch (Ve) {
            re(function() {
              throw Ve;
            });
          }
        }, se = p(a._source, bn);
        return typeof se != "function" && l("Mutable source subscribe function must return an unsubscribe function."), se;
      }, [a, p]), !d(Ue, f) || !d(mt, a) || !d(Ft, p)) {
        var ln = {
          pending: null,
          dispatch: null,
          lastRenderedReducer: _2,
          lastRenderedState: ae
        };
        ln.dispatch = q = bE.bind(null, Nn, ln), K.queue = ln, K.baseQueue = null, ae = HA(y, a, f), K.memoizedState = K.baseState = ae;
      }
      return ae;
    }
    function hE(o, a, f) {
      var p = F1();
      return p.memoizedState = {
        refs: {
          getSnapshot: a,
          setSnapshot: null
        },
        source: o,
        subscribe: f
      }, zA(p, o, a, f);
    }
    function k2(o, a, f) {
      var p = B1();
      return zA(p, o, a, f);
    }
    function U1(o) {
      var a = F1();
      typeof o == "function" && (o = o()), a.memoizedState = a.baseState = o;
      var f = a.queue = {
        pending: null,
        dispatch: null,
        lastRenderedReducer: _2,
        lastRenderedState: o
      }, p = f.dispatch = bE.bind(null, Nn, f);
      return [a.memoizedState, p];
    }
    function ym(o) {
      return fE(_2);
    }
    function vm(o) {
      return dE(_2);
    }
    function N2(o, a, f, p) {
      var y = {
        tag: o,
        create: a,
        destroy: f,
        deps: p,
        // Circular
        next: null
      }, T = Nn.updateQueue;
      if (T === null)
        T = jM(), Nn.updateQueue = T, T.lastEffect = y.next = y;
      else {
        var x = T.lastEffect;
        if (x === null)
          T.lastEffect = y.next = y;
        else {
          var k = x.next;
          x.next = y, y.next = k, T.lastEffect = y;
        }
      }
      return y;
    }
    function w2(o) {
      var a = F1(), f = {
        current: o
      };
      return Object.seal(f), a.memoizedState = f, f;
    }
    function Rd(o) {
      var a = B1();
      return a.memoizedState;
    }
    function pE(o, a, f, p) {
      var y = F1(), T = p === void 0 ? null : p;
      Nn.flags |= o, y.memoizedState = N2(Nd | a, f, void 0, T);
    }
    function mE(o, a, f, p) {
      var y = B1(), T = p === void 0 ? null : p, x = void 0;
      if (Ni !== null) {
        var k = Ni.memoizedState;
        if (x = k.destroy, T !== null) {
          var R = k.deps;
          if (uE(T, R)) {
            N2(a, f, x, T);
            return;
          }
        }
      }
      Nn.flags |= o, y.memoizedState = N2(Nd | a, f, x, T);
    }
    function O2(o, a) {
      return typeof jest < "u" && n3(Nn), pE(St | bu, dm, o, a);
    }
    function Dd(o, a) {
      return typeof jest < "u" && n3(Nn), mE(St | bu, dm, o, a);
    }
    function gE(o, a) {
      return pE(St, wd, o, a);
    }
    function R2(o, a) {
      return mE(St, wd, o, a);
    }
    function qA(o, a) {
      if (typeof a == "function") {
        var f = a, p = o();
        return f(p), function() {
          f(null);
        };
      } else if (a != null) {
        var y = a;
        y.hasOwnProperty("current") || l("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(y).join(", ") + "}");
        var T = o();
        return y.current = T, function() {
          y.current = null;
        };
      }
    }
    function yE(o, a, f) {
      typeof a != "function" && l("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", a !== null ? typeof a : "null");
      var p = f != null ? f.concat([o]) : null;
      return pE(St, wd, qA.bind(null, a, o), p);
    }
    function D2(o, a, f) {
      typeof a != "function" && l("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", a !== null ? typeof a : "null");
      var p = f != null ? f.concat([o]) : null;
      return mE(St, wd, qA.bind(null, a, o), p);
    }
    function VM(o, a) {
    }
    var M2 = VM;
    function vE(o, a) {
      var f = F1(), p = a === void 0 ? null : a;
      return f.memoizedState = [o, p], o;
    }
    function L2(o, a) {
      var f = B1(), p = a === void 0 ? null : a, y = f.memoizedState;
      if (y !== null && p !== null) {
        var T = y[1];
        if (uE(p, T))
          return y[0];
      }
      return f.memoizedState = [o, p], o;
    }
    function EE(o, a) {
      var f = F1(), p = a === void 0 ? null : a, y = o();
      return f.memoizedState = [y, p], y;
    }
    function I2(o, a) {
      var f = B1(), p = a === void 0 ? null : a, y = f.memoizedState;
      if (y !== null && p !== null) {
        var T = y[1];
        if (uE(p, T))
          return y[0];
      }
      var x = o();
      return f.memoizedState = [x, p], x;
    }
    function TE(o) {
      var a = U1(o), f = a[0], p = a[1];
      return O2(function() {
        var y = oa.transition;
        oa.transition = 1;
        try {
          p(o);
        } finally {
          oa.transition = y;
        }
      }, [o]), f;
    }
    function jA(o) {
      var a = ym(), f = a[0], p = a[1];
      return Dd(function() {
        var y = oa.transition;
        oa.transition = 1;
        try {
          p(o);
        } finally {
          oa.transition = y;
        }
      }, [o]), f;
    }
    function VA(o) {
      var a = vm(), f = a[0], p = a[1];
      return Dd(function() {
        var y = oa.transition;
        oa.transition = 1;
        try {
          p(o);
        } finally {
          oa.transition = y;
        }
      }, [o]), f;
    }
    function $M(o, a) {
      var f = bd();
      R1(f < O1 ? O1 : f, function() {
        o(!0);
      }), R1(f > zl ? zl : f, function() {
        var p = oa.transition;
        oa.transition = 1;
        try {
          o(!1), a();
        } finally {
          oa.transition = p;
        }
      });
    }
    function CE() {
      var o = U1(!1), a = o[0], f = o[1], p = $M.bind(null, f);
      return w2(p), [p, a];
    }
    function $A() {
      var o = ym(), a = o[0], f = Rd(), p = f.current;
      return [p, a];
    }
    function GA() {
      var o = vm(), a = o[0], f = Rd(), p = f.current;
      return [p, a];
    }
    var P2 = !1;
    function GM() {
      return P2;
    }
    function WA(o) {
      {
        var a = He(o.type) || "Unknown";
        xf() && !sE[a] && (l("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly."), sE[a] = !0);
      }
    }
    function SE() {
      var o = JD.bind(null, WA.bind(null, Nn));
      if (rE()) {
        var a = !1, f = Nn, p = function() {
          throw a || (a = !0, P2 = !0, T(o()), P2 = !1, WA(f)), Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
        }, y = eM(p), T = U1(y)[1];
        return (Nn.mode & oo) === qn && (Nn.flags |= St | bu, N2(Nd | dm, function() {
          T(o());
        }, void 0, null)), y;
      } else {
        var x = o();
        return U1(x), x;
      }
    }
    function KA() {
      var o = ym()[0];
      return o;
    }
    function YA() {
      var o = vm()[0];
      return o;
    }
    function bE(o, a, f) {
      typeof arguments[3] == "function" && l("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
      var p = Ro(), y = Ju(o), T = {
        lane: y,
        action: f,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, x = a.pending;
      x === null ? T.next = T : (T.next = x.next, x.next = T), a.pending = T;
      var k = o.alternate;
      if (o === Nn || k !== null && k === Nn)
        mm = x2 = !0;
      else {
        if (o.lanes === Te && (k === null || k.lanes === Te)) {
          var R = a.lastRenderedReducer;
          if (R !== null) {
            var U;
            U = Ge.current, Ge.current = Ga;
            try {
              var q = a.lastRenderedState, ae = R(q, f);
              if (T.eagerReducer = R, T.eagerState = ae, d(ae, q))
                return;
            } catch {
            } finally {
              Ge.current = U;
            }
          }
        }
        typeof jest < "u" && (t3(o), wI(o)), wi(o, y, p);
      }
    }
    var F2 = {
      readContext: Cr,
      useCallback: ao,
      useContext: ao,
      useEffect: ao,
      useImperativeHandle: ao,
      useLayoutEffect: ao,
      useMemo: ao,
      useReducer: ao,
      useRef: ao,
      useState: ao,
      useDebugValue: ao,
      useDeferredValue: ao,
      useTransition: ao,
      useMutableSource: ao,
      useOpaqueIdentifier: ao,
      unstable_isNewReconciler: De
    }, QA = null, XA = null, JA = null, ZA = null, Ks = null, Ga = null, B2 = null;
    {
      var AE = function() {
        l("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
      }, zt = function() {
        l("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
      };
      QA = {
        readContext: function(o, a) {
          return Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", Sn(), gm(a), vE(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", Sn(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", Sn(), gm(a), O2(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", Sn(), gm(f), yE(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", Sn(), gm(a), gE(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", Sn(), gm(a);
          var f = Ge.current;
          Ge.current = Ks;
          try {
            return EE(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", Sn();
          var p = Ge.current;
          Ge.current = Ks;
          try {
            return cE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", Sn(), w2(o);
        },
        useState: function(o) {
          xe = "useState", Sn();
          var a = Ge.current;
          Ge.current = Ks;
          try {
            return U1(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", Sn(), void 0;
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", Sn(), TE(o);
        },
        useTransition: function() {
          return xe = "useTransition", Sn(), CE();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", Sn(), hE(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", Sn(), SE();
        },
        unstable_isNewReconciler: De
      }, XA = {
        readContext: function(o, a) {
          return Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", Qe(), vE(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", Qe(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", Qe(), O2(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", Qe(), yE(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", Qe(), gE(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", Qe();
          var f = Ge.current;
          Ge.current = Ks;
          try {
            return EE(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", Qe();
          var p = Ge.current;
          Ge.current = Ks;
          try {
            return cE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", Qe(), w2(o);
        },
        useState: function(o) {
          xe = "useState", Qe();
          var a = Ge.current;
          Ge.current = Ks;
          try {
            return U1(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", Qe(), void 0;
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", Qe(), TE(o);
        },
        useTransition: function() {
          return xe = "useTransition", Qe(), CE();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", Qe(), hE(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", Qe(), SE();
        },
        unstable_isNewReconciler: De
      }, JA = {
        readContext: function(o, a) {
          return Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", Qe(), L2(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", Qe(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", Qe(), Dd(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", Qe(), D2(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", Qe(), R2(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", Qe();
          var f = Ge.current;
          Ge.current = Ga;
          try {
            return I2(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", Qe();
          var p = Ge.current;
          Ge.current = Ga;
          try {
            return fE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", Qe(), Rd();
        },
        useState: function(o) {
          xe = "useState", Qe();
          var a = Ge.current;
          Ge.current = Ga;
          try {
            return ym(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", Qe(), M2();
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", Qe(), jA(o);
        },
        useTransition: function() {
          return xe = "useTransition", Qe(), $A();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", Qe(), k2(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", Qe(), KA();
        },
        unstable_isNewReconciler: De
      }, ZA = {
        readContext: function(o, a) {
          return Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", Qe(), L2(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", Qe(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", Qe(), Dd(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", Qe(), D2(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", Qe(), R2(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", Qe();
          var f = Ge.current;
          Ge.current = B2;
          try {
            return I2(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", Qe();
          var p = Ge.current;
          Ge.current = B2;
          try {
            return dE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", Qe(), Rd();
        },
        useState: function(o) {
          xe = "useState", Qe();
          var a = Ge.current;
          Ge.current = B2;
          try {
            return vm(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", Qe(), M2();
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", Qe(), VA(o);
        },
        useTransition: function() {
          return xe = "useTransition", Qe(), GA();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", Qe(), k2(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", Qe(), YA();
        },
        unstable_isNewReconciler: De
      }, Ks = {
        readContext: function(o, a) {
          return AE(), Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", zt(), Sn(), vE(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", zt(), Sn(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", zt(), Sn(), O2(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", zt(), Sn(), yE(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", zt(), Sn(), gE(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", zt(), Sn();
          var f = Ge.current;
          Ge.current = Ks;
          try {
            return EE(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", zt(), Sn();
          var p = Ge.current;
          Ge.current = Ks;
          try {
            return cE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", zt(), Sn(), w2(o);
        },
        useState: function(o) {
          xe = "useState", zt(), Sn();
          var a = Ge.current;
          Ge.current = Ks;
          try {
            return U1(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", zt(), Sn(), void 0;
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", zt(), Sn(), TE(o);
        },
        useTransition: function() {
          return xe = "useTransition", zt(), Sn(), CE();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", zt(), Sn(), hE(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", zt(), Sn(), SE();
        },
        unstable_isNewReconciler: De
      }, Ga = {
        readContext: function(o, a) {
          return AE(), Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", zt(), Qe(), L2(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", zt(), Qe(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", zt(), Qe(), Dd(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", zt(), Qe(), D2(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", zt(), Qe(), R2(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", zt(), Qe();
          var f = Ge.current;
          Ge.current = Ga;
          try {
            return I2(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", zt(), Qe();
          var p = Ge.current;
          Ge.current = Ga;
          try {
            return fE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", zt(), Qe(), Rd();
        },
        useState: function(o) {
          xe = "useState", zt(), Qe();
          var a = Ge.current;
          Ge.current = Ga;
          try {
            return ym(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", zt(), Qe(), M2();
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", zt(), Qe(), jA(o);
        },
        useTransition: function() {
          return xe = "useTransition", zt(), Qe(), $A();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", zt(), Qe(), k2(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", zt(), Qe(), KA();
        },
        unstable_isNewReconciler: De
      }, B2 = {
        readContext: function(o, a) {
          return AE(), Cr(o, a);
        },
        useCallback: function(o, a) {
          return xe = "useCallback", zt(), Qe(), L2(o, a);
        },
        useContext: function(o, a) {
          return xe = "useContext", zt(), Qe(), Cr(o, a);
        },
        useEffect: function(o, a) {
          return xe = "useEffect", zt(), Qe(), Dd(o, a);
        },
        useImperativeHandle: function(o, a, f) {
          return xe = "useImperativeHandle", zt(), Qe(), D2(o, a, f);
        },
        useLayoutEffect: function(o, a) {
          return xe = "useLayoutEffect", zt(), Qe(), R2(o, a);
        },
        useMemo: function(o, a) {
          xe = "useMemo", zt(), Qe();
          var f = Ge.current;
          Ge.current = Ga;
          try {
            return I2(o, a);
          } finally {
            Ge.current = f;
          }
        },
        useReducer: function(o, a, f) {
          xe = "useReducer", zt(), Qe();
          var p = Ge.current;
          Ge.current = Ga;
          try {
            return dE(o, a, f);
          } finally {
            Ge.current = p;
          }
        },
        useRef: function(o) {
          return xe = "useRef", zt(), Qe(), Rd();
        },
        useState: function(o) {
          xe = "useState", zt(), Qe();
          var a = Ge.current;
          Ge.current = Ga;
          try {
            return vm(o);
          } finally {
            Ge.current = a;
          }
        },
        useDebugValue: function(o, a) {
          return xe = "useDebugValue", zt(), Qe(), M2();
        },
        useDeferredValue: function(o) {
          return xe = "useDeferredValue", zt(), Qe(), VA(o);
        },
        useTransition: function() {
          return xe = "useTransition", zt(), Qe(), GA();
        },
        useMutableSource: function(o, a, f) {
          return xe = "useMutableSource", zt(), Qe(), k2(o, a, f);
        },
        useOpaqueIdentifier: function() {
          return xe = "useOpaqueIdentifier", zt(), Qe(), YA();
        },
        unstable_isNewReconciler: De
      };
    }
    var U2 = n.unstable_now, e8 = 0, Em = -1;
    function WM() {
      return e8;
    }
    function t8() {
      e8 = U2();
    }
    function xE(o) {
      Em = U2(), o.actualStartTime < 0 && (o.actualStartTime = U2());
    }
    function n8(o) {
      Em = -1;
    }
    function H2(o, a) {
      if (Em >= 0) {
        var f = U2() - Em;
        o.actualDuration += f, a && (o.selfBaseDuration = f), Em = -1;
      }
    }
    function _E(o) {
      for (var a = o.child; a; )
        o.actualDuration += a.actualDuration, a = a.sibling;
    }
    var Tm = i.ReactCurrentOwner, Ys = !1, kE, Cm, NE, wE, OE, H1, RE, z2;
    kE = {}, Cm = {}, NE = {}, wE = {}, OE = {}, H1 = !1, RE = {}, z2 = {};
    function so(o, a, f, p) {
      o === null ? a.child = wA(a, null, f, p) : a.child = E2(a, o.child, f, p);
    }
    function KM(o, a, f, p) {
      a.child = E2(a, o.child, null, p), a.child = E2(a, null, f, p);
    }
    function r8(o, a, f, p, y) {
      if (a.type !== a.elementType) {
        var T = f.propTypes;
        T && qa(
          T,
          p,
          // Resolved props
          "prop",
          He(f)
        );
      }
      var x = f.render, k = a.ref, R;
      xd(a, y);
      {
        if (Tm.current = a, Kr(!0), R = Od(o, a, x, p, k, y), a.mode & Jn) {
          Qi();
          try {
            R = Od(o, a, x, p, k, y);
          } finally {
            hr();
          }
        }
        Kr(!1);
      }
      return o !== null && !Ys ? (BA(o, a, y), jl(o, a, y)) : (a.flags |= fi, so(o, a, R, y), a.child);
    }
    function i8(o, a, f, p, y, T) {
      if (o === null) {
        var x = f.type;
        if (zI(x) && f.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        f.defaultProps === void 0) {
          var k = x;
          return k = Hd(x), a.tag = H, a.type = k, IE(a, x), o8(o, a, k, p, y, T);
        }
        {
          var R = x.propTypes;
          R && qa(
            R,
            p,
            // Resolved props
            "prop",
            He(x)
          );
        }
        var U = ET(f.type, null, p, a, a.mode, T);
        return U.ref = a.ref, U.return = a, a.child = U, U;
      }
      {
        var q = f.type, ae = q.propTypes;
        ae && qa(
          ae,
          p,
          // Resolved props
          "prop",
          He(q)
        );
      }
      var K = o.child;
      if (!Mr(y, T)) {
        var ue = K.memoizedProps, Ae = f.compare;
        if (Ae = Ae !== null ? Ae : E, Ae(ue, p) && o.ref === a.ref)
          return jl(o, a, T);
      }
      a.flags |= fi;
      var Ue = $1(K, p);
      return Ue.ref = a.ref, Ue.return = a, a.child = Ue, Ue;
    }
    function o8(o, a, f, p, y, T) {
      if (a.type !== a.elementType) {
        var x = a.elementType;
        if (x.$$typeof === Pn) {
          var k = x, R = k._payload, U = k._init;
          try {
            x = U(R);
          } catch {
            x = null;
          }
          var q = x && x.propTypes;
          q && qa(
            q,
            p,
            // Resolved (SimpleMemoComponent has no defaultProps)
            "prop",
            He(x)
          );
        }
      }
      if (o !== null) {
        var ae = o.memoizedProps;
        if (E(ae, p) && o.ref === a.ref && // Prevent bailout if the implementation changed due to hot reload.
        a.type === o.type)
          if (Ys = !1, Mr(T, y))
            (o.flags & Xc) !== yn && (Ys = !0);
          else
            return a.lanes = o.lanes, jl(o, a, T);
      }
      return ME(o, a, f, p, T);
    }
    function DE(o, a, f) {
      var p = a.pendingProps, y = p.children, T = o !== null ? o.memoizedState : null;
      if (p.mode === "hidden" || p.mode === "unstable-defer-without-hiding")
        if ((a.mode & D1) === qn) {
          var x = {
            baseLanes: Te
          };
          a.memoizedState = x, r9(a, f);
        } else if (Mr(f, _o)) {
          var q = {
            baseLanes: Te
          };
          a.memoizedState = q;
          var ae = T !== null ? T.baseLanes : f;
          r9(a, ae);
        } else {
          var k;
          if (T !== null) {
            var R = T.baseLanes;
            k = fn(R, f);
          } else
            k = f;
          u9(_o), a.lanes = a.childLanes = _o;
          var U = {
            baseLanes: k
          };
          return a.memoizedState = U, r9(a, k), null;
        }
      else {
        var K;
        T !== null ? (K = fn(T.baseLanes, f), a.memoizedState = null) : K = f, r9(a, K);
      }
      return so(o, a, y, f), a.child;
    }
    var YM = DE;
    function QM(o, a, f) {
      var p = a.pendingProps;
      return so(o, a, p, f), a.child;
    }
    function XM(o, a, f) {
      var p = a.pendingProps.children;
      return so(o, a, p, f), a.child;
    }
    function JM(o, a, f) {
      {
        a.flags |= St;
        var p = a.stateNode;
        p.effectDuration = 0, p.passiveEffectDuration = 0;
      }
      var y = a.pendingProps, T = y.children;
      return so(o, a, T, f), a.child;
    }
    function a8(o, a) {
      var f = a.ref;
      (o === null && f !== null || o !== null && o.ref !== f) && (a.flags |= Rr);
    }
    function ME(o, a, f, p, y) {
      if (a.type !== a.elementType) {
        var T = f.propTypes;
        T && qa(
          T,
          p,
          // Resolved props
          "prop",
          He(f)
        );
      }
      var x;
      {
        var k = Td(a, f, !0);
        x = Cd(a, k);
      }
      var R;
      xd(a, y);
      {
        if (Tm.current = a, Kr(!0), R = Od(o, a, f, p, x, y), a.mode & Jn) {
          Qi();
          try {
            R = Od(o, a, f, p, x, y);
          } finally {
            hr();
          }
        }
        Kr(!1);
      }
      return o !== null && !Ys ? (BA(o, a, y), jl(o, a, y)) : (a.flags |= fi, so(o, a, R, y), a.child);
    }
    function s8(o, a, f, p, y) {
      if (a.type !== a.elementType) {
        var T = f.propTypes;
        T && qa(
          T,
          p,
          // Resolved props
          "prop",
          He(f)
        );
      }
      var x;
      $s(f) ? (x = !0, e2(a)) : x = !1, xd(a, y);
      var k = a.stateNode, R;
      k === null ? (o !== null && (o.alternate = null, a.alternate = null, a.flags |= Rt), xA(a, f, p), j5(a, f, p, y), R = !0) : o === null ? R = kM(a, f, p, y) : R = NM(o, a, f, p, y);
      var U = LE(o, a, f, R, x, y);
      {
        var q = a.stateNode;
        R && q.props !== p && (H1 || l("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", He(a.type) || "a component"), H1 = !0);
      }
      return U;
    }
    function LE(o, a, f, p, y, T) {
      a8(o, a);
      var x = (a.flags & hn) !== yn;
      if (!p && !x)
        return y && Gb(a, f, !1), jl(o, a, T);
      var k = a.stateNode;
      Tm.current = a;
      var R;
      if (x && typeof f.getDerivedStateFromError != "function")
        R = null, n8();
      else {
        if (Kr(!0), R = k.render(), a.mode & Jn) {
          Qi();
          try {
            k.render();
          } finally {
            hr();
          }
        }
        Kr(!1);
      }
      return a.flags |= fi, o !== null && x ? KM(o, a, R, T) : so(o, a, R, T), a.memoizedState = k.state, y && Gb(a, f, !0), a.child;
    }
    function l8(o) {
      var a = o.stateNode;
      a.pendingContext ? Vb(o, a.pendingContext, a.pendingContext !== a.context) : a.context && Vb(o, a.context, !1), Y5(o, a.containerInfo);
    }
    function ZM(o, a, f) {
      l8(a);
      var p = a.updateQueue;
      if (!(o !== null && p !== null))
        throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
      var y = a.pendingProps, T = a.memoizedState, x = T !== null ? T.element : null;
      gA(o, a), am(a, y, null, f);
      var k = a.memoizedState, R = k.element;
      if (R === x)
        return nE(), jl(o, a, f);
      var U = a.stateNode;
      if (U.hydrate && LM(a)) {
        {
          var q = U.mutableSourceEagerHydrationData;
          if (q != null)
            for (var ae = 0; ae < q.length; ae += 2) {
              var K = q[ae], ue = q[ae + 1];
              FA(K, ue);
            }
        }
        var Ae = wA(a, null, R, f);
        a.child = Ae;
        for (var Ue = Ae; Ue; )
          Ue.flags = Ue.flags & ~Rt | Zi, Ue = Ue.sibling;
      } else
        so(o, a, R, f), nE();
      return a.child;
    }
    function eL(o, a, f) {
      RA(a), o === null && tE(a);
      var p = a.type, y = a.pendingProps, T = o !== null ? o.memoizedProps : null, x = y.children, k = p5(p, y);
      return k ? x = null : T !== null && p5(p, T) && (a.flags |= Or), a8(o, a), so(o, a, x, f), a.child;
    }
    function tL(o, a) {
      return o === null && tE(a), null;
    }
    function nL(o, a, f, p, y) {
      o !== null && (o.alternate = null, a.alternate = null, a.flags |= Rt);
      var T = a.pendingProps, x = f, k = x._payload, R = x._init, U = R(k);
      a.type = U;
      var q = a.tag = qI(U), ae = Va(U, T), K;
      switch (q) {
        case h:
          return IE(a, U), a.type = U = Hd(U), K = ME(null, a, U, ae, y), K;
        case g:
          return a.type = U = hT(U), K = s8(null, a, U, ae, y), K;
        case j:
          return a.type = U = pT(U), K = r8(null, a, U, ae, y), K;
        case z: {
          if (a.type !== a.elementType) {
            var ue = U.propTypes;
            ue && qa(
              ue,
              ae,
              // Resolved for outer only
              "prop",
              He(U)
            );
          }
          return K = i8(
            null,
            a,
            U,
            Va(U.type, ae),
            // The inner type can have defaults too
            p,
            y
          ), K;
        }
      }
      var Ae = "";
      throw U !== null && typeof U == "object" && U.$$typeof === Pn && (Ae = " Did you wrap a component in React.lazy() more than once?"), Error("Element type is invalid. Received a promise that resolves to: " + U + ". Lazy element type must resolve to a class or function." + Ae);
    }
    function rL(o, a, f, p, y) {
      o !== null && (o.alternate = null, a.alternate = null, a.flags |= Rt), a.tag = g;
      var T;
      return $s(f) ? (T = !0, e2(a)) : T = !1, xd(a, y), xA(a, f, p), j5(a, f, p, y), LE(null, a, f, !0, T, y);
    }
    function iL(o, a, f, p) {
      o !== null && (o.alternate = null, a.alternate = null, a.flags |= Rt);
      var y = a.pendingProps, T;
      {
        var x = Td(a, f, !1);
        T = Cd(a, x);
      }
      xd(a, p);
      var k;
      {
        if (f.prototype && typeof f.prototype.render == "function") {
          var R = He(f) || "Unknown";
          kE[R] || (l("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", R, R), kE[R] = !0);
        }
        a.mode & Jn && ja.recordLegacyContextWarning(a, null), Kr(!0), Tm.current = a, k = Od(null, a, f, y, T, p), Kr(!1);
      }
      if (a.flags |= fi, typeof k == "object" && k !== null && typeof k.render == "function" && k.$$typeof === void 0) {
        var U = He(f) || "Unknown";
        Cm[U] || (l("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", U, U, U), Cm[U] = !0);
      }
      if (
        // Run these checks in production only if the flag is off.
        // Eventually we'll delete this branch altogether.
        typeof k == "object" && k !== null && typeof k.render == "function" && k.$$typeof === void 0
      ) {
        {
          var q = He(f) || "Unknown";
          Cm[q] || (l("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", q, q, q), Cm[q] = !0);
        }
        a.tag = g, a.memoizedState = null, a.updateQueue = null;
        var ae = !1;
        $s(f) ? (ae = !0, e2(a)) : ae = !1, a.memoizedState = k.state !== null && k.state !== void 0 ? k.state : null, D5(a);
        var K = f.getDerivedStateFromProps;
        return typeof K == "function" && m2(a, f, K, y), AA(a, k), j5(a, f, y, p), LE(null, a, f, !0, ae, p);
      } else {
        if (a.tag = h, a.mode & Jn) {
          Qi();
          try {
            k = Od(null, a, f, y, T, p);
          } finally {
            hr();
          }
        }
        return so(null, a, k, p), IE(a, f), a.child;
      }
    }
    function IE(o, a) {
      {
        if (a && a.childContextTypes && l("%s(...): childContextTypes cannot be defined on a function component.", a.displayName || a.name || "Component"), o.ref !== null) {
          var f = "", p = ka();
          p && (f += `

Check the render method of \`` + p + "`.");
          var y = p || o._debugID || "", T = o._debugSource;
          T && (y = T.fileName + ":" + T.lineNumber), OE[y] || (OE[y] = !0, l("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", f));
        }
        if (typeof a.getDerivedStateFromProps == "function") {
          var x = He(a) || "Unknown";
          wE[x] || (l("%s: Function components do not support getDerivedStateFromProps.", x), wE[x] = !0);
        }
        if (typeof a.contextType == "object" && a.contextType !== null) {
          var k = He(a) || "Unknown";
          NE[k] || (l("%s: Function components do not support contextType.", k), NE[k] = !0);
        }
      }
    }
    var q2 = {
      dehydrated: null,
      retryLane: Qn
    };
    function j2(o) {
      return {
        baseLanes: o
      };
    }
    function u8(o, a) {
      return {
        baseLanes: fn(o.baseLanes, a)
      };
    }
    function oL(o, a, f, p) {
      if (a !== null) {
        var y = a.memoizedState;
        if (y === null)
          return !1;
      }
      return S2(o, cm);
    }
    function c8(o, a) {
      return Fu(o.childLanes, a);
    }
    function f8(o, a, f) {
      var p = a.pendingProps;
      sP(a) && (a.flags |= hn);
      var y = $a.current, T = !1, x = (a.flags & hn) !== yn;
      if (x || oL(y, o) ? (T = !0, a.flags &= ~hn) : (o === null || o.memoizedState !== null) && p.fallback !== void 0 && p.unstable_avoidThisFallback !== !0 && (y = DM(y, J5)), y = fm(y), I1(a, y), o === null) {
        p.fallback !== void 0 && tE(a);
        var k = p.children, R = p.fallback;
        if (T) {
          var U = d8(a, k, R, f), q = a.child;
          return q.memoizedState = j2(f), a.memoizedState = q2, U;
        } else if (typeof p.unstable_expectedLoadTime == "number") {
          var ae = d8(a, k, R, f), K = a.child;
          return K.memoizedState = j2(f), a.memoizedState = q2, a.lanes = Ls, u9(Ls), ae;
        } else
          return aL(a, k, f);
      } else {
        var ue = o.memoizedState;
        if (ue !== null)
          if (T) {
            var Ae = p.fallback, Ue = p.children, mt = m8(o, a, Ue, Ae, f), Ft = a.child, At = o.child.memoizedState;
            return Ft.memoizedState = At === null ? j2(f) : u8(At, f), Ft.childLanes = c8(o, f), a.memoizedState = q2, mt;
          } else {
            var ln = p.children, bn = p8(o, a, ln, f);
            return a.memoizedState = null, bn;
          }
        else if (T) {
          var se = p.fallback, ge = p.children, re = m8(o, a, ge, se, f), Ne = a.child, Ve = o.child.memoizedState;
          return Ne.memoizedState = Ve === null ? j2(f) : u8(Ve, f), Ne.childLanes = c8(o, f), a.memoizedState = q2, re;
        } else {
          var tt = p.children, nn = p8(o, a, tt, f);
          return a.memoizedState = null, nn;
        }
      }
    }
    function aL(o, a, f) {
      var p = o.mode, y = {
        mode: "visible",
        children: a
      }, T = CT(y, p, f, null);
      return T.return = o, o.child = T, T;
    }
    function d8(o, a, f, p) {
      var y = o.mode, T = o.child, x = {
        mode: "hidden",
        children: a
      }, k, R;
      return (y & oo) === qn && T !== null ? (k = T, k.childLanes = Te, k.pendingProps = x, o.mode & wo && (k.actualDuration = 0, k.actualStartTime = -1, k.selfBaseDuration = 0, k.treeBaseDuration = 0), R = G1(f, y, p, null)) : (k = CT(x, y, Te, null), R = G1(f, y, p, null)), k.return = o, R.return = o, k.sibling = R, o.child = k, R;
    }
    function h8(o, a) {
      return $1(o, a);
    }
    function p8(o, a, f, p) {
      var y = o.child, T = y.sibling, x = h8(y, {
        mode: "visible",
        children: f
      });
      return (a.mode & oo) === qn && (x.lanes = p), x.return = a, x.sibling = null, T !== null && (T.nextEffect = null, T.flags = Rn, a.firstEffect = a.lastEffect = T), a.child = x, x;
    }
    function m8(o, a, f, p, y) {
      var T = a.mode, x = o.child, k = x.sibling, R = {
        mode: "hidden",
        children: f
      }, U;
      if (
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        (T & oo) === qn && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        a.child !== x
      ) {
        var q = a.child;
        U = q, U.childLanes = Te, U.pendingProps = R, a.mode & wo && (U.actualDuration = 0, U.actualStartTime = -1, U.selfBaseDuration = x.selfBaseDuration, U.treeBaseDuration = x.treeBaseDuration);
        var ae = U.lastEffect;
        ae !== null ? (a.firstEffect = U.firstEffect, a.lastEffect = ae, ae.nextEffect = null) : a.firstEffect = a.lastEffect = null;
      } else
        U = h8(x, R);
      var K;
      return k !== null ? K = $1(k, p) : (K = G1(p, T, y, null), K.flags |= Rt), K.return = a, U.return = a, U.sibling = K, a.child = U, K;
    }
    function g8(o, a) {
      o.lanes = fn(o.lanes, a);
      var f = o.alternate;
      f !== null && (f.lanes = fn(f.lanes, a)), hA(o.return, a);
    }
    function sL(o, a, f) {
      for (var p = a; p !== null; ) {
        if (p.tag === ee) {
          var y = p.memoizedState;
          y !== null && g8(p, f);
        } else if (p.tag === fe)
          g8(p, f);
        else if (p.child !== null) {
          p.child.return = p, p = p.child;
          continue;
        }
        if (p === o)
          return;
        for (; p.sibling === null; ) {
          if (p.return === null || p.return === o)
            return;
          p = p.return;
        }
        p.sibling.return = p.return, p = p.sibling;
      }
    }
    function lL(o) {
      for (var a = o, f = null; a !== null; ) {
        var p = a.alternate;
        p !== null && b2(p) === null && (f = a), a = a.sibling;
      }
      return f;
    }
    function uL(o) {
      if (o !== void 0 && o !== "forwards" && o !== "backwards" && o !== "together" && !RE[o])
        if (RE[o] = !0, typeof o == "string")
          switch (o.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards": {
              l('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', o, o.toLowerCase());
              break;
            }
            case "forward":
            case "backward": {
              l('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', o, o.toLowerCase());
              break;
            }
            default:
              l('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', o);
              break;
          }
        else
          l('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', o);
    }
    function cL(o, a) {
      o !== void 0 && !z2[o] && (o !== "collapsed" && o !== "hidden" ? (z2[o] = !0, l('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', o)) : a !== "forwards" && a !== "backwards" && (z2[o] = !0, l('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', o)));
    }
    function y8(o, a) {
      {
        var f = Array.isArray(o), p = !f && typeof mn(o) == "function";
        if (f || p) {
          var y = f ? "array" : "iterable";
          return l("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", y, a, y), !1;
        }
      }
      return !0;
    }
    function fL(o, a) {
      if ((a === "forwards" || a === "backwards") && o !== void 0 && o !== null && o !== !1)
        if (Array.isArray(o)) {
          for (var f = 0; f < o.length; f++)
            if (!y8(o[f], f))
              return;
        } else {
          var p = mn(o);
          if (typeof p == "function") {
            var y = p.call(o);
            if (y)
              for (var T = y.next(), x = 0; !T.done; T = y.next()) {
                if (!y8(T.value, x))
                  return;
                x++;
              }
          } else
            l('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', a);
        }
    }
    function PE(o, a, f, p, y, T) {
      var x = o.memoizedState;
      x === null ? o.memoizedState = {
        isBackwards: a,
        rendering: null,
        renderingStartTime: 0,
        last: p,
        tail: f,
        tailMode: y,
        lastEffect: T
      } : (x.isBackwards = a, x.rendering = null, x.renderingStartTime = 0, x.last = p, x.tail = f, x.tailMode = y, x.lastEffect = T);
    }
    function v8(o, a, f) {
      var p = a.pendingProps, y = p.revealOrder, T = p.tail, x = p.children;
      uL(y), cL(T, y), fL(x, y), so(o, a, x, f);
      var k = $a.current, R = S2(k, cm);
      if (R)
        k = Z5(k, cm), a.flags |= hn;
      else {
        var U = o !== null && (o.flags & hn) !== yn;
        U && sL(a, a.child, f), k = fm(k);
      }
      if (I1(a, k), (a.mode & oo) === qn)
        a.memoizedState = null;
      else
        switch (y) {
          case "forwards": {
            var q = lL(a.child), ae;
            q === null ? (ae = a.child, a.child = null) : (ae = q.sibling, q.sibling = null), PE(
              a,
              !1,
              // isBackwards
              ae,
              q,
              T,
              a.lastEffect
            );
            break;
          }
          case "backwards": {
            var K = null, ue = a.child;
            for (a.child = null; ue !== null; ) {
              var Ae = ue.alternate;
              if (Ae !== null && b2(Ae) === null) {
                a.child = ue;
                break;
              }
              var Ue = ue.sibling;
              ue.sibling = K, K = ue, ue = Ue;
            }
            PE(
              a,
              !0,
              // isBackwards
              K,
              null,
              // last
              T,
              a.lastEffect
            );
            break;
          }
          case "together": {
            PE(
              a,
              !1,
              // isBackwards
              null,
              // tail
              null,
              // last
              void 0,
              a.lastEffect
            );
            break;
          }
          default:
            a.memoizedState = null;
        }
      return a.child;
    }
    function dL(o, a, f) {
      Y5(a, a.stateNode.containerInfo);
      var p = a.pendingProps;
      return o === null ? a.child = E2(a, null, p, f) : so(o, a, p, f), a.child;
    }
    var E8 = !1;
    function hL(o, a, f) {
      var p = a.type, y = p._context, T = a.pendingProps, x = a.memoizedProps, k = T.value;
      {
        "value" in T || E8 || (E8 = !0, l("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
        var R = a.type.propTypes;
        R && qa(R, T, "prop", "Context.Provider");
      }
      if (dA(a, k), x !== null) {
        var U = x.value, q = TM(y, k, U);
        if (q === 0) {
          if (x.children === T.children && !Jg())
            return jl(o, a, f);
        } else
          CM(a, y, q, f);
      }
      var ae = T.children;
      return so(o, a, ae, f), a.child;
    }
    var T8 = !1;
    function pL(o, a, f) {
      var p = a.type;
      p._context === void 0 ? p !== p.Consumer && (T8 || (T8 = !0, l("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : p = p._context;
      var y = a.pendingProps, T = y.children;
      typeof T != "function" && l("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), xd(a, f);
      var x = Cr(p, y.unstable_observedBits), k;
      return Tm.current = a, Kr(!0), k = T(x), Kr(!1), a.flags |= fi, so(o, a, k, f), a.child;
    }
    function FE() {
      Ys = !0;
    }
    function jl(o, a, f) {
      return o !== null && (a.dependencies = o.dependencies), n8(), lT(a.lanes), Mr(f, a.childLanes) ? (wM(o, a), a.child) : null;
    }
    function mL(o, a, f) {
      {
        var p = a.return;
        if (p === null)
          throw new Error("Cannot swap the root fiber.");
        if (o.alternate = null, a.alternate = null, f.index = a.index, f.sibling = a.sibling, f.return = a.return, f.ref = a.ref, a === p.child)
          p.child = f;
        else {
          var y = p.child;
          if (y === null)
            throw new Error("Expected parent to have a child.");
          for (; y.sibling !== a; )
            if (y = y.sibling, y === null)
              throw new Error("Expected to find the previous sibling.");
          y.sibling = f;
        }
        var T = p.lastEffect;
        return T !== null ? (T.nextEffect = o, p.lastEffect = o) : p.firstEffect = p.lastEffect = o, o.nextEffect = null, o.flags = Rn, f.flags |= Rt, f;
      }
    }
    function C8(o, a, f) {
      var p = a.lanes;
      if (a._debugNeedsRemount && o !== null)
        return mL(o, a, ET(a.type, a.key, a.pendingProps, a._debugOwner || null, a.mode, a.lanes));
      if (o !== null) {
        var y = o.memoizedProps, T = a.pendingProps;
        if (y !== T || Jg() || // Force a re-render if the implementation changed due to hot reload:
        a.type !== o.type)
          Ys = !0;
        else if (Mr(f, p))
          (o.flags & Xc) !== yn ? Ys = !0 : Ys = !1;
        else {
          switch (Ys = !1, a.tag) {
            case C:
              l8(a), nE();
              break;
            case b:
              RA(a);
              break;
            case g: {
              var x = a.type;
              $s(x) && e2(a);
              break;
            }
            case S:
              Y5(a, a.stateNode.containerInfo);
              break;
            case Y: {
              var k = a.memoizedProps.value;
              dA(a, k);
              break;
            }
            case oe:
              {
                var R = Mr(f, a.childLanes);
                R && (a.flags |= St);
                var U = a.stateNode;
                U.effectDuration = 0, U.passiveEffectDuration = 0;
              }
              break;
            case ee: {
              var q = a.memoizedState;
              if (q !== null) {
                var ae = a.child, K = ae.childLanes;
                if (Mr(f, K))
                  return f8(o, a, f);
                I1(a, fm($a.current));
                var ue = jl(o, a, f);
                return ue !== null ? ue.sibling : null;
              } else
                I1(a, fm($a.current));
              break;
            }
            case fe: {
              var Ae = (o.flags & hn) !== yn, Ue = Mr(f, a.childLanes);
              if (Ae) {
                if (Ue)
                  return v8(o, a, f);
                a.flags |= hn;
              }
              var mt = a.memoizedState;
              if (mt !== null && (mt.rendering = null, mt.tail = null, mt.lastEffect = null), I1(a, $a.current), Ue)
                break;
              return null;
            }
            case J:
            case lt:
              return a.lanes = Te, DE(o, a, f);
          }
          return jl(o, a, f);
        }
      } else
        Ys = !1;
      switch (a.lanes = Te, a.tag) {
        case v:
          return iL(o, a, a.type, f);
        case Z: {
          var Ft = a.elementType;
          return nL(o, a, Ft, p, f);
        }
        case h: {
          var At = a.type, ln = a.pendingProps, bn = a.elementType === At ? ln : Va(At, ln);
          return ME(o, a, At, bn, f);
        }
        case g: {
          var se = a.type, ge = a.pendingProps, re = a.elementType === se ? ge : Va(se, ge);
          return s8(o, a, se, re, f);
        }
        case C:
          return ZM(o, a, f);
        case b:
          return eL(o, a, f);
        case N:
          return tL(o, a);
        case ee:
          return f8(o, a, f);
        case S:
          return dL(o, a, f);
        case j: {
          var Ne = a.type, Ve = a.pendingProps, tt = a.elementType === Ne ? Ve : Va(Ne, Ve);
          return r8(o, a, Ne, tt, f);
        }
        case O:
          return QM(o, a, f);
        case L:
          return XM(o, a, f);
        case oe:
          return JM(o, a, f);
        case Y:
          return hL(o, a, f);
        case P:
          return pL(o, a, f);
        case z: {
          var nn = a.type, Ln = a.pendingProps, jn = Va(nn, Ln);
          if (a.type !== a.elementType) {
            var vn = nn.propTypes;
            vn && qa(
              vn,
              jn,
              // Resolved for outer only
              "prop",
              He(nn)
            );
          }
          return jn = Va(nn.type, jn), i8(o, a, nn, jn, p, f);
        }
        case H:
          return o8(o, a, a.type, a.pendingProps, p, f);
        case me: {
          var Sr = a.type, pn = a.pendingProps, Vn = a.elementType === Sr ? pn : Va(Sr, pn);
          return rL(o, a, Sr, Vn, f);
        }
        case fe:
          return v8(o, a, f);
        case pe:
          break;
        case Ce:
          break;
        case Be:
          break;
        case J:
          return DE(o, a, f);
        case lt:
          return YM(o, a, f);
      }
      throw Error("Unknown unit of work tag (" + a.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function Md(o) {
      o.flags |= St;
    }
    function S8(o) {
      o.flags |= Rr;
    }
    var b8, BE, A8, x8;
    b8 = function(o, a, f, p) {
      for (var y = a.child; y !== null; ) {
        if (y.tag === b || y.tag === N)
          mD(o, y.stateNode);
        else if (y.tag !== S) {
          if (y.child !== null) {
            y.child.return = y, y = y.child;
            continue;
          }
        }
        if (y === a)
          return;
        for (; y.sibling === null; ) {
          if (y.return === null || y.return === a)
            return;
          y = y.return;
        }
        y.sibling.return = y.return, y = y.sibling;
      }
    }, BE = function(o) {
    }, A8 = function(o, a, f, p, y) {
      var T = o.memoizedProps;
      if (T !== p) {
        var x = a.stateNode, k = Q5(), R = yD(x, f, T, p, y, k);
        a.updateQueue = R, R && Md(a);
      }
    }, x8 = function(o, a, f, p) {
      f !== p && Md(a);
    };
    function Sm(o, a) {
      if (!rE())
        switch (o.tailMode) {
          case "hidden": {
            for (var f = o.tail, p = null; f !== null; )
              f.alternate !== null && (p = f), f = f.sibling;
            p === null ? o.tail = null : p.sibling = null;
            break;
          }
          case "collapsed": {
            for (var y = o.tail, T = null; y !== null; )
              y.alternate !== null && (T = y), y = y.sibling;
            T === null ? !a && o.tail !== null ? o.tail.sibling = null : o.tail = null : T.sibling = null;
            break;
          }
        }
    }
    function _8(o, a, f) {
      var p = a.pendingProps;
      switch (a.tag) {
        case v:
        case Z:
        case H:
        case h:
        case j:
        case O:
        case L:
        case oe:
        case P:
        case z:
          return null;
        case g: {
          var y = a.type;
          return $s(y) && Zg(a), null;
        }
        case C: {
          _d(a), C5(a), oE();
          var T = a.stateNode;
          if (T.pendingContext && (T.context = T.pendingContext, T.pendingContext = null), o === null || o.child === null) {
            var x = A2(a);
            x ? Md(a) : T.hydrate || (a.flags |= Go);
          }
          return BE(a), null;
        }
        case b: {
          X5(a);
          var k = OA(), R = a.type;
          if (o !== null && a.stateNode != null)
            A8(o, a, R, p, k), o.ref !== a.ref && S8(a);
          else {
            if (!p) {
              if (a.stateNode === null)
                throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              return null;
            }
            var U = Q5(), q = A2(a);
            if (q)
              IM(a, k, U) && Md(a);
            else {
              var ae = pD(R, p, k, U, a);
              b8(ae, a, !1, !1), a.stateNode = ae, gD(ae, R, p, k) && Md(a);
            }
            a.ref !== null && S8(a);
          }
          return null;
        }
        case N: {
          var K = p;
          if (o && a.stateNode != null) {
            var ue = o.memoizedProps;
            x8(o, a, ue, K);
          } else {
            if (typeof K != "string" && a.stateNode === null)
              throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
            var Ae = OA(), Ue = Q5(), mt = A2(a);
            mt ? PM(a) && Md(a) : a.stateNode = vD(K, Ae, Ue, a);
          }
          return null;
        }
        case ee: {
          kd(a);
          var Ft = a.memoizedState;
          if ((a.flags & hn) !== yn)
            return a.lanes = f, (a.mode & wo) !== qn && _E(a), a;
          var At = Ft !== null, ln = !1;
          if (o === null)
            a.memoizedProps.fallback !== void 0 && A2(a);
          else {
            var bn = o.memoizedState;
            ln = bn !== null;
          }
          if (At && !ln && (a.mode & oo) !== qn) {
            var se = o === null && a.memoizedProps.unstable_avoidThisFallback !== !0;
            se || S2($a.current, J5) ? tI() : nI();
          }
          return (At || ln) && (a.flags |= St), null;
        }
        case S:
          return _d(a), BE(a), o === null && tM(a.stateNode.containerInfo), null;
        case Y:
          return w5(a), null;
        case me: {
          var ge = a.type;
          return $s(ge) && Zg(a), null;
        }
        case fe: {
          kd(a);
          var re = a.memoizedState;
          if (re === null)
            return null;
          var Ne = (a.flags & hn) !== yn, Ve = re.rendering;
          if (Ve === null)
            if (Ne)
              Sm(re, !1);
            else {
              var tt = iI() && (o === null || (o.flags & hn) === yn);
              if (!tt)
                for (var nn = a.child; nn !== null; ) {
                  var Ln = b2(nn);
                  if (Ln !== null) {
                    Ne = !0, a.flags |= hn, Sm(re, !1);
                    var jn = Ln.updateQueue;
                    return jn !== null && (a.updateQueue = jn, a.flags |= St), re.lastEffect === null && (a.firstEffect = null), a.lastEffect = re.lastEffect, OM(a, f), I1(a, Z5($a.current, cm)), a.child;
                  }
                  nn = nn.sibling;
                }
              re.tail !== null && ki() > q8() && (a.flags |= hn, Ne = !0, Sm(re, !1), a.lanes = Ls, u9(Ls));
            }
          else {
            if (!Ne) {
              var vn = b2(Ve);
              if (vn !== null) {
                a.flags |= hn, Ne = !0;
                var Sr = vn.updateQueue;
                if (Sr !== null && (a.updateQueue = Sr, a.flags |= St), Sm(re, !0), re.tail === null && re.tailMode === "hidden" && !Ve.alternate && !rE()) {
                  var pn = a.lastEffect = re.lastEffect;
                  return pn !== null && (pn.nextEffect = null), null;
                }
              } else
                // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                ki() * 2 - re.renderingStartTime > q8() && f !== _o && (a.flags |= hn, Ne = !0, Sm(re, !1), a.lanes = Ls, u9(Ls));
            }
            if (re.isBackwards)
              Ve.sibling = a.child, a.child = Ve;
            else {
              var Vn = re.last;
              Vn !== null ? Vn.sibling = Ve : a.child = Ve, re.last = Ve;
            }
          }
          if (re.tail !== null) {
            var Xr = re.tail;
            re.rendering = Xr, re.tail = Xr.sibling, re.lastEffect = a.lastEffect, re.renderingStartTime = ki(), Xr.sibling = null;
            var or = $a.current;
            return Ne ? or = Z5(or, cm) : or = fm(or), I1(a, or), Xr;
          }
          return null;
        }
        case pe:
          break;
        case Ce:
          break;
        case Be:
          break;
        case J:
        case lt: {
          if (sT(a), o !== null) {
            var Zs = a.memoizedState, ar = o.memoizedState, el = ar !== null, W1 = Zs !== null;
            el !== W1 && p.mode !== "unstable-defer-without-hiding" && (a.flags |= St);
          }
          return null;
        }
      }
      throw Error("Unknown unit of work tag (" + a.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function gL(o, a) {
      switch (o.tag) {
        case g: {
          var f = o.type;
          $s(f) && Zg(o);
          var p = o.flags;
          return p & Ao ? (o.flags = p & ~Ao | hn, (o.mode & wo) !== qn && _E(o), o) : null;
        }
        case C: {
          _d(o), C5(o), oE();
          var y = o.flags;
          if ((y & hn) !== yn)
            throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
          return o.flags = y & ~Ao | hn, o;
        }
        case b:
          return X5(o), null;
        case ee: {
          kd(o);
          var T = o.flags;
          return T & Ao ? (o.flags = T & ~Ao | hn, (o.mode & wo) !== qn && _E(o), o) : null;
        }
        case fe:
          return kd(o), null;
        case S:
          return _d(o), null;
        case Y:
          return w5(o), null;
        case J:
        case lt:
          return sT(o), null;
        default:
          return null;
      }
    }
    function k8(o) {
      switch (o.tag) {
        case g: {
          var a = o.type.childContextTypes;
          a != null && Zg(o);
          break;
        }
        case C: {
          _d(o), C5(o), oE();
          break;
        }
        case b: {
          X5(o);
          break;
        }
        case S:
          _d(o);
          break;
        case ee:
          kd(o);
          break;
        case fe:
          kd(o);
          break;
        case Y:
          w5(o);
          break;
        case J:
        case lt:
          sT(o);
          break;
      }
    }
    function UE(o, a) {
      return {
        value: o,
        source: a,
        stack: Si(a)
      };
    }
    function yL(o, a) {
      return !0;
    }
    function HE(o, a) {
      try {
        var f = yL(o, a);
        if (f === !1)
          return;
        var p = a.value, y = a.source, T = a.stack, x = T !== null ? T : "";
        if (p != null && p._suppressLogging) {
          if (o.tag === g)
            return;
          console.error(p);
        }
        var k = y ? He(y.type) : null, R = k ? "The above error occurred in the <" + k + "> component:" : "The above error occurred in one of your React components:", U, q = He(o.type);
        q ? U = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + q + ".") : U = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
        var ae = R + `
` + x + `

` + ("" + U);
        console.error(ae);
      } catch (K) {
        setTimeout(function() {
          throw K;
        });
      }
    }
    var vL = typeof WeakMap == "function" ? WeakMap : Map;
    function N8(o, a, f) {
      var p = Wu(Mn, f);
      p.tag = O5, p.payload = {
        element: null
      };
      var y = a.value;
      return p.callback = function() {
        vI(y), HE(o, a);
      }, p;
    }
    function w8(o, a, f) {
      var p = Wu(Mn, f);
      p.tag = O5;
      var y = o.type.getDerivedStateFromError;
      if (typeof y == "function") {
        var T = a.value;
        p.payload = function() {
          return HE(o, a), y(T);
        };
      }
      var x = o.stateNode;
      return x !== null && typeof x.componentDidCatch == "function" ? p.callback = function() {
        u3(o), typeof y != "function" && (gI(this), HE(o, a));
        var R = a.value, U = a.stack;
        this.componentDidCatch(R, {
          componentStack: U !== null ? U : ""
        }), typeof y != "function" && (Mr(o.lanes, Wt) || l("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", He(o.type) || "Unknown"));
      } : p.callback = function() {
        u3(o);
      }, p;
    }
    function EL(o, a, f) {
      var p = o.pingCache, y;
      if (p === null ? (p = o.pingCache = new vL(), y = /* @__PURE__ */ new Set(), p.set(a, y)) : (y = p.get(a), y === void 0 && (y = /* @__PURE__ */ new Set(), p.set(a, y))), !y.has(f)) {
        y.add(f);
        var T = EI.bind(null, o, a, f);
        a.then(T, T);
      }
    }
    function TL(o, a, f, p, y) {
      if (f.flags |= Qc, f.firstEffect = f.lastEffect = null, p !== null && typeof p == "object" && typeof p.then == "function") {
        var T = p;
        if ((f.mode & oo) === qn) {
          var x = f.alternate;
          x ? (f.updateQueue = x.updateQueue, f.memoizedState = x.memoizedState, f.lanes = x.lanes) : (f.updateQueue = null, f.memoizedState = null);
        }
        var k = S2($a.current, J5), R = a;
        do {
          if (R.tag === ee && MM(R, k)) {
            var U = R.updateQueue;
            if (U === null) {
              var q = /* @__PURE__ */ new Set();
              q.add(T), R.updateQueue = q;
            } else
              U.add(T);
            if ((R.mode & oo) === qn) {
              if (R.flags |= hn, f.flags |= Xc, f.flags &= ~(tp | Qc), f.tag === g) {
                var ae = f.alternate;
                if (ae === null)
                  f.tag = me;
                else {
                  var K = Wu(Mn, Wt);
                  K.tag = c2, Ku(f, K);
                }
              }
              f.lanes = fn(f.lanes, Wt);
              return;
            }
            EL(o, T, y), R.flags |= Ao, R.lanes = y;
            return;
          }
          R = R.return;
        } while (R !== null);
        p = new Error((He(f.type) || "A React component") + ` suspended while rendering, but no fallback UI was specified.

Add a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.`);
      }
      rI(), p = UE(p, f);
      var ue = a;
      do {
        switch (ue.tag) {
          case C: {
            var Ae = p;
            ue.flags |= Ao;
            var Ue = Er(y);
            ue.lanes = fn(ue.lanes, Ue);
            var mt = N8(ue, Ae, Ue);
            yA(ue, mt);
            return;
          }
          case g:
            var Ft = p, At = ue.type, ln = ue.stateNode;
            if ((ue.flags & hn) === yn && (typeof At.getDerivedStateFromError == "function" || ln !== null && typeof ln.componentDidCatch == "function" && !uT(ln))) {
              ue.flags |= Ao;
              var bn = Er(y);
              ue.lanes = fn(ue.lanes, bn);
              var se = w8(ue, Ft, bn);
              yA(ue, se);
              return;
            }
            break;
        }
        ue = ue.return;
      } while (ue !== null);
    }
    var O8 = null;
    O8 = /* @__PURE__ */ new Set();
    var CL = typeof WeakSet == "function" ? WeakSet : Set, SL = function(o, a) {
      a.props = o.memoizedProps, a.state = o.memoizedState, a.componentWillUnmount();
    };
    function bL(o, a) {
      if (ui(null, SL, null, o, a), Ui()) {
        var f = ci();
        Zu(o, f);
      }
    }
    function R8(o) {
      var a = o.ref;
      if (a !== null)
        if (typeof a == "function") {
          if (ui(null, a, null, null), Ui()) {
            var f = ci();
            Zu(o, f);
          }
        } else
          a.current = null;
    }
    function AL(o, a) {
      if (ui(null, a, null), Ui()) {
        var f = ci();
        Zu(o, f);
      }
    }
    function xL(o, a) {
      switch (a.tag) {
        case h:
        case j:
        case H:
        case Be:
          return;
        case g: {
          if (a.flags & Go && o !== null) {
            var f = o.memoizedProps, p = o.memoizedState, y = a.stateNode;
            a.type === a.elementType && !H1 && (y.props !== a.memoizedProps && l("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", He(a.type) || "instance"), y.state !== a.memoizedState && l("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", He(a.type) || "instance"));
            var T = y.getSnapshotBeforeUpdate(a.elementType === a.type ? f : Va(a.type, f), p);
            {
              var x = O8;
              T === void 0 && !x.has(a.type) && (x.add(a.type), l("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", He(a.type)));
            }
            y.__reactInternalSnapshotBeforeUpdate = T;
          }
          return;
        }
        case C: {
          if (a.flags & Go) {
            var k = a.stateNode;
            g5(k.containerInfo);
          }
          return;
        }
        case b:
        case N:
        case S:
        case me:
          return;
      }
      throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function _L(o, a) {
      var f = a.updateQueue, p = f !== null ? f.lastEffect : null;
      if (p !== null) {
        var y = p.next, T = y;
        do {
          if ((T.tag & o) === o) {
            var x = T.destroy;
            T.destroy = void 0, x !== void 0 && x();
          }
          T = T.next;
        } while (T !== y);
      }
    }
    function kL(o, a) {
      var f = a.updateQueue, p = f !== null ? f.lastEffect : null;
      if (p !== null) {
        var y = p.next, T = y;
        do {
          if ((T.tag & o) === o) {
            var x = T.create;
            T.destroy = x();
            {
              var k = T.destroy;
              if (k !== void 0 && typeof k != "function") {
                var R = void 0;
                k === null ? R = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof k.then == "function" ? R = `

It looks like you wrote useEffect(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

useEffect(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : R = " You returned: " + k, l("An effect function must not return anything besides a function, which is used for clean-up.%s", R);
              }
            }
          }
          T = T.next;
        } while (T !== y);
      }
    }
    function NL(o) {
      var a = o.updateQueue, f = a !== null ? a.lastEffect : null;
      if (f !== null) {
        var p = f.next, y = p;
        do {
          var T = y, x = T.next, k = T.tag;
          (k & dm) !== eE && (k & Nd) !== eE && (X8(o, y), hI(o, y)), y = x;
        } while (y !== p);
      }
    }
    function wL(o, a, f, p) {
      switch (f.tag) {
        case h:
        case j:
        case H:
        case Be: {
          kL(wd | Nd, f), NL(f);
          return;
        }
        case g: {
          var y = f.stateNode;
          if (f.flags & St)
            if (a === null)
              f.type === f.elementType && !H1 && (y.props !== f.memoizedProps && l("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", He(f.type) || "instance"), y.state !== f.memoizedState && l("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", He(f.type) || "instance")), y.componentDidMount();
            else {
              var T = f.elementType === f.type ? a.memoizedProps : Va(f.type, a.memoizedProps), x = a.memoizedState;
              f.type === f.elementType && !H1 && (y.props !== f.memoizedProps && l("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", He(f.type) || "instance"), y.state !== f.memoizedState && l("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", He(f.type) || "instance")), y.componentDidUpdate(T, x, y.__reactInternalSnapshotBeforeUpdate);
            }
          var k = f.updateQueue;
          k !== null && (f.type === f.elementType && !H1 && (y.props !== f.memoizedProps && l("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", He(f.type) || "instance"), y.state !== f.memoizedState && l("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", He(f.type) || "instance")), EA(f, k, y));
          return;
        }
        case C: {
          var R = f.updateQueue;
          if (R !== null) {
            var U = null;
            if (f.child !== null)
              switch (f.child.tag) {
                case b:
                  U = f.child.stateNode;
                  break;
                case g:
                  U = f.child.stateNode;
                  break;
              }
            EA(f, R, U);
          }
          return;
        }
        case b: {
          var q = f.stateNode;
          if (a === null && f.flags & St) {
            var ae = f.type, K = f.memoizedProps;
            TD(q, ae, K);
          }
          return;
        }
        case N:
          return;
        case S:
          return;
        case oe: {
          {
            var ue = f.memoizedProps;
            ue.onCommit;
            var Ae = ue.onRender;
            f.stateNode.effectDuration;
            var Ue = WM();
            typeof Ae == "function" && Ae(f.memoizedProps.id, a === null ? "mount" : "update", f.actualDuration, f.treeBaseDuration, f.actualStartTime, Ue, o.memoizedInteractions);
          }
          return;
        }
        case ee: {
          FL(o, f);
          return;
        }
        case fe:
        case me:
        case pe:
        case Ce:
        case J:
        case lt:
          return;
      }
      throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function D8(o, a) {
      for (var f = o; ; ) {
        if (f.tag === b) {
          var p = f.stateNode;
          a ? wD(p) : RD(f.stateNode, f.memoizedProps);
        } else if (f.tag === N) {
          var y = f.stateNode;
          a ? OD(y) : DD(y, f.memoizedProps);
        } else if (!((f.tag === J || f.tag === lt) && f.memoizedState !== null && f !== o)) {
          if (f.child !== null) {
            f.child.return = f, f = f.child;
            continue;
          }
        }
        if (f === o)
          return;
        for (; f.sibling === null; ) {
          if (f.return === null || f.return === o)
            return;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
    }
    function OL(o) {
      var a = o.ref;
      if (a !== null) {
        var f = o.stateNode, p;
        switch (o.tag) {
          case b:
            p = f;
            break;
          default:
            p = f;
        }
        typeof a == "function" ? a(p) : (a.hasOwnProperty("current") || l("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", He(o.type)), a.current = p);
      }
    }
    function RL(o) {
      var a = o.ref;
      a !== null && (typeof a == "function" ? a(null) : a.current = null);
    }
    function M8(o, a, f) {
      switch (lM(a), a.tag) {
        case h:
        case j:
        case z:
        case H:
        case Be: {
          var p = a.updateQueue;
          if (p !== null) {
            var y = p.lastEffect;
            if (y !== null) {
              var T = y.next, x = T;
              do {
                var k = x, R = k.destroy, U = k.tag;
                R !== void 0 && ((U & dm) !== eE ? X8(a, x) : AL(a, R)), x = x.next;
              } while (x !== T);
            }
          }
          return;
        }
        case g: {
          R8(a);
          var q = a.stateNode;
          typeof q.componentWillUnmount == "function" && bL(a, q);
          return;
        }
        case b: {
          R8(a);
          return;
        }
        case S: {
          F8(o, a);
          return;
        }
        case pe:
          return;
        case Ie:
          return;
        case Ce:
          return;
      }
    }
    function DL(o, a, f) {
      for (var p = a; ; ) {
        if (M8(o, p), p.child !== null && // If we use mutation we drill down into portals using commitUnmount above.
        // If we don't use mutation we drill down into portals here instead.
        p.tag !== S) {
          p.child.return = p, p = p.child;
          continue;
        }
        if (p === a)
          return;
        for (; p.sibling === null; ) {
          if (p.return === null || p.return === a)
            return;
          p = p.return;
        }
        p.sibling.return = p.return, p = p.sibling;
      }
    }
    function L8(o) {
      o.alternate = null, o.child = null, o.dependencies = null, o.firstEffect = null, o.lastEffect = null, o.memoizedProps = null, o.memoizedState = null, o.pendingProps = null, o.return = null, o.updateQueue = null, o._debugOwner = null;
    }
    function ML(o) {
      for (var a = o.return; a !== null; ) {
        if (I8(a))
          return a;
        a = a.return;
      }
      throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function I8(o) {
      return o.tag === b || o.tag === C || o.tag === S;
    }
    function LL(o) {
      var a = o;
      e:
        for (; ; ) {
          for (; a.sibling === null; ) {
            if (a.return === null || I8(a.return))
              return null;
            a = a.return;
          }
          for (a.sibling.return = a.return, a = a.sibling; a.tag !== b && a.tag !== N && a.tag !== Ie; ) {
            if (a.flags & Rt || a.child === null || a.tag === S)
              continue e;
            a.child.return = a, a = a.child;
          }
          if (!(a.flags & Rt))
            return a.stateNode;
        }
    }
    function P8(o) {
      var a = ML(o), f, p, y = a.stateNode;
      switch (a.tag) {
        case b:
          f = y, p = !1;
          break;
        case C:
          f = y.containerInfo, p = !0;
          break;
        case S:
          f = y.containerInfo, p = !0;
          break;
        case pe:
        default:
          throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
      }
      a.flags & Or && (Mb(f), a.flags &= ~Or);
      var T = LL(o);
      p ? zE(o, T, f) : qE(o, T, f);
    }
    function zE(o, a, f) {
      var p = o.tag, y = p === b || p === N;
      if (y || he) {
        var T = y ? o.stateNode : o.stateNode.instance;
        a ? _D(f, T, a) : AD(f, T);
      } else if (p !== S) {
        var x = o.child;
        if (x !== null) {
          zE(x, a, f);
          for (var k = x.sibling; k !== null; )
            zE(k, a, f), k = k.sibling;
        }
      }
    }
    function qE(o, a, f) {
      var p = o.tag, y = p === b || p === N;
      if (y || he) {
        var T = y ? o.stateNode : o.stateNode.instance;
        a ? xD(f, T, a) : bD(f, T);
      } else if (p !== S) {
        var x = o.child;
        if (x !== null) {
          qE(x, a, f);
          for (var k = x.sibling; k !== null; )
            qE(k, a, f), k = k.sibling;
        }
      }
    }
    function F8(o, a, f) {
      for (var p = a, y = !1, T, x; ; ) {
        if (!y) {
          var k = p.return;
          e:
            for (; ; ) {
              if (k === null)
                throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              var R = k.stateNode;
              switch (k.tag) {
                case b:
                  T = R, x = !1;
                  break e;
                case C:
                  T = R.containerInfo, x = !0;
                  break e;
                case S:
                  T = R.containerInfo, x = !0;
                  break e;
              }
              k = k.return;
            }
          y = !0;
        }
        if (p.tag === b || p.tag === N)
          DL(o, p), x ? ND(T, p.stateNode) : kD(T, p.stateNode);
        else if (p.tag === S) {
          if (p.child !== null) {
            T = p.stateNode.containerInfo, x = !0, p.child.return = p, p = p.child;
            continue;
          }
        } else if (M8(o, p), p.child !== null) {
          p.child.return = p, p = p.child;
          continue;
        }
        if (p === a)
          return;
        for (; p.sibling === null; ) {
          if (p.return === null || p.return === a)
            return;
          p = p.return, p.tag === S && (y = !1);
        }
        p.sibling.return = p.return, p = p.sibling;
      }
    }
    function IL(o, a, f) {
      F8(o, a);
      var p = a.alternate;
      L8(a), p !== null && L8(p);
    }
    function jE(o, a) {
      switch (a.tag) {
        case h:
        case j:
        case z:
        case H:
        case Be: {
          _L(wd | Nd, a);
          return;
        }
        case g:
          return;
        case b: {
          var f = a.stateNode;
          if (f != null) {
            var p = a.memoizedProps, y = o !== null ? o.memoizedProps : p, T = a.type, x = a.updateQueue;
            a.updateQueue = null, x !== null && CD(f, x, T, y, p);
          }
          return;
        }
        case N: {
          if (a.stateNode === null)
            throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
          var k = a.stateNode, R = a.memoizedProps, U = o !== null ? o.memoizedProps : R;
          SD(k, U, R);
          return;
        }
        case C: {
          {
            var q = a.stateNode;
            q.hydrate && (q.hydrate = !1, HD(q.containerInfo));
          }
          return;
        }
        case oe:
          return;
        case ee: {
          PL(a), B8(a);
          return;
        }
        case fe: {
          B8(a);
          return;
        }
        case me:
          return;
        case pe:
          break;
        case Ce:
          break;
        case J:
        case lt: {
          var ae = a.memoizedState, K = ae !== null;
          D8(a, K);
          return;
        }
      }
      throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
    }
    function PL(o) {
      var a = o.memoizedState;
      if (a !== null) {
        eI();
        {
          var f = o.child;
          D8(f, !0);
        }
      }
    }
    function FL(o, a) {
      var f = a.memoizedState;
      if (f === null) {
        var p = a.alternate;
        if (p !== null) {
          var y = p.memoizedState;
          if (y !== null) {
            var T = y.dehydrated;
            T !== null && zD(T);
          }
        }
      }
    }
    function B8(o) {
      var a = o.updateQueue;
      if (a !== null) {
        o.updateQueue = null;
        var f = o.stateNode;
        f === null && (f = o.stateNode = new CL()), a.forEach(function(p) {
          var y = CI.bind(null, o, p);
          f.has(p) || (p.__reactDoNotTraceInteractions !== !0 && (y = r.unstable_wrap(y)), f.add(p), p.then(y, y));
        });
      }
    }
    function BL(o, a) {
      if (o !== null) {
        var f = o.memoizedState;
        if (f === null || f.dehydrated !== null) {
          var p = a.memoizedState;
          return p !== null && p.dehydrated === null;
        }
      }
      return !1;
    }
    function UL(o) {
      Mb(o.stateNode);
    }
    if (typeof Symbol == "function" && Symbol.for) {
      var bm = Symbol.for;
      bm("selector.component"), bm("selector.has_pseudo_class"), bm("selector.role"), bm("selector.test_id"), bm("selector.text");
    }
    var HL = [];
    function zL() {
      HL.forEach(function(o) {
        return o();
      });
    }
    var qL = Math.ceil, VE = i.ReactCurrentDispatcher, $E = i.ReactCurrentOwner, GE = i.IsSomeRendererActing, Zn = (
      /*             */
      0
    ), V2 = (
      /*               */
      1
    ), jL = (
      /*                 */
      2
    ), WE = (
      /*         */
      4
    ), KE = (
      /*       */
      8
    ), Oo = (
      /*                */
      16
    ), Qs = (
      /*                */
      32
    ), U8 = (
      /*       */
      64
    ), Vl = 0, $2 = 1, G2 = 2, W2 = 3, K2 = 4, YE = 5, bt = Zn, qi = null, er = null, ji = Te, Xs = Te, QE = $u(Te), pi = Vl, Y2 = null, z1 = Te, Q2 = Te, q1 = Te, X2 = Te, XE = null, JE = 0, H8 = 500, z8 = 1 / 0, VL = 500;
    function Ld() {
      z8 = ki() + VL;
    }
    function q8() {
      return z8;
    }
    var et = null, J2 = !1, ZE = null, Id = null, $l = !1, Pd = null, Am = x5, eT = Te, tT = [], nT = [], Gl = null, $L = 50, xm = 0, rT = null, GL = 50, Z2 = 0, j1 = null, _m = Mn, Wl = Te, e9 = Te, iT = !1, km = null, t9 = !1;
    function WL() {
      return qi;
    }
    function Ro() {
      return (bt & (Oo | Qs)) !== Zn ? ki() : (_m !== Mn || (_m = ki()), _m);
    }
    function Ju(o) {
      var a = o.mode;
      if ((a & oo) === qn)
        return Wt;
      if ((a & D1) === qn)
        return bd() === ra ? Wt : Fa;
      Wl === Te && (Wl = z1);
      var f = vM() !== yM;
      if (f)
        return e9 !== Te && (e9 = XE !== null ? XE.pendingLanes : Te), fg(Wl, e9);
      var p = bd(), y;
      if (
        // TODO: Temporary. We're removing the concept of discrete updates.
        (bt & WE) !== Zn && p === O1
      )
        y = Pu(wu, Wl);
      else {
        var T = Tp(p);
        y = Pu(T, Wl);
      }
      return y;
    }
    function KL(o) {
      var a = o.mode;
      return (a & oo) === qn ? Wt : (a & D1) === qn ? bd() === ra ? Wt : Fa : (Wl === Te && (Wl = z1), bp(Wl));
    }
    function wi(o, a, f) {
      bI(), kI(o);
      var p = n9(o, a);
      if (p === null)
        return xI(o), null;
      Bu(p, a, f), p === qi && (q1 = fn(q1, a), pi === K2 && Fd(p, ji));
      var y = bd();
      a === Wt ? /* Check if we're inside unbatchedUpdates */ (bt & KE) !== Zn && // Check if we're not already rendering
      (bt & (Oo | Qs)) === Zn ? (ec(p, a), oT(p)) : (sa(p, f), ec(p, a), bt === Zn && (Ld(), Ws())) : ((bt & WE) !== Zn && // Only updates at user-blocking priority or greater are considered
      // discrete, even inside a discrete event.
      (y === O1 || y === ra) && (Gl === null ? Gl = /* @__PURE__ */ new Set([p]) : Gl.add(p)), sa(p, f), ec(p, a)), XE = p;
    }
    function n9(o, a) {
      o.lanes = fn(o.lanes, a);
      var f = o.alternate;
      f !== null && (f.lanes = fn(f.lanes, a)), f === null && (o.flags & (Rt | Zi)) !== yn && Z8(o);
      for (var p = o, y = o.return; y !== null; )
        y.childLanes = fn(y.childLanes, a), f = y.alternate, f !== null ? f.childLanes = fn(f.childLanes, a) : (y.flags & (Rt | Zi)) !== yn && Z8(o), p = y, y = y.return;
      if (p.tag === C) {
        var T = p.stateNode;
        return T;
      } else
        return null;
    }
    function sa(o, a) {
      var f = o.callbackNode;
      $v(o, a);
      var p = d1(o, o === qi ? ji : Te), y = Ai();
      if (p === Te) {
        f !== null && (aA(f), o.callbackNode = null, o.callbackPriority = Pa);
        return;
      }
      if (f !== null) {
        var T = o.callbackPriority;
        if (T === y)
          return;
        aA(f);
      }
      var x;
      if (y === Rs)
        x = pM(oT.bind(null, o));
      else if (y === s1)
        x = Gu(ra, oT.bind(null, o));
      else {
        var k = ed(y);
        x = Gu(k, j8.bind(null, o));
      }
      o.callbackPriority = y, o.callbackNode = x;
    }
    function j8(o) {
      if (_m = Mn, Wl = Te, e9 = Te, (bt & (Oo | Qs)) !== Zn)
        throw Error("Should not already be working.");
      var a = o.callbackNode, f = Js();
      if (f && o.callbackNode !== a)
        return null;
      var p = d1(o, o === qi ? ji : Te);
      if (p === Te)
        return null;
      var y = aI(o, p);
      if (Mr(z1, q1))
        Bd(o, Te);
      else if (y !== Vl) {
        if (y === G2 && (bt |= U8, o.hydrate && (o.hydrate = !1, g5(o.containerInfo)), p = to(o), p !== Te && (y = Nm(o, p))), y === $2) {
          var T = Y2;
          throw Bd(o, Te), Fd(o, p), sa(o, ki()), T;
        }
        var x = o.current.alternate;
        o.finishedWork = x, o.finishedLanes = p, YL(o, y, p);
      }
      return sa(o, ki()), o.callbackNode === a ? j8.bind(null, o) : null;
    }
    function YL(o, a, f) {
      switch (a) {
        case Vl:
        case $2:
          throw Error("Root did not complete. This is a bug in React.");
        case G2: {
          V1(o);
          break;
        }
        case W2: {
          if (Fd(o, f), Sp(f) && // do not delay if we're inside an act() scope
          !RI()) {
            var p = JE + H8 - ki();
            if (p > 10) {
              var y = d1(o, Te);
              if (y !== Te)
                break;
              var T = o.suspendedLanes;
              if (!Ps(T, f)) {
                Ro(), xp(o, T);
                break;
              }
              o.timeoutHandle = Db(V1.bind(null, o), p);
              break;
            }
          }
          V1(o);
          break;
        }
        case K2: {
          if (Fd(o, f), cg(f))
            break;
          {
            var x = jv(o, f), k = x, R = ki() - k, U = SI(R) - R;
            if (U > 10) {
              o.timeoutHandle = Db(V1.bind(null, o), U);
              break;
            }
          }
          V1(o);
          break;
        }
        case YE: {
          V1(o);
          break;
        }
        default:
          throw Error("Unknown root exit status.");
      }
    }
    function Fd(o, a) {
      a = Fu(a, X2), a = Fu(a, q1), mg(o, a);
    }
    function oT(o) {
      if ((bt & (Oo | Qs)) !== Zn)
        throw Error("Should not already be working.");
      Js();
      var a, f;
      if (o === qi && Mr(o.expiredLanes, ji) ? (a = ji, f = Nm(o, a), Mr(z1, q1) && (a = d1(o, a), f = Nm(o, a))) : (a = d1(o, Te), f = Nm(o, a)), o.tag !== S5 && f === G2 && (bt |= U8, o.hydrate && (o.hydrate = !1, g5(o.containerInfo)), a = to(o), a !== Te && (f = Nm(o, a))), f === $2) {
        var p = Y2;
        throw Bd(o, Te), Fd(o, a), sa(o, ki()), p;
      }
      var y = o.current.alternate;
      return o.finishedWork = y, o.finishedLanes = a, V1(o), sa(o, ki()), null;
    }
    function QL() {
      if ((bt & (V2 | Oo | Qs)) !== Zn) {
        (bt & Oo) !== Zn && l("unstable_flushDiscreteUpdates: Cannot flush updates when React is already rendering.");
        return;
      }
      XL(), Js();
    }
    function XL() {
      if (Gl !== null) {
        var o = Gl;
        Gl = null, o.forEach(function(a) {
          h1(a), sa(a, ki());
        });
      }
      Ws();
    }
    function V8(o, a) {
      var f = bt;
      bt |= V2;
      try {
        return o(a);
      } finally {
        bt = f, bt === Zn && (Ld(), Ws());
      }
    }
    function JL(o, a) {
      var f = bt;
      bt |= jL;
      try {
        return o(a);
      } finally {
        bt = f, bt === Zn && (Ld(), Ws());
      }
    }
    function ZL(o, a, f, p, y) {
      var T = bt;
      bt |= WE;
      try {
        return R1(O1, o.bind(null, a, f, p, y));
      } finally {
        bt = T, bt === Zn && (Ld(), Ws());
      }
    }
    function $8(o, a) {
      var f = bt;
      bt &= ~V2, bt |= KE;
      try {
        return o(a);
      } finally {
        bt = f, bt === Zn && (Ld(), Ws());
      }
    }
    function aT(o, a) {
      var f = bt;
      if ((f & (Oo | Qs)) !== Zn)
        return l("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), o(a);
      bt |= V2;
      try {
        return o ? R1(ra, o.bind(null, a)) : void 0;
      } finally {
        bt = f, Ws();
      }
    }
    function r9(o, a) {
      _i(QE, Xs, o), Xs = fn(Xs, a), z1 = fn(z1, a);
    }
    function sT(o) {
      Xs = QE.current, xi(QE, o);
    }
    function Bd(o, a) {
      o.finishedWork = null, o.finishedLanes = Te;
      var f = o.timeoutHandle;
      if (f !== m5 && (o.timeoutHandle = m5, ED(f)), er !== null)
        for (var p = er.return; p !== null; )
          k8(p), p = p.return;
      qi = o, er = $1(o.current, null), ji = Xs = z1 = a, pi = Vl, Y2 = null, Q2 = Te, q1 = Te, X2 = Te, j1 = null, ja.discardPendingWarnings();
    }
    function G8(o, a) {
      do {
        var f = er;
        try {
          if (u2(), UA(), kr(), $E.current = null, f === null || f.return === null) {
            pi = $2, Y2 = a, er = null;
            return;
          }
          te && f.mode & wo && H2(f, !0), TL(o, f.return, f, a, ji), Q8(f);
        } catch (p) {
          a = p, er === f && f !== null ? (f = f.return, er = f) : f = er;
          continue;
        }
        return;
      } while (!0);
    }
    function W8() {
      var o = VE.current;
      return VE.current = F2, o === null ? F2 : o;
    }
    function K8(o) {
      VE.current = o;
    }
    function i9(o) {
      {
        var a = r.__interactionsRef.current;
        return r.__interactionsRef.current = o.memoizedInteractions, a;
      }
    }
    function o9(o) {
      r.__interactionsRef.current = o;
    }
    function eI() {
      JE = ki();
    }
    function lT(o) {
      Q2 = fn(o, Q2);
    }
    function tI() {
      pi === Vl && (pi = W2);
    }
    function nI() {
      (pi === Vl || pi === W2) && (pi = K2), qi !== null && (Cp(Q2) || Cp(q1)) && Fd(qi, ji);
    }
    function rI() {
      pi !== YE && (pi = G2);
    }
    function iI() {
      return pi === Vl;
    }
    function Nm(o, a) {
      var f = bt;
      bt |= Oo;
      var p = W8();
      (qi !== o || ji !== a) && (Bd(o, a), o3(o, a));
      var y = i9(o);
      do
        try {
          oI();
          break;
        } catch (T) {
          G8(o, T);
        }
      while (!0);
      if (u2(), o9(y), bt = f, K8(p), er !== null)
        throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
      return qi = null, ji = Te, pi;
    }
    function oI() {
      for (; er !== null; )
        Y8(er);
    }
    function aI(o, a) {
      var f = bt;
      bt |= Oo;
      var p = W8();
      (qi !== o || ji !== a) && (Ld(), Bd(o, a), o3(o, a));
      var y = i9(o);
      do
        try {
          sI();
          break;
        } catch (T) {
          G8(o, T);
        }
      while (!0);
      return u2(), o9(y), K8(p), bt = f, er !== null ? Vl : (qi = null, ji = Te, pi);
    }
    function sI() {
      for (; er !== null && !dM(); )
        Y8(er);
    }
    function Y8(o) {
      var a = o.alternate;
      $n(o);
      var f;
      (o.mode & wo) !== qn ? (xE(o), f = cT(a, o, Xs), H2(o, !0)) : f = cT(a, o, Xs), kr(), o.memoizedProps = o.pendingProps, f === null ? Q8(o) : er = f, $E.current = null;
    }
    function Q8(o) {
      var a = o;
      do {
        var f = a.alternate, p = a.return;
        if ((a.flags & Qc) === yn) {
          $n(a);
          var y = void 0;
          if ((a.mode & wo) === qn ? y = _8(f, a, Xs) : (xE(a), y = _8(f, a, Xs), H2(a, !1)), kr(), y !== null) {
            er = y;
            return;
          }
          if (lI(a), p !== null && // Do not append effects to parents if a sibling failed to complete
          (p.flags & Qc) === yn) {
            p.firstEffect === null && (p.firstEffect = a.firstEffect), a.lastEffect !== null && (p.lastEffect !== null && (p.lastEffect.nextEffect = a.firstEffect), p.lastEffect = a.lastEffect);
            var T = a.flags;
            T > fi && (p.lastEffect !== null ? p.lastEffect.nextEffect = a : p.firstEffect = a, p.lastEffect = a);
          }
        } else {
          var x = gL(a);
          if (x !== null) {
            x.flags &= Sl, er = x;
            return;
          }
          if ((a.mode & wo) !== qn) {
            H2(a, !1);
            for (var k = a.actualDuration, R = a.child; R !== null; )
              k += R.actualDuration, R = R.sibling;
            a.actualDuration = k;
          }
          p !== null && (p.firstEffect = p.lastEffect = null, p.flags |= Qc);
        }
        var U = a.sibling;
        if (U !== null) {
          er = U;
          return;
        }
        a = p, er = a;
      } while (a !== null);
      pi === Vl && (pi = YE);
    }
    function lI(o) {
      if (
        // TODO: Move this check out of the hot path by moving `resetChildLanes`
        // to switch statement in `completeWork`.
        !((o.tag === lt || o.tag === J) && o.memoizedState !== null && !Mr(Xs, _o) && (o.mode & D1) !== Te)
      ) {
        var a = Te;
        if ((o.mode & wo) !== qn) {
          for (var f = o.actualDuration, p = o.selfBaseDuration, y = o.alternate === null || o.child !== o.alternate.child, T = o.child; T !== null; )
            a = fn(a, fn(T.lanes, T.childLanes)), y && (f += T.actualDuration), p += T.treeBaseDuration, T = T.sibling;
          var x = o.tag === ee && o.memoizedState !== null;
          if (x) {
            var k = o.child;
            k !== null && (p -= k.treeBaseDuration);
          }
          o.actualDuration = f, o.treeBaseDuration = p;
        } else
          for (var R = o.child; R !== null; )
            a = fn(a, fn(R.lanes, R.childLanes)), R = R.sibling;
        o.childLanes = a;
      }
    }
    function V1(o) {
      var a = bd();
      return R1(ra, uI.bind(null, o, a)), null;
    }
    function uI(o, a) {
      do
        Js();
      while (Pd !== null);
      if (AI(), (bt & (Oo | Qs)) !== Zn)
        throw Error("Should not already be working.");
      var f = o.finishedWork, p = o.finishedLanes;
      if (f === null)
        return null;
      if (o.finishedWork = null, o.finishedLanes = Te, f === o.current)
        throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
      o.callbackNode = null;
      var y = fn(f.lanes, f.childLanes);
      _p(o, y), Gl !== null && !Wv(y) && Gl.has(o) && Gl.delete(o), o === qi && (qi = null, er = null, ji = Te);
      var T;
      if (f.flags > fi ? f.lastEffect !== null ? (f.lastEffect.nextEffect = f, T = f.firstEffect) : T = f : T = f.firstEffect, T !== null) {
        var x = bt;
        bt |= Qs;
        var k = i9(o);
        $E.current = null, km = dD(o.containerInfo), t9 = !1, et = T;
        do
          if (ui(null, cI, null), Ui()) {
            if (et === null)
              throw Error("Should be working on an effect.");
            var R = ci();
            Zu(et, R), et = et.nextEffect;
          }
        while (et !== null);
        km = null, t8(), et = T;
        do
          if (ui(null, fI, null, o, a), Ui()) {
            if (et === null)
              throw Error("Should be working on an effect.");
            var U = ci();
            Zu(et, U), et = et.nextEffect;
          }
        while (et !== null);
        hD(o.containerInfo), o.current = f, et = T;
        do
          if (ui(null, dI, null, o, p), Ui()) {
            if (et === null)
              throw Error("Should be working on an effect.");
            var q = ci();
            Zu(et, q), et = et.nextEffect;
          }
        while (et !== null);
        et = null, hM(), o9(k), bt = x;
      } else
        o.current = f, t8();
      var ae = $l;
      if ($l)
        $l = !1, Pd = o, eT = p, Am = a;
      else
        for (et = T; et !== null; ) {
          var K = et.nextEffect;
          et.nextEffect = null, et.flags & Rn && s3(et), et = K;
        }
      if (y = o.pendingLanes, y !== Te) {
        if (j1 !== null) {
          var ue = j1;
          j1 = null;
          for (var Ae = 0; Ae < ue.length; Ae++)
            i3(o, ue[Ae], o.memoizedInteractions);
        }
        ec(o, y);
      } else
        Id = null;
      if (ae || a3(o, p), y === Wt ? o === rT ? xm++ : (xm = 0, rT = o) : xm = 0, sM(f.stateNode, a), zL(), sa(o, ki()), J2) {
        J2 = !1;
        var Ue = ZE;
        throw ZE = null, Ue;
      }
      return (bt & KE) !== Zn || Ws(), null;
    }
    function cI() {
      for (; et !== null; ) {
        var o = et.alternate;
        !t9 && km !== null && ((et.flags & Rn) !== yn ? ig(et, km) && (t9 = !0) : et.tag === ee && BL(o, et) && ig(et, km) && (t9 = !0));
        var a = et.flags;
        (a & Go) !== yn && ($n(et), xL(o, et), kr()), (a & bu) !== yn && ($l || ($l = !0, Gu(zl, function() {
          return Js(), null;
        }))), et = et.nextEffect;
      }
    }
    function fI(o, a) {
      for (; et !== null; ) {
        $n(et);
        var f = et.flags;
        if (f & Or && UL(et), f & Rr) {
          var p = et.alternate;
          p !== null && RL(p);
        }
        var y = f & (Rt | St | Rn | Zi);
        switch (y) {
          case Rt: {
            P8(et), et.flags &= ~Rt;
            break;
          }
          case xs: {
            P8(et), et.flags &= ~Rt;
            var T = et.alternate;
            jE(T, et);
            break;
          }
          case Zi: {
            et.flags &= ~Zi;
            break;
          }
          case tg: {
            et.flags &= ~Zi;
            var x = et.alternate;
            jE(x, et);
            break;
          }
          case St: {
            var k = et.alternate;
            jE(k, et);
            break;
          }
          case Rn: {
            IL(o, et);
            break;
          }
        }
        kr(), et = et.nextEffect;
      }
    }
    function dI(o, a) {
      for (; et !== null; ) {
        $n(et);
        var f = et.flags;
        if (f & (St | _s)) {
          var p = et.alternate;
          wL(o, p, et);
        }
        f & Rr && OL(et), kr(), et = et.nextEffect;
      }
    }
    function Js() {
      if (Am !== x5) {
        var o = Am > zl ? zl : Am;
        return Am = x5, R1(o, mI);
      }
      return !1;
    }
    function hI(o, a) {
      tT.push(a, o), $l || ($l = !0, Gu(zl, function() {
        return Js(), null;
      }));
    }
    function X8(o, a) {
      nT.push(a, o);
      {
        o.flags |= Au;
        var f = o.alternate;
        f !== null && (f.flags |= Au);
      }
      $l || ($l = !0, Gu(zl, function() {
        return Js(), null;
      }));
    }
    function pI(o) {
      var a = o.create;
      o.destroy = a();
    }
    function mI() {
      if (Pd === null)
        return !1;
      var o = Pd, a = eT;
      if (Pd = null, eT = Te, (bt & (Oo | Qs)) !== Zn)
        throw Error("Cannot flush passive effects while already rendering.");
      iT = !0;
      var f = bt;
      bt |= Qs;
      var p = i9(o), y = nT;
      nT = [];
      for (var T = 0; T < y.length; T += 2) {
        var x = y[T], k = y[T + 1], R = x.destroy;
        x.destroy = void 0;
        {
          k.flags &= ~Au;
          var U = k.alternate;
          U !== null && (U.flags &= ~Au);
        }
        if (typeof R == "function") {
          if ($n(k), ui(null, R, null), Ui()) {
            if (k === null)
              throw Error("Should be working on an effect.");
            var q = ci();
            Zu(k, q);
          }
          kr();
        }
      }
      var ae = tT;
      tT = [];
      for (var K = 0; K < ae.length; K += 2) {
        var ue = ae[K], Ae = ae[K + 1];
        {
          if ($n(Ae), ui(null, pI, null, ue), Ui()) {
            if (Ae === null)
              throw Error("Should be working on an effect.");
            var Ue = ci();
            Zu(Ae, Ue);
          }
          kr();
        }
      }
      for (var mt = o.current.firstEffect; mt !== null; ) {
        var Ft = mt.nextEffect;
        mt.nextEffect = null, mt.flags & Rn && s3(mt), mt = Ft;
      }
      return o9(p), a3(o, a), iT = !1, bt = f, Ws(), Z2 = Pd === null ? 0 : Z2 + 1, !0;
    }
    function uT(o) {
      return Id !== null && Id.has(o);
    }
    function gI(o) {
      Id === null ? Id = /* @__PURE__ */ new Set([o]) : Id.add(o);
    }
    function yI(o) {
      J2 || (J2 = !0, ZE = o);
    }
    var vI = yI;
    function J8(o, a, f) {
      var p = UE(f, a), y = N8(o, p, Wt);
      Ku(o, y);
      var T = Ro(), x = n9(o, Wt);
      x !== null && (Bu(x, Wt, T), sa(x, T), ec(x, Wt));
    }
    function Zu(o, a) {
      if (o.tag === C) {
        J8(o, o, a);
        return;
      }
      for (var f = o.return; f !== null; ) {
        if (f.tag === C) {
          J8(f, o, a);
          return;
        } else if (f.tag === g) {
          var p = f.type, y = f.stateNode;
          if (typeof p.getDerivedStateFromError == "function" || typeof y.componentDidCatch == "function" && !uT(y)) {
            var T = UE(a, o), x = w8(f, T, Wt);
            Ku(f, x);
            var k = Ro(), R = n9(f, Wt);
            if (R !== null)
              Bu(R, Wt, k), sa(R, k), ec(R, Wt);
            else if (typeof y.componentDidCatch == "function" && !uT(y))
              try {
                y.componentDidCatch(a, T);
              } catch {
              }
            return;
          }
        }
        f = f.return;
      }
    }
    function EI(o, a, f) {
      var p = o.pingCache;
      p !== null && p.delete(a);
      var y = Ro();
      xp(o, f), qi === o && Ps(ji, f) && (pi === K2 || pi === W2 && Sp(ji) && ki() - JE < H8 ? Bd(o, Te) : X2 = fn(X2, f)), sa(o, y), ec(o, f);
    }
    function TI(o, a) {
      a === Qn && (a = KL(o));
      var f = Ro(), p = n9(o, a);
      p !== null && (Bu(p, a, f), sa(p, f), ec(p, a));
    }
    function CI(o, a) {
      var f = Qn, p;
      p = o.stateNode, p !== null && p.delete(a), TI(o, f);
    }
    function SI(o) {
      return o < 120 ? 120 : o < 480 ? 480 : o < 1080 ? 1080 : o < 1920 ? 1920 : o < 3e3 ? 3e3 : o < 4320 ? 4320 : qL(o / 1960) * 1960;
    }
    function bI() {
      if (xm > $L)
        throw xm = 0, rT = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
      Z2 > GL && (Z2 = 0, l("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
    }
    function AI() {
      ja.flushLegacyContextWarning(), ja.flushPendingUnsafeLifecycleWarnings();
    }
    var a9 = null;
    function Z8(o) {
      {
        if ((bt & Oo) !== Zn || !(o.mode & (oo | D1)))
          return;
        var a = o.tag;
        if (a !== v && a !== C && a !== g && a !== h && a !== j && a !== z && a !== H && a !== Be)
          return;
        var f = He(o.type) || "ReactComponent";
        if (a9 !== null) {
          if (a9.has(f))
            return;
          a9.add(f);
        } else
          a9 = /* @__PURE__ */ new Set([f]);
        var p = _r;
        try {
          $n(o), l("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally {
          p ? $n(o) : kr();
        }
      }
    }
    var s9 = null;
    function xI(o) {
      {
        var a = o.tag;
        if (a !== C && a !== g && a !== h && a !== j && a !== z && a !== H && a !== Be || (o.flags & Au) !== yn)
          return;
        var f = He(o.type) || "ReactComponent";
        if (s9 !== null) {
          if (s9.has(f))
            return;
          s9.add(f);
        } else
          s9 = /* @__PURE__ */ new Set([f]);
        if (!iT) {
          var p = _r;
          try {
            $n(o), l("Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in %s.", a === g ? "the componentWillUnmount method" : "a useEffect cleanup function");
          } finally {
            p ? $n(o) : kr();
          }
        }
      }
    }
    var cT;
    {
      var _I = null;
      cT = function(o, a, f) {
        var p = f3(_I, a);
        try {
          return C8(o, a, f);
        } catch (T) {
          if (T !== null && typeof T == "object" && typeof T.then == "function")
            throw T;
          if (u2(), UA(), k8(a), f3(a, p), a.mode & wo && xE(a), ui(null, C8, null, o, a, f), Ui()) {
            var y = ci();
            throw y;
          } else
            throw T;
        }
      };
    }
    var e3 = !1, fT;
    fT = /* @__PURE__ */ new Set();
    function kI(o) {
      if (qo && (bt & Oo) !== Zn && !GM())
        switch (o.tag) {
          case h:
          case j:
          case H: {
            var a = er && He(er.type) || "Unknown", f = a;
            if (!fT.has(f)) {
              fT.add(f);
              var p = He(o.type) || "Unknown";
              l("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", p, a, a);
            }
            break;
          }
          case g: {
            e3 || (l("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), e3 = !0);
            break;
          }
        }
    }
    var l9 = {
      current: !1
    };
    function t3(o) {
      if (GE.current === !0 && l9.current !== !0) {
        var a = _r;
        try {
          $n(o), l(`It looks like you're using the wrong act() around your test interactions.
Be sure to use the matching version of act() corresponding to your renderer:

// for react-dom:
import {act} from 'react-dom/test-utils';
// ...
act(() => ...);

// for react-test-renderer:
import TestRenderer from react-test-renderer';
const {act} = TestRenderer;
// ...
act(() => ...);`);
        } finally {
          a ? $n(o) : kr();
        }
      }
    }
    function n3(o) {
      (o.mode & Jn) !== qn && GE.current === !1 && l9.current === !1 && l(`An update to %s ran an effect, but was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, He(o.type));
    }
    function NI(o) {
      if (bt === Zn && GE.current === !1 && l9.current === !1) {
        var a = _r;
        try {
          $n(o), l(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, He(o.type));
        } finally {
          a ? $n(o) : kr();
        }
      }
    }
    var wI = NI, r3 = !1;
    function OI(o) {
      r3 === !1 && n.unstable_flushAllWithoutAsserting === void 0 && (o.mode & oo || o.mode & D1) && (r3 = !0, l(`In Concurrent or Sync modes, the "scheduler" module needs to be mocked to guarantee consistent behaviour across tests and browsers. For example, with jest: 
jest.mock('scheduler', () => require('scheduler/unstable_mock'));

For more info, visit https://reactjs.org/link/mock-scheduler`));
    }
    function dT(o, a) {
      return a * 1e3 + o.interactionThreadID;
    }
    function u9(o) {
      j1 === null ? j1 = [o] : j1.push(o);
    }
    function i3(o, a, f) {
      if (f.size > 0) {
        var p = o.pendingInteractionMap, y = p.get(a);
        y != null ? f.forEach(function(k) {
          y.has(k) || k.__count++, y.add(k);
        }) : (p.set(a, new Set(f)), f.forEach(function(k) {
          k.__count++;
        }));
        var T = r.__subscriberRef.current;
        if (T !== null) {
          var x = dT(o, a);
          T.onWorkScheduled(f, x);
        }
      }
    }
    function ec(o, a) {
      i3(o, a, r.__interactionsRef.current);
    }
    function o3(o, a) {
      var f = /* @__PURE__ */ new Set();
      if (o.pendingInteractionMap.forEach(function(T, x) {
        Mr(a, x) && T.forEach(function(k) {
          return f.add(k);
        });
      }), o.memoizedInteractions = f, f.size > 0) {
        var p = r.__subscriberRef.current;
        if (p !== null) {
          var y = dT(o, a);
          try {
            p.onWorkStarted(f, y);
          } catch (T) {
            Gu(ra, function() {
              throw T;
            });
          }
        }
      }
    }
    function a3(o, a) {
      var f = o.pendingLanes, p;
      try {
        if (p = r.__subscriberRef.current, p !== null && o.memoizedInteractions.size > 0) {
          var y = dT(o, a);
          p.onWorkStopped(o.memoizedInteractions, y);
        }
      } catch (x) {
        Gu(ra, function() {
          throw x;
        });
      } finally {
        var T = o.pendingInteractionMap;
        T.forEach(function(x, k) {
          Mr(f, k) || (T.delete(k), x.forEach(function(R) {
            if (R.__count--, p !== null && R.__count === 0)
              try {
                p.onInteractionScheduledWorkCompleted(R);
              } catch (U) {
                Gu(ra, function() {
                  throw U;
                });
              }
          }));
        });
      }
    }
    function RI() {
      return DI > 0;
    }
    var DI = 0;
    function s3(o) {
      o.sibling = null, o.stateNode = null;
    }
    var la = null, Ud = null, MI = function(o) {
      la = o;
    };
    function Hd(o) {
      {
        if (la === null)
          return o;
        var a = la(o);
        return a === void 0 ? o : a.current;
      }
    }
    function hT(o) {
      return Hd(o);
    }
    function pT(o) {
      {
        if (la === null)
          return o;
        var a = la(o);
        if (a === void 0) {
          if (o != null && typeof o.render == "function") {
            var f = Hd(o.render);
            if (o.render !== f) {
              var p = {
                $$typeof: Ii,
                render: f
              };
              return o.displayName !== void 0 && (p.displayName = o.displayName), p;
            }
          }
          return o;
        }
        return a.current;
      }
    }
    function l3(o, a) {
      {
        if (la === null)
          return !1;
        var f = o.elementType, p = a.type, y = !1, T = typeof p == "object" && p !== null ? p.$$typeof : null;
        switch (o.tag) {
          case g: {
            typeof p == "function" && (y = !0);
            break;
          }
          case h: {
            (typeof p == "function" || T === Pn) && (y = !0);
            break;
          }
          case j: {
            (T === Ii || T === Pn) && (y = !0);
            break;
          }
          case z:
          case H: {
            (T === To || T === Pn) && (y = !0);
            break;
          }
          default:
            return !1;
        }
        if (y) {
          var x = la(f);
          if (x !== void 0 && x === la(p))
            return !0;
        }
        return !1;
      }
    }
    function u3(o) {
      {
        if (la === null || typeof WeakSet != "function")
          return;
        Ud === null && (Ud = /* @__PURE__ */ new WeakSet()), Ud.add(o);
      }
    }
    var LI = function(o, a) {
      {
        if (la === null)
          return;
        var f = a.staleFamilies, p = a.updatedFamilies;
        Js(), aT(function() {
          mT(o.current, p, f);
        });
      }
    }, II = function(o, a) {
      {
        if (o.context !== No)
          return;
        Js(), aT(function() {
          wm(a, o, null, null);
        });
      }
    };
    function mT(o, a, f) {
      {
        var p = o.alternate, y = o.child, T = o.sibling, x = o.tag, k = o.type, R = null;
        switch (x) {
          case h:
          case H:
          case g:
            R = k;
            break;
          case j:
            R = k.render;
            break;
        }
        if (la === null)
          throw new Error("Expected resolveFamily to be set during hot reload.");
        var U = !1, q = !1;
        if (R !== null) {
          var ae = la(R);
          ae !== void 0 && (f.has(ae) ? q = !0 : a.has(ae) && (x === g ? q = !0 : U = !0));
        }
        Ud !== null && (Ud.has(o) || p !== null && Ud.has(p)) && (q = !0), q && (o._debugNeedsRemount = !0), (q || U) && wi(o, Wt, Mn), y !== null && !q && mT(y, a, f), T !== null && mT(T, a, f);
      }
    }
    var PI = function(o, a) {
      {
        var f = /* @__PURE__ */ new Set(), p = new Set(a.map(function(y) {
          return y.current;
        }));
        return gT(o.current, p, f), f;
      }
    };
    function gT(o, a, f) {
      {
        var p = o.child, y = o.sibling, T = o.tag, x = o.type, k = null;
        switch (T) {
          case h:
          case H:
          case g:
            k = x;
            break;
          case j:
            k = x.render;
            break;
        }
        var R = !1;
        k !== null && a.has(k) && (R = !0), R ? FI(o, f) : p !== null && gT(p, a, f), y !== null && gT(y, a, f);
      }
    }
    function FI(o, a) {
      {
        var f = BI(o, a);
        if (f)
          return;
        for (var p = o; ; ) {
          switch (p.tag) {
            case b:
              a.add(p.stateNode);
              return;
            case S:
              a.add(p.stateNode.containerInfo);
              return;
            case C:
              a.add(p.stateNode.containerInfo);
              return;
          }
          if (p.return === null)
            throw new Error("Expected to reach root first.");
          p = p.return;
        }
      }
    }
    function BI(o, a) {
      for (var f = o, p = !1; ; ) {
        if (f.tag === b)
          p = !0, a.add(f.stateNode);
        else if (f.child !== null) {
          f.child.return = f, f = f.child;
          continue;
        }
        if (f === o)
          return p;
        for (; f.sibling === null; ) {
          if (f.return === null || f.return === o)
            return p;
          f = f.return;
        }
        f.sibling.return = f.return, f = f.sibling;
      }
      return !1;
    }
    var yT;
    {
      yT = !1;
      try {
        var c3 = Object.preventExtensions({});
      } catch {
        yT = !0;
      }
    }
    var UI = 1;
    function HI(o, a, f, p) {
      this.tag = o, this.key = f, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = a, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = p, this.flags = yn, this.nextEffect = null, this.firstEffect = null, this.lastEffect = null, this.lanes = Te, this.childLanes = Te, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugID = UI++, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !yT && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
    }
    var Do = function(o, a, f, p) {
      return new HI(o, a, f, p);
    };
    function vT(o) {
      var a = o.prototype;
      return !!(a && a.isReactComponent);
    }
    function zI(o) {
      return typeof o == "function" && !vT(o) && o.defaultProps === void 0;
    }
    function qI(o) {
      if (typeof o == "function")
        return vT(o) ? g : h;
      if (o != null) {
        var a = o.$$typeof;
        if (a === Ii)
          return j;
        if (a === To)
          return z;
      }
      return v;
    }
    function $1(o, a) {
      var f = o.alternate;
      f === null ? (f = Do(o.tag, a, o.key, o.mode), f.elementType = o.elementType, f.type = o.type, f.stateNode = o.stateNode, f._debugID = o._debugID, f._debugSource = o._debugSource, f._debugOwner = o._debugOwner, f._debugHookTypes = o._debugHookTypes, f.alternate = o, o.alternate = f) : (f.pendingProps = a, f.type = o.type, f.flags = yn, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, f.actualDuration = 0, f.actualStartTime = -1), f.childLanes = o.childLanes, f.lanes = o.lanes, f.child = o.child, f.memoizedProps = o.memoizedProps, f.memoizedState = o.memoizedState, f.updateQueue = o.updateQueue;
      var p = o.dependencies;
      switch (f.dependencies = p === null ? null : {
        lanes: p.lanes,
        firstContext: p.firstContext
      }, f.sibling = o.sibling, f.index = o.index, f.ref = o.ref, f.selfBaseDuration = o.selfBaseDuration, f.treeBaseDuration = o.treeBaseDuration, f._debugNeedsRemount = o._debugNeedsRemount, f.tag) {
        case v:
        case h:
        case H:
          f.type = Hd(o.type);
          break;
        case g:
          f.type = hT(o.type);
          break;
        case j:
          f.type = pT(o.type);
          break;
      }
      return f;
    }
    function jI(o, a) {
      o.flags &= Rt, o.nextEffect = null, o.firstEffect = null, o.lastEffect = null;
      var f = o.alternate;
      if (f === null)
        o.childLanes = Te, o.lanes = a, o.child = null, o.memoizedProps = null, o.memoizedState = null, o.updateQueue = null, o.dependencies = null, o.stateNode = null, o.selfBaseDuration = 0, o.treeBaseDuration = 0;
      else {
        o.childLanes = f.childLanes, o.lanes = f.lanes, o.child = f.child, o.memoizedProps = f.memoizedProps, o.memoizedState = f.memoizedState, o.updateQueue = f.updateQueue, o.type = f.type;
        var p = f.dependencies;
        o.dependencies = p === null ? null : {
          lanes: p.lanes,
          firstContext: p.firstContext
        }, o.selfBaseDuration = f.selfBaseDuration, o.treeBaseDuration = f.treeBaseDuration;
      }
      return o;
    }
    function VI(o) {
      var a;
      return o === Kb ? a = D1 | oo | Jn : o === Wb ? a = oo | Jn : a = qn, iM && (a |= wo), Do(C, null, null, a);
    }
    function ET(o, a, f, p, y, T) {
      var x = v, k = o;
      if (typeof o == "function")
        vT(o) ? (x = g, k = hT(k)) : k = Hd(k);
      else if (typeof o == "string")
        x = b;
      else {
        e:
          switch (o) {
            case Vr:
              return G1(f.children, y, T, a);
            case qe:
              x = L, y |= mM;
              break;
            case us:
              x = L, y |= Jn;
              break;
            case Yi:
              return $I(f, y, T, a);
            case $r:
              return GI(f, y, T, a);
            case Gr:
              return WI(f, y, T, a);
            case ct:
              return CT(f, y, T, a);
            case Ut:
              return KI(f, y, T, a);
            case G:
            default: {
              if (typeof o == "object" && o !== null)
                switch (o.$$typeof) {
                  case Eo:
                    x = Y;
                    break e;
                  case Uo:
                    x = P;
                    break e;
                  case Ii:
                    x = j, k = pT(k);
                    break e;
                  case To:
                    x = z;
                    break e;
                  case Pn:
                    x = Z, k = null;
                    break e;
                  case xa:
                    x = Be;
                    break e;
                }
              var R = "";
              {
                (o === void 0 || typeof o == "object" && o !== null && Object.keys(o).length === 0) && (R += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                var U = p ? He(p.type) : null;
                U && (R += `

Check the render method of \`` + U + "`.");
              }
              throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (o == null ? o : typeof o) + "." + R);
            }
          }
      }
      var q = Do(x, f, a, y);
      return q.elementType = o, q.type = k, q.lanes = T, q._debugOwner = p, q;
    }
    function TT(o, a, f) {
      var p = null;
      p = o._owner;
      var y = o.type, T = o.key, x = o.props, k = ET(y, T, x, p, a, f);
      return k._debugSource = o._source, k._debugOwner = o._owner, k;
    }
    function G1(o, a, f, p) {
      var y = Do(O, o, p, a);
      return y.lanes = f, y;
    }
    function $I(o, a, f, p) {
      typeof o.id != "string" && l('Profiler must specify an "id" as a prop');
      var y = Do(oe, o, p, a | wo);
      return y.elementType = Yi, y.type = Yi, y.lanes = f, y.stateNode = {
        effectDuration: 0,
        passiveEffectDuration: 0
      }, y;
    }
    function GI(o, a, f, p) {
      var y = Do(ee, o, p, a);
      return y.type = $r, y.elementType = $r, y.lanes = f, y;
    }
    function WI(o, a, f, p) {
      var y = Do(fe, o, p, a);
      return y.type = Gr, y.elementType = Gr, y.lanes = f, y;
    }
    function CT(o, a, f, p) {
      var y = Do(J, o, p, a);
      return y.type = ct, y.elementType = ct, y.lanes = f, y;
    }
    function KI(o, a, f, p) {
      var y = Do(lt, o, p, a);
      return y.type = Ut, y.elementType = Ut, y.lanes = f, y;
    }
    function ST(o, a, f) {
      var p = Do(N, o, null, a);
      return p.lanes = f, p;
    }
    function YI() {
      var o = Do(b, null, null, qn);
      return o.elementType = "DELETED", o.type = "DELETED", o;
    }
    function bT(o, a, f) {
      var p = o.children !== null ? o.children : [], y = Do(S, p, o.key, a);
      return y.lanes = f, y.stateNode = {
        containerInfo: o.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: o.implementation
      }, y;
    }
    function f3(o, a) {
      return o === null && (o = Do(v, null, null, qn)), o.tag = a.tag, o.key = a.key, o.elementType = a.elementType, o.type = a.type, o.stateNode = a.stateNode, o.return = a.return, o.child = a.child, o.sibling = a.sibling, o.index = a.index, o.ref = a.ref, o.pendingProps = a.pendingProps, o.memoizedProps = a.memoizedProps, o.updateQueue = a.updateQueue, o.memoizedState = a.memoizedState, o.dependencies = a.dependencies, o.mode = a.mode, o.flags = a.flags, o.nextEffect = a.nextEffect, o.firstEffect = a.firstEffect, o.lastEffect = a.lastEffect, o.lanes = a.lanes, o.childLanes = a.childLanes, o.alternate = a.alternate, o.actualDuration = a.actualDuration, o.actualStartTime = a.actualStartTime, o.selfBaseDuration = a.selfBaseDuration, o.treeBaseDuration = a.treeBaseDuration, o._debugID = a._debugID, o._debugSource = a._debugSource, o._debugOwner = a._debugOwner, o._debugNeedsRemount = a._debugNeedsRemount, o._debugHookTypes = a._debugHookTypes, o;
    }
    function QI(o, a, f) {
      switch (this.tag = a, this.containerInfo = o, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = m5, this.context = null, this.pendingContext = null, this.hydrate = f, this.callbackNode = null, this.callbackPriority = Pa, this.eventTimes = td(Te), this.expirationTimes = td(Mn), this.pendingLanes = Te, this.suspendedLanes = Te, this.pingedLanes = Te, this.expiredLanes = Te, this.mutableReadLanes = Te, this.finishedLanes = Te, this.entangledLanes = Te, this.entanglements = td(Te), this.mutableSourceEagerHydrationData = null, this.interactionThreadID = r.unstable_getThreadID(), this.memoizedInteractions = /* @__PURE__ */ new Set(), this.pendingInteractionMap = /* @__PURE__ */ new Map(), a) {
        case Wb:
          this._debugRootType = "createBlockingRoot()";
          break;
        case Kb:
          this._debugRootType = "createRoot()";
          break;
        case S5:
          this._debugRootType = "createLegacyRoot()";
          break;
      }
    }
    function XI(o, a, f, p) {
      var y = new QI(o, a, f), T = VI(a);
      return y.current = T, T.stateNode = y, D5(T), y;
    }
    function JI(o, a) {
      var f = a._getVersion, p = f(a._source);
      o.mutableSourceEagerHydrationData == null ? o.mutableSourceEagerHydrationData = [a, p] : o.mutableSourceEagerHydrationData.push(a, p);
    }
    function ZI(o, a, f) {
      var p = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
      return {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: Gt,
        key: p == null ? null : "" + p,
        children: o,
        containerInfo: a,
        implementation: f
      };
    }
    var AT, xT;
    AT = !1, xT = {};
    function eP(o) {
      if (!o)
        return No;
      var a = Ra(o), f = rM(a);
      if (a.tag === g) {
        var p = a.type;
        if ($s(p))
          return $b(a, p, f);
      }
      return f;
    }
    function tP(o, a) {
      {
        var f = Ra(o);
        if (f === void 0)
          throw typeof o.render == "function" ? Error("Unable to find node on an unmounted component.") : Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(o));
        var p = ip(f);
        if (p === null)
          return null;
        if (p.mode & Jn) {
          var y = He(f.type) || "Component";
          if (!xT[y]) {
            xT[y] = !0;
            var T = _r;
            try {
              $n(p), f.mode & Jn ? l("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", a, a, y) : l("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", a, a, y);
            } finally {
              T ? $n(T) : kr();
            }
          }
        }
        return p.stateNode;
      }
    }
    function nP(o, a, f, p) {
      return XI(o, a, f);
    }
    function wm(o, a, f, p) {
      aM(a, o);
      var y = a.current, T = Ro();
      typeof jest < "u" && (OI(y), t3(y));
      var x = Ju(y), k = eP(f);
      a.context === null ? a.context = k : a.pendingContext = k, qo && _r !== null && !AT && (AT = !0, l(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, He(_r.type) || "Unknown"));
      var R = Wu(T, x);
      return R.payload = {
        element: o
      }, p = p === void 0 ? null : p, p !== null && (typeof p != "function" && l("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", p), R.callback = p), Ku(y, R), wi(y, x, T), x;
    }
    function _T(o) {
      var a = o.current;
      if (!a.child)
        return null;
      switch (a.child.tag) {
        case b:
          return a.child.stateNode;
        default:
          return a.child.stateNode;
      }
    }
    function d3(o, a) {
      var f = o.memoizedState;
      f !== null && f.dehydrated !== null && (f.retryLane = Ua(f.retryLane, a));
    }
    function kT(o, a) {
      d3(o, a);
      var f = o.alternate;
      f && d3(f, a);
    }
    function rP(o) {
      if (o.tag === ee) {
        var a = Ro(), f = Rl;
        wi(o, f, a), kT(o, f);
      }
    }
    function iP(o) {
      if (o.tag === ee) {
        var a = Ro(), f = Jf;
        wi(o, f, a), kT(o, f);
      }
    }
    function oP(o) {
      if (o.tag === ee) {
        var a = Ro(), f = Ju(o);
        wi(o, f, a), kT(o, f);
      }
    }
    function aP(o, a) {
      try {
        return a();
      } finally {
      }
    }
    function h3(o) {
      var a = op(o);
      return a === null ? null : a.tag === pe ? a.stateNode.instance : a.stateNode;
    }
    var p3 = function(o) {
      return !1;
    };
    function sP(o) {
      return p3(o);
    }
    var m3 = null, g3 = null, y3 = null, v3 = null, E3 = null, T3 = null, C3 = null, S3 = null;
    {
      var b3 = function(o, a, f) {
        var p = a[f], y = Array.isArray(o) ? o.slice() : e({}, o);
        return f + 1 === a.length ? (Array.isArray(y) ? y.splice(p, 1) : delete y[p], y) : (y[p] = b3(o[p], a, f + 1), y);
      }, A3 = function(o, a) {
        return b3(o, a, 0);
      }, x3 = function(o, a, f, p) {
        var y = a[p], T = Array.isArray(o) ? o.slice() : e({}, o);
        if (p + 1 === a.length) {
          var x = f[p];
          T[x] = T[y], Array.isArray(T) ? T.splice(y, 1) : delete T[y];
        } else
          T[y] = x3(
            // $FlowFixMe number or string is fine here
            o[y],
            a,
            f,
            p + 1
          );
        return T;
      }, _3 = function(o, a, f) {
        if (a.length !== f.length) {
          s("copyWithRename() expects paths of the same length");
          return;
        } else
          for (var p = 0; p < f.length - 1; p++)
            if (a[p] !== f[p]) {
              s("copyWithRename() expects paths to be the same except for the deepest key");
              return;
            }
        return x3(o, a, f, 0);
      }, k3 = function(o, a, f, p) {
        if (f >= a.length)
          return p;
        var y = a[f], T = Array.isArray(o) ? o.slice() : e({}, o);
        return T[y] = k3(o[y], a, f + 1, p), T;
      }, N3 = function(o, a, f) {
        return k3(o, a, 0, f);
      }, NT = function(o, a) {
        for (var f = o.memoizedState; f !== null && a > 0; )
          f = f.next, a--;
        return f;
      };
      m3 = function(o, a, f, p) {
        var y = NT(o, a);
        if (y !== null) {
          var T = N3(y.memoizedState, f, p);
          y.memoizedState = T, y.baseState = T, o.memoizedProps = e({}, o.memoizedProps), wi(o, Wt, Mn);
        }
      }, g3 = function(o, a, f) {
        var p = NT(o, a);
        if (p !== null) {
          var y = A3(p.memoizedState, f);
          p.memoizedState = y, p.baseState = y, o.memoizedProps = e({}, o.memoizedProps), wi(o, Wt, Mn);
        }
      }, y3 = function(o, a, f, p) {
        var y = NT(o, a);
        if (y !== null) {
          var T = _3(y.memoizedState, f, p);
          y.memoizedState = T, y.baseState = T, o.memoizedProps = e({}, o.memoizedProps), wi(o, Wt, Mn);
        }
      }, v3 = function(o, a, f) {
        o.pendingProps = N3(o.memoizedProps, a, f), o.alternate && (o.alternate.pendingProps = o.pendingProps), wi(o, Wt, Mn);
      }, E3 = function(o, a) {
        o.pendingProps = A3(o.memoizedProps, a), o.alternate && (o.alternate.pendingProps = o.pendingProps), wi(o, Wt, Mn);
      }, T3 = function(o, a, f) {
        o.pendingProps = _3(o.memoizedProps, a, f), o.alternate && (o.alternate.pendingProps = o.pendingProps), wi(o, Wt, Mn);
      }, C3 = function(o) {
        wi(o, Wt, Mn);
      }, S3 = function(o) {
        p3 = o;
      };
    }
    function lP(o) {
      var a = ip(o);
      return a === null ? null : a.stateNode;
    }
    function uP(o) {
      return null;
    }
    function cP() {
      return _r;
    }
    function fP(o) {
      var a = o.findFiberByHostInstance, f = i.ReactCurrentDispatcher;
      return oM({
        bundleType: o.bundleType,
        version: o.version,
        rendererPackageName: o.rendererPackageName,
        rendererConfig: o.rendererConfig,
        overrideHookState: m3,
        overrideHookStateDeletePath: g3,
        overrideHookStateRenamePath: y3,
        overrideProps: v3,
        overridePropsDeletePath: E3,
        overridePropsRenamePath: T3,
        setSuspenseHandler: S3,
        scheduleUpdate: C3,
        currentDispatcherRef: f,
        findHostInstanceByFiber: lP,
        findFiberByHostInstance: a || uP,
        // React Refresh
        findHostInstancesForRefresh: PI,
        scheduleRefresh: LI,
        scheduleRoot: II,
        setRefreshHandler: MI,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: cP
      });
    }
    function wT(o, a, f) {
      this._internalRoot = dP(o, a, f);
    }
    wT.prototype.render = function(o) {
      var a = this._internalRoot;
      {
        typeof arguments[1] == "function" && l("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var f = a.containerInfo;
        if (f.nodeType !== si) {
          var p = h3(a.current);
          p && p.parentNode !== f && l("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
        }
      }
      wm(o, a, null, null);
    }, wT.prototype.unmount = function() {
      typeof arguments[0] == "function" && l("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
      var o = this._internalRoot, a = o.containerInfo;
      wm(null, o, null, function() {
        Ub(a);
      });
    };
    function dP(o, a, f) {
      var p = f != null && f.hydrate === !0;
      f != null && f.hydrationOptions;
      var y = f != null && f.hydrationOptions != null && f.hydrationOptions.mutableSources || null, T = nP(o, a, p);
      nM(T.current, o), o.nodeType;
      {
        var x = o.nodeType === si ? o.parentNode : o;
        ub(x);
      }
      if (y)
        for (var k = 0; k < y.length; k++) {
          var R = y[k];
          JI(T, R);
        }
      return T;
    }
    function hP(o, a) {
      return new wT(o, S5, a);
    }
    function zd(o) {
      return !!(o && (o.nodeType === Xi || o.nodeType === Ts || o.nodeType === N0 || o.nodeType === si && o.nodeValue === " react-mount-point-unstable "));
    }
    var pP = i.ReactCurrentOwner, w3, O3 = !1;
    w3 = function(o) {
      if (o._reactRootContainer && o.nodeType !== si) {
        var a = h3(o._reactRootContainer._internalRoot.current);
        a && a.parentNode !== o && l("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
      }
      var f = !!o._reactRootContainer, p = c9(o), y = !!(p && Vu(p));
      y && !f && l("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), o.nodeType === Xi && o.tagName && o.tagName.toUpperCase() === "BODY" && l("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function c9(o) {
      return o ? o.nodeType === Ts ? o.documentElement : o.firstChild : null;
    }
    function mP(o) {
      var a = c9(o);
      return !!(a && a.nodeType === Xi && a.hasAttribute(zr));
    }
    function gP(o, a) {
      var f = a || mP(o);
      if (!f)
        for (var p = !1, y; y = o.lastChild; )
          !p && y.nodeType === Xi && y.hasAttribute(zr) && (p = !0, l("render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.")), o.removeChild(y);
      return f && !a && !O3 && (O3 = !0, s("render(): Calling ReactDOM.render() to hydrate server-rendered markup will stop working in React v18. Replace the ReactDOM.render() call with ReactDOM.hydrate() if you want React to attach to the server HTML.")), hP(o, f ? {
        hydrate: !0
      } : void 0);
    }
    function yP(o, a) {
      o !== null && typeof o != "function" && l("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", a, o);
    }
    function f9(o, a, f, p, y) {
      w3(f), yP(y === void 0 ? null : y, "render");
      var T = f._reactRootContainer, x;
      if (T) {
        if (x = T._internalRoot, typeof y == "function") {
          var R = y;
          y = function() {
            var U = _T(x);
            R.call(U);
          };
        }
        wm(a, x, o, y);
      } else {
        if (T = f._reactRootContainer = gP(f, p), x = T._internalRoot, typeof y == "function") {
          var k = y;
          y = function() {
            var U = _T(x);
            k.call(U);
          };
        }
        $8(function() {
          wm(a, x, o, y);
        });
      }
      return _T(x);
    }
    function vP(o) {
      {
        var a = pP.current;
        if (a !== null && a.stateNode !== null) {
          var f = a.stateNode._warnedAboutRefsInRender;
          f || l("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", He(a.type) || "A component"), a.stateNode._warnedAboutRefsInRender = !0;
        }
      }
      return o == null ? null : o.nodeType === Xi ? o : tP(o, "findDOMNode");
    }
    function EP(o, a, f) {
      if (!zd(a))
        throw Error("Target container is not a DOM element.");
      {
        var p = Kg(a) && a._reactRootContainer === void 0;
        p && l("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call createRoot(container, {hydrate: true}).render(element)?");
      }
      return f9(null, o, a, !0, f);
    }
    function TP(o, a, f) {
      if (!zd(a))
        throw Error("Target container is not a DOM element.");
      {
        var p = Kg(a) && a._reactRootContainer === void 0;
        p && l("You are calling ReactDOM.render() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.render(element)?");
      }
      return f9(null, o, a, !1, f);
    }
    function CP(o, a, f, p) {
      if (!zd(f))
        throw Error("Target container is not a DOM element.");
      if (!(o != null && eg(o)))
        throw Error("parentComponent must be a valid React Component");
      return f9(o, a, f, !1, p);
    }
    function SP(o) {
      if (!zd(o))
        throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
      {
        var a = Kg(o) && o._reactRootContainer === void 0;
        a && l("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?");
      }
      if (o._reactRootContainer) {
        {
          var f = c9(o), p = f && !Vu(f);
          p && l("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
        }
        return $8(function() {
          f9(null, null, o, !1, function() {
            o._reactRootContainer = null, Ub(o);
          });
        }), !0;
      } else {
        {
          var y = c9(o), T = !!(y && Vu(y)), x = o.nodeType === Xi && zd(o.parentNode) && !!o.parentNode._reactRootContainer;
          T && l("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", x ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
        }
        return !1;
      }
    }
    Gf(rP), og(iP), xu(oP), bl(aP);
    var R3 = !1;
    (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && l("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), Yh(rD), Hf(V8, ZL, QL, JL);
    function D3(o, a) {
      var f = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!zd(a))
        throw Error("Target container is not a DOM element.");
      return ZI(o, a, null, f);
    }
    function bP(o, a, f, p) {
      return CP(o, a, f, p);
    }
    function AP(o, a) {
      var f = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      return R3 || (R3 = !0, s('The ReactDOM.unstable_createPortal() alias has been deprecated, and will be removed in React 18+. Update your code to use ReactDOM.createPortal() instead. It has the exact same API, but without the "unstable_" prefix.')), D3(o, a, f);
    }
    var xP = {
      // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.
      // This is an array for better minification.
      Events: [
        Vu,
        Ed,
        Yg,
        Eu,
        Qh,
        Js,
        // TODO: This is related to `act`, not events. Move to separate key?
        l9
      ]
    }, _P = fP({
      findFiberByHostInstance: w1,
      bundleType: 1,
      version: lA,
      rendererPackageName: "react-dom"
    });
    if (!_P && rt && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
      var M3 = window.location.protocol;
      /^(https?|file):$/.test(M3) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (M3 === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
    }
    Lo.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = xP, Lo.createPortal = D3, Lo.findDOMNode = vP, Lo.flushSync = aT, Lo.hydrate = EP, Lo.render = TP, Lo.unmountComponentAtNode = SP, Lo.unstable_batchedUpdates = V8, Lo.unstable_createPortal = AP, Lo.unstable_renderSubtreeIntoContainer = bP, Lo.version = lA;
  }()), Lo;
}
(function(t) {
  function e() {
    if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) {
      if (process.env.NODE_ENV !== "production")
        throw new Error("^_^");
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
      } catch (n) {
        console.error(n);
      }
    }
  }
  process.env.NODE_ENV === "production" ? (e(), t.exports = aq()) : t.exports = fq();
})(nq);
const dq = /* @__PURE__ */ Gk(gy);
class hq extends Ez {
  constructor() {
    super(...arguments), this.contentComponent = null;
  }
}
const pq = ({ renderers: t }) => Za.createElement(Za.Fragment, null, Object.entries(t).map(([e, n]) => dq.createPortal(n.reactElement, n.element, e)));
class mq extends Za.Component {
  constructor(e) {
    super(e), this.editorContentRef = Za.createRef(), this.initialized = !1, this.state = {
      renderers: {}
    };
  }
  componentDidMount() {
    this.init();
  }
  componentDidUpdate() {
    this.init();
  }
  init() {
    const { editor: e } = this.props;
    if (e && e.options.element) {
      if (e.contentComponent)
        return;
      const n = this.editorContentRef.current;
      n.append(...e.options.element.childNodes), e.setOptions({
        element: n
      }), e.contentComponent = this, e.createNodeViews(), this.initialized = !0;
    }
  }
  maybeFlushSync(e) {
    this.initialized ? queueMicrotask(() => {
      gy.flushSync(e);
    }) : e();
  }
  setRenderer(e, n) {
    this.maybeFlushSync(() => {
      this.setState(({ renderers: r }) => ({
        renderers: {
          ...r,
          [e]: n
        }
      }));
    });
  }
  removeRenderer(e) {
    this.maybeFlushSync(() => {
      this.setState(({ renderers: n }) => {
        const r = { ...n };
        return delete r[e], { renderers: r };
      });
    });
  }
  componentWillUnmount() {
    const { editor: e } = this.props;
    if (!e || (this.initialized = !1, e.isDestroyed || e.view.setProps({
      nodeViews: {}
    }), e.contentComponent = null, !e.options.element.firstChild))
      return;
    const n = document.createElement("div");
    n.append(...e.options.element.childNodes), e.setOptions({
      element: n
    });
  }
  render() {
    const { editor: e, ...n } = this.props;
    return Za.createElement(
      Za.Fragment,
      null,
      Za.createElement("div", { ref: this.editorContentRef, ...n }),
      Za.createElement(pq, { renderers: this.state.renderers })
    );
  }
}
const HN = Za.memo(mq), gq = va.createContext({
  onDragStart: void 0
}), yq = () => va.useContext(gq);
Za.forwardRef((t, e) => {
  const { onDragStart: n } = yq(), r = t.as || "div";
  return Za.createElement(r, { ...t, ref: e, "data-node-view-wrapper": "", onDragStart: n, style: {
    whiteSpace: "normal",
    ...t.style
  } });
});
function vq() {
  const [, t] = va.useState(0);
  return () => t((e) => e + 1);
}
const zN = (t = {}, e = []) => {
  const [n, r] = va.useState(null), i = vq();
  return va.useEffect(() => {
    let s = !0;
    const l = new hq(t);
    return r(l), l.on("transaction", () => {
      requestAnimationFrame(() => {
        requestAnimationFrame(() => {
          s && i();
        });
      });
    }), () => {
      l.destroy(), s = !1;
    };
  }, e), n;
}, Eq = Ar.create({
  name: "figureAudio",
  group: "block",
  content: "inline*",
  draggable: !0,
  isolating: !0,
  addAttributes() {
    return {
      src: {
        default: null,
        parseHTML: (t) => {
          var e;
          return (e = t.querySelector("source")) == null ? void 0 : e.getAttribute("src");
        }
      },
      title: {
        default: "",
        parseHTML: (t) => {
          var e;
          return (e = t.querySelector(".title")) == null ? void 0 : e.textContent;
        }
      },
      duration: {
        default: "00:00",
        parseHTML: (t) => {
          var n;
          const e = t.querySelector(".duration");
          return (n = e == null ? void 0 : e.dataset) == null ? void 0 : n.time;
        }
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: 'figure[class="audio"]',
        contentElement: "figcaption"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return [
      "figure",
      { class: "audio" },
      [
        "audio",
        { controls: !0 },
        [
          "source",
          {
            src: t.src,
            type: "audio/mp3",
            draggable: !1,
            contenteditable: !1
          }
        ]
      ],
      [
        "div",
        { class: "player" },
        [
          "header",
          [
            "div",
            { class: "meta" },
            ["h4", { class: "title" }, t.title],
            [
              "div",
              { class: "time" },
              ["span", { class: "current", "data-time": "00:00" }],
              [
                "span",
                {
                  class: "duration",
                  "data-time": t.duration
                }
              ]
            ]
          ],
          ["span", { class: "play" }]
        ],
        ["footer", ["div", { class: "progress-bar" }, ["span", {}]]]
      ],
      ["figcaption", 0]
    ];
  },
  addCommands() {
    return {
      setFigureAudio: ({ caption: t, ...e }) => ({ chain: n }) => n().insertContent({
        type: this.name,
        attrs: e,
        content: t ? [{ type: "text", text: t }] : []
      }).command(({ tr: r, commands: i }) => {
        const { doc: s, selection: l } = r, c = s.resolve(l.to - 2).end();
        return i.setTextSelection(c);
      }).run()
    };
  },
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("removePastedFigureAudio"),
        props: {
          transformPastedHTML(t) {
            return t = t.replace(
              /<figure.*class=.audio.*[\n]*.*?<\/figure>/g,
              ""
            ), t;
          }
        }
      })
    ];
  }
}), Tq = (t) => {
  const e = {
    url: "",
    allowfullscreen: !1,
    sandbox: []
  };
  let n;
  try {
    n = new URL(t);
  } catch {
    return e;
  }
  const { hostname: r, pathname: i, searchParams: s } = n;
  if ([
    "youtube.com",
    "youtu.be",
    "www.youtu.be",
    "www.youtube.com"
  ].includes(r)) {
    const S = s.get("v"), b = s.get("t"), N = new URLSearchParams({
      rel: "0",
      ...b ? { start: b } : {}
    }).toString();
    let O = "";
    return S ? O = S : i.match("/embed/") ? O = i.split("/embed/")[1] : r.includes("youtu.be") && (O = i.split("/")[1]), {
      url: `https://www.youtube.com/embed/${O}` + (N ? `?=${N}` : ""),
      provider: "youtube",
      allowfullscreen: !0,
      sandbox: []
    };
  }
  if (["vimeo.com", "www.vimeo.com", "player.vimeo.com"].includes(
    r
  ))
    return {
      url: `https://player.vimeo.com/video/${i.replace(/\/$/, "").split("/").slice(-1)[0]}`,
      provider: "vimeo",
      allowfullscreen: !0,
      sandbox: []
    };
  if ([
    "bilibili.com",
    "player.bilibili.com",
    "www.bilibili.com"
  ].includes(r)) {
    const S = s.get("bvid");
    let b = "";
    return S ? b = S : b = i.replace(/\/$/, "").split("/").slice(-1)[0], {
      url: `https://player.bilibili.com/player.html?bvid=${b}`,
      provider: "bilibili",
      allowfullscreen: !0,
      sandbox: []
    };
  }
  if (["instagram.com", "www.instagram.com"].includes(r))
    return {
      url: `https://www.instagram.com/p/${i.replace("/embed", "").replace(/\/$/, "").split("/").slice(-1)[0]}/embed`,
      provider: "instagram",
      allowfullscreen: !1,
      sandbox: []
    };
  if (["jsfiddle.net", "www.jsfiddle.net"].includes(r)) {
    const S = i.replace("/embedded", "").replace(/\/$/, "").split("/").filter(Boolean);
    return {
      url: `https://jsfiddle.net/${S.length === 1 ? S[0] : S[1]}/embedded/`,
      provider: "jsfiddle",
      allowfullscreen: !1,
      sandbox: []
    };
  }
  if (["codepen.io", "www.codepen.io"].includes(r)) {
    const S = i.split("/")[1], b = i.replace(/\/$/, "").split("/").slice(-1)[0];
    return {
      url: `https://codepen.io/${S}/embed/preview/${b}`,
      provider: "codepen",
      allowfullscreen: !1,
      sandbox: []
    };
  }
  return e;
}, Cq = Ar.create({
  name: "figureEmbed",
  group: "block",
  content: "inline*",
  draggable: !0,
  isolating: !0,
  addAttributes() {
    return {
      class: {
        default: null,
        parseHTML: (t) => t.getAttribute("class")
      },
      src: {
        default: null,
        parseHTML: (t) => {
          var e;
          return (e = t.querySelector("iframe")) == null ? void 0 : e.getAttribute("src");
        }
      }
    };
  },
  parseHTML() {
    return [
      {
        // match "embed", "embed-video", "embed-code" for backward compatibility
        tag: 'figure[class^="embed"]',
        contentElement: "figcaption"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    const { url: e, provider: n, allowfullscreen: r, sandbox: i } = Tq(
      t.src
    );
    return [
      "figure",
      { class: "embed", ...n ? { "data-provider": n } : {} },
      [
        "div",
        { class: "iframe-container" },
        [
          "iframe",
          {
            src: e,
            loading: "lazy",
            ...i && i.length > 0 ? { sandbox: i.join(" ") } : {},
            ...r ? { allowfullscreen: !0 } : {},
            frameborder: "0",
            draggable: !1,
            contenteditable: !1
          }
        ]
      ],
      ["figcaption", 0]
    ];
  },
  addCommands() {
    return {
      setFigureEmbed: ({ caption: t, ...e }) => ({ chain: n }) => n().insertContent({
        type: this.name,
        attrs: e,
        content: t ? [{ type: "text", text: t }] : []
      }).command(({ tr: r, commands: i }) => {
        const { doc: s, selection: l } = r, c = s.resolve(l.to - 2).end();
        return i.setTextSelection(c);
      }).run()
    };
  },
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("removePastedFigureEmbed"),
        props: {
          transformPastedHTML(t) {
            return t = t.replace(
              /<figure.*class=.embed.*[\n]*.*?<\/figure>/g,
              ""
            ), t;
          }
        }
      })
    ];
  }
}), Sq = Ar.create({
  name: "figureImage",
  group: "block",
  content: "inline*",
  draggable: !0,
  isolating: !0,
  addAttributes() {
    return {
      class: {
        default: null,
        parseHTML: (t) => t.getAttribute("class")
      },
      src: {
        default: null,
        parseHTML: (t) => {
          var e;
          return (e = t.querySelector("img")) == null ? void 0 : e.getAttribute("src");
        }
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: 'figure[class="image"]',
        contentElement: "figcaption"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return [
      "figure",
      { class: "image" },
      [
        "img",
        {
          src: t.src,
          draggable: !1,
          contenteditable: !1
        }
      ],
      ["figcaption", 0]
    ];
  },
  addCommands() {
    return {
      setFigureImage: ({ caption: t, ...e }) => ({ chain: n }) => n().insertContent({
        type: this.name,
        attrs: e,
        content: t ? [{ type: "text", text: t }] : []
      }).command(({ tr: r, commands: i }) => {
        const { doc: s, selection: l } = r, c = s.resolve(l.to - 2).end();
        return i.setTextSelection(c);
      }).run()
    };
  },
  addProseMirrorPlugins() {
    return [
      new Ur({
        key: new Ti("removePastedFigureImage"),
        props: {
          transformPastedHTML(t) {
            return t = t.replace(
              /<figure.*class=.image.*[\n]*.*?<\/figure>/g,
              ""
            ), t;
          }
        }
      })
    ];
  }
}), bq = "aaa1rp3barth4b_ott3vie4c1le2ogado5udhabi7c_ademy5centure6ountant_s9o1tor4d_s1ult4e_g1ro2tna4f_l1rica5g_akhan5ency5i_g1rbus3force5tel5kdn3l_faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m_azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o_l2partments8p_le4q_uarelle8r_ab1mco4chi3my2pa2t_e3s_da2ia2sociates9t_hleta5torney7u_ction5di_ble3o3spost5thor3o_s4vianca6w_s2x_a2z_ure5ba_by2idu3namex3narepublic11d1k2r_celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b_c1t1va3cg1n2d1e_ats2uty4er2ntley5rlin4st_buy5t2f1g1h_arti5i_ble3d1ke2ng_o3o1z2j1lack_friday9ockbuster8g1omberg7ue3m_s1w2n_pparibas9o_ats3ehringer8fa2m1nd2o_k_ing5sch2tik2on4t1utique6x2r_adesco6idgestone9oadway5ker3ther5ussels7s1t1uild_ers6siness6y1zz3v1w1y1z_h3ca_b1fe2l_l1vinklein9m_era3p2non3petown5ital_one8r_avan4ds2e_er_s4s2sa1e1h1ino4t_ering5holic7ba1n1re2s2c1d1enter4o1rn3f_a1d2g1h_anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i_priani6rcle4sco3tadel4i_c2y_eats7k1l_aims4eaning6ick2nic1que6othing5ud3ub_med6m1n1o_ach3des3ffee4llege4ogne5m_cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking_channel11l1p2rsica5untry4pon_s4rses6pa2r_edit_card4union9icket5own3s1uise_s6u_isinella9v1w1x1y_mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e_al_er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si_gn4v2hl2iamonds6et2gital5rect_ory7scount3ver5h2y2j1k1m1np2o_cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c_o2deka3u_cation8e1g1mail3erck5nergy4gineer_ing9terprises10pson4quipment8r_icsson6ni3s_q1tate5t_isalat7u_rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n_s2rm_ers5shion4t3edex3edback6rrari3ero6i_at2delity5o2lm2nal1nce1ial7re_stone6mdale6sh_ing5t_ness6j1k1lickr3ghts4r2orist4wers5y2m1o_o_d_network8tball6rd1ex2sale4um3undation8x2r_ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n_d2rniture7tbol5yi3ga_l_lery3o1up4me_s3p1rden4y2b_iz3d_n2e_a1nt_ing5orge5f1g_ee3h1i_ft_s3ves2ing5l_ass3e1obal2o4m_ail3bh2o1x2n1odaddy5ld_point6f2o_dyear5g_le4p1t1v2p1q1r_ainger5phics5tis4een3ipe3ocery4up4s1t1u_ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc_bank7ealth_care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k_t2m1n1ockey4ldings5iday5medepot5goods5s_ense7nda3rse3spital5t_ing5t_eles2s3mail5use3w2r1sbc3t1u_ghes5yatt3undai7ibm2cbc2e1u2d1e_ee3fm2kano4l1m_amat4db2mo_bilien9n_c1dustries8finiti5o2g1k1stitute6urance4e4t_ernational10uit4vestments10o1piranga7q1r_ish4s_maili5t_anbul7t_au2v3jaguar4va3cb2e_ep2tzt3welry6io2ll2m_p2nj2o_bs1urg4t1y2p_morgan6rs3uegos4niper7kaufen5ddi3e_rryhotels6logistics9properties14fh2g1h1i_a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p_mg2n2r_d1ed3uokgroup8w1y_oto4z2la_caixa5mborghini8er3ncaster5ia3d_rover6xess5salle5t_ino3robe5w_yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i_dl2fe_insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan_s3cker3us3l1ndon4tte1o3ve3pl_financial11r1s1t_d_a3u_ndbeck6xe1ury5v1y2ma_cys3drid4if1son4keup4n_agement7go3p1rket_ing3s4riott5shalls7serati6ttel5ba2c_kinsey7d1e_d_ia3et2lbourne7me1orial6n_u2rckmsd7g1h1iami3crosoft7l1ni1t2t_subishi9k1l_b1s2m_a2n1o_bi_le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to_rcycles9v_ie4p1q1r1s_d2t_n1r2u_seum3ic3tual5v1w1x1y1z2na_b1goya4me2tura4vy3ba2c1e_c1t_bank4flix4work5ustar5w_s2xt_direct7us4f_l2g_o2hk2i_co2ke1on3nja3ssan1y5l1o_kia3rthwesternmutual14on4w_ruz3tv4p1r_a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan_group9dnavy5lo3m_ega4ne1g1l_ine5oo2pen3racle3nge4g_anic5igins6saka4tsuka4t2vh3pa_ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e_t2f_izer5g1h_armacy6d1ilips5one2to_graphy6s4ysio5ics1tet2ures6d1n_g1k2oneer5zza4k1l_ace2y_station9umbing5s3m1n_c2ohl2ker3litie5rn2st3r_america6xi3ess3ime3o_d_uctions8f1gressive8mo2perties3y5tection8u_dential9s1t1ub2w_c2y2qa1pon3uebec3st5racing4dio4e_ad1lestate6tor2y4cipes5d_stone5umbrella9hab3ise_n3t2liance6n_t_als5pair3ort3ublican8st_aurant8view_s5xroth6ich_ardli6oh3l1o1p2o_cher3ks3deo3gers4om3s_vp3u_gby3hr2n2w_e2yukyu6sa_arland6fe_ty4kura4le1on3msclub4ung5ndvik_coromant12ofi4p1rl2s1ve2xo3b_i1s2c_a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e_arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x_y3fr2g1h_angrila6rp2w2ell3ia1ksha5oes2p_ping5uji3w_time7i_lk2na1gles5te3j1k_i_n2y_pe4l_ing4m_art3ile4n_cf3o_ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa_ce3ort2t3r_l2s1t_ada2ples4r1tebank4farm7c_group6ockholm6rage3e3ream4udio2y3yle4u_cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y_dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x_i3c_i2d_k2eam2ch_nology8l1masek5nnis4va3f1g1h_d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j_maxx4x2k_maxx5l1m_all4n1o_day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r_ade1ing4ining5vel_channel7ers_insurance16ust3v2t1ube2i1nes3shu4v_s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va_cations7na1guard7c1e_gas3ntures6risign5mögensberater2ung14sicherung10t2g1i_ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u_elos6wales2mart4ter4ng_gou5tch_es6eather_channel12bcam3er2site5d_ding5ibo2r3f1hoswho6ien2ki2lliamhill9n_dows4e1ners6me2olterskluwer11odside6rk_s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u_tube6t1un3za_ppos4ra3ero3ip2m1one3uerich6w2", Aq = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5تصالات6رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत_म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里_大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2", bh = (t, e) => {
  for (const n in e)
    t[n] = e[n];
  return t;
}, AC = "numeric", xC = "ascii", _C = "alpha", q9 = "asciinumeric", g9 = "alphanumeric", kC = "domain", qN = "emoji", xq = "scheme", _q = "slashscheme", e6 = "whitespace";
function kq(t, e) {
  return t in e || (e[t] = []), e[t];
}
function lf(t, e, n) {
  e[AC] && (e[q9] = !0, e[g9] = !0), e[xC] && (e[q9] = !0, e[_C] = !0), e[q9] && (e[g9] = !0), e[_C] && (e[g9] = !0), e[g9] && (e[kC] = !0), e[qN] && (e[kC] = !0);
  for (const r in e) {
    const i = kq(r, n);
    i.indexOf(t) < 0 && i.push(t);
  }
}
function Nq(t, e) {
  const n = {};
  for (const r in e)
    e[r].indexOf(t) >= 0 && (n[r] = !0);
  return n;
}
function fo(t) {
  t === void 0 && (t = null), this.j = {}, this.jr = [], this.jd = null, this.t = t;
}
fo.groups = {};
fo.prototype = {
  accepts() {
    return !!this.t;
  },
  /**
   * Follow an existing transition from the given input to the next state.
   * Does not mutate.
   * @param {string} input character or token type to transition on
   * @returns {?State<T>} the next state, if any
   */
  go(t) {
    const e = this, n = e.j[t];
    if (n)
      return n;
    for (let r = 0; r < e.jr.length; r++) {
      const i = e.jr[r][0], s = e.jr[r][1];
      if (s && i.test(t))
        return s;
    }
    return e.jd;
  },
  /**
   * Whether the state has a transition for the given input. Set the second
   * argument to true to only look for an exact match (and not a default or
   * regular-expression-based transition)
   * @param {string} input
   * @param {boolean} exactOnly
   */
  has(t, e) {
    return e === void 0 && (e = !1), e ? t in this.j : !!this.go(t);
  },
  /**
   * Short for "transition all"; create a transition from the array of items
   * in the given list to the same final resulting state.
   * @param {string | string[]} inputs Group of inputs to transition on
   * @param {Transition<T> | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   */
  ta(t, e, n, r) {
    for (let i = 0; i < t.length; i++)
      this.tt(t[i], e, n, r);
  },
  /**
   * Short for "take regexp transition"; defines a transition for this state
   * when it encounters a token which matches the given regular expression
   * @param {RegExp} regexp Regular expression transition (populate first)
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  tr(t, e, n, r) {
    r = r || fo.groups;
    let i;
    return e && e.j ? i = e : (i = new fo(e), n && r && lf(e, n, r)), this.jr.push([t, i]), i;
  },
  /**
   * Short for "take transitions", will take as many sequential transitions as
   * the length of the given input and returns the
   * resulting final state.
   * @param {string | string[]} input
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  ts(t, e, n, r) {
    let i = this;
    const s = t.length;
    if (!s)
      return i;
    for (let l = 0; l < s - 1; l++)
      i = i.tt(t[l]);
    return i.tt(t[s - 1], e, n, r);
  },
  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * Specify a token group flags to define groups that this token belongs to.
   * The token will be added to corresponding entires in the given groups
   * object.
   *
   * @param {string} input character, token type to transition on
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of groups
   * @returns {State<T>} taken after the given input
   */
  tt(t, e, n, r) {
    r = r || fo.groups;
    const i = this;
    if (e && e.j)
      return i.j[t] = e, e;
    const s = e;
    let l, c = i.go(t);
    if (c ? (l = new fo(), bh(l.j, c.j), l.jr.push.apply(l.jr, c.jr), l.jd = c.jd, l.t = c.t) : l = new fo(), s) {
      if (r)
        if (l.t && typeof l.t == "string") {
          const h = bh(Nq(l.t, r), n);
          lf(s, h, r);
        } else
          n && lf(s, n, r);
      l.t = s;
    }
    return i.j[t] = l, l;
  }
};
const ft = (t, e, n, r, i) => t.ta(e, n, r, i), ua = (t, e, n, r, i) => t.tr(e, n, r, i), t6 = (t, e, n, r, i) => t.ts(e, n, r, i), Pe = (t, e, n, r, i) => t.tt(e, n, r, i), Zl = "WORD", NC = "UWORD", h0 = "LOCALHOST", wC = "TLD", OC = "UTLD", j9 = "SCHEME", Jd = "SLASH_SCHEME", Ey = "NUM", jN = "WS", cS = "NL", ih = "OPENBRACE", Ym = "OPENBRACKET", Qm = "OPENANGLEBRACKET", Xm = "OPENPAREN", nf = "CLOSEBRACE", oh = "CLOSEBRACKET", ah = "CLOSEANGLEBRACKET", rf = "CLOSEPAREN", Ty = "AMPERSAND", Cy = "APOSTROPHE", Sy = "ASTERISK", hc = "AT", by = "BACKSLASH", Ay = "BACKTICK", xy = "CARET", gc = "COLON", fS = "COMMA", _y = "DOLLAR", rl = "DOT", ky = "EQUALS", dS = "EXCLAMATION", il = "HYPHEN", Ny = "PERCENT", wy = "PIPE", Oy = "PLUS", Ry = "POUND", Dy = "QUERY", hS = "QUOTE", pS = "SEMI", nu = "SLASH", Jm = "TILDE", My = "UNDERSCORE", VN = "EMOJI", Ly = "SYM";
var $N = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  WORD: Zl,
  UWORD: NC,
  LOCALHOST: h0,
  TLD: wC,
  UTLD: OC,
  SCHEME: j9,
  SLASH_SCHEME: Jd,
  NUM: Ey,
  WS: jN,
  NL: cS,
  OPENBRACE: ih,
  OPENBRACKET: Ym,
  OPENANGLEBRACKET: Qm,
  OPENPAREN: Xm,
  CLOSEBRACE: nf,
  CLOSEBRACKET: oh,
  CLOSEANGLEBRACKET: ah,
  CLOSEPAREN: rf,
  AMPERSAND: Ty,
  APOSTROPHE: Cy,
  ASTERISK: Sy,
  AT: hc,
  BACKSLASH: by,
  BACKTICK: Ay,
  CARET: xy,
  COLON: gc,
  COMMA: fS,
  DOLLAR: _y,
  DOT: rl,
  EQUALS: ky,
  EXCLAMATION: dS,
  HYPHEN: il,
  PERCENT: Ny,
  PIPE: wy,
  PLUS: Oy,
  POUND: Ry,
  QUERY: Dy,
  QUOTE: hS,
  SEMI: pS,
  SLASH: nu,
  TILDE: Jm,
  UNDERSCORE: My,
  EMOJI: VN,
  SYM: Ly
});
const Vd = /[a-z]/, l4 = /\p{L}/u, u4 = /\p{Emoji}/u, c4 = /\d/, n6 = /\s/, r6 = `
`, wq = "️", Oq = "‍";
let y9 = null, v9 = null;
function Rq(t) {
  t === void 0 && (t = []);
  const e = {};
  fo.groups = e;
  const n = new fo();
  y9 == null && (y9 = i6(bq)), v9 == null && (v9 = i6(Aq)), Pe(n, "'", Cy), Pe(n, "{", ih), Pe(n, "[", Ym), Pe(n, "<", Qm), Pe(n, "(", Xm), Pe(n, "}", nf), Pe(n, "]", oh), Pe(n, ">", ah), Pe(n, ")", rf), Pe(n, "&", Ty), Pe(n, "*", Sy), Pe(n, "@", hc), Pe(n, "`", Ay), Pe(n, "^", xy), Pe(n, ":", gc), Pe(n, ",", fS), Pe(n, "$", _y), Pe(n, ".", rl), Pe(n, "=", ky), Pe(n, "!", dS), Pe(n, "-", il), Pe(n, "%", Ny), Pe(n, "|", wy), Pe(n, "+", Oy), Pe(n, "#", Ry), Pe(n, "?", Dy), Pe(n, '"', hS), Pe(n, "/", nu), Pe(n, ";", pS), Pe(n, "~", Jm), Pe(n, "_", My), Pe(n, "\\", by);
  const r = ua(n, c4, Ey, {
    [AC]: !0
  });
  ua(r, c4, r);
  const i = ua(n, Vd, Zl, {
    [xC]: !0
  });
  ua(i, Vd, i);
  const s = ua(n, l4, NC, {
    [_C]: !0
  });
  ua(s, Vd), ua(s, l4, s);
  const l = ua(n, n6, jN, {
    [e6]: !0
  });
  Pe(n, r6, cS, {
    [e6]: !0
  }), Pe(l, r6), ua(l, n6, l);
  const c = ua(n, u4, VN, {
    [qN]: !0
  });
  ua(c, u4, c), Pe(c, wq, c);
  const h = Pe(c, Oq);
  ua(h, u4, c);
  const g = [[Vd, i]], v = [[Vd, null], [l4, s]];
  for (let C = 0; C < y9.length; C++)
    rc(n, y9[C], wC, Zl, g);
  for (let C = 0; C < v9.length; C++)
    rc(n, v9[C], OC, NC, v);
  lf(wC, {
    tld: !0,
    ascii: !0
  }, e), lf(OC, {
    utld: !0,
    alpha: !0
  }, e), rc(n, "file", j9, Zl, g), rc(n, "mailto", j9, Zl, g), rc(n, "http", Jd, Zl, g), rc(n, "https", Jd, Zl, g), rc(n, "ftp", Jd, Zl, g), rc(n, "ftps", Jd, Zl, g), lf(j9, {
    scheme: !0,
    ascii: !0
  }, e), lf(Jd, {
    slashscheme: !0,
    ascii: !0
  }, e), t = t.sort((C, S) => C[0] > S[0] ? 1 : -1);
  for (let C = 0; C < t.length; C++) {
    const S = t[C][0], N = t[C][1] ? {
      [xq]: !0
    } : {
      [_q]: !0
    };
    S.indexOf("-") >= 0 ? N[kC] = !0 : Vd.test(S) ? c4.test(S) ? N[q9] = !0 : N[xC] = !0 : N[AC] = !0, t6(n, S, S, N);
  }
  return t6(n, "localhost", h0, {
    ascii: !0
  }), n.jd = new fo(Ly), {
    start: n,
    tokens: bh({
      groups: e
    }, $N)
  };
}
function Dq(t, e) {
  const n = Mq(e.replace(/[A-Z]/g, (c) => c.toLowerCase())), r = n.length, i = [];
  let s = 0, l = 0;
  for (; l < r; ) {
    let c = t, h = null, g = 0, v = null, C = -1, S = -1;
    for (; l < r && (h = c.go(n[l])); )
      c = h, c.accepts() ? (C = 0, S = 0, v = c) : C >= 0 && (C += n[l].length, S++), g += n[l].length, s += n[l].length, l++;
    s -= C, l -= S, g -= C, i.push({
      t: v.t,
      // token type/name
      v: e.slice(s - g, s),
      // string value
      s: s - g,
      // start index
      e: s
      // end index (excluding)
    });
  }
  return i;
}
function Mq(t) {
  const e = [], n = t.length;
  let r = 0;
  for (; r < n; ) {
    let i = t.charCodeAt(r), s, l = i < 55296 || i > 56319 || r + 1 === n || (s = t.charCodeAt(r + 1)) < 56320 || s > 57343 ? t[r] : t.slice(r, r + 2);
    e.push(l), r += l.length;
  }
  return e;
}
function rc(t, e, n, r, i) {
  let s;
  const l = e.length;
  for (let c = 0; c < l - 1; c++) {
    const h = e[c];
    t.j[h] ? s = t.j[h] : (s = new fo(r), s.jr = i.slice(), t.j[h] = s), t = s;
  }
  return s = new fo(n), s.jr = i.slice(), t.j[e[l - 1]] = s, s;
}
function i6(t) {
  const e = [], n = [];
  let r = 0, i = "0123456789";
  for (; r < t.length; ) {
    let s = 0;
    for (; i.indexOf(t[r + s]) >= 0; )
      s++;
    if (s > 0) {
      e.push(n.join(""));
      let l = parseInt(t.substring(r, r + s), 10);
      for (; l > 0; l--)
        n.pop();
      r += s;
    } else
      t[r] === "_" ? (e.push(n.join("")), r++) : (n.push(t[r]), r++);
  }
  return e;
}
const p0 = {
  defaultProtocol: "http",
  events: null,
  format: o6,
  formatHref: o6,
  nl2br: !1,
  tagName: "a",
  target: null,
  rel: null,
  validate: !0,
  truncate: 1 / 0,
  className: null,
  attributes: null,
  ignoreTags: [],
  render: null
};
function mS(t, e) {
  e === void 0 && (e = null);
  let n = bh({}, p0);
  t && (n = bh(n, t instanceof mS ? t.o : t));
  const r = n.ignoreTags, i = [];
  for (let s = 0; s < r.length; s++)
    i.push(r[s].toUpperCase());
  this.o = n, e && (this.defaultRender = e), this.ignoreTags = i;
}
mS.prototype = {
  o: p0,
  /**
   * @type string[]
   */
  ignoreTags: [],
  /**
   * @param {IntermediateRepresentation} ir
   * @returns {any}
   */
  defaultRender(t) {
    return t;
  },
  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options.
   * @param {MultiToken} token
   * @returns {boolean}
   */
  check(t) {
    return this.get("validate", t.toString(), t);
  },
  // Private methods
  /**
   * Resolve an option's value based on the value of the option and the given
   * params. If operator and token are specified and the target option is
   * callable, automatically calls the function with the given argument.
   * @template {keyof Opts} K
   * @param {K} key Name of option to use
   * @param {string} [operator] will be passed to the target option if it's a
   * function. If not specified, RAW function value gets returned
   * @param {MultiToken} [token] The token from linkify.tokenize
   * @returns {Opts[K] | any}
   */
  get(t, e, n) {
    const r = e != null;
    let i = this.o[t];
    return i && (typeof i == "object" ? (i = n.t in i ? i[n.t] : p0[t], typeof i == "function" && r && (i = i(e, n))) : typeof i == "function" && r && (i = i(e, n.t, n)), i);
  },
  /**
   * @template {keyof Opts} L
   * @param {L} key Name of options object to use
   * @param {string} [operator]
   * @param {MultiToken} [token]
   * @returns {Opts[L] | any}
   */
  getObj(t, e, n) {
    let r = this.o[t];
    return typeof r == "function" && e != null && (r = r(e, n.t, n)), r;
  },
  /**
   * Convert the given token to a rendered element that may be added to the
   * calling-interface's DOM
   * @param {MultiToken} token Token to render to an HTML element
   * @returns {any} Render result; e.g., HTML string, DOM element, React
   *   Component, etc.
   */
  render(t) {
    const e = t.render(this);
    return (this.get("render", null, t) || this.defaultRender)(e, t.t, t);
  }
};
function o6(t) {
  return t;
}
function GN(t, e) {
  this.t = "token", this.v = t, this.tk = e;
}
GN.prototype = {
  isLink: !1,
  /**
   * Return the string this token represents.
   * @return {string}
   */
  toString() {
    return this.v;
  },
  /**
   * What should the value for this token be in the `href` HTML attribute?
   * Returns the `.toString` value by default.
   * @param {string} [scheme]
   * @return {string}
  */
  toHref(t) {
    return this.toString();
  },
  /**
   * @param {Options} options Formatting options
   * @returns {string}
   */
  toFormattedString(t) {
    const e = this.toString(), n = t.get("truncate", e, this), r = t.get("format", e, this);
    return n && r.length > n ? r.substring(0, n) + "…" : r;
  },
  /**
   *
   * @param {Options} options
   * @returns {string}
   */
  toFormattedHref(t) {
    return t.get("formatHref", this.toHref(t.get("defaultProtocol")), this);
  },
  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex() {
    return this.tk[0].s;
  },
  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex() {
    return this.tk[this.tk.length - 1].e;
  },
  /**
  	Returns an object  of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  */
  toObject(t) {
    return t === void 0 && (t = p0.defaultProtocol), {
      type: this.t,
      value: this.toString(),
      isLink: this.isLink,
      href: this.toHref(t),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   *
   * @param {Options} options Formatting option
   */
  toFormattedObject(t) {
    return {
      type: this.t,
      value: this.toFormattedString(t),
      isLink: this.isLink,
      href: this.toFormattedHref(t),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   * Whether this token should be rendered as a link according to the given options
   * @param {Options} options
   * @returns {boolean}
   */
  validate(t) {
    return t.get("validate", this.toString(), this);
  },
  /**
   * Return an object that represents how this link should be rendered.
   * @param {Options} options Formattinng options
   */
  render(t) {
    const e = this, n = this.toFormattedHref(t), r = t.get("tagName", n, e), i = this.toFormattedString(t), s = {}, l = t.get("className", n, e), c = t.get("target", n, e), h = t.get("rel", n, e), g = t.getObj("attributes", n, e), v = t.getObj("events", n, e);
    return s.href = n, l && (s.class = l), c && (s.target = c), h && (s.rel = h), g && bh(s, g), {
      tagName: r,
      attributes: s,
      content: i,
      eventListeners: v
    };
  }
};
function rv(t, e) {
  class n extends GN {
    constructor(i, s) {
      super(i, s), this.t = t;
    }
  }
  for (const r in e)
    n.prototype[r] = e[r];
  return n.t = t, n;
}
const a6 = rv("email", {
  isLink: !0,
  toHref() {
    return "mailto:" + this.toString();
  }
}), s6 = rv("text"), Lq = rv("nl"), K1 = rv("url", {
  isLink: !0,
  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@param {string} [scheme] default scheme (e.g., 'https')
  	@return {string} the full href
  */
  toHref(t) {
    return t === void 0 && (t = p0.defaultProtocol), this.hasProtocol() ? this.v : `${t}://${this.v}`;
  },
  /**
   * Check whether this URL token has a protocol
   * @return {boolean}
   */
  hasProtocol() {
    const t = this.tk;
    return t.length >= 2 && t[0].t !== h0 && t[1].t === gc;
  }
}), Jr = (t) => new fo(t);
function Iq(t) {
  let {
    groups: e
  } = t;
  const n = e.domain.concat([Ty, Sy, hc, by, Ay, xy, _y, ky, il, Ey, Ny, wy, Oy, Ry, nu, Ly, Jm, My]), r = [Cy, ah, nf, oh, rf, gc, fS, rl, dS, Qm, ih, Ym, Xm, Dy, hS, pS], i = [Ty, Cy, Sy, by, Ay, xy, nf, _y, ky, il, Ey, ih, Ny, wy, Oy, Ry, Dy, nu, Ly, Jm, My], s = Jr(), l = Pe(s, Jm);
  ft(l, i, l), ft(l, e.domain, l);
  const c = Jr(), h = Jr(), g = Jr();
  ft(s, e.domain, c), ft(s, e.scheme, h), ft(s, e.slashscheme, g), ft(c, i, l), ft(c, e.domain, c);
  const v = Pe(c, hc);
  Pe(l, hc, v), Pe(h, hc, v), Pe(g, hc, v);
  const C = Pe(l, rl);
  ft(C, i, l), ft(C, e.domain, l);
  const S = Jr();
  ft(v, e.domain, S), ft(S, e.domain, S);
  const b = Pe(S, rl);
  ft(b, e.domain, S);
  const N = Jr(a6);
  ft(b, e.tld, N), ft(b, e.utld, N), Pe(v, h0, N);
  const O = Pe(S, il);
  ft(O, e.domain, S), ft(N, e.domain, S), Pe(N, rl, b), Pe(N, il, O);
  const L = Pe(N, gc);
  ft(L, e.numeric, a6);
  const P = Pe(c, il), Y = Pe(c, rl);
  ft(P, e.domain, c), ft(Y, i, l), ft(Y, e.domain, c);
  const j = Jr(K1);
  ft(Y, e.tld, j), ft(Y, e.utld, j), ft(j, e.domain, c), ft(j, i, l), Pe(j, rl, Y), Pe(j, il, P), Pe(j, hc, v);
  const oe = Pe(j, gc), ee = Jr(K1);
  ft(oe, e.numeric, ee);
  const z = Jr(K1), H = Jr();
  ft(z, n, z), ft(z, r, H), ft(H, n, z), ft(H, r, H), Pe(j, nu, z), Pe(ee, nu, z);
  const Z = Pe(h, gc), me = Pe(g, gc), Ie = Pe(me, nu);
  Pe(Ie, nu, Z), ft(h, e.domain, c), Pe(h, rl, Y), Pe(h, il, P), ft(g, e.domain, c), Pe(g, rl, Y), Pe(g, il, P), ft(Z, e.domain, z), Pe(Z, nu, z);
  const fe = Pe(z, ih), pe = Pe(z, Ym), Ce = Pe(z, Qm), Be = Pe(z, Xm);
  Pe(H, ih, fe), Pe(H, Ym, pe), Pe(H, Qm, Ce), Pe(H, Xm, Be), Pe(fe, nf, z), Pe(pe, oh, z), Pe(Ce, ah, z), Pe(Be, rf, z), Pe(fe, nf, z);
  const J = Jr(K1), lt = Jr(K1), te = Jr(K1), he = Jr(K1);
  ft(fe, n, J), ft(pe, n, lt), ft(Ce, n, te), ft(Be, n, he);
  const De = Jr(), We = Jr(), I = Jr(), F = Jr();
  return ft(fe, r), ft(pe, r), ft(Ce, r), ft(Be, r), ft(J, n, J), ft(lt, n, lt), ft(te, n, te), ft(he, n, he), ft(J, r, J), ft(lt, r, lt), ft(te, r, te), ft(he, r, he), ft(De, n, De), ft(We, n, lt), ft(I, n, te), ft(F, n, he), ft(De, r, De), ft(We, r, We), ft(I, r, I), ft(F, r, F), Pe(lt, oh, z), Pe(te, ah, z), Pe(he, rf, z), Pe(J, nf, z), Pe(We, oh, z), Pe(I, ah, z), Pe(F, rf, z), Pe(De, rf, z), Pe(s, h0, j), Pe(s, cS, Lq), {
    start: s,
    tokens: $N
  };
}
function Pq(t, e, n) {
  let r = n.length, i = 0, s = [], l = [];
  for (; i < r; ) {
    let c = t, h = null, g = null, v = 0, C = null, S = -1;
    for (; i < r && !(h = c.go(n[i].t)); )
      l.push(n[i++]);
    for (; i < r && (g = h || c.go(n[i].t)); )
      h = null, c = g, c.accepts() ? (S = 0, C = c) : S >= 0 && S++, i++, v++;
    if (S < 0)
      i -= v, i < r && (l.push(n[i]), i++);
    else {
      l.length > 0 && (s.push(f4(s6, e, l)), l = []), i -= S, v -= S;
      const b = C.t, N = n.slice(i - v, i);
      s.push(f4(b, e, N));
    }
  }
  return l.length > 0 && s.push(f4(s6, e, l)), s;
}
function f4(t, e, n) {
  const r = n[0].s, i = n[n.length - 1].e, s = e.slice(r, i);
  return new t(s, n);
}
const Fq = typeof console < "u" && console && console.warn || (() => {
}), Bq = "until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.", Wn = {
  scanner: null,
  parser: null,
  tokenQueue: [],
  pluginQueue: [],
  customSchemes: [],
  initialized: !1
};
function Uq() {
  fo.groups = {}, Wn.scanner = null, Wn.parser = null, Wn.tokenQueue = [], Wn.pluginQueue = [], Wn.customSchemes = [], Wn.initialized = !1;
}
function l6(t, e) {
  if (e === void 0 && (e = !1), Wn.initialized && Fq(`linkifyjs: already initialized - will not register custom scheme "${t}" ${Bq}`), !/^[0-9a-z]+(-[0-9a-z]+)*$/.test(t))
    throw new Error(`linkifyjs: incorrect scheme format.
 1. Must only contain digits, lowercase ASCII letters or "-"
 2. Cannot start or end with "-"
 3. "-" cannot repeat`);
  Wn.customSchemes.push([t, e]);
}
function Hq() {
  Wn.scanner = Rq(Wn.customSchemes);
  for (let t = 0; t < Wn.tokenQueue.length; t++)
    Wn.tokenQueue[t][1]({
      scanner: Wn.scanner
    });
  Wn.parser = Iq(Wn.scanner.tokens);
  for (let t = 0; t < Wn.pluginQueue.length; t++)
    Wn.pluginQueue[t][1]({
      scanner: Wn.scanner,
      parser: Wn.parser
    });
  Wn.initialized = !0;
}
function WN(t) {
  return Wn.initialized || Hq(), Pq(Wn.parser.start, t, Dq(Wn.scanner.start, t));
}
function gS(t, e, n) {
  if (e === void 0 && (e = null), n === void 0 && (n = null), e && typeof e == "object") {
    if (n)
      throw Error(`linkifyjs: Invalid link type ${e}; must be a string`);
    n = e, e = null;
  }
  const r = new mS(n), i = WN(t), s = [];
  for (let l = 0; l < i.length; l++) {
    const c = i[l];
    c.isLink && (!e || c.t === e) && s.push(c.toFormattedObject(r));
  }
  return s;
}
function u6(t, e) {
  e === void 0 && (e = null);
  const n = WN(t);
  return n.length === 1 && n[0].isLink && (!e || n[0].t === e);
}
function zq(t) {
  return new Ur({
    key: new Ti("autolink"),
    appendTransaction: (e, n, r) => {
      const i = e.some((v) => v.docChanged) && !n.doc.eq(r.doc), s = e.some(
        (v) => v.getMeta("preventAutolink")
      );
      if (!i || s)
        return;
      const { tr: l } = r, c = DH(n.doc, [...e]), { mapping: h } = c;
      if (qH(c).forEach(({ oldRange: v, newRange: C }) => {
        py(v.from, v.to, n.doc).filter((O) => O.mark.type === t.type).forEach((O) => {
          const L = h.map(O.from), P = h.map(O.to), Y = py(
            L,
            P,
            r.doc
          ).filter((Z) => Z.mark.type === t.type);
          if (!Y.length)
            return;
          const j = Y[0], oe = n.doc.textBetween(
            O.from,
            O.to,
            void 0,
            " "
          ), ee = r.doc.textBetween(
            j.from,
            j.to,
            void 0,
            " "
          ), z = u6(oe), H = u6(ee);
          z && !H && l.removeMark(j.from, j.to, t.type);
        });
        const S = LH(
          r.doc,
          C,
          (O) => O.isTextblock
        );
        let b, N;
        if (S.length > 1 ? (b = S[0], N = r.doc.textBetween(
          b.pos,
          b.pos + b.node.nodeSize,
          void 0,
          " "
        )) : S.length && // We want to make sure to include the block seperator argument to treat hard breaks like spaces
        r.doc.textBetween(C.from, C.to, " ", " ").endsWith(" ") && (b = S[0], N = r.doc.textBetween(
          b.pos,
          C.to,
          void 0,
          " "
        )), b && N) {
          const O = N.split(" ").filter((Y) => Y !== "");
          if (O.length <= 0)
            return !1;
          const L = O[O.length - 1], P = b.pos + N.lastIndexOf(L);
          if (!L)
            return !1;
          gS(L).filter((Y) => Y.isLink).filter((Y) => t.validate ? t.validate(Y.value) : !0).map((Y) => ({
            ...Y,
            from: P + Y.start + 1,
            to: P + Y.end + 1
          })).forEach((Y) => {
            l.addMark(
              Y.from,
              Y.to,
              t.type.create({
                href: Y.href
              })
            );
          });
        }
      }), !!l.steps.length)
        return l;
    }
  });
}
function qq(t) {
  return new Ur({
    key: new Ti("handleClickLink"),
    props: {
      handleClick: (e, n, r) => {
        var h;
        if (r.button !== 1)
          return !1;
        const i = gN(e.state, t.type.name), s = (h = r.target) == null ? void 0 : h.closest("a"), l = (s == null ? void 0 : s.href) ?? i.href, c = (s == null ? void 0 : s.target) ?? i.target;
        return s && l ? (window.open(l, c), !0) : !1;
      }
    }
  });
}
function jq(t) {
  return new Ur({
    key: new Ti("handlePasteLink"),
    props: {
      handlePaste: (e, n, r) => {
        const { state: i } = e, { selection: s } = i, { empty: l } = s;
        if (l)
          return !1;
        let c = "";
        r.content.forEach((g) => {
          c += g.textContent;
        });
        const h = gS(c).find(
          (g) => g.isLink && g.value === c
        );
        return !c || !h ? !1 : (t.editor.commands.setMark(t.type, {
          href: h.href
        }), !0);
      }
    }
  });
}
const KN = Ta.create({
  name: "link",
  keepOnSplit: !1,
  onCreate() {
    this.options.protocols.forEach((t) => {
      if (typeof t == "string") {
        l6(t);
        return;
      }
      l6(t.scheme, t.optionalSlashes);
    });
  },
  onDestroy() {
    Uq();
  },
  inclusive() {
    return this.options.autolink;
  },
  addOptions() {
    return {
      openOnClick: !0,
      linkOnPaste: !0,
      autolink: !0,
      protocols: [],
      HTMLAttributes: {
        target: "_blank",
        rel: "noopener noreferrer nofollow",
        class: null
      },
      validate: void 0
    };
  },
  addAttributes() {
    return {
      href: {
        default: null
      },
      target: {
        default: this.options.HTMLAttributes.target
      },
      class: {
        default: this.options.HTMLAttributes.class
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: 'a[href]:not([href *= "javascript:" i]):not([class="mention"])'
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return [
      "a",
      lr(this.options.HTMLAttributes, t),
      0
    ];
  },
  addCommands() {
    return {
      setLink: (t) => ({ chain: e }) => e().setMark(this.name, t).setMeta("preventAutolink", !0).run(),
      toggleLink: (t) => ({ chain: e }) => e().toggleMark(this.name, t, { extendEmptyMarkRange: !0 }).setMeta("preventAutolink", !0).run(),
      unsetLink: () => ({ chain: t }) => t().unsetMark(this.name, { extendEmptyMarkRange: !0 }).setMeta("preventAutolink", !0).run()
    };
  },
  addPasteRules() {
    return [
      Ef({
        find: (t) => gS(t).filter((e) => this.options.validate ? this.options.validate(e.value) : !0).filter((e) => e.isLink).map((e) => ({
          text: e.value,
          index: e.start,
          data: e
        })),
        type: this.type,
        getAttributes: (t) => {
          var e;
          return {
            href: (e = t.data) == null ? void 0 : e.href
          };
        }
      })
    ];
  },
  addProseMirrorPlugins() {
    const t = [];
    return this.options.autolink && t.push(
      zq({
        type: this.type,
        validate: this.options.validate
      })
    ), this.options.openOnClick && t.push(
      qq({
        type: this.type
      })
    ), this.options.linkOnPaste && t.push(
      jq({
        editor: this.editor,
        type: this.type
      })
    ), t;
  }
});
function Vq(t) {
  var e;
  const { char: n, allowSpaces: r, allowedPrefixes: i, startOfLine: s, $position: l } = t, c = Cz(n), h = new RegExp(`\\s${c}$`), g = s ? "^" : "", v = r ? new RegExp(`${g}${c}.*?(?=\\s${c}|$)`, "gm") : new RegExp(`${g}(?:^)?${c}[^\\s${c}]*`, "gm"), C = ((e = l.nodeBefore) === null || e === void 0 ? void 0 : e.isText) && l.nodeBefore.text;
  if (!C)
    return null;
  const S = l.pos - C.length, b = Array.from(C.matchAll(v)).pop();
  if (!b || b.input === void 0 || b.index === void 0)
    return null;
  const N = b.input.slice(Math.max(0, b.index - 1), b.index), O = new RegExp(`^[${i == null ? void 0 : i.join("")}\0]?$`).test(N);
  if (i !== null && !O)
    return null;
  const L = S + b.index;
  let P = L + b[0].length;
  return r && h.test(C.slice(P - 1, P + 1)) && (b[0] += " ", P += 1), L < l.pos && P >= l.pos ? {
    range: {
      from: L,
      to: P
    },
    query: b[0].slice(n.length),
    text: b[0]
  } : null;
}
const $q = new Ti("suggestion");
function Gq({ pluginKey: t = $q, editor: e, char: n = "@", allowSpaces: r = !1, allowedPrefixes: i = [" "], startOfLine: s = !1, decorationTag: l = "span", decorationClass: c = "suggestion", command: h = () => null, items: g = () => [], render: v = () => ({}), allow: C = () => !0 }) {
  let S;
  const b = v == null ? void 0 : v(), N = new Ur({
    key: t,
    view() {
      return {
        update: async (O, L) => {
          var P, Y, j, oe, ee, z, H;
          const Z = (P = this.key) === null || P === void 0 ? void 0 : P.getState(L), me = (Y = this.key) === null || Y === void 0 ? void 0 : Y.getState(O.state), Ie = Z.active && me.active && Z.range.from !== me.range.from, fe = !Z.active && me.active, pe = Z.active && !me.active, Ce = !fe && !pe && Z.query !== me.query, Be = fe || Ie, J = Ce && !Ie, lt = pe || Ie;
          if (!Be && !J && !lt)
            return;
          const te = lt && !Be ? Z : me, he = O.dom.querySelector(`[data-decoration-id="${te.decorationId}"]`);
          S = {
            editor: e,
            range: te.range,
            query: te.query,
            text: te.text,
            items: [],
            command: (De) => {
              h({
                editor: e,
                range: te.range,
                props: De
              });
            },
            decorationNode: he,
            // virtual node for popper.js or tippy.js
            // this can be used for building popups without a DOM node
            clientRect: he ? () => {
              var De;
              const { decorationId: We } = (De = this.key) === null || De === void 0 ? void 0 : De.getState(e.state), I = O.dom.querySelector(`[data-decoration-id="${We}"]`);
              return (I == null ? void 0 : I.getBoundingClientRect()) || null;
            } : null
          }, Be && ((j = b == null ? void 0 : b.onBeforeStart) === null || j === void 0 || j.call(b, S)), J && ((oe = b == null ? void 0 : b.onBeforeUpdate) === null || oe === void 0 || oe.call(b, S)), (J || Be) && (S.items = await g({
            editor: e,
            query: te.query
          })), lt && ((ee = b == null ? void 0 : b.onExit) === null || ee === void 0 || ee.call(b, S)), J && ((z = b == null ? void 0 : b.onUpdate) === null || z === void 0 || z.call(b, S)), Be && ((H = b == null ? void 0 : b.onStart) === null || H === void 0 || H.call(b, S));
        },
        destroy: () => {
          var O;
          S && ((O = b == null ? void 0 : b.onExit) === null || O === void 0 || O.call(b, S));
        }
      };
    },
    state: {
      // Initialize the plugin's internal state.
      init() {
        return {
          active: !1,
          range: {
            from: 0,
            to: 0
          },
          query: null,
          text: null,
          composing: !1
        };
      },
      // Apply changes to the plugin state from a view transaction.
      apply(O, L, P, Y) {
        const { isEditable: j } = e, { composing: oe } = e.view, { selection: ee } = O, { empty: z, from: H } = ee, Z = { ...L };
        if (Z.composing = oe, j && (z || e.view.composing)) {
          (H < L.range.from || H > L.range.to) && !oe && !L.composing && (Z.active = !1);
          const me = Vq({
            char: n,
            allowSpaces: r,
            allowedPrefixes: i,
            startOfLine: s,
            $position: ee.$from
          }), Ie = `id_${Math.floor(Math.random() * 4294967295)}`;
          me && C({ editor: e, state: Y, range: me.range }) ? (Z.active = !0, Z.decorationId = L.decorationId ? L.decorationId : Ie, Z.range = me.range, Z.query = me.query, Z.text = me.text) : Z.active = !1;
        } else
          Z.active = !1;
        return Z.active || (Z.decorationId = null, Z.range = { from: 0, to: 0 }, Z.query = null, Z.text = null), Z;
      }
    },
    props: {
      // Call the keydown hook if suggestion is active.
      handleKeyDown(O, L) {
        var P;
        const { active: Y, range: j } = N.getState(O.state);
        return Y && ((P = b == null ? void 0 : b.onKeyDown) === null || P === void 0 ? void 0 : P.call(b, { view: O, event: L, range: j })) || !1;
      },
      // Setup decorator on the currently active suggestion.
      decorations(O) {
        const { active: L, range: P, decorationId: Y } = N.getState(O);
        return L ? sr.create(O.doc, [
          ho.inline(P.from, P.to, {
            nodeName: l,
            class: c,
            "data-decoration-id": Y
          })
        ]) : null;
      }
    }
  });
  return N;
}
const Wq = new Ti("mention"), YN = Ar.create({
  name: "mention",
  group: "inline",
  inline: !0,
  selectable: !1,
  atom: !0,
  addOptions() {
    return {
      suggestion: {
        char: "@",
        allowedPrefixes: null,
        pluginKey: Wq,
        command: ({ editor: t, range: e, props: n }) => {
          var C, S, b;
          const { $from: r, $to: i } = t.view.state.selection, s = r.parentOffset === 1, l = i.nodeBefore, c = i.nodeAfter, h = (C = l == null ? void 0 : l.text) == null ? void 0 : C.startsWith(" "), g = (S = c == null ? void 0 : c.text) == null ? void 0 : S.startsWith(" "), v = [];
          !s && !h && v.push({
            type: "text",
            text: " "
          }), v.push({
            type: this.name,
            attrs: n
          }), g || v.push({
            type: "text",
            text: " "
          }), t.chain().focus().insertContentAt(e, v).run(), (b = window.getSelection()) == null || b.collapseToEnd();
        },
        allow: ({ state: t, range: e }) => {
          const n = t.doc.resolve(e.from), r = t.schema.nodes[this.name];
          return !!n.parent.type.contentMatch.matchType(r);
        }
      }
    };
  },
  addAttributes() {
    return {
      id: {
        default: null,
        parseHTML: (t) => t.getAttribute("data-id")
      },
      userName: {
        default: null,
        parseHTML: (t) => t.getAttribute("data-user-name")
      },
      displayName: {
        default: null,
        parseHTML: (t) => t.getAttribute("data-display-name")
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: 'a[class="mention"]'
      }
    ];
  },
  renderHTML({ node: t }) {
    return [
      "a",
      {
        class: "mention",
        href: "/" + this.options.suggestion.char + t.attrs.userName,
        "data-id": t.attrs.id,
        "data-user-name": t.attrs.userName,
        "data-display-name": t.attrs.displayName,
        ref: "noopener noreferrer nofollow"
      },
      ["span", `@${t.attrs.displayName ?? t.attrs.userName}`]
    ];
  },
  addKeyboardShortcuts() {
    return {
      Backspace: () => this.editor.commands.command(({ tr: t, state: e }) => {
        let n = !1;
        const { selection: r } = e, { empty: i, anchor: s } = r;
        return i ? (e.doc.nodesBetween(s - 1, s, (l, c) => {
          if (l.type.name === this.name)
            return n = !0, t.insertText(
              this.options.suggestion.char || "",
              c,
              c + l.nodeSize
            ), !1;
        }), n) : !1;
      })
    };
  },
  addProseMirrorPlugins() {
    return [
      Gq({
        editor: this.editor,
        ...this.options.suggestion
      })
    ];
  }
}), QN = ({
  placeholder: t,
  mentionSuggestion: e
}) => [
  SN,
  wN,
  Uz,
  PN.configure({
    placeholder: t
  }),
  // Basic Formats
  BN,
  IN,
  Hz.configure({
    levels: [2, 3]
  }),
  vN,
  FN,
  RN,
  ON,
  TN,
  CN,
  yN,
  bN,
  DN,
  LN,
  MN,
  EN,
  // Custom Formats
  KN,
  Sq,
  Eq,
  Cq,
  YN.configure({
    suggestion: e
  })
], Gte = ({
  content: t,
  placeholder: e,
  mentionSuggestion: n,
  ...r
}) => {
  const i = zN({
    extensions: QN({ placeholder: e, mentionSuggestion: n }),
    content: t,
    ...r
  });
  return /* @__PURE__ */ Wk(HN, { editor: i });
}, XN = ({
  placeholder: t,
  mentionSuggestion: e
}) => [
  SN,
  wN,
  PN.configure({
    placeholder: t
  }),
  // Basic Formats
  BN,
  IN,
  vN,
  FN,
  RN,
  ON,
  TN,
  CN,
  yN,
  bN,
  DN,
  MN,
  LN,
  EN,
  // Custom Formats
  KN,
  YN.configure({
    suggestion: e
  })
], Wte = ({
  content: t,
  placeholder: e,
  mentionSuggestion: n,
  ...r
}) => {
  const i = zN({
    extensions: XN({ placeholder: e, mentionSuggestion: n }),
    content: t,
    ...r
  });
  return /* @__PURE__ */ Wk(HN, { editor: i });
};
function c6(t) {
  if (t)
    throw t;
}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
var JN = function(e) {
  return e != null && e.constructor != null && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e);
}, V9 = Object.prototype.hasOwnProperty, ZN = Object.prototype.toString, f6 = Object.defineProperty, d6 = Object.getOwnPropertyDescriptor, h6 = function(e) {
  return typeof Array.isArray == "function" ? Array.isArray(e) : ZN.call(e) === "[object Array]";
}, p6 = function(e) {
  if (!e || ZN.call(e) !== "[object Object]")
    return !1;
  var n = V9.call(e, "constructor"), r = e.constructor && e.constructor.prototype && V9.call(e.constructor.prototype, "isPrototypeOf");
  if (e.constructor && !n && !r)
    return !1;
  var i;
  for (i in e)
    ;
  return typeof i > "u" || V9.call(e, i);
}, m6 = function(e, n) {
  f6 && n.name === "__proto__" ? f6(e, n.name, {
    enumerable: !0,
    configurable: !0,
    value: n.newValue,
    writable: !0
  }) : e[n.name] = n.newValue;
}, g6 = function(e, n) {
  if (n === "__proto__")
    if (V9.call(e, n)) {
      if (d6)
        return d6(e, n).value;
    } else
      return;
  return e[n];
}, Iy = function t() {
  var e, n, r, i, s, l, c = arguments[0], h = 1, g = arguments.length, v = !1;
  for (typeof c == "boolean" && (v = c, c = arguments[1] || {}, h = 2), (c == null || typeof c != "object" && typeof c != "function") && (c = {}); h < g; ++h)
    if (e = arguments[h], e != null)
      for (n in e)
        r = g6(c, n), i = g6(e, n), c !== i && (v && i && (p6(i) || (s = h6(i))) ? (s ? (s = !1, l = r && h6(r) ? r : []) : l = r && p6(r) ? r : {}, m6(c, { name: n, newValue: t(v, l, i) })) : typeof i < "u" && m6(c, { name: n, newValue: i }));
  return c;
};
function RC(t) {
  if (typeof t != "object" || t === null)
    return !1;
  const e = Object.getPrototypeOf(t);
  return (e === null || e === Object.prototype || Object.getPrototypeOf(e) === null) && !(Symbol.toStringTag in t) && !(Symbol.iterator in t);
}
function Kq() {
  const t = [], e = { run: n, use: r };
  return e;
  function n(...i) {
    let s = -1;
    const l = i.pop();
    if (typeof l != "function")
      throw new TypeError("Expected function as last argument, not " + l);
    c(null, ...i);
    function c(h, ...g) {
      const v = t[++s];
      let C = -1;
      if (h) {
        l(h);
        return;
      }
      for (; ++C < i.length; )
        (g[C] === null || g[C] === void 0) && (g[C] = i[C]);
      i = g, v ? Yq(v, c)(...g) : l(null, ...g);
    }
  }
  function r(i) {
    if (typeof i != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + i
      );
    return t.push(i), e;
  }
}
function Yq(t, e) {
  let n;
  return r;
  function r(...l) {
    const c = t.length > l.length;
    let h;
    c && l.push(i);
    try {
      h = t.apply(this, l);
    } catch (g) {
      const v = (
        /** @type {Error} */
        g
      );
      if (c && n)
        throw v;
      return i(v);
    }
    c || (h instanceof Promise ? h.then(s, i) : h instanceof Error ? i(h) : s(h));
  }
  function i(l, ...c) {
    n || (n = !0, e(l, ...c));
  }
  function s(l) {
    i(null, l);
  }
}
function Zm(t) {
  return !t || typeof t != "object" ? "" : "position" in t || "type" in t ? y6(t.position) : "start" in t || "end" in t ? y6(t) : "line" in t || "column" in t ? DC(t) : "";
}
function DC(t) {
  return v6(t && t.line) + ":" + v6(t && t.column);
}
function y6(t) {
  return DC(t && t.start) + "-" + DC(t && t.end);
}
function v6(t) {
  return t && typeof t == "number" ? t : 1;
}
class Sa extends Error {
  /**
   * Create a message for `reason` at `place` from `origin`.
   *
   * When an error is passed in as `reason`, the `stack` is copied.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   *
   *   > 👉 **Note**: you should use markdown.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns
   *   Instance of `VFileMessage`.
   */
  // To do: next major: expose `undefined` everywhere instead of `null`.
  constructor(e, n, r) {
    const i = [null, null];
    let s = {
      // @ts-expect-error: we always follows the structure of `position`.
      start: { line: null, column: null },
      // @ts-expect-error: "
      end: { line: null, column: null }
    };
    if (super(), typeof n == "string" && (r = n, n = void 0), typeof r == "string") {
      const l = r.indexOf(":");
      l === -1 ? i[1] = r : (i[0] = r.slice(0, l), i[1] = r.slice(l + 1));
    }
    n && ("type" in n || "position" in n ? n.position && (s = n.position) : "start" in n || "end" in n ? s = n : ("line" in n || "column" in n) && (s.start = n)), this.name = Zm(n) || "1:1", this.message = typeof e == "object" ? e.message : e, this.stack = "", typeof e == "object" && e.stack && (this.stack = e.stack), this.reason = this.message, this.fatal, this.line = s.start.line, this.column = s.start.column, this.position = s, this.source = i[0], this.ruleId = i[1], this.file, this.actual, this.expected, this.url, this.note;
  }
}
Sa.prototype.file = "";
Sa.prototype.name = "";
Sa.prototype.reason = "";
Sa.prototype.message = "";
Sa.prototype.stack = "";
Sa.prototype.fatal = null;
Sa.prototype.column = null;
Sa.prototype.line = null;
Sa.prototype.source = null;
Sa.prototype.ruleId = null;
Sa.prototype.position = null;
const ol = { basename: Qq, dirname: Xq, extname: Jq, join: Zq, sep: "/" };
function Qq(t, e) {
  if (e !== void 0 && typeof e != "string")
    throw new TypeError('"ext" argument must be a string');
  T0(t);
  let n = 0, r = -1, i = t.length, s;
  if (e === void 0 || e.length === 0 || e.length > t.length) {
    for (; i--; )
      if (t.charCodeAt(i) === 47) {
        if (s) {
          n = i + 1;
          break;
        }
      } else
        r < 0 && (s = !0, r = i + 1);
    return r < 0 ? "" : t.slice(n, r);
  }
  if (e === t)
    return "";
  let l = -1, c = e.length - 1;
  for (; i--; )
    if (t.charCodeAt(i) === 47) {
      if (s) {
        n = i + 1;
        break;
      }
    } else
      l < 0 && (s = !0, l = i + 1), c > -1 && (t.charCodeAt(i) === e.charCodeAt(c--) ? c < 0 && (r = i) : (c = -1, r = l));
  return n === r ? r = l : r < 0 && (r = t.length), t.slice(n, r);
}
function Xq(t) {
  if (T0(t), t.length === 0)
    return ".";
  let e = -1, n = t.length, r;
  for (; --n; )
    if (t.charCodeAt(n) === 47) {
      if (r) {
        e = n;
        break;
      }
    } else
      r || (r = !0);
  return e < 0 ? t.charCodeAt(0) === 47 ? "/" : "." : e === 1 && t.charCodeAt(0) === 47 ? "//" : t.slice(0, e);
}
function Jq(t) {
  T0(t);
  let e = t.length, n = -1, r = 0, i = -1, s = 0, l;
  for (; e--; ) {
    const c = t.charCodeAt(e);
    if (c === 47) {
      if (l) {
        r = e + 1;
        break;
      }
      continue;
    }
    n < 0 && (l = !0, n = e + 1), c === 46 ? i < 0 ? i = e : s !== 1 && (s = 1) : i > -1 && (s = -1);
  }
  return i < 0 || n < 0 || // We saw a non-dot character immediately before the dot.
  s === 0 || // The (right-most) trimmed path component is exactly `..`.
  s === 1 && i === n - 1 && i === r + 1 ? "" : t.slice(i, n);
}
function Zq(...t) {
  let e = -1, n;
  for (; ++e < t.length; )
    T0(t[e]), t[e] && (n = n === void 0 ? t[e] : n + "/" + t[e]);
  return n === void 0 ? "." : ej(n);
}
function ej(t) {
  T0(t);
  const e = t.charCodeAt(0) === 47;
  let n = tj(t, !e);
  return n.length === 0 && !e && (n = "."), n.length > 0 && t.charCodeAt(t.length - 1) === 47 && (n += "/"), e ? "/" + n : n;
}
function tj(t, e) {
  let n = "", r = 0, i = -1, s = 0, l = -1, c, h;
  for (; ++l <= t.length; ) {
    if (l < t.length)
      c = t.charCodeAt(l);
    else {
      if (c === 47)
        break;
      c = 47;
    }
    if (c === 47) {
      if (!(i === l - 1 || s === 1))
        if (i !== l - 1 && s === 2) {
          if (n.length < 2 || r !== 2 || n.charCodeAt(n.length - 1) !== 46 || n.charCodeAt(n.length - 2) !== 46) {
            if (n.length > 2) {
              if (h = n.lastIndexOf("/"), h !== n.length - 1) {
                h < 0 ? (n = "", r = 0) : (n = n.slice(0, h), r = n.length - 1 - n.lastIndexOf("/")), i = l, s = 0;
                continue;
              }
            } else if (n.length > 0) {
              n = "", r = 0, i = l, s = 0;
              continue;
            }
          }
          e && (n = n.length > 0 ? n + "/.." : "..", r = 2);
        } else
          n.length > 0 ? n += "/" + t.slice(i + 1, l) : n = t.slice(i + 1, l), r = l - i - 1;
      i = l, s = 0;
    } else
      c === 46 && s > -1 ? s++ : s = -1;
  }
  return n;
}
function T0(t) {
  if (typeof t != "string")
    throw new TypeError(
      "Path must be a string. Received " + JSON.stringify(t)
    );
}
const nj = { cwd: rj };
function rj() {
  return "/";
}
function MC(t) {
  return t !== null && typeof t == "object" && // @ts-expect-error: indexable.
  t.href && // @ts-expect-error: indexable.
  t.origin;
}
function ij(t) {
  if (typeof t == "string")
    t = new URL(t);
  else if (!MC(t)) {
    const e = new TypeError(
      'The "path" argument must be of type string or an instance of URL. Received `' + t + "`"
    );
    throw e.code = "ERR_INVALID_ARG_TYPE", e;
  }
  if (t.protocol !== "file:") {
    const e = new TypeError("The URL must be of scheme file");
    throw e.code = "ERR_INVALID_URL_SCHEME", e;
  }
  return oj(t);
}
function oj(t) {
  if (t.hostname !== "") {
    const r = new TypeError(
      'File URL host must be "localhost" or empty on darwin'
    );
    throw r.code = "ERR_INVALID_FILE_URL_HOST", r;
  }
  const e = t.pathname;
  let n = -1;
  for (; ++n < e.length; )
    if (e.charCodeAt(n) === 37 && e.charCodeAt(n + 1) === 50) {
      const r = e.charCodeAt(n + 2);
      if (r === 70 || r === 102) {
        const i = new TypeError(
          "File URL path must not include encoded / characters"
        );
        throw i.code = "ERR_INVALID_FILE_URL_PATH", i;
      }
    }
  return decodeURIComponent(e);
}
const d4 = ["history", "path", "basename", "stem", "extname", "dirname"];
class aj {
  /**
   * Create a new virtual file.
   *
   * `options` is treated as:
   *
   * *   `string` or `Buffer` — `{value: options}`
   * *   `URL` — `{path: options}`
   * *   `VFile` — shallow copies its data over to the new file
   * *   `object` — all fields are shallow copied over to the new file
   *
   * Path related fields are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * You cannot set `dirname` or `extname` without setting either `history`,
   * `path`, `basename`, or `stem` too.
   *
   * @param {Compatible | null | undefined} [value]
   *   File value.
   * @returns
   *   New instance.
   */
  constructor(e) {
    let n;
    e ? typeof e == "string" || sj(e) ? n = { value: e } : MC(e) ? n = { path: e } : n = e : n = {}, this.data = {}, this.messages = [], this.history = [], this.cwd = nj.cwd(), this.value, this.stored, this.result, this.map;
    let r = -1;
    for (; ++r < d4.length; ) {
      const s = d4[r];
      s in n && n[s] !== void 0 && n[s] !== null && (this[s] = s === "history" ? [...n[s]] : n[s]);
    }
    let i;
    for (i in n)
      d4.includes(i) || (this[i] = n[i]);
  }
  /**
   * Get the full path (example: `'~/index.min.js'`).
   *
   * @returns {string}
   */
  get path() {
    return this.history[this.history.length - 1];
  }
  /**
   * Set the full path (example: `'~/index.min.js'`).
   *
   * Cannot be nullified.
   * You can set a file URL (a `URL` object with a `file:` protocol) which will
   * be turned into a path with `url.fileURLToPath`.
   *
   * @param {string | URL} path
   */
  set path(e) {
    MC(e) && (e = ij(e)), p4(e, "path"), this.path !== e && this.history.push(e);
  }
  /**
   * Get the parent path (example: `'~'`).
   */
  get dirname() {
    return typeof this.path == "string" ? ol.dirname(this.path) : void 0;
  }
  /**
   * Set the parent path (example: `'~'`).
   *
   * Cannot be set if there’s no `path` yet.
   */
  set dirname(e) {
    E6(this.basename, "dirname"), this.path = ol.join(e || "", this.basename);
  }
  /**
   * Get the basename (including extname) (example: `'index.min.js'`).
   */
  get basename() {
    return typeof this.path == "string" ? ol.basename(this.path) : void 0;
  }
  /**
   * Set basename (including extname) (`'index.min.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set basename(e) {
    p4(e, "basename"), h4(e, "basename"), this.path = ol.join(this.dirname || "", e);
  }
  /**
   * Get the extname (including dot) (example: `'.js'`).
   */
  get extname() {
    return typeof this.path == "string" ? ol.extname(this.path) : void 0;
  }
  /**
   * Set the extname (including dot) (example: `'.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be set if there’s no `path` yet.
   */
  set extname(e) {
    if (h4(e, "extname"), E6(this.dirname, "extname"), e) {
      if (e.charCodeAt(0) !== 46)
        throw new Error("`extname` must start with `.`");
      if (e.includes(".", 1))
        throw new Error("`extname` cannot contain multiple dots");
    }
    this.path = ol.join(this.dirname, this.stem + (e || ""));
  }
  /**
   * Get the stem (basename w/o extname) (example: `'index.min'`).
   */
  get stem() {
    return typeof this.path == "string" ? ol.basename(this.path, this.extname) : void 0;
  }
  /**
   * Set the stem (basename w/o extname) (example: `'index.min'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set stem(e) {
    p4(e, "stem"), h4(e, "stem"), this.path = ol.join(this.dirname || "", e + (this.extname || ""));
  }
  /**
   * Serialize the file.
   *
   * @param {BufferEncoding | null | undefined} [encoding='utf8']
   *   Character encoding to understand `value` as when it’s a `Buffer`
   *   (default: `'utf8'`).
   * @returns {string}
   *   Serialized file.
   */
  toString(e) {
    return (this.value || "").toString(e || void 0);
  }
  /**
   * Create a warning message associated with the file.
   *
   * Its `fatal` is set to `false` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  message(e, n, r) {
    const i = new Sa(e, n, r);
    return this.path && (i.name = this.path + ":" + i.name, i.file = this.path), i.fatal = !1, this.messages.push(i), i;
  }
  /**
   * Create an info message associated with the file.
   *
   * Its `fatal` is set to `null` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  info(e, n, r) {
    const i = this.message(e, n, r);
    return i.fatal = null, i;
  }
  /**
   * Create a fatal error associated with the file.
   *
   * Its `fatal` is set to `true` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * > 👉 **Note**: a fatal error means that a file is no longer processable.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {never}
   *   Message.
   * @throws {VFileMessage}
   *   Message.
   */
  fail(e, n, r) {
    const i = this.message(e, n, r);
    throw i.fatal = !0, i;
  }
}
function h4(t, e) {
  if (t && t.includes(ol.sep))
    throw new Error(
      "`" + e + "` cannot be a path: did not expect `" + ol.sep + "`"
    );
}
function p4(t, e) {
  if (!t)
    throw new Error("`" + e + "` cannot be empty");
}
function E6(t, e) {
  if (!t)
    throw new Error("Setting `" + e + "` requires `path` to be set too");
}
function sj(t) {
  return JN(t);
}
const yS = tw().freeze(), ew = {}.hasOwnProperty;
function tw() {
  const t = Kq(), e = [];
  let n = {}, r, i = -1;
  return s.data = l, s.Parser = void 0, s.Compiler = void 0, s.freeze = c, s.attachers = e, s.use = h, s.parse = g, s.stringify = v, s.run = C, s.runSync = S, s.process = b, s.processSync = N, s;
  function s() {
    const O = tw();
    let L = -1;
    for (; ++L < e.length; )
      O.use(...e[L]);
    return O.data(Iy(!0, {}, n)), O;
  }
  function l(O, L) {
    return typeof O == "string" ? arguments.length === 2 ? (y4("data", r), n[O] = L, s) : ew.call(n, O) && n[O] || null : O ? (y4("data", r), n = O, s) : n;
  }
  function c() {
    if (r)
      return s;
    for (; ++i < e.length; ) {
      const [O, ...L] = e[i];
      if (L[0] === !1)
        continue;
      L[0] === !0 && (L[0] = void 0);
      const P = O.call(s, ...L);
      typeof P == "function" && t.use(P);
    }
    return r = !0, i = Number.POSITIVE_INFINITY, s;
  }
  function h(O, ...L) {
    let P;
    if (y4("use", r), O != null)
      if (typeof O == "function")
        ee(O, ...L);
      else if (typeof O == "object")
        Array.isArray(O) ? oe(O) : j(O);
      else
        throw new TypeError("Expected usable value, not `" + O + "`");
    return P && (n.settings = Object.assign(n.settings || {}, P)), s;
    function Y(z) {
      if (typeof z == "function")
        ee(z);
      else if (typeof z == "object")
        if (Array.isArray(z)) {
          const [H, ...Z] = z;
          ee(H, ...Z);
        } else
          j(z);
      else
        throw new TypeError("Expected usable value, not `" + z + "`");
    }
    function j(z) {
      oe(z.plugins), z.settings && (P = Object.assign(P || {}, z.settings));
    }
    function oe(z) {
      let H = -1;
      if (z != null)
        if (Array.isArray(z))
          for (; ++H < z.length; ) {
            const Z = z[H];
            Y(Z);
          }
        else
          throw new TypeError("Expected a list of plugins, not `" + z + "`");
    }
    function ee(z, H) {
      let Z = -1, me;
      for (; ++Z < e.length; )
        if (e[Z][0] === z) {
          me = e[Z];
          break;
        }
      me ? (RC(me[1]) && RC(H) && (H = Iy(!0, me[1], H)), me[1] = H) : e.push([...arguments]);
    }
  }
  function g(O) {
    s.freeze();
    const L = Rm(O), P = s.Parser;
    return m4("parse", P), T6(P, "parse") ? new P(String(L), L).parse() : P(String(L), L);
  }
  function v(O, L) {
    s.freeze();
    const P = Rm(L), Y = s.Compiler;
    return g4("stringify", Y), C6(O), T6(Y, "compile") ? new Y(O, P).compile() : Y(O, P);
  }
  function C(O, L, P) {
    if (C6(O), s.freeze(), !P && typeof L == "function" && (P = L, L = void 0), !P)
      return new Promise(Y);
    Y(null, P);
    function Y(j, oe) {
      t.run(O, Rm(L), ee);
      function ee(z, H, Z) {
        H = H || O, z ? oe(z) : j ? j(H) : P(null, H, Z);
      }
    }
  }
  function S(O, L) {
    let P, Y;
    return s.run(O, L, j), S6("runSync", "run", Y), P;
    function j(oe, ee) {
      c6(oe), P = ee, Y = !0;
    }
  }
  function b(O, L) {
    if (s.freeze(), m4("process", s.Parser), g4("process", s.Compiler), !L)
      return new Promise(P);
    P(null, L);
    function P(Y, j) {
      const oe = Rm(O);
      s.run(s.parse(oe), oe, (z, H, Z) => {
        if (z || !H || !Z)
          ee(z);
        else {
          const me = s.stringify(H, Z);
          me == null || (cj(me) ? Z.value = me : Z.result = me), ee(z, Z);
        }
      });
      function ee(z, H) {
        z || !H ? j(z) : Y ? Y(H) : L(null, H);
      }
    }
  }
  function N(O) {
    let L;
    s.freeze(), m4("processSync", s.Parser), g4("processSync", s.Compiler);
    const P = Rm(O);
    return s.process(P, Y), S6("processSync", "process", L), P;
    function Y(j) {
      L = !0, c6(j);
    }
  }
}
function T6(t, e) {
  return typeof t == "function" && // Prototypes do exist.
  // type-coverage:ignore-next-line
  t.prototype && // A function with keys in its prototype is probably a constructor.
  // Classes’ prototype methods are not enumerable, so we check if some value
  // exists in the prototype.
  // type-coverage:ignore-next-line
  (lj(t.prototype) || e in t.prototype);
}
function lj(t) {
  let e;
  for (e in t)
    if (ew.call(t, e))
      return !0;
  return !1;
}
function m4(t, e) {
  if (typeof e != "function")
    throw new TypeError("Cannot `" + t + "` without `Parser`");
}
function g4(t, e) {
  if (typeof e != "function")
    throw new TypeError("Cannot `" + t + "` without `Compiler`");
}
function y4(t, e) {
  if (e)
    throw new Error(
      "Cannot call `" + t + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function C6(t) {
  if (!RC(t) || typeof t.type != "string")
    throw new TypeError("Expected node, got `" + t + "`");
}
function S6(t, e, n) {
  if (!n)
    throw new Error(
      "`" + t + "` finished async. Use `" + e + "` instead"
    );
}
function Rm(t) {
  return uj(t) ? t : new aj(t);
}
function uj(t) {
  return Boolean(
    t && typeof t == "object" && "message" in t && "messages" in t
  );
}
function cj(t) {
  return typeof t == "string" || JN(t);
}
var ss = {};
const fj = [
  65534,
  65535,
  131070,
  131071,
  196606,
  196607,
  262142,
  262143,
  327678,
  327679,
  393214,
  393215,
  458750,
  458751,
  524286,
  524287,
  589822,
  589823,
  655358,
  655359,
  720894,
  720895,
  786430,
  786431,
  851966,
  851967,
  917502,
  917503,
  983038,
  983039,
  1048574,
  1048575,
  1114110,
  1114111
];
ss.REPLACEMENT_CHARACTER = "�";
ss.CODE_POINTS = {
  EOF: -1,
  NULL: 0,
  TABULATION: 9,
  CARRIAGE_RETURN: 13,
  LINE_FEED: 10,
  FORM_FEED: 12,
  SPACE: 32,
  EXCLAMATION_MARK: 33,
  QUOTATION_MARK: 34,
  NUMBER_SIGN: 35,
  AMPERSAND: 38,
  APOSTROPHE: 39,
  HYPHEN_MINUS: 45,
  SOLIDUS: 47,
  DIGIT_0: 48,
  DIGIT_9: 57,
  SEMICOLON: 59,
  LESS_THAN_SIGN: 60,
  EQUALS_SIGN: 61,
  GREATER_THAN_SIGN: 62,
  QUESTION_MARK: 63,
  LATIN_CAPITAL_A: 65,
  LATIN_CAPITAL_F: 70,
  LATIN_CAPITAL_X: 88,
  LATIN_CAPITAL_Z: 90,
  RIGHT_SQUARE_BRACKET: 93,
  GRAVE_ACCENT: 96,
  LATIN_SMALL_A: 97,
  LATIN_SMALL_F: 102,
  LATIN_SMALL_X: 120,
  LATIN_SMALL_Z: 122,
  REPLACEMENT_CHARACTER: 65533
};
ss.CODE_POINT_SEQUENCES = {
  DASH_DASH_STRING: [45, 45],
  //--
  DOCTYPE_STRING: [68, 79, 67, 84, 89, 80, 69],
  //DOCTYPE
  CDATA_START_STRING: [91, 67, 68, 65, 84, 65, 91],
  //[CDATA[
  SCRIPT_STRING: [115, 99, 114, 105, 112, 116],
  //script
  PUBLIC_STRING: [80, 85, 66, 76, 73, 67],
  //PUBLIC
  SYSTEM_STRING: [83, 89, 83, 84, 69, 77]
  //SYSTEM
};
ss.isSurrogate = function(t) {
  return t >= 55296 && t <= 57343;
};
ss.isSurrogatePair = function(t) {
  return t >= 56320 && t <= 57343;
};
ss.getSurrogatePairCodePoint = function(t, e) {
  return (t - 55296) * 1024 + 9216 + e;
};
ss.isControlCodePoint = function(t) {
  return t !== 32 && t !== 10 && t !== 13 && t !== 9 && t !== 12 && t >= 1 && t <= 31 || t >= 127 && t <= 159;
};
ss.isUndefinedCodePoint = function(t) {
  return t >= 64976 && t <= 65007 || fj.indexOf(t) > -1;
};
var vS = {
  controlCharacterInInputStream: "control-character-in-input-stream",
  noncharacterInInputStream: "noncharacter-in-input-stream",
  surrogateInInputStream: "surrogate-in-input-stream",
  nonVoidHtmlElementStartTagWithTrailingSolidus: "non-void-html-element-start-tag-with-trailing-solidus",
  endTagWithAttributes: "end-tag-with-attributes",
  endTagWithTrailingSolidus: "end-tag-with-trailing-solidus",
  unexpectedSolidusInTag: "unexpected-solidus-in-tag",
  unexpectedNullCharacter: "unexpected-null-character",
  unexpectedQuestionMarkInsteadOfTagName: "unexpected-question-mark-instead-of-tag-name",
  invalidFirstCharacterOfTagName: "invalid-first-character-of-tag-name",
  unexpectedEqualsSignBeforeAttributeName: "unexpected-equals-sign-before-attribute-name",
  missingEndTagName: "missing-end-tag-name",
  unexpectedCharacterInAttributeName: "unexpected-character-in-attribute-name",
  unknownNamedCharacterReference: "unknown-named-character-reference",
  missingSemicolonAfterCharacterReference: "missing-semicolon-after-character-reference",
  unexpectedCharacterAfterDoctypeSystemIdentifier: "unexpected-character-after-doctype-system-identifier",
  unexpectedCharacterInUnquotedAttributeValue: "unexpected-character-in-unquoted-attribute-value",
  eofBeforeTagName: "eof-before-tag-name",
  eofInTag: "eof-in-tag",
  missingAttributeValue: "missing-attribute-value",
  missingWhitespaceBetweenAttributes: "missing-whitespace-between-attributes",
  missingWhitespaceAfterDoctypePublicKeyword: "missing-whitespace-after-doctype-public-keyword",
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: "missing-whitespace-between-doctype-public-and-system-identifiers",
  missingWhitespaceAfterDoctypeSystemKeyword: "missing-whitespace-after-doctype-system-keyword",
  missingQuoteBeforeDoctypePublicIdentifier: "missing-quote-before-doctype-public-identifier",
  missingQuoteBeforeDoctypeSystemIdentifier: "missing-quote-before-doctype-system-identifier",
  missingDoctypePublicIdentifier: "missing-doctype-public-identifier",
  missingDoctypeSystemIdentifier: "missing-doctype-system-identifier",
  abruptDoctypePublicIdentifier: "abrupt-doctype-public-identifier",
  abruptDoctypeSystemIdentifier: "abrupt-doctype-system-identifier",
  cdataInHtmlContent: "cdata-in-html-content",
  incorrectlyOpenedComment: "incorrectly-opened-comment",
  eofInScriptHtmlCommentLikeText: "eof-in-script-html-comment-like-text",
  eofInDoctype: "eof-in-doctype",
  nestedComment: "nested-comment",
  abruptClosingOfEmptyComment: "abrupt-closing-of-empty-comment",
  eofInComment: "eof-in-comment",
  incorrectlyClosedComment: "incorrectly-closed-comment",
  eofInCdata: "eof-in-cdata",
  absenceOfDigitsInNumericCharacterReference: "absence-of-digits-in-numeric-character-reference",
  nullCharacterReference: "null-character-reference",
  surrogateCharacterReference: "surrogate-character-reference",
  characterReferenceOutsideUnicodeRange: "character-reference-outside-unicode-range",
  controlCharacterReference: "control-character-reference",
  noncharacterCharacterReference: "noncharacter-character-reference",
  missingWhitespaceBeforeDoctypeName: "missing-whitespace-before-doctype-name",
  missingDoctypeName: "missing-doctype-name",
  invalidCharacterSequenceAfterDoctypeName: "invalid-character-sequence-after-doctype-name",
  duplicateAttribute: "duplicate-attribute",
  nonConformingDoctype: "non-conforming-doctype",
  missingDoctype: "missing-doctype",
  misplacedDoctype: "misplaced-doctype",
  endTagWithoutMatchingOpenElement: "end-tag-without-matching-open-element",
  closingOfElementWithOpenChildElements: "closing-of-element-with-open-child-elements",
  disallowedContentInNoscriptInHead: "disallowed-content-in-noscript-in-head",
  openElementsLeftAfterEof: "open-elements-left-after-eof",
  abandonedHeadElementChild: "abandoned-head-element-child",
  misplacedStartTagForHeadElement: "misplaced-start-tag-for-head-element",
  nestedNoscriptInHead: "nested-noscript-in-head",
  eofInElementThatCanContainOnlyText: "eof-in-element-that-can-contain-only-text"
};
const Zd = ss, v4 = vS, Y1 = Zd.CODE_POINTS, dj = 1 << 16;
let hj = class {
  constructor() {
    this.html = null, this.pos = -1, this.lastGapPos = -1, this.lastCharPos = -1, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = dj;
  }
  _err() {
  }
  _addGap() {
    this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;
  }
  _processSurrogate(e) {
    if (this.pos !== this.lastCharPos) {
      const n = this.html.charCodeAt(this.pos + 1);
      if (Zd.isSurrogatePair(n))
        return this.pos++, this._addGap(), Zd.getSurrogatePairCodePoint(e, n);
    } else if (!this.lastChunkWritten)
      return this.endOfChunkHit = !0, Y1.EOF;
    return this._err(v4.surrogateInInputStream), e;
  }
  dropParsedChunk() {
    this.pos > this.bufferWaterline && (this.lastCharPos -= this.pos, this.html = this.html.substring(this.pos), this.pos = 0, this.lastGapPos = -1, this.gapStack = []);
  }
  write(e, n) {
    this.html ? this.html += e : this.html = e, this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1, this.lastChunkWritten = n;
  }
  insertHtmlAtCurrentPos(e) {
    this.html = this.html.substring(0, this.pos + 1) + e + this.html.substring(this.pos + 1, this.html.length), this.lastCharPos = this.html.length - 1, this.endOfChunkHit = !1;
  }
  advance() {
    if (this.pos++, this.pos > this.lastCharPos)
      return this.endOfChunkHit = !this.lastChunkWritten, Y1.EOF;
    let e = this.html.charCodeAt(this.pos);
    return this.skipNextNewLine && e === Y1.LINE_FEED ? (this.skipNextNewLine = !1, this._addGap(), this.advance()) : e === Y1.CARRIAGE_RETURN ? (this.skipNextNewLine = !0, Y1.LINE_FEED) : (this.skipNextNewLine = !1, Zd.isSurrogate(e) && (e = this._processSurrogate(e)), e > 31 && e < 127 || e === Y1.LINE_FEED || e === Y1.CARRIAGE_RETURN || e > 159 && e < 64976 || this._checkForProblematicCharacters(e), e);
  }
  _checkForProblematicCharacters(e) {
    Zd.isControlCodePoint(e) ? this._err(v4.controlCharacterInInputStream) : Zd.isUndefinedCodePoint(e) && this._err(v4.noncharacterInInputStream);
  }
  retreat() {
    this.pos === this.lastGapPos && (this.lastGapPos = this.gapStack.pop(), this.pos--), this.pos--;
  }
};
var pj = hj, mj = new Uint16Array([4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796, 1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610, 5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910, 8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773, 13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004, 19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199, 210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1, 59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5, 193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105, 121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114, 59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192, 112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835, 4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349, 56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1, 8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272, 277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108, 100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1, 196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383, 388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115, 104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100, 59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97, 117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1, 8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3, 55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109, 112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573, 577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1, 59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59, 1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101, 121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535, 114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199, 114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1, 266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116, 101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935, 114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116, 59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1, 8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121, 4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110, 112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1, 8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101, 110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745, 59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114, 67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115, 115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67, 803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97, 99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916, 921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104, 100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99, 121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121, 894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116, 910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97, 102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97, 108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59, 1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65, 99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108, 100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119, 1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69, 1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108, 59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082, 1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092, 59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111, 1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177, 101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104, 116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101, 101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65, 66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111, 119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1, 10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101, 59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105, 103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104, 116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1, 8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1, 8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111, 107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111, 112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520, 1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1, 330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1, 59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110, 59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111, 116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200, 1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97, 112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563, 1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3, 55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105, 1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100, 101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2, 99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1, 919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683, 1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97, 108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722, 1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101, 100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781, 102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101, 114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84, 97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848, 1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027, 5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1, 915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121, 1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59, 1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921, 112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70, 71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108, 4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101, 114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99, 114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105, 111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68, 99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711, 59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101, 114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055, 2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105, 110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459, 114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111, 119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1, 8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115, 116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245, 2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1, 306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1, 205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206, 59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118, 101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238, 1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97, 114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116, 118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114, 2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293, 2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290, 4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59, 3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100, 101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030, 108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372, 2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1, 308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349, 56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99, 121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99, 102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59, 1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101, 121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3, 55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349, 56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508, 2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121, 59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114, 2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97, 59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1, 8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114, 111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2, 102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97, 114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2, 110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1, 8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4, 2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1, 8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111, 119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101, 114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867, 114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1, 8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4, 3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114, 59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1, 8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70, 71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822, 101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349, 56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112, 119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070, 3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102, 116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643, 101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1, 8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248, 112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114, 102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108, 117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1, 8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117, 3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1, 1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297, 3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1, 1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101, 4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112, 97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107, 83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203, 101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203, 116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101, 115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3, 55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114, 101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83, 112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69, 71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578, 3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111, 117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112, 67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544, 3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2, 59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824, 105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7, 59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650, 1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117, 97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811, 824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109, 112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59, 3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102, 115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113, 117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739, 3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816, 114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105, 108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76, 3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101, 114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3, 10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838, 3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866, 3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59, 1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824, 113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97, 114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59, 69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101, 114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117, 97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4e3, 4045, 115, 101, 116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59, 1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017, 4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59, 3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3, 8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4, 59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108, 59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105, 108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5, 209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205, 4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105, 103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2, 105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1, 1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97, 118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241, 4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59, 1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108, 121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111, 116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836, 4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5, 216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101, 5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214, 1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97, 114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375, 59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111, 114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114, 116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3, 55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110, 117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114, 101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59, 101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101, 115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117, 97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2, 100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105, 111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2, 99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85, 102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1, 34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3, 55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114, 115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069, 5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1, 174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340, 103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59, 1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1, 344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710, 4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2, 108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111, 59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792, 4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111, 119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1, 8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105, 108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84, 86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589, 101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114, 59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918, 4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111, 119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114, 59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86, 4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1, 10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1, 10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97, 114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117, 5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101, 115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108, 101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97, 99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157, 5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67, 99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84, 99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97, 101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110, 59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1, 1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85, 5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111, 119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105, 114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2, 114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73, 83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347, 115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108, 59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1, 8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852, 99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109, 112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101, 116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1, 8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100, 101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3, 59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59, 69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59, 1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115, 5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79, 82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2, 72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98, 117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593, 5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1, 1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114, 116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920, 4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287, 8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69, 70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1, 8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108, 100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108, 101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3, 55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102, 103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823, 5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99, 114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4, 2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4, 2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2, 105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1, 1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97, 118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2, 100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97, 114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887, 59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1, 8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111, 110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97, 100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114, 114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114, 59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108, 105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65, 6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111, 119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661, 101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933, 105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108, 100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68, 98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166, 6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1, 10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1, 8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98, 116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194, 6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220, 6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97, 114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3, 55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349, 56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115, 6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101, 59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654, 99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330, 6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3, 55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99, 102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416, 6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1, 1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121, 6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349, 56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500, 109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445, 6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99, 117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110, 59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483, 6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203, 97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59, 3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634, 6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117, 116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259, 4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609, 1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598, 1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105, 103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289, 59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224, 4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109, 59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112, 6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1, 10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5, 59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110, 100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59, 1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758, 6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115, 100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101, 102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1, 10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1, 10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1, 8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112, 116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1, 9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3, 55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891, 6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1, 10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120, 4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103, 5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949, 114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957, 6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59, 6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105, 6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1, 10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111, 112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224, 7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1, 10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058, 7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111, 110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59, 101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100, 7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1, 8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141, 98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59, 1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112, 114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101, 7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672, 115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119, 7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812, 114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119, 7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249, 7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108, 117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113, 116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733, 114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111, 119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1, 10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97, 114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4, 2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394, 111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101, 59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108, 114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101, 102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1, 9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618, 59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111, 7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59, 3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504, 7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1, 8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68, 72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597, 7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82, 108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1, 9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591, 7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4, 4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562, 59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635, 7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571, 59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1, 10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557, 59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117, 7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59, 1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115, 59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114, 7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1, 9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774, 7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59, 1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4, 2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1, 59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846, 114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101, 7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857, 7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109, 7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226, 112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2, 59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101, 102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021, 8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491, 8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59, 1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998, 8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1, 10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1, 10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111, 8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105, 117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1, 10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1, 231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1, 10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110, 8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116, 121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162, 114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99, 101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109, 8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4, 7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268, 8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1, 710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111, 119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103, 104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241, 8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114, 99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105, 110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1, 10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59, 1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110, 4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788, 59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339, 8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705, 110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59, 1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59, 100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1, 8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111, 100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1, 8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59, 1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2, 98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1, 10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111, 116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522, 8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516, 8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59, 1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1, 8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573, 8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97, 117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59, 1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114, 118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1, 8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113, 4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99, 59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911, 101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4, 2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104, 116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2, 99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116, 59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119, 122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036, 9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659, 97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805, 8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59, 1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2, 107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1, 733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1, 1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114, 8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115, 101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176, 1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1, 10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3, 55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1, 8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109, 4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59, 115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59, 1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59, 105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111, 9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110, 120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048, 9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112, 116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36, 102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095, 9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784, 111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115, 59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98, 97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100, 104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110, 97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104, 116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119, 59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111, 112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114, 121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742, 114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59, 1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2, 97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97, 110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59, 1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598, 9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372, 111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392, 117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1, 10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110, 59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59, 9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59, 1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786, 59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906, 97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490, 1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507, 9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1, 8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4, 3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4, 3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59, 1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59, 1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331, 112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281, 102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114, 4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59, 1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110, 59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716, 9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110, 59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110, 116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115, 115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59, 1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801, 68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97, 9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99, 100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784, 109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1, 59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59, 9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843, 108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99, 116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97, 108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110, 111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989, 9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59, 1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1, 64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1, 64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105, 103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59, 1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59, 1, 402, 4, 2, 112, 114, 1e4, 10005, 102, 59, 3, 55349, 56663, 4, 2, 97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022, 10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1, 10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6, 49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4, 6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099, 5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1, 188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108, 10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129, 10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59, 1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59, 1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3, 55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268, 10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470, 10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4, 3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109, 97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886, 114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99, 59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113, 115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113, 115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59, 1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1, 10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1, 10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59, 101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3, 55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109, 101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106, 10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59, 1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1, 8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59, 1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448, 10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3, 55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480, 114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1, 8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113, 114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105, 10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919, 80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97, 100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114, 10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616, 111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115, 115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59, 1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114, 116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024, 4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658, 10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59, 1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114, 115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4, 2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119, 10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97, 114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732, 10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829, 105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59, 1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779, 97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4, 5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114, 114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114, 10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349, 56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863, 10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111, 107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1, 8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958, 10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237, 11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3, 59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59, 10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1, 1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983, 10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1, 59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028, 11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764, 116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489, 108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4, 3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108, 112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97, 114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100, 59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136, 11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116, 11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1, 305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186, 1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114, 115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1, 10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202, 11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59, 3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117, 101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243, 11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118, 11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59, 1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1, 8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297, 4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1, 59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346, 11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59, 1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1, 567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114, 59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1, 1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433, 11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413, 11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105, 108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101, 110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102, 59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69, 72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721, 11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275, 12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116, 11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105, 108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550, 11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101, 103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606, 11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116, 121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1, 955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1, 10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59, 11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655, 11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59, 102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107, 59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1, 10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1, 10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925, 59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114, 59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99, 4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115, 11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1, 10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811, 11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105, 108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4, 99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117, 111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100, 117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59, 1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880, 11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114, 116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59, 116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1, 8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974, 11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59, 1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115, 12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1, 10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083, 1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1, 10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59, 101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100, 101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111, 120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115, 12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114, 59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150, 12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3, 55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2, 97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637, 4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1, 9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222, 12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110, 101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1, 9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117, 115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1, 9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808, 112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1, 10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317, 12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98, 110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446, 12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220, 114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114, 12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114, 114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114, 111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619, 105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458, 12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797, 105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115, 116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498, 12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97, 114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97, 99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1, 8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100, 12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1, 8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597, 12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513, 59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818, 59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91, 111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107, 59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660, 12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105, 12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918, 114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114, 59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711, 12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729, 1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746, 115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2, 101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808, 65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914, 12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68, 111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849, 12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833, 12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101, 59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4, 59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110, 59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101, 114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1, 10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101, 100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618, 111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111, 5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966, 12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992, 111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100, 12995, 12997, 13e3, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008, 1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971, 114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112, 13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670, 59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514, 112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087, 1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4, 24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217, 13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602, 13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312, 14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118, 13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116, 13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114, 111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402, 59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115, 104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270, 13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103, 59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293, 13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115, 59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316, 13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1, 8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160, 109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824, 4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2, 112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105, 108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111, 116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104, 59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438, 13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663, 114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111, 13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824, 117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59, 1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503, 13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101, 115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113, 115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547, 13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878, 824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574, 13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597, 114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994, 4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100, 13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114, 4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661, 13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114, 114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675, 13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114, 114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816, 59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115, 13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2, 59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1, 8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773, 13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787, 13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802, 13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824, 4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59, 1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99, 13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97, 111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874, 13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108, 59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1, 10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59, 1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101, 13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116, 13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59, 99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605, 824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4, 2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105, 109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106, 4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101, 59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4, 2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769, 4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1, 8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102, 101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157, 14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836, 59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144, 3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3, 10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3, 10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1, 8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198, 14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59, 3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242, 108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103, 59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254, 14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59, 1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939, 113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101, 115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1, 8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338, 14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1, 8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115, 104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59, 3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116, 14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2, 59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2, 65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3, 8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440, 14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452, 14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119, 59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662, 14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416, 4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1, 243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59, 99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086, 4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115, 104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59, 1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2, 99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4, 3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101, 5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649, 14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4, 97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634, 4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1, 10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709, 14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100, 110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678, 117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101, 108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681, 117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785, 14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1, 8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845, 114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170, 1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59, 1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1, 10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97, 115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2, 108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101, 115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108, 5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996, 15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4, 4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2, 59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105, 108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121, 59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019, 15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59, 1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349, 56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052, 15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1, 9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102, 111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119, 110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1, 8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100, 101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171, 15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105, 114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1, 10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59, 1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117, 15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59, 3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59, 69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253, 15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112, 59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1, 10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299, 15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117, 114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97, 101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937, 113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830, 109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69, 97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105, 109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1, 8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1, 9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2, 59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1, 8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114, 59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6, 102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485, 15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59, 3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3, 55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101, 105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110, 116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113, 59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931, 15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318, 16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114, 114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97, 114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101, 110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770, 4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341, 105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4, 4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1, 10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59, 15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115, 116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754, 15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733, 15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526, 107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59, 1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781, 105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97, 108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114, 114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820, 15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2, 101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849, 15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865, 15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877, 15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1, 1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1, 10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114, 15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99, 103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952, 15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1, 8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4, 3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621, 111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007, 16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108, 16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1, 961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116, 4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143, 16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97, 105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117, 16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102, 116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1, 8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104, 116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97, 114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109, 101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116, 115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201, 114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117, 115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1, 9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238, 16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221, 114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265, 16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1, 10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304, 114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108, 105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99, 104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114, 59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1, 93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104, 105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101, 115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399, 16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702, 108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746, 16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614, 17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4, 10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499, 16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1, 10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1, 353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928, 105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544, 16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937, 111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1, 1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59, 1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606, 16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114, 4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628, 16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167, 105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110, 16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1, 10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110, 59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114, 112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097, 59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1, 8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59, 16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102, 118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59, 100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817, 16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113, 16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1, 10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1, 10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114, 59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116, 16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115, 101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1, 10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897, 16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1, 10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4, 3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4, 2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692, 114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970, 16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59, 1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2, 97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59, 3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3, 8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115, 17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101, 17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070, 17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083, 17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099, 17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1, 9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116, 17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110, 59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4, 2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734, 59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2, 101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112, 17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110, 112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285, 17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100, 17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1, 10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108, 117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105, 117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310, 17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1, 10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955, 109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1, 10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376, 17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936, 117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3, 97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1, 10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1, 8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100, 101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478, 17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59, 17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1, 179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1, 10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839, 111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1, 10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116, 59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843, 108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602, 116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59, 113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113, 17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112, 17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622, 17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634, 17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119, 59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59, 17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860, 17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103, 101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97, 101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105, 108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101, 99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111, 17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2, 52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4, 3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977, 59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818, 17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764, 115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776, 105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3, 108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5, 215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892, 17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4, 3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98, 99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014, 105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677, 114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1, 8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482, 4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059, 18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114, 18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1, 9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1, 8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1, 9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110, 117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701, 105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4, 3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108, 59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107, 59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104, 101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234, 18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504, 18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1, 10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59, 18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245, 121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265, 114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104, 18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369, 97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116, 59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59, 18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332, 18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116, 18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101, 18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114, 105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5, 168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59, 1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117, 18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1, 8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114, 112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59, 1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105, 4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110, 59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99, 105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110, 4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59, 1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3, 55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59, 1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581, 1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1, 8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59, 1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111, 112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857, 18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59, 1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985, 97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114, 116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695, 18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111, 110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105, 110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105, 59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59, 104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760, 18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024, 59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113, 18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114, 18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103, 104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4, 3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873, 18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108, 105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1, 124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882, 115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835, 8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116, 114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349, 56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977, 59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988, 18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97, 103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020, 19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4, 2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59, 1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101, 114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3, 55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97, 116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100, 102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125, 19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252, 19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1, 9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114, 59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182, 19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1, 10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215, 19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3, 55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4, 2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1, 10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117, 112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1, 10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316, 19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121, 19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4, 2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5, 165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1, 1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4, 2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395, 1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419, 19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99, 117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110, 59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452, 19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349, 56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112, 102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106, 110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204]);
const gj = pj, An = ss, uf = mj, Ee = vS, V = An.CODE_POINTS, Q1 = An.CODE_POINT_SEQUENCES, yj = {
  128: 8364,
  130: 8218,
  131: 402,
  132: 8222,
  133: 8230,
  134: 8224,
  135: 8225,
  136: 710,
  137: 8240,
  138: 352,
  139: 8249,
  140: 338,
  142: 381,
  145: 8216,
  146: 8217,
  147: 8220,
  148: 8221,
  149: 8226,
  150: 8211,
  151: 8212,
  152: 732,
  153: 8482,
  154: 353,
  155: 8250,
  156: 339,
  158: 382,
  159: 376
}, nw = 1 << 0, rw = 1 << 1, iw = 1 << 2, vj = nw | rw | iw, Zt = "DATA_STATE", eh = "RCDATA_STATE", Vm = "RAWTEXT_STATE", eu = "SCRIPT_DATA_STATE", ow = "PLAINTEXT_STATE", b6 = "TAG_OPEN_STATE", A6 = "END_TAG_OPEN_STATE", E4 = "TAG_NAME_STATE", x6 = "RCDATA_LESS_THAN_SIGN_STATE", _6 = "RCDATA_END_TAG_OPEN_STATE", k6 = "RCDATA_END_TAG_NAME_STATE", N6 = "RAWTEXT_LESS_THAN_SIGN_STATE", w6 = "RAWTEXT_END_TAG_OPEN_STATE", O6 = "RAWTEXT_END_TAG_NAME_STATE", R6 = "SCRIPT_DATA_LESS_THAN_SIGN_STATE", D6 = "SCRIPT_DATA_END_TAG_OPEN_STATE", M6 = "SCRIPT_DATA_END_TAG_NAME_STATE", L6 = "SCRIPT_DATA_ESCAPE_START_STATE", I6 = "SCRIPT_DATA_ESCAPE_START_DASH_STATE", Ka = "SCRIPT_DATA_ESCAPED_STATE", P6 = "SCRIPT_DATA_ESCAPED_DASH_STATE", T4 = "SCRIPT_DATA_ESCAPED_DASH_DASH_STATE", E9 = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE", F6 = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE", B6 = "SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE", U6 = "SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE", Kl = "SCRIPT_DATA_DOUBLE_ESCAPED_STATE", H6 = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE", z6 = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE", T9 = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE", q6 = "SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE", tl = "BEFORE_ATTRIBUTE_NAME_STATE", C9 = "ATTRIBUTE_NAME_STATE", C4 = "AFTER_ATTRIBUTE_NAME_STATE", S4 = "BEFORE_ATTRIBUTE_VALUE_STATE", S9 = "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE", b9 = "ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE", A9 = "ATTRIBUTE_VALUE_UNQUOTED_STATE", b4 = "AFTER_ATTRIBUTE_VALUE_QUOTED_STATE", ic = "SELF_CLOSING_START_TAG_STATE", Dm = "BOGUS_COMMENT_STATE", j6 = "MARKUP_DECLARATION_OPEN_STATE", V6 = "COMMENT_START_STATE", $6 = "COMMENT_START_DASH_STATE", oc = "COMMENT_STATE", G6 = "COMMENT_LESS_THAN_SIGN_STATE", W6 = "COMMENT_LESS_THAN_SIGN_BANG_STATE", K6 = "COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE", Y6 = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE", x9 = "COMMENT_END_DASH_STATE", _9 = "COMMENT_END_STATE", Q6 = "COMMENT_END_BANG_STATE", X6 = "DOCTYPE_STATE", k9 = "BEFORE_DOCTYPE_NAME_STATE", N9 = "DOCTYPE_NAME_STATE", J6 = "AFTER_DOCTYPE_NAME_STATE", Z6 = "AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE", e_ = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE", A4 = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE", x4 = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE", _4 = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE", t_ = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE", n_ = "AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE", r_ = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE", Mm = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE", Lm = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE", k4 = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE", Yl = "BOGUS_DOCTYPE_STATE", w9 = "CDATA_SECTION_STATE", i_ = "CDATA_SECTION_BRACKET_STATE", o_ = "CDATA_SECTION_END_STATE", $d = "CHARACTER_REFERENCE_STATE", a_ = "NAMED_CHARACTER_REFERENCE_STATE", s_ = "AMBIGUOS_AMPERSAND_STATE", l_ = "NUMERIC_CHARACTER_REFERENCE_STATE", u_ = "HEXADEMICAL_CHARACTER_REFERENCE_START_STATE", c_ = "DECIMAL_CHARACTER_REFERENCE_START_STATE", f_ = "HEXADEMICAL_CHARACTER_REFERENCE_STATE", d_ = "DECIMAL_CHARACTER_REFERENCE_STATE", Im = "NUMERIC_CHARACTER_REFERENCE_END_STATE";
function Un(t) {
  return t === V.SPACE || t === V.LINE_FEED || t === V.TABULATION || t === V.FORM_FEED;
}
function e0(t) {
  return t >= V.DIGIT_0 && t <= V.DIGIT_9;
}
function Qa(t) {
  return t >= V.LATIN_CAPITAL_A && t <= V.LATIN_CAPITAL_Z;
}
function Z1(t) {
  return t >= V.LATIN_SMALL_A && t <= V.LATIN_SMALL_Z;
}
function cc(t) {
  return Z1(t) || Qa(t);
}
function N4(t) {
  return cc(t) || e0(t);
}
function aw(t) {
  return t >= V.LATIN_CAPITAL_A && t <= V.LATIN_CAPITAL_F;
}
function sw(t) {
  return t >= V.LATIN_SMALL_A && t <= V.LATIN_SMALL_F;
}
function Ej(t) {
  return e0(t) || aw(t) || sw(t);
}
function $9(t) {
  return t + 32;
}
function tr(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(t >>> 10 & 1023 | 55296) + String.fromCharCode(56320 | t & 1023));
}
function ac(t) {
  return String.fromCharCode($9(t));
}
function h_(t, e) {
  const n = uf[++t];
  let r = ++t, i = r + n - 1;
  for (; r <= i; ) {
    const s = r + i >>> 1, l = uf[s];
    if (l < e)
      r = s + 1;
    else if (l > e)
      i = s - 1;
    else
      return uf[s + n];
  }
  return -1;
}
let ba = class lo {
  constructor() {
    this.preprocessor = new gj(), this.tokenQueue = [], this.allowCDATA = !1, this.state = Zt, this.returnState = "", this.charRefCode = -1, this.tempBuff = [], this.lastStartTagName = "", this.consumedAfterSnapshot = -1, this.active = !1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = null;
  }
  //Errors
  _err() {
  }
  _errOnNextCodePoint(e) {
    this._consume(), this._err(e), this._unconsume();
  }
  //API
  getNextToken() {
    for (; !this.tokenQueue.length && this.active; ) {
      this.consumedAfterSnapshot = 0;
      const e = this._consume();
      this._ensureHibernation() || this[this.state](e);
    }
    return this.tokenQueue.shift();
  }
  write(e, n) {
    this.active = !0, this.preprocessor.write(e, n);
  }
  insertHtmlAtCurrentPos(e) {
    this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(e);
  }
  //Hibernation
  _ensureHibernation() {
    if (this.preprocessor.endOfChunkHit) {
      for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)
        this.preprocessor.retreat();
      return this.active = !1, this.tokenQueue.push({ type: lo.HIBERNATION_TOKEN }), !0;
    }
    return !1;
  }
  //Consumption
  _consume() {
    return this.consumedAfterSnapshot++, this.preprocessor.advance();
  }
  _unconsume() {
    this.consumedAfterSnapshot--, this.preprocessor.retreat();
  }
  _reconsumeInState(e) {
    this.state = e, this._unconsume();
  }
  _consumeSequenceIfMatch(e, n, r) {
    let i = 0, s = !0;
    const l = e.length;
    let c = 0, h = n, g;
    for (; c < l; c++) {
      if (c > 0 && (h = this._consume(), i++), h === V.EOF) {
        s = !1;
        break;
      }
      if (g = e[c], h !== g && (r || h !== $9(g))) {
        s = !1;
        break;
      }
    }
    if (!s)
      for (; i--; )
        this._unconsume();
    return s;
  }
  //Temp buffer
  _isTempBufferEqualToScriptString() {
    if (this.tempBuff.length !== Q1.SCRIPT_STRING.length)
      return !1;
    for (let e = 0; e < this.tempBuff.length; e++)
      if (this.tempBuff[e] !== Q1.SCRIPT_STRING[e])
        return !1;
    return !0;
  }
  //Token creation
  _createStartTagToken() {
    this.currentToken = {
      type: lo.START_TAG_TOKEN,
      tagName: "",
      selfClosing: !1,
      ackSelfClosing: !1,
      attrs: []
    };
  }
  _createEndTagToken() {
    this.currentToken = {
      type: lo.END_TAG_TOKEN,
      tagName: "",
      selfClosing: !1,
      attrs: []
    };
  }
  _createCommentToken() {
    this.currentToken = {
      type: lo.COMMENT_TOKEN,
      data: ""
    };
  }
  _createDoctypeToken(e) {
    this.currentToken = {
      type: lo.DOCTYPE_TOKEN,
      name: e,
      forceQuirks: !1,
      publicId: null,
      systemId: null
    };
  }
  _createCharacterToken(e, n) {
    this.currentCharacterToken = {
      type: e,
      chars: n
    };
  }
  _createEOFToken() {
    this.currentToken = { type: lo.EOF_TOKEN };
  }
  //Tag attributes
  _createAttr(e) {
    this.currentAttr = {
      name: e,
      value: ""
    };
  }
  _leaveAttrName(e) {
    lo.getTokenAttr(this.currentToken, this.currentAttr.name) === null ? this.currentToken.attrs.push(this.currentAttr) : this._err(Ee.duplicateAttribute), this.state = e;
  }
  _leaveAttrValue(e) {
    this.state = e;
  }
  //Token emission
  _emitCurrentToken() {
    this._emitCurrentCharacterToken();
    const e = this.currentToken;
    this.currentToken = null, e.type === lo.START_TAG_TOKEN ? this.lastStartTagName = e.tagName : e.type === lo.END_TAG_TOKEN && (e.attrs.length > 0 && this._err(Ee.endTagWithAttributes), e.selfClosing && this._err(Ee.endTagWithTrailingSolidus)), this.tokenQueue.push(e);
  }
  _emitCurrentCharacterToken() {
    this.currentCharacterToken && (this.tokenQueue.push(this.currentCharacterToken), this.currentCharacterToken = null);
  }
  _emitEOFToken() {
    this._createEOFToken(), this._emitCurrentToken();
  }
  //Characters emission
  //OPTIMIZATION: specification uses only one type of character tokens (one token per character).
  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
  //If we have a sequence of characters that belong to the same group, parser can process it
  //as a single solid character token.
  //So, there are 3 types of character tokens in parse5:
  //1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
  //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
  //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
  _appendCharToCurrentCharacterToken(e, n) {
    this.currentCharacterToken && this.currentCharacterToken.type !== e && this._emitCurrentCharacterToken(), this.currentCharacterToken ? this.currentCharacterToken.chars += n : this._createCharacterToken(e, n);
  }
  _emitCodePoint(e) {
    let n = lo.CHARACTER_TOKEN;
    Un(e) ? n = lo.WHITESPACE_CHARACTER_TOKEN : e === V.NULL && (n = lo.NULL_CHARACTER_TOKEN), this._appendCharToCurrentCharacterToken(n, tr(e));
  }
  _emitSeveralCodePoints(e) {
    for (let n = 0; n < e.length; n++)
      this._emitCodePoint(e[n]);
  }
  //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
  //So we can avoid additional checks here.
  _emitChars(e) {
    this._appendCharToCurrentCharacterToken(lo.CHARACTER_TOKEN, e);
  }
  // Character reference helpers
  _matchNamedCharacterReference(e) {
    let n = null, r = 1, i = h_(0, e);
    for (this.tempBuff.push(e); i > -1; ) {
      const s = uf[i], l = s < vj;
      l && s & nw && (n = s & rw ? [uf[++i], uf[++i]] : [uf[++i]], r = 0);
      const h = this._consume();
      if (this.tempBuff.push(h), r++, h === V.EOF)
        break;
      l ? i = s & iw ? h_(i, h) : -1 : i = h === s ? ++i : -1;
    }
    for (; r--; )
      this.tempBuff.pop(), this._unconsume();
    return n;
  }
  _isCharacterReferenceInAttribute() {
    return this.returnState === S9 || this.returnState === b9 || this.returnState === A9;
  }
  _isCharacterReferenceAttributeQuirk(e) {
    if (!e && this._isCharacterReferenceInAttribute()) {
      const n = this._consume();
      return this._unconsume(), n === V.EQUALS_SIGN || N4(n);
    }
    return !1;
  }
  _flushCodePointsConsumedAsCharacterReference() {
    if (this._isCharacterReferenceInAttribute())
      for (let e = 0; e < this.tempBuff.length; e++)
        this.currentAttr.value += tr(this.tempBuff[e]);
    else
      this._emitSeveralCodePoints(this.tempBuff);
    this.tempBuff = [];
  }
  // State machine
  // Data state
  //------------------------------------------------------------------
  [Zt](e) {
    this.preprocessor.dropParsedChunk(), e === V.LESS_THAN_SIGN ? this.state = b6 : e === V.AMPERSAND ? (this.returnState = Zt, this.state = $d) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitCodePoint(e)) : e === V.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  //  RCDATA state
  //------------------------------------------------------------------
  [eh](e) {
    this.preprocessor.dropParsedChunk(), e === V.AMPERSAND ? (this.returnState = eh, this.state = $d) : e === V.LESS_THAN_SIGN ? this.state = x6 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // RAWTEXT state
  //------------------------------------------------------------------
  [Vm](e) {
    this.preprocessor.dropParsedChunk(), e === V.LESS_THAN_SIGN ? this.state = N6 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // Script data state
  //------------------------------------------------------------------
  [eu](e) {
    this.preprocessor.dropParsedChunk(), e === V.LESS_THAN_SIGN ? this.state = R6 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // PLAINTEXT state
  //------------------------------------------------------------------
  [ow](e) {
    this.preprocessor.dropParsedChunk(), e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? this._emitEOFToken() : this._emitCodePoint(e);
  }
  // Tag open state
  //------------------------------------------------------------------
  [b6](e) {
    e === V.EXCLAMATION_MARK ? this.state = j6 : e === V.SOLIDUS ? this.state = A6 : cc(e) ? (this._createStartTagToken(), this._reconsumeInState(E4)) : e === V.QUESTION_MARK ? (this._err(Ee.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(), this._reconsumeInState(Dm)) : e === V.EOF ? (this._err(Ee.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken()) : (this._err(Ee.invalidFirstCharacterOfTagName), this._emitChars("<"), this._reconsumeInState(Zt));
  }
  // End tag open state
  //------------------------------------------------------------------
  [A6](e) {
    cc(e) ? (this._createEndTagToken(), this._reconsumeInState(E4)) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingEndTagName), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken()) : (this._err(Ee.invalidFirstCharacterOfTagName), this._createCommentToken(), this._reconsumeInState(Dm));
  }
  // Tag name state
  //------------------------------------------------------------------
  [E4](e) {
    Un(e) ? this.state = tl : e === V.SOLIDUS ? this.state = ic : e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : Qa(e) ? this.currentToken.tagName += ac(e) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.tagName += An.REPLACEMENT_CHARACTER) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : this.currentToken.tagName += tr(e);
  }
  // RCDATA less-than sign state
  //------------------------------------------------------------------
  [x6](e) {
    e === V.SOLIDUS ? (this.tempBuff = [], this.state = _6) : (this._emitChars("<"), this._reconsumeInState(eh));
  }
  // RCDATA end tag open state
  //------------------------------------------------------------------
  [_6](e) {
    cc(e) ? (this._createEndTagToken(), this._reconsumeInState(k6)) : (this._emitChars("</"), this._reconsumeInState(eh));
  }
  // RCDATA end tag name state
  //------------------------------------------------------------------
  [k6](e) {
    if (Qa(e))
      this.currentToken.tagName += ac(e), this.tempBuff.push(e);
    else if (Z1(e))
      this.currentToken.tagName += tr(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if (Un(e)) {
          this.state = tl;
          return;
        }
        if (e === V.SOLIDUS) {
          this.state = ic;
          return;
        }
        if (e === V.GREATER_THAN_SIGN) {
          this.state = Zt, this._emitCurrentToken();
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(eh);
    }
  }
  // RAWTEXT less-than sign state
  //------------------------------------------------------------------
  [N6](e) {
    e === V.SOLIDUS ? (this.tempBuff = [], this.state = w6) : (this._emitChars("<"), this._reconsumeInState(Vm));
  }
  // RAWTEXT end tag open state
  //------------------------------------------------------------------
  [w6](e) {
    cc(e) ? (this._createEndTagToken(), this._reconsumeInState(O6)) : (this._emitChars("</"), this._reconsumeInState(Vm));
  }
  // RAWTEXT end tag name state
  //------------------------------------------------------------------
  [O6](e) {
    if (Qa(e))
      this.currentToken.tagName += ac(e), this.tempBuff.push(e);
    else if (Z1(e))
      this.currentToken.tagName += tr(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if (Un(e)) {
          this.state = tl;
          return;
        }
        if (e === V.SOLIDUS) {
          this.state = ic;
          return;
        }
        if (e === V.GREATER_THAN_SIGN) {
          this._emitCurrentToken(), this.state = Zt;
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(Vm);
    }
  }
  // Script data less-than sign state
  //------------------------------------------------------------------
  [R6](e) {
    e === V.SOLIDUS ? (this.tempBuff = [], this.state = D6) : e === V.EXCLAMATION_MARK ? (this.state = L6, this._emitChars("<!")) : (this._emitChars("<"), this._reconsumeInState(eu));
  }
  // Script data end tag open state
  //------------------------------------------------------------------
  [D6](e) {
    cc(e) ? (this._createEndTagToken(), this._reconsumeInState(M6)) : (this._emitChars("</"), this._reconsumeInState(eu));
  }
  // Script data end tag name state
  //------------------------------------------------------------------
  [M6](e) {
    if (Qa(e))
      this.currentToken.tagName += ac(e), this.tempBuff.push(e);
    else if (Z1(e))
      this.currentToken.tagName += tr(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if (Un(e)) {
          this.state = tl;
          return;
        } else if (e === V.SOLIDUS) {
          this.state = ic;
          return;
        } else if (e === V.GREATER_THAN_SIGN) {
          this._emitCurrentToken(), this.state = Zt;
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(eu);
    }
  }
  // Script data escape start state
  //------------------------------------------------------------------
  [L6](e) {
    e === V.HYPHEN_MINUS ? (this.state = I6, this._emitChars("-")) : this._reconsumeInState(eu);
  }
  // Script data escape start dash state
  //------------------------------------------------------------------
  [I6](e) {
    e === V.HYPHEN_MINUS ? (this.state = T4, this._emitChars("-")) : this._reconsumeInState(eu);
  }
  // Script data escaped state
  //------------------------------------------------------------------
  [Ka](e) {
    e === V.HYPHEN_MINUS ? (this.state = P6, this._emitChars("-")) : e === V.LESS_THAN_SIGN ? this.state = E9 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? (this._err(Ee.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(e);
  }
  // Script data escaped dash state
  //------------------------------------------------------------------
  [P6](e) {
    e === V.HYPHEN_MINUS ? (this.state = T4, this._emitChars("-")) : e === V.LESS_THAN_SIGN ? this.state = E9 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.state = Ka, this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? (this._err(Ee.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Ka, this._emitCodePoint(e));
  }
  // Script data escaped dash dash state
  //------------------------------------------------------------------
  [T4](e) {
    e === V.HYPHEN_MINUS ? this._emitChars("-") : e === V.LESS_THAN_SIGN ? this.state = E9 : e === V.GREATER_THAN_SIGN ? (this.state = eu, this._emitChars(">")) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.state = Ka, this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? (this._err(Ee.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Ka, this._emitCodePoint(e));
  }
  // Script data escaped less-than sign state
  //------------------------------------------------------------------
  [E9](e) {
    e === V.SOLIDUS ? (this.tempBuff = [], this.state = F6) : cc(e) ? (this.tempBuff = [], this._emitChars("<"), this._reconsumeInState(U6)) : (this._emitChars("<"), this._reconsumeInState(Ka));
  }
  // Script data escaped end tag open state
  //------------------------------------------------------------------
  [F6](e) {
    cc(e) ? (this._createEndTagToken(), this._reconsumeInState(B6)) : (this._emitChars("</"), this._reconsumeInState(Ka));
  }
  // Script data escaped end tag name state
  //------------------------------------------------------------------
  [B6](e) {
    if (Qa(e))
      this.currentToken.tagName += ac(e), this.tempBuff.push(e);
    else if (Z1(e))
      this.currentToken.tagName += tr(e), this.tempBuff.push(e);
    else {
      if (this.lastStartTagName === this.currentToken.tagName) {
        if (Un(e)) {
          this.state = tl;
          return;
        }
        if (e === V.SOLIDUS) {
          this.state = ic;
          return;
        }
        if (e === V.GREATER_THAN_SIGN) {
          this._emitCurrentToken(), this.state = Zt;
          return;
        }
      }
      this._emitChars("</"), this._emitSeveralCodePoints(this.tempBuff), this._reconsumeInState(Ka);
    }
  }
  // Script data double escape start state
  //------------------------------------------------------------------
  [U6](e) {
    Un(e) || e === V.SOLIDUS || e === V.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? Kl : Ka, this._emitCodePoint(e)) : Qa(e) ? (this.tempBuff.push($9(e)), this._emitCodePoint(e)) : Z1(e) ? (this.tempBuff.push(e), this._emitCodePoint(e)) : this._reconsumeInState(Ka);
  }
  // Script data double escaped state
  //------------------------------------------------------------------
  [Kl](e) {
    e === V.HYPHEN_MINUS ? (this.state = H6, this._emitChars("-")) : e === V.LESS_THAN_SIGN ? (this.state = T9, this._emitChars("<")) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? (this._err(Ee.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : this._emitCodePoint(e);
  }
  // Script data double escaped dash state
  //------------------------------------------------------------------
  [H6](e) {
    e === V.HYPHEN_MINUS ? (this.state = z6, this._emitChars("-")) : e === V.LESS_THAN_SIGN ? (this.state = T9, this._emitChars("<")) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.state = Kl, this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? (this._err(Ee.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Kl, this._emitCodePoint(e));
  }
  // Script data double escaped dash dash state
  //------------------------------------------------------------------
  [z6](e) {
    e === V.HYPHEN_MINUS ? this._emitChars("-") : e === V.LESS_THAN_SIGN ? (this.state = T9, this._emitChars("<")) : e === V.GREATER_THAN_SIGN ? (this.state = eu, this._emitChars(">")) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.state = Kl, this._emitChars(An.REPLACEMENT_CHARACTER)) : e === V.EOF ? (this._err(Ee.eofInScriptHtmlCommentLikeText), this._emitEOFToken()) : (this.state = Kl, this._emitCodePoint(e));
  }
  // Script data double escaped less-than sign state
  //------------------------------------------------------------------
  [T9](e) {
    e === V.SOLIDUS ? (this.tempBuff = [], this.state = q6, this._emitChars("/")) : this._reconsumeInState(Kl);
  }
  // Script data double escape end state
  //------------------------------------------------------------------
  [q6](e) {
    Un(e) || e === V.SOLIDUS || e === V.GREATER_THAN_SIGN ? (this.state = this._isTempBufferEqualToScriptString() ? Ka : Kl, this._emitCodePoint(e)) : Qa(e) ? (this.tempBuff.push($9(e)), this._emitCodePoint(e)) : Z1(e) ? (this.tempBuff.push(e), this._emitCodePoint(e)) : this._reconsumeInState(Kl);
  }
  // Before attribute name state
  //------------------------------------------------------------------
  [tl](e) {
    Un(e) || (e === V.SOLIDUS || e === V.GREATER_THAN_SIGN || e === V.EOF ? this._reconsumeInState(C4) : e === V.EQUALS_SIGN ? (this._err(Ee.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = C9) : (this._createAttr(""), this._reconsumeInState(C9)));
  }
  // Attribute name state
  //------------------------------------------------------------------
  [C9](e) {
    Un(e) || e === V.SOLIDUS || e === V.GREATER_THAN_SIGN || e === V.EOF ? (this._leaveAttrName(C4), this._unconsume()) : e === V.EQUALS_SIGN ? this._leaveAttrName(S4) : Qa(e) ? this.currentAttr.name += ac(e) : e === V.QUOTATION_MARK || e === V.APOSTROPHE || e === V.LESS_THAN_SIGN ? (this._err(Ee.unexpectedCharacterInAttributeName), this.currentAttr.name += tr(e)) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentAttr.name += An.REPLACEMENT_CHARACTER) : this.currentAttr.name += tr(e);
  }
  // After attribute name state
  //------------------------------------------------------------------
  [C4](e) {
    Un(e) || (e === V.SOLIDUS ? this.state = ic : e === V.EQUALS_SIGN ? this.state = S4 : e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : (this._createAttr(""), this._reconsumeInState(C9)));
  }
  // Before attribute value state
  //------------------------------------------------------------------
  [S4](e) {
    Un(e) || (e === V.QUOTATION_MARK ? this.state = S9 : e === V.APOSTROPHE ? this.state = b9 : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingAttributeValue), this.state = Zt, this._emitCurrentToken()) : this._reconsumeInState(A9));
  }
  // Attribute value (double-quoted) state
  //------------------------------------------------------------------
  [S9](e) {
    e === V.QUOTATION_MARK ? this.state = b4 : e === V.AMPERSAND ? (this.returnState = S9, this.state = $d) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentAttr.value += An.REPLACEMENT_CHARACTER) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : this.currentAttr.value += tr(e);
  }
  // Attribute value (single-quoted) state
  //------------------------------------------------------------------
  [b9](e) {
    e === V.APOSTROPHE ? this.state = b4 : e === V.AMPERSAND ? (this.returnState = b9, this.state = $d) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentAttr.value += An.REPLACEMENT_CHARACTER) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : this.currentAttr.value += tr(e);
  }
  // Attribute value (unquoted) state
  //------------------------------------------------------------------
  [A9](e) {
    Un(e) ? this._leaveAttrValue(tl) : e === V.AMPERSAND ? (this.returnState = A9, this.state = $d) : e === V.GREATER_THAN_SIGN ? (this._leaveAttrValue(Zt), this._emitCurrentToken()) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentAttr.value += An.REPLACEMENT_CHARACTER) : e === V.QUOTATION_MARK || e === V.APOSTROPHE || e === V.LESS_THAN_SIGN || e === V.EQUALS_SIGN || e === V.GRAVE_ACCENT ? (this._err(Ee.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += tr(e)) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : this.currentAttr.value += tr(e);
  }
  // After attribute value (quoted) state
  //------------------------------------------------------------------
  [b4](e) {
    Un(e) ? this._leaveAttrValue(tl) : e === V.SOLIDUS ? this._leaveAttrValue(ic) : e === V.GREATER_THAN_SIGN ? (this._leaveAttrValue(Zt), this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : (this._err(Ee.missingWhitespaceBetweenAttributes), this._reconsumeInState(tl));
  }
  // Self-closing start tag state
  //------------------------------------------------------------------
  [ic](e) {
    e === V.GREATER_THAN_SIGN ? (this.currentToken.selfClosing = !0, this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInTag), this._emitEOFToken()) : (this._err(Ee.unexpectedSolidusInTag), this._reconsumeInState(tl));
  }
  // Bogus comment state
  //------------------------------------------------------------------
  [Dm](e) {
    e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._emitCurrentToken(), this._emitEOFToken()) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.data += An.REPLACEMENT_CHARACTER) : this.currentToken.data += tr(e);
  }
  // Markup declaration open state
  //------------------------------------------------------------------
  [j6](e) {
    this._consumeSequenceIfMatch(Q1.DASH_DASH_STRING, e, !0) ? (this._createCommentToken(), this.state = V6) : this._consumeSequenceIfMatch(Q1.DOCTYPE_STRING, e, !1) ? this.state = X6 : this._consumeSequenceIfMatch(Q1.CDATA_START_STRING, e, !0) ? this.allowCDATA ? this.state = w9 : (this._err(Ee.cdataInHtmlContent), this._createCommentToken(), this.currentToken.data = "[CDATA[", this.state = Dm) : this._ensureHibernation() || (this._err(Ee.incorrectlyOpenedComment), this._createCommentToken(), this._reconsumeInState(Dm));
  }
  // Comment start state
  //------------------------------------------------------------------
  [V6](e) {
    e === V.HYPHEN_MINUS ? this.state = $6 : e === V.GREATER_THAN_SIGN ? (this._err(Ee.abruptClosingOfEmptyComment), this.state = Zt, this._emitCurrentToken()) : this._reconsumeInState(oc);
  }
  // Comment start dash state
  //------------------------------------------------------------------
  [$6](e) {
    e === V.HYPHEN_MINUS ? this.state = _9 : e === V.GREATER_THAN_SIGN ? (this._err(Ee.abruptClosingOfEmptyComment), this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(oc));
  }
  // Comment state
  //------------------------------------------------------------------
  [oc](e) {
    e === V.HYPHEN_MINUS ? this.state = x9 : e === V.LESS_THAN_SIGN ? (this.currentToken.data += "<", this.state = G6) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.data += An.REPLACEMENT_CHARACTER) : e === V.EOF ? (this._err(Ee.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.data += tr(e);
  }
  // Comment less-than sign state
  //------------------------------------------------------------------
  [G6](e) {
    e === V.EXCLAMATION_MARK ? (this.currentToken.data += "!", this.state = W6) : e === V.LESS_THAN_SIGN ? this.currentToken.data += "!" : this._reconsumeInState(oc);
  }
  // Comment less-than sign bang state
  //------------------------------------------------------------------
  [W6](e) {
    e === V.HYPHEN_MINUS ? this.state = K6 : this._reconsumeInState(oc);
  }
  // Comment less-than sign bang dash state
  //------------------------------------------------------------------
  [K6](e) {
    e === V.HYPHEN_MINUS ? this.state = Y6 : this._reconsumeInState(x9);
  }
  // Comment less-than sign bang dash dash state
  //------------------------------------------------------------------
  [Y6](e) {
    e !== V.GREATER_THAN_SIGN && e !== V.EOF && this._err(Ee.nestedComment), this._reconsumeInState(_9);
  }
  // Comment end dash state
  //------------------------------------------------------------------
  [x9](e) {
    e === V.HYPHEN_MINUS ? this.state = _9 : e === V.EOF ? (this._err(Ee.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "-", this._reconsumeInState(oc));
  }
  // Comment end state
  //------------------------------------------------------------------
  [_9](e) {
    e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : e === V.EXCLAMATION_MARK ? this.state = Q6 : e === V.HYPHEN_MINUS ? this.currentToken.data += "-" : e === V.EOF ? (this._err(Ee.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--", this._reconsumeInState(oc));
  }
  // Comment end bang state
  //------------------------------------------------------------------
  [Q6](e) {
    e === V.HYPHEN_MINUS ? (this.currentToken.data += "--!", this.state = x9) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.incorrectlyClosedComment), this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInComment), this._emitCurrentToken(), this._emitEOFToken()) : (this.currentToken.data += "--!", this._reconsumeInState(oc));
  }
  // DOCTYPE state
  //------------------------------------------------------------------
  [X6](e) {
    Un(e) ? this.state = k9 : e === V.GREATER_THAN_SIGN ? this._reconsumeInState(k9) : e === V.EOF ? (this._err(Ee.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingWhitespaceBeforeDoctypeName), this._reconsumeInState(k9));
  }
  // Before DOCTYPE name state
  //------------------------------------------------------------------
  [k9](e) {
    Un(e) || (Qa(e) ? (this._createDoctypeToken(ac(e)), this.state = N9) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this._createDoctypeToken(An.REPLACEMENT_CHARACTER), this.state = N9) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingDoctypeName), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofInDoctype), this._createDoctypeToken(null), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._createDoctypeToken(tr(e)), this.state = N9));
  }
  // DOCTYPE name state
  //------------------------------------------------------------------
  [N9](e) {
    Un(e) ? this.state = J6 : e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : Qa(e) ? this.currentToken.name += ac(e) : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.name += An.REPLACEMENT_CHARACTER) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.name += tr(e);
  }
  // After DOCTYPE name state
  //------------------------------------------------------------------
  [J6](e) {
    Un(e) || (e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this._consumeSequenceIfMatch(Q1.PUBLIC_STRING, e, !1) ? this.state = Z6 : this._consumeSequenceIfMatch(Q1.SYSTEM_STRING, e, !1) ? this.state = n_ : this._ensureHibernation() || (this._err(Ee.invalidCharacterSequenceAfterDoctypeName), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl)));
  }
  // After DOCTYPE public keyword state
  //------------------------------------------------------------------
  [Z6](e) {
    Un(e) ? this.state = e_ : e === V.QUOTATION_MARK ? (this._err(Ee.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = A4) : e === V.APOSTROPHE ? (this._err(Ee.missingWhitespaceAfterDoctypePublicKeyword), this.currentToken.publicId = "", this.state = x4) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl));
  }
  // Before DOCTYPE public identifier state
  //------------------------------------------------------------------
  [e_](e) {
    Un(e) || (e === V.QUOTATION_MARK ? (this.currentToken.publicId = "", this.state = A4) : e === V.APOSTROPHE ? (this.currentToken.publicId = "", this.state = x4) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingQuoteBeforeDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl)));
  }
  // DOCTYPE public identifier (double-quoted) state
  //------------------------------------------------------------------
  [A4](e) {
    e === V.QUOTATION_MARK ? this.state = _4 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.publicId += An.REPLACEMENT_CHARACTER) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += tr(e);
  }
  // DOCTYPE public identifier (single-quoted) state
  //------------------------------------------------------------------
  [x4](e) {
    e === V.APOSTROPHE ? this.state = _4 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.publicId += An.REPLACEMENT_CHARACTER) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.abruptDoctypePublicIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.publicId += tr(e);
  }
  // After DOCTYPE public identifier state
  //------------------------------------------------------------------
  [_4](e) {
    Un(e) ? this.state = t_ : e === V.GREATER_THAN_SIGN ? (this.state = Zt, this._emitCurrentToken()) : e === V.QUOTATION_MARK ? (this._err(Ee.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = Mm) : e === V.APOSTROPHE ? (this._err(Ee.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), this.currentToken.systemId = "", this.state = Lm) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl));
  }
  // Between DOCTYPE public and system identifiers state
  //------------------------------------------------------------------
  [t_](e) {
    Un(e) || (e === V.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = Zt) : e === V.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = Mm) : e === V.APOSTROPHE ? (this.currentToken.systemId = "", this.state = Lm) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl)));
  }
  // After DOCTYPE system keyword state
  //------------------------------------------------------------------
  [n_](e) {
    Un(e) ? this.state = r_ : e === V.QUOTATION_MARK ? (this._err(Ee.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = Mm) : e === V.APOSTROPHE ? (this._err(Ee.missingWhitespaceAfterDoctypeSystemKeyword), this.currentToken.systemId = "", this.state = Lm) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl));
  }
  // Before DOCTYPE system identifier state
  //------------------------------------------------------------------
  [r_](e) {
    Un(e) || (e === V.QUOTATION_MARK ? (this.currentToken.systemId = "", this.state = Mm) : e === V.APOSTROPHE ? (this.currentToken.systemId = "", this.state = Lm) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.missingDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this.state = Zt, this._emitCurrentToken()) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.missingQuoteBeforeDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._reconsumeInState(Yl)));
  }
  // DOCTYPE system identifier (double-quoted) state
  //------------------------------------------------------------------
  [Mm](e) {
    e === V.QUOTATION_MARK ? this.state = k4 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.systemId += An.REPLACEMENT_CHARACTER) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += tr(e);
  }
  // DOCTYPE system identifier (single-quoted) state
  //------------------------------------------------------------------
  [Lm](e) {
    e === V.APOSTROPHE ? this.state = k4 : e === V.NULL ? (this._err(Ee.unexpectedNullCharacter), this.currentToken.systemId += An.REPLACEMENT_CHARACTER) : e === V.GREATER_THAN_SIGN ? (this._err(Ee.abruptDoctypeSystemIdentifier), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : this.currentToken.systemId += tr(e);
  }
  // After DOCTYPE system identifier state
  //------------------------------------------------------------------
  [k4](e) {
    Un(e) || (e === V.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = Zt) : e === V.EOF ? (this._err(Ee.eofInDoctype), this.currentToken.forceQuirks = !0, this._emitCurrentToken(), this._emitEOFToken()) : (this._err(Ee.unexpectedCharacterAfterDoctypeSystemIdentifier), this._reconsumeInState(Yl)));
  }
  // Bogus DOCTYPE state
  //------------------------------------------------------------------
  [Yl](e) {
    e === V.GREATER_THAN_SIGN ? (this._emitCurrentToken(), this.state = Zt) : e === V.NULL ? this._err(Ee.unexpectedNullCharacter) : e === V.EOF && (this._emitCurrentToken(), this._emitEOFToken());
  }
  // CDATA section state
  //------------------------------------------------------------------
  [w9](e) {
    e === V.RIGHT_SQUARE_BRACKET ? this.state = i_ : e === V.EOF ? (this._err(Ee.eofInCdata), this._emitEOFToken()) : this._emitCodePoint(e);
  }
  // CDATA section bracket state
  //------------------------------------------------------------------
  [i_](e) {
    e === V.RIGHT_SQUARE_BRACKET ? this.state = o_ : (this._emitChars("]"), this._reconsumeInState(w9));
  }
  // CDATA section end state
  //------------------------------------------------------------------
  [o_](e) {
    e === V.GREATER_THAN_SIGN ? this.state = Zt : e === V.RIGHT_SQUARE_BRACKET ? this._emitChars("]") : (this._emitChars("]]"), this._reconsumeInState(w9));
  }
  // Character reference state
  //------------------------------------------------------------------
  [$d](e) {
    this.tempBuff = [V.AMPERSAND], e === V.NUMBER_SIGN ? (this.tempBuff.push(e), this.state = l_) : N4(e) ? this._reconsumeInState(a_) : (this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
  }
  // Named character reference state
  //------------------------------------------------------------------
  [a_](e) {
    const n = this._matchNamedCharacterReference(e);
    if (this._ensureHibernation())
      this.tempBuff = [V.AMPERSAND];
    else if (n) {
      const r = this.tempBuff[this.tempBuff.length - 1] === V.SEMICOLON;
      this._isCharacterReferenceAttributeQuirk(r) || (r || this._errOnNextCodePoint(Ee.missingSemicolonAfterCharacterReference), this.tempBuff = n), this._flushCodePointsConsumedAsCharacterReference(), this.state = this.returnState;
    } else
      this._flushCodePointsConsumedAsCharacterReference(), this.state = s_;
  }
  // Ambiguos ampersand state
  //------------------------------------------------------------------
  [s_](e) {
    N4(e) ? this._isCharacterReferenceInAttribute() ? this.currentAttr.value += tr(e) : this._emitCodePoint(e) : (e === V.SEMICOLON && this._err(Ee.unknownNamedCharacterReference), this._reconsumeInState(this.returnState));
  }
  // Numeric character reference state
  //------------------------------------------------------------------
  [l_](e) {
    this.charRefCode = 0, e === V.LATIN_SMALL_X || e === V.LATIN_CAPITAL_X ? (this.tempBuff.push(e), this.state = u_) : this._reconsumeInState(c_);
  }
  // Hexademical character reference start state
  //------------------------------------------------------------------
  [u_](e) {
    Ej(e) ? this._reconsumeInState(f_) : (this._err(Ee.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
  }
  // Decimal character reference start state
  //------------------------------------------------------------------
  [c_](e) {
    e0(e) ? this._reconsumeInState(d_) : (this._err(Ee.absenceOfDigitsInNumericCharacterReference), this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState));
  }
  // Hexademical character reference state
  //------------------------------------------------------------------
  [f_](e) {
    aw(e) ? this.charRefCode = this.charRefCode * 16 + e - 55 : sw(e) ? this.charRefCode = this.charRefCode * 16 + e - 87 : e0(e) ? this.charRefCode = this.charRefCode * 16 + e - 48 : e === V.SEMICOLON ? this.state = Im : (this._err(Ee.missingSemicolonAfterCharacterReference), this._reconsumeInState(Im));
  }
  // Decimal character reference state
  //------------------------------------------------------------------
  [d_](e) {
    e0(e) ? this.charRefCode = this.charRefCode * 10 + e - 48 : e === V.SEMICOLON ? this.state = Im : (this._err(Ee.missingSemicolonAfterCharacterReference), this._reconsumeInState(Im));
  }
  // Numeric character reference end state
  //------------------------------------------------------------------
  [Im]() {
    if (this.charRefCode === V.NULL)
      this._err(Ee.nullCharacterReference), this.charRefCode = V.REPLACEMENT_CHARACTER;
    else if (this.charRefCode > 1114111)
      this._err(Ee.characterReferenceOutsideUnicodeRange), this.charRefCode = V.REPLACEMENT_CHARACTER;
    else if (An.isSurrogate(this.charRefCode))
      this._err(Ee.surrogateCharacterReference), this.charRefCode = V.REPLACEMENT_CHARACTER;
    else if (An.isUndefinedCodePoint(this.charRefCode))
      this._err(Ee.noncharacterCharacterReference);
    else if (An.isControlCodePoint(this.charRefCode) || this.charRefCode === V.CARRIAGE_RETURN) {
      this._err(Ee.controlCharacterReference);
      const e = yj[this.charRefCode];
      e && (this.charRefCode = e);
    }
    this.tempBuff = [this.charRefCode], this._flushCodePointsConsumedAsCharacterReference(), this._reconsumeInState(this.returnState);
  }
};
ba.CHARACTER_TOKEN = "CHARACTER_TOKEN";
ba.NULL_CHARACTER_TOKEN = "NULL_CHARACTER_TOKEN";
ba.WHITESPACE_CHARACTER_TOKEN = "WHITESPACE_CHARACTER_TOKEN";
ba.START_TAG_TOKEN = "START_TAG_TOKEN";
ba.END_TAG_TOKEN = "END_TAG_TOKEN";
ba.COMMENT_TOKEN = "COMMENT_TOKEN";
ba.DOCTYPE_TOKEN = "DOCTYPE_TOKEN";
ba.EOF_TOKEN = "EOF_TOKEN";
ba.HIBERNATION_TOKEN = "HIBERNATION_TOKEN";
ba.MODE = {
  DATA: Zt,
  RCDATA: eh,
  RAWTEXT: Vm,
  SCRIPT_DATA: eu,
  PLAINTEXT: ow
};
ba.getTokenAttr = function(t, e) {
  for (let n = t.attrs.length - 1; n >= 0; n--)
    if (t.attrs[n].name === e)
      return t.attrs[n].value;
  return null;
};
var iv = ba, ls = {};
const w4 = ls.NAMESPACES = {
  HTML: "http://www.w3.org/1999/xhtml",
  MATHML: "http://www.w3.org/1998/Math/MathML",
  SVG: "http://www.w3.org/2000/svg",
  XLINK: "http://www.w3.org/1999/xlink",
  XML: "http://www.w3.org/XML/1998/namespace",
  XMLNS: "http://www.w3.org/2000/xmlns/"
};
ls.ATTRS = {
  TYPE: "type",
  ACTION: "action",
  ENCODING: "encoding",
  PROMPT: "prompt",
  NAME: "name",
  COLOR: "color",
  FACE: "face",
  SIZE: "size"
};
ls.DOCUMENT_MODE = {
  NO_QUIRKS: "no-quirks",
  QUIRKS: "quirks",
  LIMITED_QUIRKS: "limited-quirks"
};
const Le = ls.TAG_NAMES = {
  A: "a",
  ADDRESS: "address",
  ANNOTATION_XML: "annotation-xml",
  APPLET: "applet",
  AREA: "area",
  ARTICLE: "article",
  ASIDE: "aside",
  B: "b",
  BASE: "base",
  BASEFONT: "basefont",
  BGSOUND: "bgsound",
  BIG: "big",
  BLOCKQUOTE: "blockquote",
  BODY: "body",
  BR: "br",
  BUTTON: "button",
  CAPTION: "caption",
  CENTER: "center",
  CODE: "code",
  COL: "col",
  COLGROUP: "colgroup",
  DD: "dd",
  DESC: "desc",
  DETAILS: "details",
  DIALOG: "dialog",
  DIR: "dir",
  DIV: "div",
  DL: "dl",
  DT: "dt",
  EM: "em",
  EMBED: "embed",
  FIELDSET: "fieldset",
  FIGCAPTION: "figcaption",
  FIGURE: "figure",
  FONT: "font",
  FOOTER: "footer",
  FOREIGN_OBJECT: "foreignObject",
  FORM: "form",
  FRAME: "frame",
  FRAMESET: "frameset",
  H1: "h1",
  H2: "h2",
  H3: "h3",
  H4: "h4",
  H5: "h5",
  H6: "h6",
  HEAD: "head",
  HEADER: "header",
  HGROUP: "hgroup",
  HR: "hr",
  HTML: "html",
  I: "i",
  IMG: "img",
  IMAGE: "image",
  INPUT: "input",
  IFRAME: "iframe",
  KEYGEN: "keygen",
  LABEL: "label",
  LI: "li",
  LINK: "link",
  LISTING: "listing",
  MAIN: "main",
  MALIGNMARK: "malignmark",
  MARQUEE: "marquee",
  MATH: "math",
  MENU: "menu",
  META: "meta",
  MGLYPH: "mglyph",
  MI: "mi",
  MO: "mo",
  MN: "mn",
  MS: "ms",
  MTEXT: "mtext",
  NAV: "nav",
  NOBR: "nobr",
  NOFRAMES: "noframes",
  NOEMBED: "noembed",
  NOSCRIPT: "noscript",
  OBJECT: "object",
  OL: "ol",
  OPTGROUP: "optgroup",
  OPTION: "option",
  P: "p",
  PARAM: "param",
  PLAINTEXT: "plaintext",
  PRE: "pre",
  RB: "rb",
  RP: "rp",
  RT: "rt",
  RTC: "rtc",
  RUBY: "ruby",
  S: "s",
  SCRIPT: "script",
  SECTION: "section",
  SELECT: "select",
  SOURCE: "source",
  SMALL: "small",
  SPAN: "span",
  STRIKE: "strike",
  STRONG: "strong",
  STYLE: "style",
  SUB: "sub",
  SUMMARY: "summary",
  SUP: "sup",
  TABLE: "table",
  TBODY: "tbody",
  TEMPLATE: "template",
  TEXTAREA: "textarea",
  TFOOT: "tfoot",
  TD: "td",
  TH: "th",
  THEAD: "thead",
  TITLE: "title",
  TR: "tr",
  TRACK: "track",
  TT: "tt",
  U: "u",
  UL: "ul",
  SVG: "svg",
  VAR: "var",
  WBR: "wbr",
  XMP: "xmp"
};
ls.SPECIAL_ELEMENTS = {
  [w4.HTML]: {
    [Le.ADDRESS]: !0,
    [Le.APPLET]: !0,
    [Le.AREA]: !0,
    [Le.ARTICLE]: !0,
    [Le.ASIDE]: !0,
    [Le.BASE]: !0,
    [Le.BASEFONT]: !0,
    [Le.BGSOUND]: !0,
    [Le.BLOCKQUOTE]: !0,
    [Le.BODY]: !0,
    [Le.BR]: !0,
    [Le.BUTTON]: !0,
    [Le.CAPTION]: !0,
    [Le.CENTER]: !0,
    [Le.COL]: !0,
    [Le.COLGROUP]: !0,
    [Le.DD]: !0,
    [Le.DETAILS]: !0,
    [Le.DIR]: !0,
    [Le.DIV]: !0,
    [Le.DL]: !0,
    [Le.DT]: !0,
    [Le.EMBED]: !0,
    [Le.FIELDSET]: !0,
    [Le.FIGCAPTION]: !0,
    [Le.FIGURE]: !0,
    [Le.FOOTER]: !0,
    [Le.FORM]: !0,
    [Le.FRAME]: !0,
    [Le.FRAMESET]: !0,
    [Le.H1]: !0,
    [Le.H2]: !0,
    [Le.H3]: !0,
    [Le.H4]: !0,
    [Le.H5]: !0,
    [Le.H6]: !0,
    [Le.HEAD]: !0,
    [Le.HEADER]: !0,
    [Le.HGROUP]: !0,
    [Le.HR]: !0,
    [Le.HTML]: !0,
    [Le.IFRAME]: !0,
    [Le.IMG]: !0,
    [Le.INPUT]: !0,
    [Le.LI]: !0,
    [Le.LINK]: !0,
    [Le.LISTING]: !0,
    [Le.MAIN]: !0,
    [Le.MARQUEE]: !0,
    [Le.MENU]: !0,
    [Le.META]: !0,
    [Le.NAV]: !0,
    [Le.NOEMBED]: !0,
    [Le.NOFRAMES]: !0,
    [Le.NOSCRIPT]: !0,
    [Le.OBJECT]: !0,
    [Le.OL]: !0,
    [Le.P]: !0,
    [Le.PARAM]: !0,
    [Le.PLAINTEXT]: !0,
    [Le.PRE]: !0,
    [Le.SCRIPT]: !0,
    [Le.SECTION]: !0,
    [Le.SELECT]: !0,
    [Le.SOURCE]: !0,
    [Le.STYLE]: !0,
    [Le.SUMMARY]: !0,
    [Le.TABLE]: !0,
    [Le.TBODY]: !0,
    [Le.TD]: !0,
    [Le.TEMPLATE]: !0,
    [Le.TEXTAREA]: !0,
    [Le.TFOOT]: !0,
    [Le.TH]: !0,
    [Le.THEAD]: !0,
    [Le.TITLE]: !0,
    [Le.TR]: !0,
    [Le.TRACK]: !0,
    [Le.UL]: !0,
    [Le.WBR]: !0,
    [Le.XMP]: !0
  },
  [w4.MATHML]: {
    [Le.MI]: !0,
    [Le.MO]: !0,
    [Le.MN]: !0,
    [Le.MS]: !0,
    [Le.MTEXT]: !0,
    [Le.ANNOTATION_XML]: !0
  },
  [w4.SVG]: {
    [Le.TITLE]: !0,
    [Le.FOREIGN_OBJECT]: !0,
    [Le.DESC]: !0
  }
};
const lw = ls, Fe = lw.TAG_NAMES, xn = lw.NAMESPACES;
function p_(t) {
  switch (t.length) {
    case 1:
      return t === Fe.P;
    case 2:
      return t === Fe.RB || t === Fe.RP || t === Fe.RT || t === Fe.DD || t === Fe.DT || t === Fe.LI;
    case 3:
      return t === Fe.RTC;
    case 6:
      return t === Fe.OPTION;
    case 8:
      return t === Fe.OPTGROUP;
  }
  return !1;
}
function Tj(t) {
  switch (t.length) {
    case 1:
      return t === Fe.P;
    case 2:
      return t === Fe.RB || t === Fe.RP || t === Fe.RT || t === Fe.DD || t === Fe.DT || t === Fe.LI || t === Fe.TD || t === Fe.TH || t === Fe.TR;
    case 3:
      return t === Fe.RTC;
    case 5:
      return t === Fe.TBODY || t === Fe.TFOOT || t === Fe.THEAD;
    case 6:
      return t === Fe.OPTION;
    case 7:
      return t === Fe.CAPTION;
    case 8:
      return t === Fe.OPTGROUP || t === Fe.COLGROUP;
  }
  return !1;
}
function O9(t, e) {
  switch (t.length) {
    case 2:
      if (t === Fe.TD || t === Fe.TH)
        return e === xn.HTML;
      if (t === Fe.MI || t === Fe.MO || t === Fe.MN || t === Fe.MS)
        return e === xn.MATHML;
      break;
    case 4:
      if (t === Fe.HTML)
        return e === xn.HTML;
      if (t === Fe.DESC)
        return e === xn.SVG;
      break;
    case 5:
      if (t === Fe.TABLE)
        return e === xn.HTML;
      if (t === Fe.MTEXT)
        return e === xn.MATHML;
      if (t === Fe.TITLE)
        return e === xn.SVG;
      break;
    case 6:
      return (t === Fe.APPLET || t === Fe.OBJECT) && e === xn.HTML;
    case 7:
      return (t === Fe.CAPTION || t === Fe.MARQUEE) && e === xn.HTML;
    case 8:
      return t === Fe.TEMPLATE && e === xn.HTML;
    case 13:
      return t === Fe.FOREIGN_OBJECT && e === xn.SVG;
    case 14:
      return t === Fe.ANNOTATION_XML && e === xn.MATHML;
  }
  return !1;
}
let Cj = class {
  constructor(e, n) {
    this.stackTop = -1, this.items = [], this.current = e, this.currentTagName = null, this.currentTmplContent = null, this.tmplCount = 0, this.treeAdapter = n;
  }
  //Index of element
  _indexOf(e) {
    let n = -1;
    for (let r = this.stackTop; r >= 0; r--)
      if (this.items[r] === e) {
        n = r;
        break;
      }
    return n;
  }
  //Update current element
  _isInTemplate() {
    return this.currentTagName === Fe.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === xn.HTML;
  }
  _updateCurrentElement() {
    this.current = this.items[this.stackTop], this.currentTagName = this.current && this.treeAdapter.getTagName(this.current), this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
  }
  //Mutations
  push(e) {
    this.items[++this.stackTop] = e, this._updateCurrentElement(), this._isInTemplate() && this.tmplCount++;
  }
  pop() {
    this.stackTop--, this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this._updateCurrentElement();
  }
  replace(e, n) {
    const r = this._indexOf(e);
    this.items[r] = n, r === this.stackTop && this._updateCurrentElement();
  }
  insertAfter(e, n) {
    const r = this._indexOf(e) + 1;
    this.items.splice(r, 0, n), r === ++this.stackTop && this._updateCurrentElement();
  }
  popUntilTagNamePopped(e) {
    for (; this.stackTop > -1; ) {
      const n = this.currentTagName, r = this.treeAdapter.getNamespaceURI(this.current);
      if (this.pop(), n === e && r === xn.HTML)
        break;
    }
  }
  popUntilElementPopped(e) {
    for (; this.stackTop > -1; ) {
      const n = this.current;
      if (this.pop(), n === e)
        break;
    }
  }
  popUntilNumberedHeaderPopped() {
    for (; this.stackTop > -1; ) {
      const e = this.currentTagName, n = this.treeAdapter.getNamespaceURI(this.current);
      if (this.pop(), e === Fe.H1 || e === Fe.H2 || e === Fe.H3 || e === Fe.H4 || e === Fe.H5 || e === Fe.H6 && n === xn.HTML)
        break;
    }
  }
  popUntilTableCellPopped() {
    for (; this.stackTop > -1; ) {
      const e = this.currentTagName, n = this.treeAdapter.getNamespaceURI(this.current);
      if (this.pop(), e === Fe.TD || e === Fe.TH && n === xn.HTML)
        break;
    }
  }
  popAllUpToHtmlElement() {
    this.stackTop = 0, this._updateCurrentElement();
  }
  clearBackToTableContext() {
    for (; this.currentTagName !== Fe.TABLE && this.currentTagName !== Fe.TEMPLATE && this.currentTagName !== Fe.HTML || this.treeAdapter.getNamespaceURI(this.current) !== xn.HTML; )
      this.pop();
  }
  clearBackToTableBodyContext() {
    for (; this.currentTagName !== Fe.TBODY && this.currentTagName !== Fe.TFOOT && this.currentTagName !== Fe.THEAD && this.currentTagName !== Fe.TEMPLATE && this.currentTagName !== Fe.HTML || this.treeAdapter.getNamespaceURI(this.current) !== xn.HTML; )
      this.pop();
  }
  clearBackToTableRowContext() {
    for (; this.currentTagName !== Fe.TR && this.currentTagName !== Fe.TEMPLATE && this.currentTagName !== Fe.HTML || this.treeAdapter.getNamespaceURI(this.current) !== xn.HTML; )
      this.pop();
  }
  remove(e) {
    for (let n = this.stackTop; n >= 0; n--)
      if (this.items[n] === e) {
        this.items.splice(n, 1), this.stackTop--, this._updateCurrentElement();
        break;
      }
  }
  //Search
  tryPeekProperlyNestedBodyElement() {
    const e = this.items[1];
    return e && this.treeAdapter.getTagName(e) === Fe.BODY ? e : null;
  }
  contains(e) {
    return this._indexOf(e) > -1;
  }
  getCommonAncestor(e) {
    let n = this._indexOf(e);
    return --n >= 0 ? this.items[n] : null;
  }
  isRootHtmlElementCurrent() {
    return this.stackTop === 0 && this.currentTagName === Fe.HTML;
  }
  //Element in scope
  hasInScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const r = this.treeAdapter.getTagName(this.items[n]), i = this.treeAdapter.getNamespaceURI(this.items[n]);
      if (r === e && i === xn.HTML)
        return !0;
      if (O9(r, i))
        return !1;
    }
    return !0;
  }
  hasNumberedHeaderInScope() {
    for (let e = this.stackTop; e >= 0; e--) {
      const n = this.treeAdapter.getTagName(this.items[e]), r = this.treeAdapter.getNamespaceURI(this.items[e]);
      if ((n === Fe.H1 || n === Fe.H2 || n === Fe.H3 || n === Fe.H4 || n === Fe.H5 || n === Fe.H6) && r === xn.HTML)
        return !0;
      if (O9(n, r))
        return !1;
    }
    return !0;
  }
  hasInListItemScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const r = this.treeAdapter.getTagName(this.items[n]), i = this.treeAdapter.getNamespaceURI(this.items[n]);
      if (r === e && i === xn.HTML)
        return !0;
      if ((r === Fe.UL || r === Fe.OL) && i === xn.HTML || O9(r, i))
        return !1;
    }
    return !0;
  }
  hasInButtonScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const r = this.treeAdapter.getTagName(this.items[n]), i = this.treeAdapter.getNamespaceURI(this.items[n]);
      if (r === e && i === xn.HTML)
        return !0;
      if (r === Fe.BUTTON && i === xn.HTML || O9(r, i))
        return !1;
    }
    return !0;
  }
  hasInTableScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const r = this.treeAdapter.getTagName(this.items[n]);
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === xn.HTML) {
        if (r === e)
          return !0;
        if (r === Fe.TABLE || r === Fe.TEMPLATE || r === Fe.HTML)
          return !1;
      }
    }
    return !0;
  }
  hasTableBodyContextInTableScope() {
    for (let e = this.stackTop; e >= 0; e--) {
      const n = this.treeAdapter.getTagName(this.items[e]);
      if (this.treeAdapter.getNamespaceURI(this.items[e]) === xn.HTML) {
        if (n === Fe.TBODY || n === Fe.THEAD || n === Fe.TFOOT)
          return !0;
        if (n === Fe.TABLE || n === Fe.HTML)
          return !1;
      }
    }
    return !0;
  }
  hasInSelectScope(e) {
    for (let n = this.stackTop; n >= 0; n--) {
      const r = this.treeAdapter.getTagName(this.items[n]);
      if (this.treeAdapter.getNamespaceURI(this.items[n]) === xn.HTML) {
        if (r === e)
          return !0;
        if (r !== Fe.OPTION && r !== Fe.OPTGROUP)
          return !1;
      }
    }
    return !0;
  }
  //Implied end tags
  generateImpliedEndTags() {
    for (; p_(this.currentTagName); )
      this.pop();
  }
  generateImpliedEndTagsThoroughly() {
    for (; Tj(this.currentTagName); )
      this.pop();
  }
  generateImpliedEndTagsWithExclusion(e) {
    for (; p_(this.currentTagName) && this.currentTagName !== e; )
      this.pop();
  }
};
var Sj = Cj;
const R9 = 3;
let ES = class fc {
  constructor(e) {
    this.length = 0, this.entries = [], this.treeAdapter = e, this.bookmark = null;
  }
  //Noah Ark's condition
  //OPTIMIZATION: at first we try to find possible candidates for exclusion using
  //lightweight heuristics without thorough attributes check.
  _getNoahArkConditionCandidates(e) {
    const n = [];
    if (this.length >= R9) {
      const r = this.treeAdapter.getAttrList(e).length, i = this.treeAdapter.getTagName(e), s = this.treeAdapter.getNamespaceURI(e);
      for (let l = this.length - 1; l >= 0; l--) {
        const c = this.entries[l];
        if (c.type === fc.MARKER_ENTRY)
          break;
        const h = c.element, g = this.treeAdapter.getAttrList(h);
        this.treeAdapter.getTagName(h) === i && this.treeAdapter.getNamespaceURI(h) === s && g.length === r && n.push({ idx: l, attrs: g });
      }
    }
    return n.length < R9 ? [] : n;
  }
  _ensureNoahArkCondition(e) {
    const n = this._getNoahArkConditionCandidates(e);
    let r = n.length;
    if (r) {
      const i = this.treeAdapter.getAttrList(e), s = i.length, l = /* @__PURE__ */ Object.create(null);
      for (let c = 0; c < s; c++) {
        const h = i[c];
        l[h.name] = h.value;
      }
      for (let c = 0; c < s; c++)
        for (let h = 0; h < r; h++) {
          const g = n[h].attrs[c];
          if (l[g.name] !== g.value && (n.splice(h, 1), r--), n.length < R9)
            return;
        }
      for (let c = r - 1; c >= R9 - 1; c--)
        this.entries.splice(n[c].idx, 1), this.length--;
    }
  }
  //Mutations
  insertMarker() {
    this.entries.push({ type: fc.MARKER_ENTRY }), this.length++;
  }
  pushElement(e, n) {
    this._ensureNoahArkCondition(e), this.entries.push({
      type: fc.ELEMENT_ENTRY,
      element: e,
      token: n
    }), this.length++;
  }
  insertElementAfterBookmark(e, n) {
    let r = this.length - 1;
    for (; r >= 0 && this.entries[r] !== this.bookmark; r--)
      ;
    this.entries.splice(r + 1, 0, {
      type: fc.ELEMENT_ENTRY,
      element: e,
      token: n
    }), this.length++;
  }
  removeEntry(e) {
    for (let n = this.length - 1; n >= 0; n--)
      if (this.entries[n] === e) {
        this.entries.splice(n, 1), this.length--;
        break;
      }
  }
  clearToLastMarker() {
    for (; this.length; ) {
      const e = this.entries.pop();
      if (this.length--, e.type === fc.MARKER_ENTRY)
        break;
    }
  }
  //Search
  getElementEntryInScopeWithTagName(e) {
    for (let n = this.length - 1; n >= 0; n--) {
      const r = this.entries[n];
      if (r.type === fc.MARKER_ENTRY)
        return null;
      if (this.treeAdapter.getTagName(r.element) === e)
        return r;
    }
    return null;
  }
  getElementEntry(e) {
    for (let n = this.length - 1; n >= 0; n--) {
      const r = this.entries[n];
      if (r.type === fc.ELEMENT_ENTRY && r.element === e)
        return r;
    }
    return null;
  }
};
ES.MARKER_ENTRY = "MARKER_ENTRY";
ES.ELEMENT_ENTRY = "ELEMENT_ENTRY";
var bj = ES;
let uw = class {
  constructor(e) {
    const n = {}, r = this._getOverriddenMethods(this, n);
    for (const i of Object.keys(r))
      typeof r[i] == "function" && (n[i] = e[i], e[i] = r[i]);
  }
  _getOverriddenMethods() {
    throw new Error("Not implemented");
  }
};
uw.install = function(t, e, n) {
  t.__mixins || (t.__mixins = []);
  for (let i = 0; i < t.__mixins.length; i++)
    if (t.__mixins[i].constructor === e)
      return t.__mixins[i];
  const r = new e(t, n);
  return t.__mixins.push(r), r;
};
var su = uw;
const Aj = su;
let xj = class extends Aj {
  constructor(e) {
    super(e), this.preprocessor = e, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.offset = 0, this.col = 0, this.line = 1;
  }
  _getOverriddenMethods(e, n) {
    return {
      advance() {
        const r = this.pos + 1, i = this.html[r];
        return e.isEol && (e.isEol = !1, e.line++, e.lineStartPos = r), (i === `
` || i === "\r" && this.html[r + 1] !== `
`) && (e.isEol = !0), e.col = r - e.lineStartPos + 1, e.offset = e.droppedBufferSize + r, n.advance.call(this);
      },
      retreat() {
        n.retreat.call(this), e.isEol = !1, e.col = this.pos - e.lineStartPos + 1;
      },
      dropParsedChunk() {
        const r = this.pos;
        n.dropParsedChunk.call(this);
        const i = r - this.pos;
        e.lineStartPos -= i, e.droppedBufferSize += i, e.offset = e.droppedBufferSize + this.pos;
      }
    };
  }
};
var cw = xj;
const m_ = su, O4 = iv, _j = cw;
let kj = class extends m_ {
  constructor(e) {
    super(e), this.tokenizer = e, this.posTracker = m_.install(e.preprocessor, _j), this.currentAttrLocation = null, this.ctLoc = null;
  }
  _getCurrentLocation() {
    return {
      startLine: this.posTracker.line,
      startCol: this.posTracker.col,
      startOffset: this.posTracker.offset,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
  }
  _attachCurrentAttrLocationInfo() {
    this.currentAttrLocation.endLine = this.posTracker.line, this.currentAttrLocation.endCol = this.posTracker.col, this.currentAttrLocation.endOffset = this.posTracker.offset;
    const e = this.tokenizer.currentToken, n = this.tokenizer.currentAttr;
    e.location.attrs || (e.location.attrs = /* @__PURE__ */ Object.create(null)), e.location.attrs[n.name] = this.currentAttrLocation;
  }
  _getOverriddenMethods(e, n) {
    const r = {
      _createStartTagToken() {
        n._createStartTagToken.call(this), this.currentToken.location = e.ctLoc;
      },
      _createEndTagToken() {
        n._createEndTagToken.call(this), this.currentToken.location = e.ctLoc;
      },
      _createCommentToken() {
        n._createCommentToken.call(this), this.currentToken.location = e.ctLoc;
      },
      _createDoctypeToken(i) {
        n._createDoctypeToken.call(this, i), this.currentToken.location = e.ctLoc;
      },
      _createCharacterToken(i, s) {
        n._createCharacterToken.call(this, i, s), this.currentCharacterToken.location = e.ctLoc;
      },
      _createEOFToken() {
        n._createEOFToken.call(this), this.currentToken.location = e._getCurrentLocation();
      },
      _createAttr(i) {
        n._createAttr.call(this, i), e.currentAttrLocation = e._getCurrentLocation();
      },
      _leaveAttrName(i) {
        n._leaveAttrName.call(this, i), e._attachCurrentAttrLocationInfo();
      },
      _leaveAttrValue(i) {
        n._leaveAttrValue.call(this, i), e._attachCurrentAttrLocationInfo();
      },
      _emitCurrentToken() {
        const i = this.currentToken.location;
        this.currentCharacterToken && (this.currentCharacterToken.location.endLine = i.startLine, this.currentCharacterToken.location.endCol = i.startCol, this.currentCharacterToken.location.endOffset = i.startOffset), this.currentToken.type === O4.EOF_TOKEN ? (i.endLine = i.startLine, i.endCol = i.startCol, i.endOffset = i.startOffset) : (i.endLine = e.posTracker.line, i.endCol = e.posTracker.col + 1, i.endOffset = e.posTracker.offset + 1), n._emitCurrentToken.call(this);
      },
      _emitCurrentCharacterToken() {
        const i = this.currentCharacterToken && this.currentCharacterToken.location;
        i && i.endOffset === -1 && (i.endLine = e.posTracker.line, i.endCol = e.posTracker.col, i.endOffset = e.posTracker.offset), n._emitCurrentCharacterToken.call(this);
      }
    };
    return Object.keys(O4.MODE).forEach((i) => {
      const s = O4.MODE[i];
      r[s] = function(l) {
        e.ctLoc = e._getCurrentLocation(), n[s].call(this, l);
      };
    }), r;
  }
};
var fw = kj;
const Nj = su;
let wj = class extends Nj {
  constructor(e, n) {
    super(e), this.onItemPop = n.onItemPop;
  }
  _getOverriddenMethods(e, n) {
    return {
      pop() {
        e.onItemPop(this.current), n.pop.call(this);
      },
      popAllUpToHtmlElement() {
        for (let r = this.stackTop; r > 0; r--)
          e.onItemPop(this.items[r]);
        n.popAllUpToHtmlElement.call(this);
      },
      remove(r) {
        e.onItemPop(this.current), n.remove.call(this, r);
      }
    };
  }
};
var Oj = wj;
const R4 = su, g_ = iv, Rj = fw, Dj = Oj, Mj = ls, D4 = Mj.TAG_NAMES;
let Lj = class extends R4 {
  constructor(e) {
    super(e), this.parser = e, this.treeAdapter = this.parser.treeAdapter, this.posTracker = null, this.lastStartTagToken = null, this.lastFosterParentingLocation = null, this.currentToken = null;
  }
  _setStartLocation(e) {
    let n = null;
    this.lastStartTagToken && (n = Object.assign({}, this.lastStartTagToken.location), n.startTag = this.lastStartTagToken.location), this.treeAdapter.setNodeSourceCodeLocation(e, n);
  }
  _setEndLocation(e, n) {
    if (this.treeAdapter.getNodeSourceCodeLocation(e) && n.location) {
      const i = n.location, s = this.treeAdapter.getTagName(e), l = n.type === g_.END_TAG_TOKEN && s === n.tagName, c = {};
      l ? (c.endTag = Object.assign({}, i), c.endLine = i.endLine, c.endCol = i.endCol, c.endOffset = i.endOffset) : (c.endLine = i.startLine, c.endCol = i.startCol, c.endOffset = i.startOffset), this.treeAdapter.updateNodeSourceCodeLocation(e, c);
    }
  }
  _getOverriddenMethods(e, n) {
    return {
      _bootstrap(r, i) {
        n._bootstrap.call(this, r, i), e.lastStartTagToken = null, e.lastFosterParentingLocation = null, e.currentToken = null;
        const s = R4.install(this.tokenizer, Rj);
        e.posTracker = s.posTracker, R4.install(this.openElements, Dj, {
          onItemPop: function(l) {
            e._setEndLocation(l, e.currentToken);
          }
        });
      },
      _runParsingLoop(r) {
        n._runParsingLoop.call(this, r);
        for (let i = this.openElements.stackTop; i >= 0; i--)
          e._setEndLocation(this.openElements.items[i], e.currentToken);
      },
      //Token processing
      _processTokenInForeignContent(r) {
        e.currentToken = r, n._processTokenInForeignContent.call(this, r);
      },
      _processToken(r) {
        if (e.currentToken = r, n._processToken.call(this, r), r.type === g_.END_TAG_TOKEN && (r.tagName === D4.HTML || r.tagName === D4.BODY && this.openElements.hasInScope(D4.BODY)))
          for (let s = this.openElements.stackTop; s >= 0; s--) {
            const l = this.openElements.items[s];
            if (this.treeAdapter.getTagName(l) === r.tagName) {
              e._setEndLocation(l, r);
              break;
            }
          }
      },
      //Doctype
      _setDocumentType(r) {
        n._setDocumentType.call(this, r);
        const i = this.treeAdapter.getChildNodes(this.document), s = i.length;
        for (let l = 0; l < s; l++) {
          const c = i[l];
          if (this.treeAdapter.isDocumentTypeNode(c)) {
            this.treeAdapter.setNodeSourceCodeLocation(c, r.location);
            break;
          }
        }
      },
      //Elements
      _attachElementToTree(r) {
        e._setStartLocation(r), e.lastStartTagToken = null, n._attachElementToTree.call(this, r);
      },
      _appendElement(r, i) {
        e.lastStartTagToken = r, n._appendElement.call(this, r, i);
      },
      _insertElement(r, i) {
        e.lastStartTagToken = r, n._insertElement.call(this, r, i);
      },
      _insertTemplate(r) {
        e.lastStartTagToken = r, n._insertTemplate.call(this, r);
        const i = this.treeAdapter.getTemplateContent(this.openElements.current);
        this.treeAdapter.setNodeSourceCodeLocation(i, null);
      },
      _insertFakeRootElement() {
        n._insertFakeRootElement.call(this), this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
      },
      //Comments
      _appendCommentNode(r, i) {
        n._appendCommentNode.call(this, r, i);
        const s = this.treeAdapter.getChildNodes(i), l = s[s.length - 1];
        this.treeAdapter.setNodeSourceCodeLocation(l, r.location);
      },
      //Text
      _findFosterParentingLocation() {
        return e.lastFosterParentingLocation = n._findFosterParentingLocation.call(this), e.lastFosterParentingLocation;
      },
      _insertCharacters(r) {
        n._insertCharacters.call(this, r);
        const i = this._shouldFosterParentOnInsertion(), s = i && e.lastFosterParentingLocation.parent || this.openElements.currentTmplContent || this.openElements.current, l = this.treeAdapter.getChildNodes(s), c = i && e.lastFosterParentingLocation.beforeElement ? l.indexOf(e.lastFosterParentingLocation.beforeElement) - 1 : l.length - 1, h = l[c];
        if (this.treeAdapter.getNodeSourceCodeLocation(h)) {
          const { endLine: v, endCol: C, endOffset: S } = r.location;
          this.treeAdapter.updateNodeSourceCodeLocation(h, { endLine: v, endCol: C, endOffset: S });
        } else
          this.treeAdapter.setNodeSourceCodeLocation(h, r.location);
      }
    };
  }
};
var Ij = Lj;
const Pj = su;
let Fj = class extends Pj {
  constructor(e, n) {
    super(e), this.posTracker = null, this.onParseError = n.onParseError;
  }
  _setErrorLocation(e) {
    e.startLine = e.endLine = this.posTracker.line, e.startCol = e.endCol = this.posTracker.col, e.startOffset = e.endOffset = this.posTracker.offset;
  }
  _reportError(e) {
    const n = {
      code: e,
      startLine: -1,
      startCol: -1,
      startOffset: -1,
      endLine: -1,
      endCol: -1,
      endOffset: -1
    };
    this._setErrorLocation(n), this.onParseError(n);
  }
  _getOverriddenMethods(e) {
    return {
      _err(n) {
        e._reportError(n);
      }
    };
  }
};
var TS = Fj;
const Bj = TS, Uj = cw, Hj = su;
let zj = class extends Bj {
  constructor(e, n) {
    super(e, n), this.posTracker = Hj.install(e, Uj), this.lastErrOffset = -1;
  }
  _reportError(e) {
    this.lastErrOffset !== this.posTracker.offset && (this.lastErrOffset = this.posTracker.offset, super._reportError(e));
  }
};
var qj = zj;
const jj = TS, Vj = qj, $j = su;
let Gj = class extends jj {
  constructor(e, n) {
    super(e, n);
    const r = $j.install(e.preprocessor, Vj, n);
    this.posTracker = r.posTracker;
  }
};
var Wj = Gj;
const Kj = TS, Yj = Wj, Qj = fw, y_ = su;
let Xj = class extends Kj {
  constructor(e, n) {
    super(e, n), this.opts = n, this.ctLoc = null, this.locBeforeToken = !1;
  }
  _setErrorLocation(e) {
    this.ctLoc && (e.startLine = this.ctLoc.startLine, e.startCol = this.ctLoc.startCol, e.startOffset = this.ctLoc.startOffset, e.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine, e.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol, e.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset);
  }
  _getOverriddenMethods(e, n) {
    return {
      _bootstrap(r, i) {
        n._bootstrap.call(this, r, i), y_.install(this.tokenizer, Yj, e.opts), y_.install(this.tokenizer, Qj);
      },
      _processInputToken(r) {
        e.ctLoc = r.location, n._processInputToken.call(this, r);
      },
      _err(r, i) {
        e.locBeforeToken = i && i.beforeToken, e._reportError(r);
      }
    };
  }
};
var Jj = Xj, cn = {};
const { DOCUMENT_MODE: Zj } = ls;
cn.createDocument = function() {
  return {
    nodeName: "#document",
    mode: Zj.NO_QUIRKS,
    childNodes: []
  };
};
cn.createDocumentFragment = function() {
  return {
    nodeName: "#document-fragment",
    childNodes: []
  };
};
cn.createElement = function(t, e, n) {
  return {
    nodeName: t,
    tagName: t,
    attrs: n,
    namespaceURI: e,
    childNodes: [],
    parentNode: null
  };
};
cn.createCommentNode = function(t) {
  return {
    nodeName: "#comment",
    data: t,
    parentNode: null
  };
};
const dw = function(t) {
  return {
    nodeName: "#text",
    value: t,
    parentNode: null
  };
}, hw = cn.appendChild = function(t, e) {
  t.childNodes.push(e), e.parentNode = t;
}, eV = cn.insertBefore = function(t, e, n) {
  const r = t.childNodes.indexOf(n);
  t.childNodes.splice(r, 0, e), e.parentNode = t;
};
cn.setTemplateContent = function(t, e) {
  t.content = e;
};
cn.getTemplateContent = function(t) {
  return t.content;
};
cn.setDocumentType = function(t, e, n, r) {
  let i = null;
  for (let s = 0; s < t.childNodes.length; s++)
    if (t.childNodes[s].nodeName === "#documentType") {
      i = t.childNodes[s];
      break;
    }
  i ? (i.name = e, i.publicId = n, i.systemId = r) : hw(t, {
    nodeName: "#documentType",
    name: e,
    publicId: n,
    systemId: r
  });
};
cn.setDocumentMode = function(t, e) {
  t.mode = e;
};
cn.getDocumentMode = function(t) {
  return t.mode;
};
cn.detachNode = function(t) {
  if (t.parentNode) {
    const e = t.parentNode.childNodes.indexOf(t);
    t.parentNode.childNodes.splice(e, 1), t.parentNode = null;
  }
};
cn.insertText = function(t, e) {
  if (t.childNodes.length) {
    const n = t.childNodes[t.childNodes.length - 1];
    if (n.nodeName === "#text") {
      n.value += e;
      return;
    }
  }
  hw(t, dw(e));
};
cn.insertTextBefore = function(t, e, n) {
  const r = t.childNodes[t.childNodes.indexOf(n) - 1];
  r && r.nodeName === "#text" ? r.value += e : eV(t, dw(e), n);
};
cn.adoptAttributes = function(t, e) {
  const n = [];
  for (let r = 0; r < t.attrs.length; r++)
    n.push(t.attrs[r].name);
  for (let r = 0; r < e.length; r++)
    n.indexOf(e[r].name) === -1 && t.attrs.push(e[r]);
};
cn.getFirstChild = function(t) {
  return t.childNodes[0];
};
cn.getChildNodes = function(t) {
  return t.childNodes;
};
cn.getParentNode = function(t) {
  return t.parentNode;
};
cn.getAttrList = function(t) {
  return t.attrs;
};
cn.getTagName = function(t) {
  return t.tagName;
};
cn.getNamespaceURI = function(t) {
  return t.namespaceURI;
};
cn.getTextNodeContent = function(t) {
  return t.value;
};
cn.getCommentNodeContent = function(t) {
  return t.data;
};
cn.getDocumentTypeNodeName = function(t) {
  return t.name;
};
cn.getDocumentTypeNodePublicId = function(t) {
  return t.publicId;
};
cn.getDocumentTypeNodeSystemId = function(t) {
  return t.systemId;
};
cn.isTextNode = function(t) {
  return t.nodeName === "#text";
};
cn.isCommentNode = function(t) {
  return t.nodeName === "#comment";
};
cn.isDocumentTypeNode = function(t) {
  return t.nodeName === "#documentType";
};
cn.isElementNode = function(t) {
  return !!t.tagName;
};
cn.setNodeSourceCodeLocation = function(t, e) {
  t.sourceCodeLocation = e;
};
cn.getNodeSourceCodeLocation = function(t) {
  return t.sourceCodeLocation;
};
cn.updateNodeSourceCodeLocation = function(t, e) {
  t.sourceCodeLocation = Object.assign(t.sourceCodeLocation, e);
};
var tV = function(e, n) {
  return n = n || /* @__PURE__ */ Object.create(null), [e, n].reduce((r, i) => (Object.keys(i).forEach((s) => {
    r[s] = i[s];
  }), r), /* @__PURE__ */ Object.create(null));
}, ov = {};
const { DOCUMENT_MODE: Gd } = ls, pw = "html", nV = "about:legacy-compat", rV = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", mw = [
  "+//silmaril//dtd html pro v0r11 19970101//",
  "-//as//dtd html 3.0 aswedit + extensions//",
  "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
  "-//ietf//dtd html 2.0 level 1//",
  "-//ietf//dtd html 2.0 level 2//",
  "-//ietf//dtd html 2.0 strict level 1//",
  "-//ietf//dtd html 2.0 strict level 2//",
  "-//ietf//dtd html 2.0 strict//",
  "-//ietf//dtd html 2.0//",
  "-//ietf//dtd html 2.1e//",
  "-//ietf//dtd html 3.0//",
  "-//ietf//dtd html 3.2 final//",
  "-//ietf//dtd html 3.2//",
  "-//ietf//dtd html 3//",
  "-//ietf//dtd html level 0//",
  "-//ietf//dtd html level 1//",
  "-//ietf//dtd html level 2//",
  "-//ietf//dtd html level 3//",
  "-//ietf//dtd html strict level 0//",
  "-//ietf//dtd html strict level 1//",
  "-//ietf//dtd html strict level 2//",
  "-//ietf//dtd html strict level 3//",
  "-//ietf//dtd html strict//",
  "-//ietf//dtd html//",
  "-//metrius//dtd metrius presentational//",
  "-//microsoft//dtd internet explorer 2.0 html strict//",
  "-//microsoft//dtd internet explorer 2.0 html//",
  "-//microsoft//dtd internet explorer 2.0 tables//",
  "-//microsoft//dtd internet explorer 3.0 html strict//",
  "-//microsoft//dtd internet explorer 3.0 html//",
  "-//microsoft//dtd internet explorer 3.0 tables//",
  "-//netscape comm. corp.//dtd html//",
  "-//netscape comm. corp.//dtd strict html//",
  "-//o'reilly and associates//dtd html 2.0//",
  "-//o'reilly and associates//dtd html extended 1.0//",
  "-//o'reilly and associates//dtd html extended relaxed 1.0//",
  "-//sq//dtd html 2.0 hotmetal + extensions//",
  "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
  "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
  "-//spyglass//dtd html 2.0 extended//",
  "-//sun microsystems corp.//dtd hotjava html//",
  "-//sun microsystems corp.//dtd hotjava strict html//",
  "-//w3c//dtd html 3 1995-03-24//",
  "-//w3c//dtd html 3.2 draft//",
  "-//w3c//dtd html 3.2 final//",
  "-//w3c//dtd html 3.2//",
  "-//w3c//dtd html 3.2s draft//",
  "-//w3c//dtd html 4.0 frameset//",
  "-//w3c//dtd html 4.0 transitional//",
  "-//w3c//dtd html experimental 19960712//",
  "-//w3c//dtd html experimental 970421//",
  "-//w3c//dtd w3 html//",
  "-//w3o//dtd w3 html 3.0//",
  "-//webtechs//dtd mozilla html 2.0//",
  "-//webtechs//dtd mozilla html//"
], iV = mw.concat([
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
]), oV = ["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"], gw = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"], aV = gw.concat([
  "-//w3c//dtd html 4.01 frameset//",
  "-//w3c//dtd html 4.01 transitional//"
]);
function v_(t) {
  const e = t.indexOf('"') !== -1 ? "'" : '"';
  return e + t + e;
}
function E_(t, e) {
  for (let n = 0; n < e.length; n++)
    if (t.indexOf(e[n]) === 0)
      return !0;
  return !1;
}
ov.isConforming = function(t) {
  return t.name === pw && t.publicId === null && (t.systemId === null || t.systemId === nV);
};
ov.getDocumentMode = function(t) {
  if (t.name !== pw)
    return Gd.QUIRKS;
  const e = t.systemId;
  if (e && e.toLowerCase() === rV)
    return Gd.QUIRKS;
  let n = t.publicId;
  if (n !== null) {
    if (n = n.toLowerCase(), oV.indexOf(n) > -1)
      return Gd.QUIRKS;
    let r = e === null ? iV : mw;
    if (E_(n, r))
      return Gd.QUIRKS;
    if (r = e === null ? gw : aV, E_(n, r))
      return Gd.LIMITED_QUIRKS;
  }
  return Gd.NO_QUIRKS;
};
ov.serializeContent = function(t, e, n) {
  let r = "!DOCTYPE ";
  return t && (r += t), e ? r += " PUBLIC " + v_(e) : n && (r += " SYSTEM"), n !== null && (r += " " + v_(n)), r;
};
var Rc = {};
const M4 = iv, CS = ls, gt = CS.TAG_NAMES, gi = CS.NAMESPACES, G9 = CS.ATTRS, T_ = {
  TEXT_HTML: "text/html",
  APPLICATION_XML: "application/xhtml+xml"
}, sV = "definitionurl", lV = "definitionURL", uV = {
  attributename: "attributeName",
  attributetype: "attributeType",
  basefrequency: "baseFrequency",
  baseprofile: "baseProfile",
  calcmode: "calcMode",
  clippathunits: "clipPathUnits",
  diffuseconstant: "diffuseConstant",
  edgemode: "edgeMode",
  filterunits: "filterUnits",
  glyphref: "glyphRef",
  gradienttransform: "gradientTransform",
  gradientunits: "gradientUnits",
  kernelmatrix: "kernelMatrix",
  kernelunitlength: "kernelUnitLength",
  keypoints: "keyPoints",
  keysplines: "keySplines",
  keytimes: "keyTimes",
  lengthadjust: "lengthAdjust",
  limitingconeangle: "limitingConeAngle",
  markerheight: "markerHeight",
  markerunits: "markerUnits",
  markerwidth: "markerWidth",
  maskcontentunits: "maskContentUnits",
  maskunits: "maskUnits",
  numoctaves: "numOctaves",
  pathlength: "pathLength",
  patterncontentunits: "patternContentUnits",
  patterntransform: "patternTransform",
  patternunits: "patternUnits",
  pointsatx: "pointsAtX",
  pointsaty: "pointsAtY",
  pointsatz: "pointsAtZ",
  preservealpha: "preserveAlpha",
  preserveaspectratio: "preserveAspectRatio",
  primitiveunits: "primitiveUnits",
  refx: "refX",
  refy: "refY",
  repeatcount: "repeatCount",
  repeatdur: "repeatDur",
  requiredextensions: "requiredExtensions",
  requiredfeatures: "requiredFeatures",
  specularconstant: "specularConstant",
  specularexponent: "specularExponent",
  spreadmethod: "spreadMethod",
  startoffset: "startOffset",
  stddeviation: "stdDeviation",
  stitchtiles: "stitchTiles",
  surfacescale: "surfaceScale",
  systemlanguage: "systemLanguage",
  tablevalues: "tableValues",
  targetx: "targetX",
  targety: "targetY",
  textlength: "textLength",
  viewbox: "viewBox",
  viewtarget: "viewTarget",
  xchannelselector: "xChannelSelector",
  ychannelselector: "yChannelSelector",
  zoomandpan: "zoomAndPan"
}, cV = {
  "xlink:actuate": { prefix: "xlink", name: "actuate", namespace: gi.XLINK },
  "xlink:arcrole": { prefix: "xlink", name: "arcrole", namespace: gi.XLINK },
  "xlink:href": { prefix: "xlink", name: "href", namespace: gi.XLINK },
  "xlink:role": { prefix: "xlink", name: "role", namespace: gi.XLINK },
  "xlink:show": { prefix: "xlink", name: "show", namespace: gi.XLINK },
  "xlink:title": { prefix: "xlink", name: "title", namespace: gi.XLINK },
  "xlink:type": { prefix: "xlink", name: "type", namespace: gi.XLINK },
  "xml:base": { prefix: "xml", name: "base", namespace: gi.XML },
  "xml:lang": { prefix: "xml", name: "lang", namespace: gi.XML },
  "xml:space": { prefix: "xml", name: "space", namespace: gi.XML },
  xmlns: { prefix: "", name: "xmlns", namespace: gi.XMLNS },
  "xmlns:xlink": { prefix: "xmlns", name: "xlink", namespace: gi.XMLNS }
}, fV = Rc.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
  altglyph: "altGlyph",
  altglyphdef: "altGlyphDef",
  altglyphitem: "altGlyphItem",
  animatecolor: "animateColor",
  animatemotion: "animateMotion",
  animatetransform: "animateTransform",
  clippath: "clipPath",
  feblend: "feBlend",
  fecolormatrix: "feColorMatrix",
  fecomponenttransfer: "feComponentTransfer",
  fecomposite: "feComposite",
  feconvolvematrix: "feConvolveMatrix",
  fediffuselighting: "feDiffuseLighting",
  fedisplacementmap: "feDisplacementMap",
  fedistantlight: "feDistantLight",
  feflood: "feFlood",
  fefunca: "feFuncA",
  fefuncb: "feFuncB",
  fefuncg: "feFuncG",
  fefuncr: "feFuncR",
  fegaussianblur: "feGaussianBlur",
  feimage: "feImage",
  femerge: "feMerge",
  femergenode: "feMergeNode",
  femorphology: "feMorphology",
  feoffset: "feOffset",
  fepointlight: "fePointLight",
  fespecularlighting: "feSpecularLighting",
  fespotlight: "feSpotLight",
  fetile: "feTile",
  feturbulence: "feTurbulence",
  foreignobject: "foreignObject",
  glyphref: "glyphRef",
  lineargradient: "linearGradient",
  radialgradient: "radialGradient",
  textpath: "textPath"
}, dV = {
  [gt.B]: !0,
  [gt.BIG]: !0,
  [gt.BLOCKQUOTE]: !0,
  [gt.BODY]: !0,
  [gt.BR]: !0,
  [gt.CENTER]: !0,
  [gt.CODE]: !0,
  [gt.DD]: !0,
  [gt.DIV]: !0,
  [gt.DL]: !0,
  [gt.DT]: !0,
  [gt.EM]: !0,
  [gt.EMBED]: !0,
  [gt.H1]: !0,
  [gt.H2]: !0,
  [gt.H3]: !0,
  [gt.H4]: !0,
  [gt.H5]: !0,
  [gt.H6]: !0,
  [gt.HEAD]: !0,
  [gt.HR]: !0,
  [gt.I]: !0,
  [gt.IMG]: !0,
  [gt.LI]: !0,
  [gt.LISTING]: !0,
  [gt.MENU]: !0,
  [gt.META]: !0,
  [gt.NOBR]: !0,
  [gt.OL]: !0,
  [gt.P]: !0,
  [gt.PRE]: !0,
  [gt.RUBY]: !0,
  [gt.S]: !0,
  [gt.SMALL]: !0,
  [gt.SPAN]: !0,
  [gt.STRONG]: !0,
  [gt.STRIKE]: !0,
  [gt.SUB]: !0,
  [gt.SUP]: !0,
  [gt.TABLE]: !0,
  [gt.TT]: !0,
  [gt.U]: !0,
  [gt.UL]: !0,
  [gt.VAR]: !0
};
Rc.causesExit = function(t) {
  const e = t.tagName;
  return e === gt.FONT && (M4.getTokenAttr(t, G9.COLOR) !== null || M4.getTokenAttr(t, G9.SIZE) !== null || M4.getTokenAttr(t, G9.FACE) !== null) ? !0 : dV[e];
};
Rc.adjustTokenMathMLAttrs = function(t) {
  for (let e = 0; e < t.attrs.length; e++)
    if (t.attrs[e].name === sV) {
      t.attrs[e].name = lV;
      break;
    }
};
Rc.adjustTokenSVGAttrs = function(t) {
  for (let e = 0; e < t.attrs.length; e++) {
    const n = uV[t.attrs[e].name];
    n && (t.attrs[e].name = n);
  }
};
Rc.adjustTokenXMLAttrs = function(t) {
  for (let e = 0; e < t.attrs.length; e++) {
    const n = cV[t.attrs[e].name];
    n && (t.attrs[e].prefix = n.prefix, t.attrs[e].name = n.name, t.attrs[e].namespace = n.namespace);
  }
};
Rc.adjustTokenSVGTagName = function(t) {
  const e = fV[t.tagName];
  e && (t.tagName = e);
};
function hV(t, e) {
  return e === gi.MATHML && (t === gt.MI || t === gt.MO || t === gt.MN || t === gt.MS || t === gt.MTEXT);
}
function pV(t, e, n) {
  if (e === gi.MATHML && t === gt.ANNOTATION_XML) {
    for (let r = 0; r < n.length; r++)
      if (n[r].name === G9.ENCODING) {
        const i = n[r].value.toLowerCase();
        return i === T_.TEXT_HTML || i === T_.APPLICATION_XML;
      }
  }
  return e === gi.SVG && (t === gt.FOREIGN_OBJECT || t === gt.DESC || t === gt.TITLE);
}
Rc.isIntegrationPoint = function(t, e, n, r) {
  return !!((!r || r === gi.HTML) && pV(t, e, n) || (!r || r === gi.MATHML) && hV(t, e));
};
const $ = iv, mV = Sj, C_ = bj, gV = Ij, yV = Jj, S_ = su, vV = cn, EV = tV, b_ = ov, ll = Rc, Ei = vS, TV = ss, Cf = ls, _ = Cf.TAG_NAMES, nt = Cf.NAMESPACES, yw = Cf.ATTRS, CV = {
  scriptingEnabled: !0,
  sourceCodeLocationInfo: !1,
  onParseError: null,
  treeAdapter: vV
}, vw = "hidden", SV = 8, bV = 3, Ew = "INITIAL_MODE", SS = "BEFORE_HTML_MODE", av = "BEFORE_HEAD_MODE", _h = "IN_HEAD_MODE", Tw = "IN_HEAD_NO_SCRIPT_MODE", sv = "AFTER_HEAD_MODE", cl = "IN_BODY_MODE", Py = "TEXT_MODE", Mi = "IN_TABLE_MODE", Cw = "IN_TABLE_TEXT_MODE", lv = "IN_CAPTION_MODE", C0 = "IN_COLUMN_GROUP_MODE", ya = "IN_TABLE_BODY_MODE", au = "IN_ROW_MODE", uv = "IN_CELL_MODE", bS = "IN_SELECT_MODE", AS = "IN_SELECT_IN_TABLE_MODE", Fy = "IN_TEMPLATE_MODE", xS = "AFTER_BODY_MODE", cv = "IN_FRAMESET_MODE", Sw = "AFTER_FRAMESET_MODE", bw = "AFTER_AFTER_BODY_MODE", Aw = "AFTER_AFTER_FRAMESET_MODE", AV = {
  [_.TR]: au,
  [_.TBODY]: ya,
  [_.THEAD]: ya,
  [_.TFOOT]: ya,
  [_.CAPTION]: lv,
  [_.COLGROUP]: C0,
  [_.TABLE]: Mi,
  [_.BODY]: cl,
  [_.FRAMESET]: cv
}, xV = {
  [_.CAPTION]: Mi,
  [_.COLGROUP]: Mi,
  [_.TBODY]: Mi,
  [_.TFOOT]: Mi,
  [_.THEAD]: Mi,
  [_.COL]: C0,
  [_.TR]: ya,
  [_.TD]: au,
  [_.TH]: au
}, A_ = {
  [Ew]: {
    [$.CHARACTER_TOKEN]: Fm,
    [$.NULL_CHARACTER_TOKEN]: Fm,
    [$.WHITESPACE_CHARACTER_TOKEN]: rn,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: IV,
    [$.START_TAG_TOKEN]: Fm,
    [$.END_TAG_TOKEN]: Fm,
    [$.EOF_TOKEN]: Fm
  },
  [SS]: {
    [$.CHARACTER_TOKEN]: t0,
    [$.NULL_CHARACTER_TOKEN]: t0,
    [$.WHITESPACE_CHARACTER_TOKEN]: rn,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: PV,
    [$.END_TAG_TOKEN]: FV,
    [$.EOF_TOKEN]: t0
  },
  [av]: {
    [$.CHARACTER_TOKEN]: n0,
    [$.NULL_CHARACTER_TOKEN]: n0,
    [$.WHITESPACE_CHARACTER_TOKEN]: rn,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: D9,
    [$.START_TAG_TOKEN]: BV,
    [$.END_TAG_TOKEN]: UV,
    [$.EOF_TOKEN]: n0
  },
  [_h]: {
    [$.CHARACTER_TOKEN]: r0,
    [$.NULL_CHARACTER_TOKEN]: r0,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: D9,
    [$.START_TAG_TOKEN]: Zr,
    [$.END_TAG_TOKEN]: Sf,
    [$.EOF_TOKEN]: r0
  },
  [Tw]: {
    [$.CHARACTER_TOKEN]: i0,
    [$.NULL_CHARACTER_TOKEN]: i0,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: D9,
    [$.START_TAG_TOKEN]: HV,
    [$.END_TAG_TOKEN]: zV,
    [$.EOF_TOKEN]: i0
  },
  [sv]: {
    [$.CHARACTER_TOKEN]: o0,
    [$.NULL_CHARACTER_TOKEN]: o0,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: D9,
    [$.START_TAG_TOKEN]: qV,
    [$.END_TAG_TOKEN]: jV,
    [$.EOF_TOKEN]: o0
  },
  [cl]: {
    [$.CHARACTER_TOKEN]: M9,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: go,
    [$.END_TAG_TOKEN]: _S,
    [$.EOF_TOKEN]: Xl
  },
  [Py]: {
    [$.CHARACTER_TOKEN]: uo,
    [$.NULL_CHARACTER_TOKEN]: uo,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: rn,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: rn,
    [$.END_TAG_TOKEN]: T$,
    [$.EOF_TOKEN]: C$
  },
  [Mi]: {
    [$.CHARACTER_TOKEN]: Jl,
    [$.NULL_CHARACTER_TOKEN]: Jl,
    [$.WHITESPACE_CHARACTER_TOKEN]: Jl,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: kS,
    [$.END_TAG_TOKEN]: NS,
    [$.EOF_TOKEN]: Xl
  },
  [Cw]: {
    [$.CHARACTER_TOKEN]: R$,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: O$,
    [$.COMMENT_TOKEN]: Bm,
    [$.DOCTYPE_TOKEN]: Bm,
    [$.START_TAG_TOKEN]: Bm,
    [$.END_TAG_TOKEN]: Bm,
    [$.EOF_TOKEN]: Bm
  },
  [lv]: {
    [$.CHARACTER_TOKEN]: M9,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: D$,
    [$.END_TAG_TOKEN]: M$,
    [$.EOF_TOKEN]: Xl
  },
  [C0]: {
    [$.CHARACTER_TOKEN]: By,
    [$.NULL_CHARACTER_TOKEN]: By,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: L$,
    [$.END_TAG_TOKEN]: I$,
    [$.EOF_TOKEN]: Xl
  },
  [ya]: {
    [$.CHARACTER_TOKEN]: Jl,
    [$.NULL_CHARACTER_TOKEN]: Jl,
    [$.WHITESPACE_CHARACTER_TOKEN]: Jl,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: P$,
    [$.END_TAG_TOKEN]: F$,
    [$.EOF_TOKEN]: Xl
  },
  [au]: {
    [$.CHARACTER_TOKEN]: Jl,
    [$.NULL_CHARACTER_TOKEN]: Jl,
    [$.WHITESPACE_CHARACTER_TOKEN]: Jl,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: B$,
    [$.END_TAG_TOKEN]: U$,
    [$.EOF_TOKEN]: Xl
  },
  [uv]: {
    [$.CHARACTER_TOKEN]: M9,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: H$,
    [$.END_TAG_TOKEN]: z$,
    [$.EOF_TOKEN]: Xl
  },
  [bS]: {
    [$.CHARACTER_TOKEN]: uo,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: xw,
    [$.END_TAG_TOKEN]: _w,
    [$.EOF_TOKEN]: Xl
  },
  [AS]: {
    [$.CHARACTER_TOKEN]: uo,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: q$,
    [$.END_TAG_TOKEN]: j$,
    [$.EOF_TOKEN]: Xl
  },
  [Fy]: {
    [$.CHARACTER_TOKEN]: M9,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: V$,
    [$.END_TAG_TOKEN]: $$,
    [$.EOF_TOKEN]: kw
  },
  [xS]: {
    [$.CHARACTER_TOKEN]: Uy,
    [$.NULL_CHARACTER_TOKEN]: Uy,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: LV,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: G$,
    [$.END_TAG_TOKEN]: W$,
    [$.EOF_TOKEN]: Pm
  },
  [cv]: {
    [$.CHARACTER_TOKEN]: rn,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: K$,
    [$.END_TAG_TOKEN]: Y$,
    [$.EOF_TOKEN]: Pm
  },
  [Sw]: {
    [$.CHARACTER_TOKEN]: rn,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: uo,
    [$.COMMENT_TOKEN]: Ir,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: Q$,
    [$.END_TAG_TOKEN]: X$,
    [$.EOF_TOKEN]: Pm
  },
  [bw]: {
    [$.CHARACTER_TOKEN]: W9,
    [$.NULL_CHARACTER_TOKEN]: W9,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: x_,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: J$,
    [$.END_TAG_TOKEN]: W9,
    [$.EOF_TOKEN]: Pm
  },
  [Aw]: {
    [$.CHARACTER_TOKEN]: rn,
    [$.NULL_CHARACTER_TOKEN]: rn,
    [$.WHITESPACE_CHARACTER_TOKEN]: X1,
    [$.COMMENT_TOKEN]: x_,
    [$.DOCTYPE_TOKEN]: rn,
    [$.START_TAG_TOKEN]: Z$,
    [$.END_TAG_TOKEN]: rn,
    [$.EOF_TOKEN]: Pm
  }
};
class _V {
  constructor(e) {
    this.options = EV(CV, e), this.treeAdapter = this.options.treeAdapter, this.pendingScript = null, this.options.sourceCodeLocationInfo && S_.install(this, gV), this.options.onParseError && S_.install(this, yV, { onParseError: this.options.onParseError });
  }
  // API
  parse(e) {
    const n = this.treeAdapter.createDocument();
    return this._bootstrap(n, null), this.tokenizer.write(e, !0), this._runParsingLoop(null), n;
  }
  parseFragment(e, n) {
    n || (n = this.treeAdapter.createElement(_.TEMPLATE, nt.HTML, []));
    const r = this.treeAdapter.createElement("documentmock", nt.HTML, []);
    this._bootstrap(r, n), this.treeAdapter.getTagName(n) === _.TEMPLATE && this._pushTmplInsertionMode(Fy), this._initTokenizerForFragmentParsing(), this._insertFakeRootElement(), this._resetInsertionMode(), this._findFormInFragmentContext(), this.tokenizer.write(e, !0), this._runParsingLoop(null);
    const i = this.treeAdapter.getFirstChild(r), s = this.treeAdapter.createDocumentFragment();
    return this._adoptNodes(i, s), s;
  }
  //Bootstrap parser
  _bootstrap(e, n) {
    this.tokenizer = new $(this.options), this.stopped = !1, this.insertionMode = Ew, this.originalInsertionMode = "", this.document = e, this.fragmentContext = n, this.headElement = null, this.formElement = null, this.openElements = new mV(this.document, this.treeAdapter), this.activeFormattingElements = new C_(this.treeAdapter), this.tmplInsertionModeStack = [], this.tmplInsertionModeStackTop = -1, this.currentTmplInsertionMode = null, this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1;
  }
  //Errors
  _err() {
  }
  //Parsing loop
  _runParsingLoop(e) {
    for (; !this.stopped; ) {
      this._setupTokenizerCDATAMode();
      const n = this.tokenizer.getNextToken();
      if (n.type === $.HIBERNATION_TOKEN)
        break;
      if (this.skipNextNewLine && (this.skipNextNewLine = !1, n.type === $.WHITESPACE_CHARACTER_TOKEN && n.chars[0] === `
`)) {
        if (n.chars.length === 1)
          continue;
        n.chars = n.chars.substr(1);
      }
      if (this._processInputToken(n), e && this.pendingScript)
        break;
    }
  }
  runParsingLoopForCurrentChunk(e, n) {
    if (this._runParsingLoop(n), n && this.pendingScript) {
      const r = this.pendingScript;
      this.pendingScript = null, n(r);
      return;
    }
    e && e();
  }
  //Text parsing
  _setupTokenizerCDATAMode() {
    const e = this._getAdjustedCurrentElement();
    this.tokenizer.allowCDATA = e && e !== this.document && this.treeAdapter.getNamespaceURI(e) !== nt.HTML && !this._isIntegrationPoint(e);
  }
  _switchToTextParsing(e, n) {
    this._insertElement(e, nt.HTML), this.tokenizer.state = n, this.originalInsertionMode = this.insertionMode, this.insertionMode = Py;
  }
  switchToPlaintextParsing() {
    this.insertionMode = Py, this.originalInsertionMode = cl, this.tokenizer.state = $.MODE.PLAINTEXT;
  }
  //Fragment parsing
  _getAdjustedCurrentElement() {
    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;
  }
  _findFormInFragmentContext() {
    let e = this.fragmentContext;
    do {
      if (this.treeAdapter.getTagName(e) === _.FORM) {
        this.formElement = e;
        break;
      }
      e = this.treeAdapter.getParentNode(e);
    } while (e);
  }
  _initTokenizerForFragmentParsing() {
    if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === nt.HTML) {
      const e = this.treeAdapter.getTagName(this.fragmentContext);
      e === _.TITLE || e === _.TEXTAREA ? this.tokenizer.state = $.MODE.RCDATA : e === _.STYLE || e === _.XMP || e === _.IFRAME || e === _.NOEMBED || e === _.NOFRAMES || e === _.NOSCRIPT ? this.tokenizer.state = $.MODE.RAWTEXT : e === _.SCRIPT ? this.tokenizer.state = $.MODE.SCRIPT_DATA : e === _.PLAINTEXT && (this.tokenizer.state = $.MODE.PLAINTEXT);
    }
  }
  //Tree mutation
  _setDocumentType(e) {
    const n = e.name || "", r = e.publicId || "", i = e.systemId || "";
    this.treeAdapter.setDocumentType(this.document, n, r, i);
  }
  _attachElementToTree(e) {
    if (this._shouldFosterParentOnInsertion())
      this._fosterParentElement(e);
    else {
      const n = this.openElements.currentTmplContent || this.openElements.current;
      this.treeAdapter.appendChild(n, e);
    }
  }
  _appendElement(e, n) {
    const r = this.treeAdapter.createElement(e.tagName, n, e.attrs);
    this._attachElementToTree(r);
  }
  _insertElement(e, n) {
    const r = this.treeAdapter.createElement(e.tagName, n, e.attrs);
    this._attachElementToTree(r), this.openElements.push(r);
  }
  _insertFakeElement(e) {
    const n = this.treeAdapter.createElement(e, nt.HTML, []);
    this._attachElementToTree(n), this.openElements.push(n);
  }
  _insertTemplate(e) {
    const n = this.treeAdapter.createElement(e.tagName, nt.HTML, e.attrs), r = this.treeAdapter.createDocumentFragment();
    this.treeAdapter.setTemplateContent(n, r), this._attachElementToTree(n), this.openElements.push(n);
  }
  _insertFakeRootElement() {
    const e = this.treeAdapter.createElement(_.HTML, nt.HTML, []);
    this.treeAdapter.appendChild(this.openElements.current, e), this.openElements.push(e);
  }
  _appendCommentNode(e, n) {
    const r = this.treeAdapter.createCommentNode(e.data);
    this.treeAdapter.appendChild(n, r);
  }
  _insertCharacters(e) {
    if (this._shouldFosterParentOnInsertion())
      this._fosterParentText(e.chars);
    else {
      const n = this.openElements.currentTmplContent || this.openElements.current;
      this.treeAdapter.insertText(n, e.chars);
    }
  }
  _adoptNodes(e, n) {
    for (let r = this.treeAdapter.getFirstChild(e); r; r = this.treeAdapter.getFirstChild(e))
      this.treeAdapter.detachNode(r), this.treeAdapter.appendChild(n, r);
  }
  //Token processing
  _shouldProcessTokenInForeignContent(e) {
    const n = this._getAdjustedCurrentElement();
    if (!n || n === this.document)
      return !1;
    const r = this.treeAdapter.getNamespaceURI(n);
    if (r === nt.HTML || this.treeAdapter.getTagName(n) === _.ANNOTATION_XML && r === nt.MATHML && e.type === $.START_TAG_TOKEN && e.tagName === _.SVG)
      return !1;
    const i = e.type === $.CHARACTER_TOKEN || e.type === $.NULL_CHARACTER_TOKEN || e.type === $.WHITESPACE_CHARACTER_TOKEN;
    return (e.type === $.START_TAG_TOKEN && e.tagName !== _.MGLYPH && e.tagName !== _.MALIGNMARK || i) && this._isIntegrationPoint(n, nt.MATHML) || (e.type === $.START_TAG_TOKEN || i) && this._isIntegrationPoint(n, nt.HTML) ? !1 : e.type !== $.EOF_TOKEN;
  }
  _processToken(e) {
    A_[this.insertionMode][e.type](this, e);
  }
  _processTokenInBodyMode(e) {
    A_[cl][e.type](this, e);
  }
  _processTokenInForeignContent(e) {
    e.type === $.CHARACTER_TOKEN ? tG(this, e) : e.type === $.NULL_CHARACTER_TOKEN ? eG(this, e) : e.type === $.WHITESPACE_CHARACTER_TOKEN ? uo(this, e) : e.type === $.COMMENT_TOKEN ? Ir(this, e) : e.type === $.START_TAG_TOKEN ? nG(this, e) : e.type === $.END_TAG_TOKEN && rG(this, e);
  }
  _processInputToken(e) {
    this._shouldProcessTokenInForeignContent(e) ? this._processTokenInForeignContent(e) : this._processToken(e), e.type === $.START_TAG_TOKEN && e.selfClosing && !e.ackSelfClosing && this._err(Ei.nonVoidHtmlElementStartTagWithTrailingSolidus);
  }
  //Integration points
  _isIntegrationPoint(e, n) {
    const r = this.treeAdapter.getTagName(e), i = this.treeAdapter.getNamespaceURI(e), s = this.treeAdapter.getAttrList(e);
    return ll.isIntegrationPoint(r, i, s, n);
  }
  //Active formatting elements reconstruction
  _reconstructActiveFormattingElements() {
    const e = this.activeFormattingElements.length;
    if (e) {
      let n = e, r = null;
      do
        if (n--, r = this.activeFormattingElements.entries[n], r.type === C_.MARKER_ENTRY || this.openElements.contains(r.element)) {
          n++;
          break;
        }
      while (n > 0);
      for (let i = n; i < e; i++)
        r = this.activeFormattingElements.entries[i], this._insertElement(r.token, this.treeAdapter.getNamespaceURI(r.element)), r.element = this.openElements.current;
    }
  }
  //Close elements
  _closeTableCell() {
    this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = au;
  }
  _closePElement() {
    this.openElements.generateImpliedEndTagsWithExclusion(_.P), this.openElements.popUntilTagNamePopped(_.P);
  }
  //Insertion modes
  _resetInsertionMode() {
    for (let e = this.openElements.stackTop, n = !1; e >= 0; e--) {
      let r = this.openElements.items[e];
      e === 0 && (n = !0, this.fragmentContext && (r = this.fragmentContext));
      const i = this.treeAdapter.getTagName(r), s = AV[i];
      if (s) {
        this.insertionMode = s;
        break;
      } else if (!n && (i === _.TD || i === _.TH)) {
        this.insertionMode = uv;
        break;
      } else if (!n && i === _.HEAD) {
        this.insertionMode = _h;
        break;
      } else if (i === _.SELECT) {
        this._resetInsertionModeForSelect(e);
        break;
      } else if (i === _.TEMPLATE) {
        this.insertionMode = this.currentTmplInsertionMode;
        break;
      } else if (i === _.HTML) {
        this.insertionMode = this.headElement ? sv : av;
        break;
      } else if (n) {
        this.insertionMode = cl;
        break;
      }
    }
  }
  _resetInsertionModeForSelect(e) {
    if (e > 0)
      for (let n = e - 1; n > 0; n--) {
        const r = this.openElements.items[n], i = this.treeAdapter.getTagName(r);
        if (i === _.TEMPLATE)
          break;
        if (i === _.TABLE) {
          this.insertionMode = AS;
          return;
        }
      }
    this.insertionMode = bS;
  }
  _pushTmplInsertionMode(e) {
    this.tmplInsertionModeStack.push(e), this.tmplInsertionModeStackTop++, this.currentTmplInsertionMode = e;
  }
  _popTmplInsertionMode() {
    this.tmplInsertionModeStack.pop(), this.tmplInsertionModeStackTop--, this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
  }
  //Foster parenting
  _isElementCausesFosterParenting(e) {
    const n = this.treeAdapter.getTagName(e);
    return n === _.TABLE || n === _.TBODY || n === _.TFOOT || n === _.THEAD || n === _.TR;
  }
  _shouldFosterParentOnInsertion() {
    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
  }
  _findFosterParentingLocation() {
    const e = {
      parent: null,
      beforeElement: null
    };
    for (let n = this.openElements.stackTop; n >= 0; n--) {
      const r = this.openElements.items[n], i = this.treeAdapter.getTagName(r), s = this.treeAdapter.getNamespaceURI(r);
      if (i === _.TEMPLATE && s === nt.HTML) {
        e.parent = this.treeAdapter.getTemplateContent(r);
        break;
      } else if (i === _.TABLE) {
        e.parent = this.treeAdapter.getParentNode(r), e.parent ? e.beforeElement = r : e.parent = this.openElements.items[n - 1];
        break;
      }
    }
    return e.parent || (e.parent = this.openElements.items[0]), e;
  }
  _fosterParentElement(e) {
    const n = this._findFosterParentingLocation();
    n.beforeElement ? this.treeAdapter.insertBefore(n.parent, e, n.beforeElement) : this.treeAdapter.appendChild(n.parent, e);
  }
  _fosterParentText(e) {
    const n = this._findFosterParentingLocation();
    n.beforeElement ? this.treeAdapter.insertTextBefore(n.parent, e, n.beforeElement) : this.treeAdapter.insertText(n.parent, e);
  }
  //Special elements
  _isSpecialElement(e) {
    const n = this.treeAdapter.getTagName(e), r = this.treeAdapter.getNamespaceURI(e);
    return Cf.SPECIAL_ELEMENTS[r][n];
  }
}
var kV = _V;
function NV(t, e) {
  let n = t.activeFormattingElements.getElementEntryInScopeWithTagName(e.tagName);
  return n ? t.openElements.contains(n.element) ? t.openElements.hasInScope(e.tagName) || (n = null) : (t.activeFormattingElements.removeEntry(n), n = null) : Xa(t, e), n;
}
function wV(t, e) {
  let n = null;
  for (let r = t.openElements.stackTop; r >= 0; r--) {
    const i = t.openElements.items[r];
    if (i === e.element)
      break;
    t._isSpecialElement(i) && (n = i);
  }
  return n || (t.openElements.popUntilElementPopped(e.element), t.activeFormattingElements.removeEntry(e)), n;
}
function OV(t, e, n) {
  let r = e, i = t.openElements.getCommonAncestor(e);
  for (let s = 0, l = i; l !== n; s++, l = i) {
    i = t.openElements.getCommonAncestor(l);
    const c = t.activeFormattingElements.getElementEntry(l), h = c && s >= bV;
    !c || h ? (h && t.activeFormattingElements.removeEntry(c), t.openElements.remove(l)) : (l = RV(t, c), r === e && (t.activeFormattingElements.bookmark = c), t.treeAdapter.detachNode(r), t.treeAdapter.appendChild(l, r), r = l);
  }
  return r;
}
function RV(t, e) {
  const n = t.treeAdapter.getNamespaceURI(e.element), r = t.treeAdapter.createElement(e.token.tagName, n, e.token.attrs);
  return t.openElements.replace(e.element, r), e.element = r, r;
}
function DV(t, e, n) {
  if (t._isElementCausesFosterParenting(e))
    t._fosterParentElement(n);
  else {
    const r = t.treeAdapter.getTagName(e), i = t.treeAdapter.getNamespaceURI(e);
    r === _.TEMPLATE && i === nt.HTML && (e = t.treeAdapter.getTemplateContent(e)), t.treeAdapter.appendChild(e, n);
  }
}
function MV(t, e, n) {
  const r = t.treeAdapter.getNamespaceURI(n.element), i = n.token, s = t.treeAdapter.createElement(i.tagName, r, i.attrs);
  t._adoptNodes(e, s), t.treeAdapter.appendChild(e, s), t.activeFormattingElements.insertElementAfterBookmark(s, n.token), t.activeFormattingElements.removeEntry(n), t.openElements.remove(n.element), t.openElements.insertAfter(e, s);
}
function pc(t, e) {
  let n;
  for (let r = 0; r < SV && (n = NV(t, e), !!n); r++) {
    const i = wV(t, n);
    if (!i)
      break;
    t.activeFormattingElements.bookmark = n;
    const s = OV(t, i, n.element), l = t.openElements.getCommonAncestor(n.element);
    t.treeAdapter.detachNode(s), DV(t, l, s), MV(t, i, n);
  }
}
function rn() {
}
function D9(t) {
  t._err(Ei.misplacedDoctype);
}
function Ir(t, e) {
  t._appendCommentNode(e, t.openElements.currentTmplContent || t.openElements.current);
}
function LV(t, e) {
  t._appendCommentNode(e, t.openElements.items[0]);
}
function x_(t, e) {
  t._appendCommentNode(e, t.document);
}
function uo(t, e) {
  t._insertCharacters(e);
}
function Pm(t) {
  t.stopped = !0;
}
function IV(t, e) {
  t._setDocumentType(e);
  const n = e.forceQuirks ? Cf.DOCUMENT_MODE.QUIRKS : b_.getDocumentMode(e);
  b_.isConforming(e) || t._err(Ei.nonConformingDoctype), t.treeAdapter.setDocumentMode(t.document, n), t.insertionMode = SS;
}
function Fm(t, e) {
  t._err(Ei.missingDoctype, { beforeToken: !0 }), t.treeAdapter.setDocumentMode(t.document, Cf.DOCUMENT_MODE.QUIRKS), t.insertionMode = SS, t._processToken(e);
}
function PV(t, e) {
  e.tagName === _.HTML ? (t._insertElement(e, nt.HTML), t.insertionMode = av) : t0(t, e);
}
function FV(t, e) {
  const n = e.tagName;
  (n === _.HTML || n === _.HEAD || n === _.BODY || n === _.BR) && t0(t, e);
}
function t0(t, e) {
  t._insertFakeRootElement(), t.insertionMode = av, t._processToken(e);
}
function BV(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.HEAD ? (t._insertElement(e, nt.HTML), t.headElement = t.openElements.current, t.insertionMode = _h) : n0(t, e);
}
function UV(t, e) {
  const n = e.tagName;
  n === _.HEAD || n === _.BODY || n === _.HTML || n === _.BR ? n0(t, e) : t._err(Ei.endTagWithoutMatchingOpenElement);
}
function n0(t, e) {
  t._insertFakeElement(_.HEAD), t.headElement = t.openElements.current, t.insertionMode = _h, t._processToken(e);
}
function Zr(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.BASE || n === _.BASEFONT || n === _.BGSOUND || n === _.LINK || n === _.META ? (t._appendElement(e, nt.HTML), e.ackSelfClosing = !0) : n === _.TITLE ? t._switchToTextParsing(e, $.MODE.RCDATA) : n === _.NOSCRIPT ? t.options.scriptingEnabled ? t._switchToTextParsing(e, $.MODE.RAWTEXT) : (t._insertElement(e, nt.HTML), t.insertionMode = Tw) : n === _.NOFRAMES || n === _.STYLE ? t._switchToTextParsing(e, $.MODE.RAWTEXT) : n === _.SCRIPT ? t._switchToTextParsing(e, $.MODE.SCRIPT_DATA) : n === _.TEMPLATE ? (t._insertTemplate(e, nt.HTML), t.activeFormattingElements.insertMarker(), t.framesetOk = !1, t.insertionMode = Fy, t._pushTmplInsertionMode(Fy)) : n === _.HEAD ? t._err(Ei.misplacedStartTagForHeadElement) : r0(t, e);
}
function Sf(t, e) {
  const n = e.tagName;
  n === _.HEAD ? (t.openElements.pop(), t.insertionMode = sv) : n === _.BODY || n === _.BR || n === _.HTML ? r0(t, e) : n === _.TEMPLATE && t.openElements.tmplCount > 0 ? (t.openElements.generateImpliedEndTagsThoroughly(), t.openElements.currentTagName !== _.TEMPLATE && t._err(Ei.closingOfElementWithOpenChildElements), t.openElements.popUntilTagNamePopped(_.TEMPLATE), t.activeFormattingElements.clearToLastMarker(), t._popTmplInsertionMode(), t._resetInsertionMode()) : t._err(Ei.endTagWithoutMatchingOpenElement);
}
function r0(t, e) {
  t.openElements.pop(), t.insertionMode = sv, t._processToken(e);
}
function HV(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.BASEFONT || n === _.BGSOUND || n === _.HEAD || n === _.LINK || n === _.META || n === _.NOFRAMES || n === _.STYLE ? Zr(t, e) : n === _.NOSCRIPT ? t._err(Ei.nestedNoscriptInHead) : i0(t, e);
}
function zV(t, e) {
  const n = e.tagName;
  n === _.NOSCRIPT ? (t.openElements.pop(), t.insertionMode = _h) : n === _.BR ? i0(t, e) : t._err(Ei.endTagWithoutMatchingOpenElement);
}
function i0(t, e) {
  const n = e.type === $.EOF_TOKEN ? Ei.openElementsLeftAfterEof : Ei.disallowedContentInNoscriptInHead;
  t._err(n), t.openElements.pop(), t.insertionMode = _h, t._processToken(e);
}
function qV(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.BODY ? (t._insertElement(e, nt.HTML), t.framesetOk = !1, t.insertionMode = cl) : n === _.FRAMESET ? (t._insertElement(e, nt.HTML), t.insertionMode = cv) : n === _.BASE || n === _.BASEFONT || n === _.BGSOUND || n === _.LINK || n === _.META || n === _.NOFRAMES || n === _.SCRIPT || n === _.STYLE || n === _.TEMPLATE || n === _.TITLE ? (t._err(Ei.abandonedHeadElementChild), t.openElements.push(t.headElement), Zr(t, e), t.openElements.remove(t.headElement)) : n === _.HEAD ? t._err(Ei.misplacedStartTagForHeadElement) : o0(t, e);
}
function jV(t, e) {
  const n = e.tagName;
  n === _.BODY || n === _.HTML || n === _.BR ? o0(t, e) : n === _.TEMPLATE ? Sf(t, e) : t._err(Ei.endTagWithoutMatchingOpenElement);
}
function o0(t, e) {
  t._insertFakeElement(_.BODY), t.insertionMode = cl, t._processToken(e);
}
function X1(t, e) {
  t._reconstructActiveFormattingElements(), t._insertCharacters(e);
}
function M9(t, e) {
  t._reconstructActiveFormattingElements(), t._insertCharacters(e), t.framesetOk = !1;
}
function VV(t, e) {
  t.openElements.tmplCount === 0 && t.treeAdapter.adoptAttributes(t.openElements.items[0], e.attrs);
}
function $V(t, e) {
  const n = t.openElements.tryPeekProperlyNestedBodyElement();
  n && t.openElements.tmplCount === 0 && (t.framesetOk = !1, t.treeAdapter.adoptAttributes(n, e.attrs));
}
function GV(t, e) {
  const n = t.openElements.tryPeekProperlyNestedBodyElement();
  t.framesetOk && n && (t.treeAdapter.detachNode(n), t.openElements.popAllUpToHtmlElement(), t._insertElement(e, nt.HTML), t.insertionMode = cv);
}
function Ql(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML);
}
function WV(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement();
  const n = t.openElements.currentTagName;
  (n === _.H1 || n === _.H2 || n === _.H3 || n === _.H4 || n === _.H5 || n === _.H6) && t.openElements.pop(), t._insertElement(e, nt.HTML);
}
function __(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML), t.skipNextNewLine = !0, t.framesetOk = !1;
}
function KV(t, e) {
  const n = t.openElements.tmplCount > 0;
  (!t.formElement || n) && (t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML), n || (t.formElement = t.openElements.current));
}
function YV(t, e) {
  t.framesetOk = !1;
  const n = e.tagName;
  for (let r = t.openElements.stackTop; r >= 0; r--) {
    const i = t.openElements.items[r], s = t.treeAdapter.getTagName(i);
    let l = null;
    if (n === _.LI && s === _.LI ? l = _.LI : (n === _.DD || n === _.DT) && (s === _.DD || s === _.DT) && (l = s), l) {
      t.openElements.generateImpliedEndTagsWithExclusion(l), t.openElements.popUntilTagNamePopped(l);
      break;
    }
    if (s !== _.ADDRESS && s !== _.DIV && s !== _.P && t._isSpecialElement(i))
      break;
  }
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML);
}
function QV(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML), t.tokenizer.state = $.MODE.PLAINTEXT;
}
function XV(t, e) {
  t.openElements.hasInScope(_.BUTTON) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(_.BUTTON)), t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML), t.framesetOk = !1;
}
function JV(t, e) {
  const n = t.activeFormattingElements.getElementEntryInScopeWithTagName(_.A);
  n && (pc(t, e), t.openElements.remove(n.element), t.activeFormattingElements.removeEntry(n)), t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML), t.activeFormattingElements.pushElement(t.openElements.current, e);
}
function Wd(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML), t.activeFormattingElements.pushElement(t.openElements.current, e);
}
function ZV(t, e) {
  t._reconstructActiveFormattingElements(), t.openElements.hasInScope(_.NOBR) && (pc(t, e), t._reconstructActiveFormattingElements()), t._insertElement(e, nt.HTML), t.activeFormattingElements.pushElement(t.openElements.current, e);
}
function k_(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML), t.activeFormattingElements.insertMarker(), t.framesetOk = !1;
}
function e$(t, e) {
  t.treeAdapter.getDocumentMode(t.document) !== Cf.DOCUMENT_MODE.QUIRKS && t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML), t.framesetOk = !1, t.insertionMode = Mi;
}
function th(t, e) {
  t._reconstructActiveFormattingElements(), t._appendElement(e, nt.HTML), t.framesetOk = !1, e.ackSelfClosing = !0;
}
function t$(t, e) {
  t._reconstructActiveFormattingElements(), t._appendElement(e, nt.HTML);
  const n = $.getTokenAttr(e, yw.TYPE);
  (!n || n.toLowerCase() !== vw) && (t.framesetOk = !1), e.ackSelfClosing = !0;
}
function N_(t, e) {
  t._appendElement(e, nt.HTML), e.ackSelfClosing = !0;
}
function n$(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._appendElement(e, nt.HTML), t.framesetOk = !1, e.ackSelfClosing = !0;
}
function r$(t, e) {
  e.tagName = _.IMG, th(t, e);
}
function i$(t, e) {
  t._insertElement(e, nt.HTML), t.skipNextNewLine = !0, t.tokenizer.state = $.MODE.RCDATA, t.originalInsertionMode = t.insertionMode, t.framesetOk = !1, t.insertionMode = Py;
}
function o$(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._reconstructActiveFormattingElements(), t.framesetOk = !1, t._switchToTextParsing(e, $.MODE.RAWTEXT);
}
function a$(t, e) {
  t.framesetOk = !1, t._switchToTextParsing(e, $.MODE.RAWTEXT);
}
function w_(t, e) {
  t._switchToTextParsing(e, $.MODE.RAWTEXT);
}
function s$(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML), t.framesetOk = !1, t.insertionMode === Mi || t.insertionMode === lv || t.insertionMode === ya || t.insertionMode === au || t.insertionMode === uv ? t.insertionMode = AS : t.insertionMode = bS;
}
function O_(t, e) {
  t.openElements.currentTagName === _.OPTION && t.openElements.pop(), t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML);
}
function R_(t, e) {
  t.openElements.hasInScope(_.RUBY) && t.openElements.generateImpliedEndTags(), t._insertElement(e, nt.HTML);
}
function l$(t, e) {
  t.openElements.hasInScope(_.RUBY) && t.openElements.generateImpliedEndTagsWithExclusion(_.RTC), t._insertElement(e, nt.HTML);
}
function u$(t, e) {
  t.openElements.hasInButtonScope(_.P) && t._closePElement(), t._insertElement(e, nt.HTML);
}
function c$(t, e) {
  t._reconstructActiveFormattingElements(), ll.adjustTokenMathMLAttrs(e), ll.adjustTokenXMLAttrs(e), e.selfClosing ? t._appendElement(e, nt.MATHML) : t._insertElement(e, nt.MATHML), e.ackSelfClosing = !0;
}
function f$(t, e) {
  t._reconstructActiveFormattingElements(), ll.adjustTokenSVGAttrs(e), ll.adjustTokenXMLAttrs(e), e.selfClosing ? t._appendElement(e, nt.SVG) : t._insertElement(e, nt.SVG), e.ackSelfClosing = !0;
}
function ca(t, e) {
  t._reconstructActiveFormattingElements(), t._insertElement(e, nt.HTML);
}
function go(t, e) {
  const n = e.tagName;
  switch (n.length) {
    case 1:
      n === _.I || n === _.S || n === _.B || n === _.U ? Wd(t, e) : n === _.P ? Ql(t, e) : n === _.A ? JV(t, e) : ca(t, e);
      break;
    case 2:
      n === _.DL || n === _.OL || n === _.UL ? Ql(t, e) : n === _.H1 || n === _.H2 || n === _.H3 || n === _.H4 || n === _.H5 || n === _.H6 ? WV(t, e) : n === _.LI || n === _.DD || n === _.DT ? YV(t, e) : n === _.EM || n === _.TT ? Wd(t, e) : n === _.BR ? th(t, e) : n === _.HR ? n$(t, e) : n === _.RB ? R_(t, e) : n === _.RT || n === _.RP ? l$(t, e) : n !== _.TH && n !== _.TD && n !== _.TR && ca(t, e);
      break;
    case 3:
      n === _.DIV || n === _.DIR || n === _.NAV ? Ql(t, e) : n === _.PRE ? __(t, e) : n === _.BIG ? Wd(t, e) : n === _.IMG || n === _.WBR ? th(t, e) : n === _.XMP ? o$(t, e) : n === _.SVG ? f$(t, e) : n === _.RTC ? R_(t, e) : n !== _.COL && ca(t, e);
      break;
    case 4:
      n === _.HTML ? VV(t, e) : n === _.BASE || n === _.LINK || n === _.META ? Zr(t, e) : n === _.BODY ? $V(t, e) : n === _.MAIN || n === _.MENU ? Ql(t, e) : n === _.FORM ? KV(t, e) : n === _.CODE || n === _.FONT ? Wd(t, e) : n === _.NOBR ? ZV(t, e) : n === _.AREA ? th(t, e) : n === _.MATH ? c$(t, e) : n === _.MENU ? u$(t, e) : n !== _.HEAD && ca(t, e);
      break;
    case 5:
      n === _.STYLE || n === _.TITLE ? Zr(t, e) : n === _.ASIDE ? Ql(t, e) : n === _.SMALL ? Wd(t, e) : n === _.TABLE ? e$(t, e) : n === _.EMBED ? th(t, e) : n === _.INPUT ? t$(t, e) : n === _.PARAM || n === _.TRACK ? N_(t, e) : n === _.IMAGE ? r$(t, e) : n !== _.FRAME && n !== _.TBODY && n !== _.TFOOT && n !== _.THEAD && ca(t, e);
      break;
    case 6:
      n === _.SCRIPT ? Zr(t, e) : n === _.CENTER || n === _.FIGURE || n === _.FOOTER || n === _.HEADER || n === _.HGROUP || n === _.DIALOG ? Ql(t, e) : n === _.BUTTON ? XV(t, e) : n === _.STRIKE || n === _.STRONG ? Wd(t, e) : n === _.APPLET || n === _.OBJECT ? k_(t, e) : n === _.KEYGEN ? th(t, e) : n === _.SOURCE ? N_(t, e) : n === _.IFRAME ? a$(t, e) : n === _.SELECT ? s$(t, e) : n === _.OPTION ? O_(t, e) : ca(t, e);
      break;
    case 7:
      n === _.BGSOUND ? Zr(t, e) : n === _.DETAILS || n === _.ADDRESS || n === _.ARTICLE || n === _.SECTION || n === _.SUMMARY ? Ql(t, e) : n === _.LISTING ? __(t, e) : n === _.MARQUEE ? k_(t, e) : n === _.NOEMBED ? w_(t, e) : n !== _.CAPTION && ca(t, e);
      break;
    case 8:
      n === _.BASEFONT ? Zr(t, e) : n === _.FRAMESET ? GV(t, e) : n === _.FIELDSET ? Ql(t, e) : n === _.TEXTAREA ? i$(t, e) : n === _.TEMPLATE ? Zr(t, e) : n === _.NOSCRIPT ? t.options.scriptingEnabled ? w_(t, e) : ca(t, e) : n === _.OPTGROUP ? O_(t, e) : n !== _.COLGROUP && ca(t, e);
      break;
    case 9:
      n === _.PLAINTEXT ? QV(t, e) : ca(t, e);
      break;
    case 10:
      n === _.BLOCKQUOTE || n === _.FIGCAPTION ? Ql(t, e) : ca(t, e);
      break;
    default:
      ca(t, e);
  }
}
function d$(t) {
  t.openElements.hasInScope(_.BODY) && (t.insertionMode = xS);
}
function h$(t, e) {
  t.openElements.hasInScope(_.BODY) && (t.insertionMode = xS, t._processToken(e));
}
function sc(t, e) {
  const n = e.tagName;
  t.openElements.hasInScope(n) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(n));
}
function p$(t) {
  const e = t.openElements.tmplCount > 0, n = t.formElement;
  e || (t.formElement = null), (n || e) && t.openElements.hasInScope(_.FORM) && (t.openElements.generateImpliedEndTags(), e ? t.openElements.popUntilTagNamePopped(_.FORM) : t.openElements.remove(n));
}
function m$(t) {
  t.openElements.hasInButtonScope(_.P) || t._insertFakeElement(_.P), t._closePElement();
}
function g$(t) {
  t.openElements.hasInListItemScope(_.LI) && (t.openElements.generateImpliedEndTagsWithExclusion(_.LI), t.openElements.popUntilTagNamePopped(_.LI));
}
function y$(t, e) {
  const n = e.tagName;
  t.openElements.hasInScope(n) && (t.openElements.generateImpliedEndTagsWithExclusion(n), t.openElements.popUntilTagNamePopped(n));
}
function v$(t) {
  t.openElements.hasNumberedHeaderInScope() && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilNumberedHeaderPopped());
}
function D_(t, e) {
  const n = e.tagName;
  t.openElements.hasInScope(n) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(n), t.activeFormattingElements.clearToLastMarker());
}
function E$(t) {
  t._reconstructActiveFormattingElements(), t._insertFakeElement(_.BR), t.openElements.pop(), t.framesetOk = !1;
}
function Xa(t, e) {
  const n = e.tagName;
  for (let r = t.openElements.stackTop; r > 0; r--) {
    const i = t.openElements.items[r];
    if (t.treeAdapter.getTagName(i) === n) {
      t.openElements.generateImpliedEndTagsWithExclusion(n), t.openElements.popUntilElementPopped(i);
      break;
    }
    if (t._isSpecialElement(i))
      break;
  }
}
function _S(t, e) {
  const n = e.tagName;
  switch (n.length) {
    case 1:
      n === _.A || n === _.B || n === _.I || n === _.S || n === _.U ? pc(t, e) : n === _.P ? m$(t) : Xa(t, e);
      break;
    case 2:
      n === _.DL || n === _.UL || n === _.OL ? sc(t, e) : n === _.LI ? g$(t) : n === _.DD || n === _.DT ? y$(t, e) : n === _.H1 || n === _.H2 || n === _.H3 || n === _.H4 || n === _.H5 || n === _.H6 ? v$(t) : n === _.BR ? E$(t) : n === _.EM || n === _.TT ? pc(t, e) : Xa(t, e);
      break;
    case 3:
      n === _.BIG ? pc(t, e) : n === _.DIR || n === _.DIV || n === _.NAV || n === _.PRE ? sc(t, e) : Xa(t, e);
      break;
    case 4:
      n === _.BODY ? d$(t) : n === _.HTML ? h$(t, e) : n === _.FORM ? p$(t) : n === _.CODE || n === _.FONT || n === _.NOBR ? pc(t, e) : n === _.MAIN || n === _.MENU ? sc(t, e) : Xa(t, e);
      break;
    case 5:
      n === _.ASIDE ? sc(t, e) : n === _.SMALL ? pc(t, e) : Xa(t, e);
      break;
    case 6:
      n === _.CENTER || n === _.FIGURE || n === _.FOOTER || n === _.HEADER || n === _.HGROUP || n === _.DIALOG ? sc(t, e) : n === _.APPLET || n === _.OBJECT ? D_(t, e) : n === _.STRIKE || n === _.STRONG ? pc(t, e) : Xa(t, e);
      break;
    case 7:
      n === _.ADDRESS || n === _.ARTICLE || n === _.DETAILS || n === _.SECTION || n === _.SUMMARY || n === _.LISTING ? sc(t, e) : n === _.MARQUEE ? D_(t, e) : Xa(t, e);
      break;
    case 8:
      n === _.FIELDSET ? sc(t, e) : n === _.TEMPLATE ? Sf(t, e) : Xa(t, e);
      break;
    case 10:
      n === _.BLOCKQUOTE || n === _.FIGCAPTION ? sc(t, e) : Xa(t, e);
      break;
    default:
      Xa(t, e);
  }
}
function Xl(t, e) {
  t.tmplInsertionModeStackTop > -1 ? kw(t, e) : t.stopped = !0;
}
function T$(t, e) {
  e.tagName === _.SCRIPT && (t.pendingScript = t.openElements.current), t.openElements.pop(), t.insertionMode = t.originalInsertionMode;
}
function C$(t, e) {
  t._err(Ei.eofInElementThatCanContainOnlyText), t.openElements.pop(), t.insertionMode = t.originalInsertionMode, t._processToken(e);
}
function Jl(t, e) {
  const n = t.openElements.currentTagName;
  n === _.TABLE || n === _.TBODY || n === _.TFOOT || n === _.THEAD || n === _.TR ? (t.pendingCharacterTokens = [], t.hasNonWhitespacePendingCharacterToken = !1, t.originalInsertionMode = t.insertionMode, t.insertionMode = Cw, t._processToken(e)) : fa(t, e);
}
function S$(t, e) {
  t.openElements.clearBackToTableContext(), t.activeFormattingElements.insertMarker(), t._insertElement(e, nt.HTML), t.insertionMode = lv;
}
function b$(t, e) {
  t.openElements.clearBackToTableContext(), t._insertElement(e, nt.HTML), t.insertionMode = C0;
}
function A$(t, e) {
  t.openElements.clearBackToTableContext(), t._insertFakeElement(_.COLGROUP), t.insertionMode = C0, t._processToken(e);
}
function x$(t, e) {
  t.openElements.clearBackToTableContext(), t._insertElement(e, nt.HTML), t.insertionMode = ya;
}
function _$(t, e) {
  t.openElements.clearBackToTableContext(), t._insertFakeElement(_.TBODY), t.insertionMode = ya, t._processToken(e);
}
function k$(t, e) {
  t.openElements.hasInTableScope(_.TABLE) && (t.openElements.popUntilTagNamePopped(_.TABLE), t._resetInsertionMode(), t._processToken(e));
}
function N$(t, e) {
  const n = $.getTokenAttr(e, yw.TYPE);
  n && n.toLowerCase() === vw ? t._appendElement(e, nt.HTML) : fa(t, e), e.ackSelfClosing = !0;
}
function w$(t, e) {
  !t.formElement && t.openElements.tmplCount === 0 && (t._insertElement(e, nt.HTML), t.formElement = t.openElements.current, t.openElements.pop());
}
function kS(t, e) {
  const n = e.tagName;
  switch (n.length) {
    case 2:
      n === _.TD || n === _.TH || n === _.TR ? _$(t, e) : fa(t, e);
      break;
    case 3:
      n === _.COL ? A$(t, e) : fa(t, e);
      break;
    case 4:
      n === _.FORM ? w$(t, e) : fa(t, e);
      break;
    case 5:
      n === _.TABLE ? k$(t, e) : n === _.STYLE ? Zr(t, e) : n === _.TBODY || n === _.TFOOT || n === _.THEAD ? x$(t, e) : n === _.INPUT ? N$(t, e) : fa(t, e);
      break;
    case 6:
      n === _.SCRIPT ? Zr(t, e) : fa(t, e);
      break;
    case 7:
      n === _.CAPTION ? S$(t, e) : fa(t, e);
      break;
    case 8:
      n === _.COLGROUP ? b$(t, e) : n === _.TEMPLATE ? Zr(t, e) : fa(t, e);
      break;
    default:
      fa(t, e);
  }
}
function NS(t, e) {
  const n = e.tagName;
  n === _.TABLE ? t.openElements.hasInTableScope(_.TABLE) && (t.openElements.popUntilTagNamePopped(_.TABLE), t._resetInsertionMode()) : n === _.TEMPLATE ? Sf(t, e) : n !== _.BODY && n !== _.CAPTION && n !== _.COL && n !== _.COLGROUP && n !== _.HTML && n !== _.TBODY && n !== _.TD && n !== _.TFOOT && n !== _.TH && n !== _.THEAD && n !== _.TR && fa(t, e);
}
function fa(t, e) {
  const n = t.fosterParentingEnabled;
  t.fosterParentingEnabled = !0, t._processTokenInBodyMode(e), t.fosterParentingEnabled = n;
}
function O$(t, e) {
  t.pendingCharacterTokens.push(e);
}
function R$(t, e) {
  t.pendingCharacterTokens.push(e), t.hasNonWhitespacePendingCharacterToken = !0;
}
function Bm(t, e) {
  let n = 0;
  if (t.hasNonWhitespacePendingCharacterToken)
    for (; n < t.pendingCharacterTokens.length; n++)
      fa(t, t.pendingCharacterTokens[n]);
  else
    for (; n < t.pendingCharacterTokens.length; n++)
      t._insertCharacters(t.pendingCharacterTokens[n]);
  t.insertionMode = t.originalInsertionMode, t._processToken(e);
}
function D$(t, e) {
  const n = e.tagName;
  n === _.CAPTION || n === _.COL || n === _.COLGROUP || n === _.TBODY || n === _.TD || n === _.TFOOT || n === _.TH || n === _.THEAD || n === _.TR ? t.openElements.hasInTableScope(_.CAPTION) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(_.CAPTION), t.activeFormattingElements.clearToLastMarker(), t.insertionMode = Mi, t._processToken(e)) : go(t, e);
}
function M$(t, e) {
  const n = e.tagName;
  n === _.CAPTION || n === _.TABLE ? t.openElements.hasInTableScope(_.CAPTION) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(_.CAPTION), t.activeFormattingElements.clearToLastMarker(), t.insertionMode = Mi, n === _.TABLE && t._processToken(e)) : n !== _.BODY && n !== _.COL && n !== _.COLGROUP && n !== _.HTML && n !== _.TBODY && n !== _.TD && n !== _.TFOOT && n !== _.TH && n !== _.THEAD && n !== _.TR && _S(t, e);
}
function L$(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.COL ? (t._appendElement(e, nt.HTML), e.ackSelfClosing = !0) : n === _.TEMPLATE ? Zr(t, e) : By(t, e);
}
function I$(t, e) {
  const n = e.tagName;
  n === _.COLGROUP ? t.openElements.currentTagName === _.COLGROUP && (t.openElements.pop(), t.insertionMode = Mi) : n === _.TEMPLATE ? Sf(t, e) : n !== _.COL && By(t, e);
}
function By(t, e) {
  t.openElements.currentTagName === _.COLGROUP && (t.openElements.pop(), t.insertionMode = Mi, t._processToken(e));
}
function P$(t, e) {
  const n = e.tagName;
  n === _.TR ? (t.openElements.clearBackToTableBodyContext(), t._insertElement(e, nt.HTML), t.insertionMode = au) : n === _.TH || n === _.TD ? (t.openElements.clearBackToTableBodyContext(), t._insertFakeElement(_.TR), t.insertionMode = au, t._processToken(e)) : n === _.CAPTION || n === _.COL || n === _.COLGROUP || n === _.TBODY || n === _.TFOOT || n === _.THEAD ? t.openElements.hasTableBodyContextInTableScope() && (t.openElements.clearBackToTableBodyContext(), t.openElements.pop(), t.insertionMode = Mi, t._processToken(e)) : kS(t, e);
}
function F$(t, e) {
  const n = e.tagName;
  n === _.TBODY || n === _.TFOOT || n === _.THEAD ? t.openElements.hasInTableScope(n) && (t.openElements.clearBackToTableBodyContext(), t.openElements.pop(), t.insertionMode = Mi) : n === _.TABLE ? t.openElements.hasTableBodyContextInTableScope() && (t.openElements.clearBackToTableBodyContext(), t.openElements.pop(), t.insertionMode = Mi, t._processToken(e)) : (n !== _.BODY && n !== _.CAPTION && n !== _.COL && n !== _.COLGROUP || n !== _.HTML && n !== _.TD && n !== _.TH && n !== _.TR) && NS(t, e);
}
function B$(t, e) {
  const n = e.tagName;
  n === _.TH || n === _.TD ? (t.openElements.clearBackToTableRowContext(), t._insertElement(e, nt.HTML), t.insertionMode = uv, t.activeFormattingElements.insertMarker()) : n === _.CAPTION || n === _.COL || n === _.COLGROUP || n === _.TBODY || n === _.TFOOT || n === _.THEAD || n === _.TR ? t.openElements.hasInTableScope(_.TR) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = ya, t._processToken(e)) : kS(t, e);
}
function U$(t, e) {
  const n = e.tagName;
  n === _.TR ? t.openElements.hasInTableScope(_.TR) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = ya) : n === _.TABLE ? t.openElements.hasInTableScope(_.TR) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = ya, t._processToken(e)) : n === _.TBODY || n === _.TFOOT || n === _.THEAD ? (t.openElements.hasInTableScope(n) || t.openElements.hasInTableScope(_.TR)) && (t.openElements.clearBackToTableRowContext(), t.openElements.pop(), t.insertionMode = ya, t._processToken(e)) : (n !== _.BODY && n !== _.CAPTION && n !== _.COL && n !== _.COLGROUP || n !== _.HTML && n !== _.TD && n !== _.TH) && NS(t, e);
}
function H$(t, e) {
  const n = e.tagName;
  n === _.CAPTION || n === _.COL || n === _.COLGROUP || n === _.TBODY || n === _.TD || n === _.TFOOT || n === _.TH || n === _.THEAD || n === _.TR ? (t.openElements.hasInTableScope(_.TD) || t.openElements.hasInTableScope(_.TH)) && (t._closeTableCell(), t._processToken(e)) : go(t, e);
}
function z$(t, e) {
  const n = e.tagName;
  n === _.TD || n === _.TH ? t.openElements.hasInTableScope(n) && (t.openElements.generateImpliedEndTags(), t.openElements.popUntilTagNamePopped(n), t.activeFormattingElements.clearToLastMarker(), t.insertionMode = au) : n === _.TABLE || n === _.TBODY || n === _.TFOOT || n === _.THEAD || n === _.TR ? t.openElements.hasInTableScope(n) && (t._closeTableCell(), t._processToken(e)) : n !== _.BODY && n !== _.CAPTION && n !== _.COL && n !== _.COLGROUP && n !== _.HTML && _S(t, e);
}
function xw(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.OPTION ? (t.openElements.currentTagName === _.OPTION && t.openElements.pop(), t._insertElement(e, nt.HTML)) : n === _.OPTGROUP ? (t.openElements.currentTagName === _.OPTION && t.openElements.pop(), t.openElements.currentTagName === _.OPTGROUP && t.openElements.pop(), t._insertElement(e, nt.HTML)) : n === _.INPUT || n === _.KEYGEN || n === _.TEXTAREA || n === _.SELECT ? t.openElements.hasInSelectScope(_.SELECT) && (t.openElements.popUntilTagNamePopped(_.SELECT), t._resetInsertionMode(), n !== _.SELECT && t._processToken(e)) : (n === _.SCRIPT || n === _.TEMPLATE) && Zr(t, e);
}
function _w(t, e) {
  const n = e.tagName;
  if (n === _.OPTGROUP) {
    const r = t.openElements.items[t.openElements.stackTop - 1], i = r && t.treeAdapter.getTagName(r);
    t.openElements.currentTagName === _.OPTION && i === _.OPTGROUP && t.openElements.pop(), t.openElements.currentTagName === _.OPTGROUP && t.openElements.pop();
  } else
    n === _.OPTION ? t.openElements.currentTagName === _.OPTION && t.openElements.pop() : n === _.SELECT && t.openElements.hasInSelectScope(_.SELECT) ? (t.openElements.popUntilTagNamePopped(_.SELECT), t._resetInsertionMode()) : n === _.TEMPLATE && Sf(t, e);
}
function q$(t, e) {
  const n = e.tagName;
  n === _.CAPTION || n === _.TABLE || n === _.TBODY || n === _.TFOOT || n === _.THEAD || n === _.TR || n === _.TD || n === _.TH ? (t.openElements.popUntilTagNamePopped(_.SELECT), t._resetInsertionMode(), t._processToken(e)) : xw(t, e);
}
function j$(t, e) {
  const n = e.tagName;
  n === _.CAPTION || n === _.TABLE || n === _.TBODY || n === _.TFOOT || n === _.THEAD || n === _.TR || n === _.TD || n === _.TH ? t.openElements.hasInTableScope(n) && (t.openElements.popUntilTagNamePopped(_.SELECT), t._resetInsertionMode(), t._processToken(e)) : _w(t, e);
}
function V$(t, e) {
  const n = e.tagName;
  if (n === _.BASE || n === _.BASEFONT || n === _.BGSOUND || n === _.LINK || n === _.META || n === _.NOFRAMES || n === _.SCRIPT || n === _.STYLE || n === _.TEMPLATE || n === _.TITLE)
    Zr(t, e);
  else {
    const r = xV[n] || cl;
    t._popTmplInsertionMode(), t._pushTmplInsertionMode(r), t.insertionMode = r, t._processToken(e);
  }
}
function $$(t, e) {
  e.tagName === _.TEMPLATE && Sf(t, e);
}
function kw(t, e) {
  t.openElements.tmplCount > 0 ? (t.openElements.popUntilTagNamePopped(_.TEMPLATE), t.activeFormattingElements.clearToLastMarker(), t._popTmplInsertionMode(), t._resetInsertionMode(), t._processToken(e)) : t.stopped = !0;
}
function G$(t, e) {
  e.tagName === _.HTML ? go(t, e) : Uy(t, e);
}
function W$(t, e) {
  e.tagName === _.HTML ? t.fragmentContext || (t.insertionMode = bw) : Uy(t, e);
}
function Uy(t, e) {
  t.insertionMode = cl, t._processToken(e);
}
function K$(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.FRAMESET ? t._insertElement(e, nt.HTML) : n === _.FRAME ? (t._appendElement(e, nt.HTML), e.ackSelfClosing = !0) : n === _.NOFRAMES && Zr(t, e);
}
function Y$(t, e) {
  e.tagName === _.FRAMESET && !t.openElements.isRootHtmlElementCurrent() && (t.openElements.pop(), !t.fragmentContext && t.openElements.currentTagName !== _.FRAMESET && (t.insertionMode = Sw));
}
function Q$(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.NOFRAMES && Zr(t, e);
}
function X$(t, e) {
  e.tagName === _.HTML && (t.insertionMode = Aw);
}
function J$(t, e) {
  e.tagName === _.HTML ? go(t, e) : W9(t, e);
}
function W9(t, e) {
  t.insertionMode = cl, t._processToken(e);
}
function Z$(t, e) {
  const n = e.tagName;
  n === _.HTML ? go(t, e) : n === _.NOFRAMES && Zr(t, e);
}
function eG(t, e) {
  e.chars = TV.REPLACEMENT_CHARACTER, t._insertCharacters(e);
}
function tG(t, e) {
  t._insertCharacters(e), t.framesetOk = !1;
}
function nG(t, e) {
  if (ll.causesExit(e) && !t.fragmentContext) {
    for (; t.treeAdapter.getNamespaceURI(t.openElements.current) !== nt.HTML && !t._isIntegrationPoint(t.openElements.current); )
      t.openElements.pop();
    t._processToken(e);
  } else {
    const n = t._getAdjustedCurrentElement(), r = t.treeAdapter.getNamespaceURI(n);
    r === nt.MATHML ? ll.adjustTokenMathMLAttrs(e) : r === nt.SVG && (ll.adjustTokenSVGTagName(e), ll.adjustTokenSVGAttrs(e)), ll.adjustTokenXMLAttrs(e), e.selfClosing ? t._appendElement(e, r) : t._insertElement(e, r), e.ackSelfClosing = !0;
  }
}
function rG(t, e) {
  for (let n = t.openElements.stackTop; n > 0; n--) {
    const r = t.openElements.items[n];
    if (t.treeAdapter.getNamespaceURI(r) === nt.HTML) {
      t._processToken(e);
      break;
    }
    if (t.treeAdapter.getTagName(r).toLowerCase() === e.tagName) {
      t.openElements.popUntilElementPopped(r);
      break;
    }
  }
}
const Nw = kV;
class S0 {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(e, n, r) {
    this.property = e, this.normal = n, r && (this.space = r);
  }
}
S0.prototype.property = {};
S0.prototype.normal = {};
S0.prototype.space = null;
function ww(t, e) {
  const n = {}, r = {};
  let i = -1;
  for (; ++i < t.length; )
    Object.assign(n, t[i].property), Object.assign(r, t[i].normal);
  return new S0(n, r, e);
}
function m0(t) {
  return t.toLowerCase();
}
class Aa {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(e, n) {
    this.property = e, this.attribute = n;
  }
}
Aa.prototype.space = null;
Aa.prototype.boolean = !1;
Aa.prototype.booleanish = !1;
Aa.prototype.overloadedBoolean = !1;
Aa.prototype.number = !1;
Aa.prototype.commaSeparated = !1;
Aa.prototype.spaceSeparated = !1;
Aa.prototype.commaOrSpaceSeparated = !1;
Aa.prototype.mustUseProperty = !1;
Aa.prototype.defined = !1;
let iG = 0;
const jt = bf(), br = bf(), Ow = bf(), Me = bf(), Hn = bf(), ph = bf(), Po = bf();
function bf() {
  return 2 ** ++iG;
}
const LC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  boolean: jt,
  booleanish: br,
  commaOrSpaceSeparated: Po,
  commaSeparated: ph,
  number: Me,
  overloadedBoolean: Ow,
  spaceSeparated: Hn
}, Symbol.toStringTag, { value: "Module" })), L4 = Object.keys(LC);
class wS extends Aa {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(e, n, r, i) {
    let s = -1;
    if (super(e, n), M_(this, "space", i), typeof r == "number")
      for (; ++s < L4.length; ) {
        const l = L4[s];
        M_(this, L4[s], (r & LC[l]) === LC[l]);
      }
  }
}
wS.prototype.defined = !0;
function M_(t, e, n) {
  n && (t[e] = n);
}
const oG = {}.hasOwnProperty;
function kh(t) {
  const e = {}, n = {};
  let r;
  for (r in t.properties)
    if (oG.call(t.properties, r)) {
      const i = t.properties[r], s = new wS(
        r,
        t.transform(t.attributes || {}, r),
        i,
        t.space
      );
      t.mustUseProperty && t.mustUseProperty.includes(r) && (s.mustUseProperty = !0), e[r] = s, n[m0(r)] = r, n[m0(s.attribute)] = r;
    }
  return new S0(e, n, t.space);
}
const Rw = kh({
  space: "xlink",
  transform(t, e) {
    return "xlink:" + e.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
}), Dw = kh({
  space: "xml",
  transform(t, e) {
    return "xml:" + e.slice(3).toLowerCase();
  },
  properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
});
function Mw(t, e) {
  return e in t ? t[e] : e;
}
function Lw(t, e) {
  return Mw(t, e.toLowerCase());
}
const Iw = kh({
  space: "xmlns",
  attributes: { xmlnsxlink: "xmlns:xlink" },
  transform: Lw,
  properties: { xmlns: null, xmlnsXLink: null }
}), Pw = kh({
  transform(t, e) {
    return e === "role" ? e : "aria-" + e.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: br,
    ariaAutoComplete: null,
    ariaBusy: br,
    ariaChecked: br,
    ariaColCount: Me,
    ariaColIndex: Me,
    ariaColSpan: Me,
    ariaControls: Hn,
    ariaCurrent: null,
    ariaDescribedBy: Hn,
    ariaDetails: null,
    ariaDisabled: br,
    ariaDropEffect: Hn,
    ariaErrorMessage: null,
    ariaExpanded: br,
    ariaFlowTo: Hn,
    ariaGrabbed: br,
    ariaHasPopup: null,
    ariaHidden: br,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: Hn,
    ariaLevel: Me,
    ariaLive: null,
    ariaModal: br,
    ariaMultiLine: br,
    ariaMultiSelectable: br,
    ariaOrientation: null,
    ariaOwns: Hn,
    ariaPlaceholder: null,
    ariaPosInSet: Me,
    ariaPressed: br,
    ariaReadOnly: br,
    ariaRelevant: null,
    ariaRequired: br,
    ariaRoleDescription: Hn,
    ariaRowCount: Me,
    ariaRowIndex: Me,
    ariaRowSpan: Me,
    ariaSelected: br,
    ariaSetSize: Me,
    ariaSort: null,
    ariaValueMax: Me,
    ariaValueMin: Me,
    ariaValueNow: Me,
    ariaValueText: null,
    role: null
  }
}), aG = kh({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: Lw,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: ph,
    acceptCharset: Hn,
    accessKey: Hn,
    action: null,
    allow: null,
    allowFullScreen: jt,
    allowPaymentRequest: jt,
    allowUserMedia: jt,
    alt: null,
    as: null,
    async: jt,
    autoCapitalize: null,
    autoComplete: Hn,
    autoFocus: jt,
    autoPlay: jt,
    capture: jt,
    charSet: null,
    checked: jt,
    cite: null,
    className: Hn,
    cols: Me,
    colSpan: null,
    content: null,
    contentEditable: br,
    controls: jt,
    controlsList: Hn,
    coords: Me | ph,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: jt,
    defer: jt,
    dir: null,
    dirName: null,
    disabled: jt,
    download: Ow,
    draggable: br,
    encType: null,
    enterKeyHint: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: jt,
    formTarget: null,
    headers: Hn,
    height: Me,
    hidden: jt,
    high: Me,
    href: null,
    hrefLang: null,
    htmlFor: Hn,
    httpEquiv: Hn,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: jt,
    itemId: null,
    itemProp: Hn,
    itemRef: Hn,
    itemScope: jt,
    itemType: Hn,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: jt,
    low: Me,
    manifest: null,
    max: null,
    maxLength: Me,
    media: null,
    method: null,
    min: null,
    minLength: Me,
    multiple: jt,
    muted: jt,
    name: null,
    nonce: null,
    noModule: jt,
    noValidate: jt,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: jt,
    optimum: Me,
    pattern: null,
    ping: Hn,
    placeholder: null,
    playsInline: jt,
    poster: null,
    preload: null,
    readOnly: jt,
    referrerPolicy: null,
    rel: Hn,
    required: jt,
    reversed: jt,
    rows: Me,
    rowSpan: Me,
    sandbox: Hn,
    scope: null,
    scoped: jt,
    seamless: jt,
    selected: jt,
    shape: null,
    size: Me,
    sizes: null,
    slot: null,
    span: Me,
    spellCheck: br,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: Me,
    step: null,
    style: null,
    tabIndex: Me,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: jt,
    useMap: null,
    value: br,
    width: Me,
    wrap: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: Hn,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: Me,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: Me,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: jt,
    // Lists. Use CSS to reduce space between items instead
    declare: jt,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: Me,
    // `<img>` and `<object>`
    leftMargin: Me,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: Me,
    // `<body>`
    marginWidth: Me,
    // `<body>`
    noResize: jt,
    // `<frame>`
    noHref: jt,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: jt,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: jt,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: Me,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: br,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: Me,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: Me,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: jt,
    disableRemotePlayback: jt,
    prefix: null,
    property: null,
    results: Me,
    security: null,
    unselectable: null
  }
}), sG = kh({
  space: "svg",
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  transform: Mw,
  properties: {
    about: Po,
    accentHeight: Me,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: Me,
    amplitude: Me,
    arabicForm: null,
    ascent: Me,
    attributeName: null,
    attributeType: null,
    azimuth: Me,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: Me,
    by: null,
    calcMode: null,
    capHeight: Me,
    className: Hn,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: Me,
    diffuseConstant: Me,
    direction: null,
    display: null,
    dur: null,
    divisor: Me,
    dominantBaseline: null,
    download: jt,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: Me,
    enableBackground: null,
    end: null,
    event: null,
    exponent: Me,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: Me,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: ph,
    g2: ph,
    glyphName: ph,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: Me,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: Me,
    horizOriginX: Me,
    horizOriginY: Me,
    id: null,
    ideographic: Me,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: Me,
    k: Me,
    k1: Me,
    k2: Me,
    k3: Me,
    k4: Me,
    kernelMatrix: Po,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: Me,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: Me,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: Me,
    overlineThickness: Me,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: Me,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: Hn,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: Me,
    pointsAtY: Me,
    pointsAtZ: Me,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: Po,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: Po,
    rev: Po,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: Po,
    requiredFeatures: Po,
    requiredFonts: Po,
    requiredFormats: Po,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: Me,
    specularExponent: Me,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: Me,
    strikethroughThickness: Me,
    string: null,
    stroke: null,
    strokeDashArray: Po,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: Me,
    strokeOpacity: Me,
    strokeWidth: null,
    style: null,
    surfaceScale: Me,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: Po,
    tabIndex: Me,
    tableValues: null,
    target: null,
    targetX: Me,
    targetY: Me,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: Po,
    to: null,
    transform: null,
    u1: null,
    u2: null,
    underlinePosition: Me,
    underlineThickness: Me,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: Me,
    values: null,
    vAlphabetic: Me,
    vMathematical: Me,
    vectorEffect: null,
    vHanging: Me,
    vIdeographic: Me,
    version: null,
    vertAdvY: Me,
    vertOriginX: Me,
    vertOriginY: Me,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: Me,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
}), lG = /^data[-\w.:]+$/i, L_ = /-[a-z]/g, uG = /[A-Z]/g;
function b0(t, e) {
  const n = m0(e);
  let r = e, i = Aa;
  if (n in t.normal)
    return t.property[t.normal[n]];
  if (n.length > 4 && n.slice(0, 4) === "data" && lG.test(e)) {
    if (e.charAt(4) === "-") {
      const s = e.slice(5).replace(L_, fG);
      r = "data" + s.charAt(0).toUpperCase() + s.slice(1);
    } else {
      const s = e.slice(4);
      if (!L_.test(s)) {
        let l = s.replace(uG, cG);
        l.charAt(0) !== "-" && (l = "-" + l), e = "data" + l;
      }
    }
    i = wS;
  }
  return new i(r, e);
}
function cG(t) {
  return "-" + t.toLowerCase();
}
function fG(t) {
  return t.charAt(1).toUpperCase();
}
const Nh = ww([Dw, Rw, Iw, Pw, aG], "html"), lu = ww([Dw, Rw, Iw, Pw, sG], "svg"), I_ = /[#.]/g;
function dG(t, e) {
  const n = t || "", r = {};
  let i = 0, s, l;
  for (; i < n.length; ) {
    I_.lastIndex = i;
    const c = I_.exec(n), h = n.slice(i, c ? c.index : n.length);
    h && (s ? s === "#" ? r.id = h : Array.isArray(r.className) ? r.className.push(h) : r.className = [h] : l = h, i += h.length), c && (s = c[0], i++);
  }
  return {
    type: "element",
    // @ts-expect-error: fine.
    tagName: l || e || "div",
    properties: r,
    children: []
  };
}
function P_(t) {
  const e = String(t || "").trim();
  return e ? e.split(/[ \t\n\r\f]+/g) : [];
}
function OS(t) {
  return t.join(" ").trim();
}
function IC(t) {
  const e = [], n = String(t || "");
  let r = n.indexOf(","), i = 0, s = !1;
  for (; !s; ) {
    r === -1 && (r = n.length, s = !0);
    const l = n.slice(i, r).trim();
    (l || !s) && e.push(l), i = r + 1, r = n.indexOf(",", i);
  }
  return e;
}
function RS(t, e) {
  const n = e || {};
  return (t[t.length - 1] === "" ? [...t, ""] : t).join(
    (n.padRight ? " " : "") + "," + (n.padLeft === !1 ? "" : " ")
  ).trim();
}
const hG = /* @__PURE__ */ new Set(["menu", "submit", "reset", "button"]), PC = {}.hasOwnProperty;
function Fw(t, e, n) {
  const r = n && yG(n);
  return (
    /**
     * @type {{
     *   (): Root
     *   (selector: null | undefined, ...children: Array<HChild>): Root
     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element
     *   (selector: string, ...children: Array<HChild>): Element
     * }}
     */
    /**
     * Hyperscript compatible DSL for creating virtual hast trees.
     *
     * @param {string | null} [selector]
     * @param {HProperties | HChild} [properties]
     * @param {Array<HChild>} children
     * @returns {HResult}
     */
    function(s, l, ...c) {
      let h = -1, g;
      if (s == null)
        g = { type: "root", children: [] }, c.unshift(l);
      else if (g = dG(s, e), g.tagName = g.tagName.toLowerCase(), r && PC.call(r, g.tagName) && (g.tagName = r[g.tagName]), pG(l, g.tagName)) {
        let v;
        for (v in l)
          PC.call(l, v) && mG(t, g.properties, v, l[v]);
      } else
        c.unshift(l);
      for (; ++h < c.length; )
        FC(g.children, c[h]);
      return g.type === "element" && g.tagName === "template" && (g.content = { type: "root", children: g.children }, g.children = []), g;
    }
  );
}
function pG(t, e) {
  return t == null || typeof t != "object" || Array.isArray(t) ? !1 : e === "input" || !t.type || typeof t.type != "string" ? !0 : "children" in t && Array.isArray(t.children) ? !1 : e === "button" ? hG.has(t.type.toLowerCase()) : !("value" in t);
}
function mG(t, e, n, r) {
  const i = b0(t, n);
  let s = -1, l;
  if (r != null) {
    if (typeof r == "number") {
      if (Number.isNaN(r))
        return;
      l = r;
    } else
      typeof r == "boolean" ? l = r : typeof r == "string" ? i.spaceSeparated ? l = P_(r) : i.commaSeparated ? l = IC(r) : i.commaOrSpaceSeparated ? l = P_(IC(r).join(" ")) : l = F_(i, i.property, r) : Array.isArray(r) ? l = r.concat() : l = i.property === "style" ? gG(r) : String(r);
    if (Array.isArray(l)) {
      const c = [];
      for (; ++s < l.length; )
        c[s] = F_(i, i.property, l[s]);
      l = c;
    }
    i.property === "className" && Array.isArray(e.className) && (l = e.className.concat(l)), e[i.property] = l;
  }
}
function FC(t, e) {
  let n = -1;
  if (e != null)
    if (typeof e == "string" || typeof e == "number")
      t.push({ type: "text", value: String(e) });
    else if (Array.isArray(e))
      for (; ++n < e.length; )
        FC(t, e[n]);
    else if (typeof e == "object" && "type" in e)
      e.type === "root" ? FC(t, e.children) : t.push(e);
    else
      throw new Error("Expected node, nodes, or string, got `" + e + "`");
}
function F_(t, e, n) {
  if (typeof n == "string") {
    if (t.number && n && !Number.isNaN(Number(n)))
      return Number(n);
    if ((t.boolean || t.overloadedBoolean) && (n === "" || m0(n) === m0(e)))
      return !0;
  }
  return n;
}
function gG(t) {
  const e = [];
  let n;
  for (n in t)
    PC.call(t, n) && e.push([n, t[n]].join(": "));
  return e.join("; ");
}
function yG(t) {
  const e = {};
  let n = -1;
  for (; ++n < t.length; )
    e[t[n].toLowerCase()] = t[n];
  return e;
}
const Bw = Fw(Nh, "div"), vG = [
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "clipPath",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feDropShadow",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "foreignObject",
  "glyphRef",
  "linearGradient",
  "radialGradient",
  "solidColor",
  "textArea",
  "textPath"
], EG = Fw(lu, "g", vG);
function TG(t) {
  const e = String(t), n = [], r = /\r?\n|\r/g;
  for (; r.test(e); )
    n.push(r.lastIndex);
  return n.push(e.length + 1), { toPoint: i, toOffset: s };
  function i(l) {
    let c = -1;
    if (typeof l == "number" && l > -1 && l < n[n.length - 1]) {
      for (; ++c < n.length; )
        if (n[c] > l)
          return {
            line: c + 1,
            column: l - (c > 0 ? n[c - 1] : 0) + 1,
            offset: l
          };
    }
    return { line: void 0, column: void 0, offset: void 0 };
  }
  function s(l) {
    const c = l && l.line, h = l && l.column;
    if (typeof c == "number" && typeof h == "number" && !Number.isNaN(c) && !Number.isNaN(h) && c - 1 in n) {
      const g = (n[c - 2] || 0) + h - 1 || 0;
      if (g > -1 && g < n[n.length - 1])
        return g;
    }
    return -1;
  }
}
const g0 = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg",
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
}, Uw = {}.hasOwnProperty, CG = Object.prototype;
function Hw(t, e) {
  const n = e || {};
  let r, i;
  return AG(n) ? (i = n, r = {}) : (i = n.file || void 0, r = n), DS(
    {
      schema: r.space === "svg" ? lu : Nh,
      file: i,
      verbose: r.verbose,
      location: !1
    },
    t
  );
}
function DS(t, e) {
  let n;
  switch (e.nodeName) {
    case "#comment": {
      const r = (
        /** @type {P5Comment} */
        e
      );
      return n = { type: "comment", value: r.data }, K9(t, r, n), n;
    }
    case "#document":
    case "#document-fragment": {
      const r = (
        /** @type {P5Document | P5DocumentFragment} */
        e
      ), i = "mode" in r ? r.mode === "quirks" || r.mode === "limited-quirks" : !1;
      if (n = {
        type: "root",
        children: zw(t, e.childNodes),
        data: { quirksMode: i }
      }, t.file && t.location) {
        const s = String(t.file), l = TG(s), c = l.toPoint(0), h = l.toPoint(s.length);
        n.position = { start: c, end: h };
      }
      return n;
    }
    case "#documentType": {
      const r = (
        /** @type {P5DocumentType} */
        e
      );
      return n = { type: "doctype" }, K9(t, r, n), n;
    }
    case "#text": {
      const r = (
        /** @type {P5Text} */
        e
      );
      return n = { type: "text", value: r.value }, K9(t, r, n), n;
    }
    default:
      return n = SG(
        t,
        /** @type {P5Element} */
        e
      ), n;
  }
}
function zw(t, e) {
  let n = -1;
  const r = [];
  for (; ++n < e.length; )
    r[n] = DS(t, e[n]);
  return r;
}
function SG(t, e) {
  const n = t.schema;
  t.schema = e.namespaceURI === g0.svg ? lu : Nh;
  let r = -1;
  const i = {};
  for (; ++r < e.attrs.length; ) {
    const c = e.attrs[r], h = (c.prefix ? c.prefix + ":" : "") + c.name;
    Uw.call(CG, h) || (i[h] = c.value);
  }
  const l = (t.schema.space === "svg" ? EG : Bw)(e.tagName, i, zw(t, e.childNodes));
  if (K9(t, e, l), l.tagName === "template") {
    const c = (
      /** @type {P5Template} */
      e
    ), h = c.sourceCodeLocation, g = h && h.startTag && sh(h.startTag), v = h && h.endTag && sh(h.endTag), C = DS(t, c.content);
    g && v && t.file && (C.position = { start: g.end, end: v.start }), l.content = C;
  }
  return t.schema = n, l;
}
function K9(t, e, n) {
  if ("sourceCodeLocation" in e && e.sourceCodeLocation && t.file) {
    const r = bG(t, n, e.sourceCodeLocation);
    r && (t.location = !0, n.position = r);
  }
}
function bG(t, e, n) {
  const r = sh(n);
  if (e.type === "element") {
    const i = e.children[e.children.length - 1];
    if (r && !n.endTag && i && i.position && i.position.end && (r.end = Object.assign({}, i.position.end)), t.verbose) {
      const s = {};
      let l;
      if (n.attrs)
        for (l in n.attrs)
          Uw.call(n.attrs, l) && (s[b0(t.schema, l).property] = sh(
            n.attrs[l]
          ));
      e.data = {
        position: {
          // @ts-expect-error: assume not `undefined`.
          opening: sh(n.startTag),
          closing: n.endTag ? sh(n.endTag) : null,
          properties: s
        }
      };
    }
  }
  return r;
}
function sh(t) {
  const e = B_({
    line: t.startLine,
    column: t.startCol,
    offset: t.startOffset
  }), n = B_({
    line: t.endLine,
    column: t.endCol,
    offset: t.endOffset
  });
  return e || n ? { start: e, end: n } : void 0;
}
function B_(t) {
  return t.line && t.column ? t : void 0;
}
function AG(t) {
  return "messages" in t;
}
const xG = {
  abandonedHeadElementChild: {
    reason: "Unexpected metadata element after head",
    description: "Unexpected element after head. Expected the element before `</head>`",
    url: !1
  },
  abruptClosingOfEmptyComment: {
    reason: "Unexpected abruptly closed empty comment",
    description: "Unexpected `>` or `->`. Expected `-->` to close comments"
  },
  abruptDoctypePublicIdentifier: {
    reason: "Unexpected abruptly closed public identifier",
    description: "Unexpected `>`. Expected a closing `\"` or `'` after the public identifier"
  },
  abruptDoctypeSystemIdentifier: {
    reason: "Unexpected abruptly closed system identifier",
    description: "Unexpected `>`. Expected a closing `\"` or `'` after the identifier identifier"
  },
  absenceOfDigitsInNumericCharacterReference: {
    reason: "Unexpected non-digit at start of numeric character reference",
    description: "Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references"
  },
  cdataInHtmlContent: {
    reason: "Unexpected CDATA section in HTML",
    description: "Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead"
  },
  characterReferenceOutsideUnicodeRange: {
    reason: "Unexpected too big numeric character reference",
    description: "Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)"
  },
  closingOfElementWithOpenChildElements: {
    reason: "Unexpected closing tag with open child elements",
    description: "Unexpectedly closing tag. Expected other tags to be closed first",
    url: !1
  },
  controlCharacterInInputStream: {
    reason: "Unexpected control character",
    description: "Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace"
  },
  controlCharacterReference: {
    reason: "Unexpected control character reference",
    description: "Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace"
  },
  disallowedContentInNoscriptInHead: {
    reason: "Disallowed content inside `<noscript>` in `<head>`",
    description: "Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`",
    url: !1
  },
  duplicateAttribute: {
    reason: "Unexpected duplicate attribute",
    description: "Unexpectedly double attribute. Expected attributes to occur only once"
  },
  endTagWithAttributes: {
    reason: "Unexpected attribute on closing tag",
    description: "Unexpected attribute. Expected `>` instead"
  },
  endTagWithTrailingSolidus: {
    reason: "Unexpected slash at end of closing tag",
    description: "Unexpected `%c-1`. Expected `>` instead"
  },
  endTagWithoutMatchingOpenElement: {
    reason: "Unexpected unopened end tag",
    description: "Unexpected end tag. Expected no end tag or another end tag",
    url: !1
  },
  eofBeforeTagName: {
    reason: "Unexpected end of file",
    description: "Unexpected end of file. Expected tag name instead"
  },
  eofInCdata: {
    reason: "Unexpected end of file in CDATA",
    description: "Unexpected end of file. Expected `]]>` to close the CDATA"
  },
  eofInComment: {
    reason: "Unexpected end of file in comment",
    description: "Unexpected end of file. Expected `-->` to close the comment"
  },
  eofInDoctype: {
    reason: "Unexpected end of file in doctype",
    description: "Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)"
  },
  eofInElementThatCanContainOnlyText: {
    reason: "Unexpected end of file in element that can only contain text",
    description: "Unexpected end of file. Expected text or a closing tag",
    url: !1
  },
  eofInScriptHtmlCommentLikeText: {
    reason: "Unexpected end of file in comment inside script",
    description: "Unexpected end of file. Expected `-->` to close the comment"
  },
  eofInTag: {
    reason: "Unexpected end of file in tag",
    description: "Unexpected end of file. Expected `>` to close the tag"
  },
  incorrectlyClosedComment: {
    reason: "Incorrectly closed comment",
    description: "Unexpected `%c-1`. Expected `-->` to close the comment"
  },
  incorrectlyOpenedComment: {
    reason: "Incorrectly opened comment",
    description: "Unexpected `%c`. Expected `<!--` to open the comment"
  },
  invalidCharacterSequenceAfterDoctypeName: {
    reason: "Invalid sequence after doctype name",
    description: "Unexpected sequence at `%c`. Expected `public` or `system`"
  },
  invalidFirstCharacterOfTagName: {
    reason: "Invalid first character in tag name",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  misplacedDoctype: {
    reason: "Misplaced doctype",
    description: "Unexpected doctype. Expected doctype before head",
    url: !1
  },
  misplacedStartTagForHeadElement: {
    reason: "Misplaced `<head>` start tag",
    description: "Unexpected start tag `<head>`. Expected `<head>` directly after doctype",
    url: !1
  },
  missingAttributeValue: {
    reason: "Missing attribute value",
    description: "Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead"
  },
  missingDoctype: {
    reason: "Missing doctype before other content",
    description: "Expected a `<!doctype html>` before anything else",
    url: !1
  },
  missingDoctypeName: {
    reason: "Missing doctype name",
    description: "Unexpected doctype end at `%c`. Expected `html` instead"
  },
  missingDoctypePublicIdentifier: {
    reason: "Missing public identifier in doctype",
    description: "Unexpected `%c`. Expected identifier for `public` instead"
  },
  missingDoctypeSystemIdentifier: {
    reason: "Missing system identifier in doctype",
    description: 'Unexpected `%c`. Expected identifier for `system` instead (suggested: `"about:legacy-compat"`)'
  },
  missingEndTagName: {
    reason: "Missing name in end tag",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  missingQuoteBeforeDoctypePublicIdentifier: {
    reason: "Missing quote before public identifier in doctype",
    description: "Unexpected `%c`. Expected `\"` or `'` instead"
  },
  missingQuoteBeforeDoctypeSystemIdentifier: {
    reason: "Missing quote before system identifier in doctype",
    description: "Unexpected `%c`. Expected `\"` or `'` instead"
  },
  missingSemicolonAfterCharacterReference: {
    reason: "Missing semicolon after character reference",
    description: "Unexpected `%c`. Expected `;` instead"
  },
  missingWhitespaceAfterDoctypePublicKeyword: {
    reason: "Missing whitespace after public identifier in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceAfterDoctypeSystemKeyword: {
    reason: "Missing whitespace after system identifier in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBeforeDoctypeName: {
    reason: "Missing whitespace before doctype name",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBetweenAttributes: {
    reason: "Missing whitespace between attributes",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {
    reason: "Missing whitespace between public and system identifiers in doctype",
    description: "Unexpected `%c`. Expected ASCII whitespace instead"
  },
  nestedComment: {
    reason: "Unexpected nested comment",
    description: "Unexpected `<!--`. Expected `-->`"
  },
  nestedNoscriptInHead: {
    reason: "Unexpected nested `<noscript>` in `<head>`",
    description: "Unexpected `<noscript>`. Expected a closing tag or a meta element",
    url: !1
  },
  nonConformingDoctype: {
    reason: "Unexpected non-conforming doctype declaration",
    description: 'Expected `<!doctype html>` or `<!doctype html system "about:legacy-compat">`',
    url: !1
  },
  nonVoidHtmlElementStartTagWithTrailingSolidus: {
    reason: "Unexpected trailing slash on start tag of non-void element",
    description: "Unexpected `/`. Expected `>` instead"
  },
  noncharacterCharacterReference: {
    reason: "Unexpected noncharacter code point referenced by character reference",
    description: "Unexpected code point. Do not use noncharacters in HTML"
  },
  noncharacterInInputStream: {
    reason: "Unexpected noncharacter character",
    description: "Unexpected code point `%x`. Do not use noncharacters in HTML"
  },
  nullCharacterReference: {
    reason: "Unexpected NULL character referenced by character reference",
    description: "Unexpected code point. Do not use NULL characters in HTML"
  },
  openElementsLeftAfterEof: {
    reason: "Unexpected end of file",
    description: "Unexpected end of file. Expected closing tag instead",
    url: !1
  },
  surrogateCharacterReference: {
    reason: "Unexpected surrogate character referenced by character reference",
    description: "Unexpected code point. Do not use lone surrogate characters in HTML"
  },
  surrogateInInputStream: {
    reason: "Unexpected surrogate character",
    description: "Unexpected code point `%x`. Do not use lone surrogate characters in HTML"
  },
  unexpectedCharacterAfterDoctypeSystemIdentifier: {
    reason: "Invalid character after system identifier in doctype",
    description: "Unexpected character at `%c`. Expected `>`"
  },
  unexpectedCharacterInAttributeName: {
    reason: "Unexpected character in attribute name",
    description: "Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter"
  },
  unexpectedCharacterInUnquotedAttributeValue: {
    reason: "Unexpected character in unquoted attribute value",
    description: "Unexpected `%c`. Quote the attribute value to include it"
  },
  unexpectedEqualsSignBeforeAttributeName: {
    reason: "Unexpected equals sign before attribute name",
    description: "Unexpected `%c`. Add an attribute name before it"
  },
  unexpectedNullCharacter: {
    reason: "Unexpected NULL character",
    description: "Unexpected code point `%x`. Do not use NULL characters in HTML"
  },
  unexpectedQuestionMarkInsteadOfTagName: {
    reason: "Unexpected question mark instead of tag name",
    description: "Unexpected `%c`. Expected an ASCII letter instead"
  },
  unexpectedSolidusInTag: {
    reason: "Unexpected slash in tag",
    description: "Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value"
  },
  unknownNamedCharacterReference: {
    reason: "Unexpected unknown named character reference",
    description: "Unexpected character reference. Expected known named character references"
  }
}, _G = "https://html.spec.whatwg.org/multipage/parsing.html#parse-error-", kG = { 2: !0, 1: !1, 0: null };
function qw(t) {
  const e = (
    /** @type {Options} */
    this.data("settings")
  ), n = Object.assign({}, e, t);
  Object.assign(this, { Parser: r });
  function r(i, s) {
    const l = n.fragment ? "parseFragment" : "parse", c = n.emitParseErrors ? g : null, h = new Nw({
      sourceCodeLocationInfo: !0,
      onParseError: c,
      scriptingEnabled: !1
    });
    return Hw(h[l](i), {
      space: n.space,
      file: s,
      verbose: n.verbose
    });
    function g(v) {
      const C = v.code, S = NG(C), b = n[S], N = b ?? !0, O = typeof N == "number" ? N : N ? 1 : 0, L = {
        line: v.startLine,
        column: v.startCol,
        offset: v.startOffset
      }, P = {
        line: v.endLine,
        column: v.endCol,
        offset: v.endOffset
      };
      if (O) {
        const j = xG[S] || { reason: "", description: "", url: "" }, oe = s.message(Y(j.reason), { start: L, end: P });
        oe.source = "parse-error", oe.ruleId = C, oe.fatal = kG[O], oe.note = Y(j.description), oe.url = "url" in j && j.url === !1 ? null : _G + C;
      }
      function Y(j) {
        return j.replace(/%c(?:-(\d+))?/g, (oe, ee) => {
          const z = ee ? -Number.parseInt(ee, 10) : 0, H = i.charAt(v.startOffset + z);
          return H === "`" ? "` ` `" : H;
        }).replace(
          /%x/g,
          () => "0x" + i.charCodeAt(v.startOffset).toString(16).toUpperCase()
        );
      }
    }
  }
}
function NG(t) {
  return t.replace(/-[a-z]/g, (e) => e.charAt(1).toUpperCase());
}
const Ac = (
  /**
   * @type {(
   *   (() => false) &
   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &
   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)
   * )}
   */
  /**
   * @param {unknown} [node]
   * @param {Test | undefined} [test]
   * @param {number | null | undefined} [index]
   * @param {Parent | null | undefined} [parent]
   * @param {unknown} [context]
   * @returns {boolean}
   */
  // eslint-disable-next-line max-params
  function(t, e, n, r, i) {
    const s = In(e);
    if (n != null && (typeof n != "number" || n < 0 || n === Number.POSITIVE_INFINITY))
      throw new Error("Expected positive finite index for child node");
    if (r != null && (!r.type || !r.children))
      throw new Error("Expected parent node");
    if (!t || !t.type || typeof t.type != "string")
      return !1;
    if (r == null != (n == null))
      throw new Error("Expected both parent and index");
    return s.call(i, t, n, r);
  }
), In = (
  /**
   * @type {(
   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test | null | undefined} [test]
   * @returns {AssertAnything}
   */
  function(t) {
    if (t == null)
      return MS;
    if (typeof t == "string")
      return OG(t);
    if (typeof t == "object")
      return wG(t);
    if (typeof t == "function")
      return jw(t);
    throw new Error("Expected function, string, or array as test");
  }
);
function wG(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = In(t[n]);
  return jw(r);
  function r(...i) {
    let s = -1;
    for (; ++s < e.length; )
      if (e[s].call(this, ...i))
        return !0;
    return !1;
  }
}
function OG(t) {
  return e;
  function e(n) {
    return MS(n) && n.tagName === t;
  }
}
function jw(t) {
  return e;
  function e(n, ...r) {
    return MS(n) && Boolean(t.call(this, n, ...r));
  }
}
function MS(t) {
  return Boolean(
    t && typeof t == "object" && // @ts-expect-error Looks like a node.
    t.type === "element" && // @ts-expect-error Looks like an element.
    typeof t.tagName == "string"
  );
}
const LS = In([
  "audio",
  "canvas",
  "embed",
  "iframe",
  "img",
  "math",
  "object",
  "picture",
  "svg",
  "video"
]), wh = (
  /**
   * @type {(
   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {AssertAnything}
   */
  function(t) {
    if (t == null)
      return LG;
    if (typeof t == "string")
      return MG(t);
    if (typeof t == "object")
      return Array.isArray(t) ? RG(t) : DG(t);
    if (typeof t == "function")
      return fv(t);
    throw new Error("Expected function, string, or object as test");
  }
);
function RG(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e[n] = wh(t[n]);
  return fv(r);
  function r(...i) {
    let s = -1;
    for (; ++s < e.length; )
      if (e[s].call(this, ...i))
        return !0;
    return !1;
  }
}
function DG(t) {
  return fv(e);
  function e(n) {
    let r;
    for (r in t)
      if (n[r] !== t[r])
        return !1;
    return !0;
  }
}
function MG(t) {
  return fv(e);
  function e(n) {
    return n && n.type === t;
  }
}
function fv(t) {
  return e;
  function e(n, ...r) {
    return Boolean(
      n && typeof n == "object" && "type" in n && // @ts-expect-error: fine.
      Boolean(t.call(this, n, ...r))
    );
  }
}
function LG() {
  return !0;
}
function xc(t) {
  const e = (
    // @ts-expect-error looks like a node.
    t && typeof t == "object" && t.type === "text" ? (
      // @ts-expect-error looks like a text.
      t.value || ""
    ) : t
  );
  return typeof e == "string" && e.replace(/[ \t\n\f\r]/g, "") === "";
}
const IG = [
  "address",
  // Flow content.
  "article",
  // Sections and headings.
  "aside",
  // Sections and headings.
  "blockquote",
  // Flow content.
  "body",
  // Page.
  "br",
  // Contribute whitespace intrinsically.
  "caption",
  // Similar to block.
  "center",
  // Flow content, legacy.
  "col",
  // Similar to block.
  "colgroup",
  // Similar to block.
  "dd",
  // Lists.
  "dialog",
  // Flow content.
  "dir",
  // Lists, legacy.
  "div",
  // Flow content.
  "dl",
  // Lists.
  "dt",
  // Lists.
  "figcaption",
  // Flow content.
  "figure",
  // Flow content.
  "footer",
  // Flow content.
  "form",
  // Flow content.
  "h1",
  // Sections and headings.
  "h2",
  // Sections and headings.
  "h3",
  // Sections and headings.
  "h4",
  // Sections and headings.
  "h5",
  // Sections and headings.
  "h6",
  // Sections and headings.
  "head",
  // Page.
  "header",
  // Flow content.
  "hgroup",
  // Sections and headings.
  "hr",
  // Flow content.
  "html",
  // Page.
  "legend",
  // Flow content.
  "li",
  // Block-like.
  "li",
  // Similar to block.
  "listing",
  // Flow content, legacy
  "main",
  // Flow content.
  "menu",
  // Lists.
  "nav",
  // Sections and headings.
  "ol",
  // Lists.
  "optgroup",
  // Similar to block.
  "option",
  // Similar to block.
  "p",
  // Flow content.
  "plaintext",
  // Flow content, legacy
  "pre",
  // Flow content.
  "section",
  // Sections and headings.
  "summary",
  // Similar to block.
  "table",
  // Similar to block.
  "tbody",
  // Similar to block.
  "td",
  // Block-like.
  "td",
  // Similar to block.
  "tfoot",
  // Similar to block.
  "th",
  // Block-like.
  "th",
  // Similar to block.
  "thead",
  // Similar to block.
  "tr",
  // Similar to block.
  "ul",
  // Lists.
  "wbr",
  // Contribute whitespace intrinsically.
  "xmp"
  // Flow content, legacy
], PG = [
  // Form.
  "button",
  "input",
  "select",
  "textarea"
], FG = [
  "area",
  "base",
  "basefont",
  "dialog",
  "datalist",
  "head",
  "link",
  "meta",
  "noembed",
  "noframes",
  "param",
  "rp",
  "script",
  "source",
  "style",
  "template",
  "track",
  "title"
], IS = wh(["doctype", "comment"]);
function Vw(t = {}) {
  const e = VG(
    t.newlines ? qG : jG
  );
  return (n) => {
    $w(n, { collapse: e, whitespace: "normal" });
  };
}
function $w(t, e) {
  if ("children" in t) {
    const n = Object.assign({}, e);
    return (t.type === "root" || Kw(t)) && (n.before = !0, n.after = !0), n.whitespace = $G(t, e), UG(t, n);
  }
  if (t.type === "text") {
    if (e.whitespace === "normal")
      return BG(t, e);
    e.whitespace === "nowrap" && (t.value = e.collapse(t.value));
  }
  return { remove: !1, ignore: IS(t), stripAtStart: !1 };
}
function BG(t, e) {
  const n = e.collapse(t.value), r = { remove: !1, ignore: !1, stripAtStart: !1 };
  let i = 0, s = n.length;
  return e.before && U_(n.charAt(0)) && i++, i !== s && U_(n.charAt(s - 1)) && (e.after ? s-- : r.stripAtStart = !0), i === s ? r.remove = !0 : t.value = n.slice(i, s), r;
}
function UG(t, e) {
  let n = e.before;
  const r = e.after, i = t.children;
  let s = i.length, l = -1;
  for (; ++l < s; ) {
    const c = $w(
      i[l],
      Object.assign({}, e, {
        before: n,
        after: Gw(i, l, r)
      })
    );
    c.remove ? (i.splice(l, 1), l--, s--) : c.ignore || (n = c.stripAtStart), Ww(i[l]) && (n = !1);
  }
  return { remove: !1, ignore: !1, stripAtStart: Boolean(n || r) };
}
function Gw(t, e, n) {
  for (; ++e < t.length; ) {
    const r = t[e];
    let i = HG(r);
    if (i === void 0 && "children" in r && !zG(r) && (i = Gw(r.children, -1)), typeof i == "boolean")
      return i;
  }
  return n;
}
function HG(t) {
  if (t.type === "element") {
    if (Ww(t))
      return !1;
    if (Kw(t))
      return !0;
  } else if (t.type === "text") {
    if (!xc(t))
      return !1;
  } else if (!IS(t))
    return !1;
}
function Ww(t) {
  return LS(t) || Ac(t, PG);
}
function Kw(t) {
  return Ac(t, IG);
}
function zG(t) {
  return Boolean(
    "properties" in t && t.properties && t.properties.hidden
  ) || IS(t) || Ac(t, FG);
}
function U_(t) {
  return t === " " || t === `
`;
}
function qG(t) {
  const e = /\r?\n|\r/.exec(t);
  return e ? e[0] : " ";
}
function jG() {
  return " ";
}
function VG(t) {
  return e;
  function e(n) {
    return String(n).replace(/[\t\n\v\f\r ]+/g, t);
  }
}
function $G(t, e) {
  if ("tagName" in t && t.properties)
    switch (t.tagName) {
      case "listing":
      case "plaintext":
      case "script":
      case "style":
      case "xmp":
        return "pre";
      case "nobr":
        return "nowrap";
      case "pre":
        return t.properties.wrap ? "pre-wrap" : "pre";
      case "td":
      case "th":
        return t.properties.noWrap ? "nowrap" : e.whitespace;
      case "textarea":
        return "pre-wrap";
    }
  return e.whitespace;
}
const GG = !0, y0 = !1, dv = "skip", PS = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor<Node>} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(t, e, n, r) {
    typeof e == "function" && typeof n != "function" && (r = n, n = e, e = null);
    const i = wh(e), s = r ? -1 : 1;
    l(t, void 0, [])();
    function l(c, h, g) {
      const v = c && typeof c == "object" ? c : {};
      if (typeof v.type == "string") {
        const S = (
          // `hast`
          typeof v.tagName == "string" ? v.tagName : (
            // `xast`
            typeof v.name == "string" ? v.name : void 0
          )
        );
        Object.defineProperty(C, "name", {
          value: "node (" + (c.type + (S ? "<" + S + ">" : "")) + ")"
        });
      }
      return C;
      function C() {
        let S = [], b, N, O;
        if ((!e || i(c, h, g[g.length - 1] || null)) && (S = WG(n(c, g)), S[0] === y0))
          return S;
        if (c.children && S[0] !== dv)
          for (N = (r ? c.children.length : -1) + s, O = g.concat(c); N > -1 && N < c.children.length; ) {
            if (b = l(c.children[N], N, O)(), b[0] === y0)
              return b;
            N = typeof b[1] == "number" ? b[1] : N + s;
          }
        return S;
      }
    }
  }
);
function WG(t) {
  return Array.isArray(t) ? t : typeof t == "number" ? [GG, t] : [t];
}
const Ca = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(t, e, n, r) {
    typeof e == "function" && typeof n != "function" && (r = n, n = e, e = null), PS(t, e, i, r);
    function i(s, l) {
      const c = l[l.length - 1];
      return n(
        s,
        c ? c.children.indexOf(s) : null,
        c
      );
    }
  }
);
function vt(t, e) {
  const n = e.children || [], r = [];
  let i = -1;
  for (; ++i < n.length; ) {
    const c = Yw(t, n[i], e);
    Array.isArray(c) ? r.push(...c) : c && r.push(c);
  }
  let s = 0, l = r.length;
  for (; s < l && r[s].type === "break"; )
    s++;
  for (; l > s && r[l - 1].type === "break"; )
    l--;
  return s === 0 && l === r.length ? r : r.slice(s, l);
}
const Hy = {}.hasOwnProperty;
function Di(t, e) {
  return t.wrapText ? e : e.replace(/\r?\n|\r/g, " ");
}
function Yw(t, e, n) {
  let r;
  if (e.type === "element") {
    if (e.properties && e.properties.dataMdast === "ignore")
      return;
    Hy.call(t.handlers, e.tagName) && (r = t.handlers[e.tagName]);
  } else
    Hy.call(t.handlers, e.type) && (r = t.handlers[e.type]);
  return typeof r == "function" ? r(t, e, n) : KG(t, e);
}
function KG(t, e) {
  return typeof e.value == "string" ? t(e, "text", Di(t, e.value)) : vt(t, e);
}
const YG = {}.hasOwnProperty;
function Br(t, e) {
  const n = typeof e == "string" && QG(t) && t.type === "element" && t.properties && YG.call(t.properties, e) && t.properties[e];
  return n != null && n !== !1;
}
function QG(t) {
  return Boolean(t && typeof t == "object" && "type" in t);
}
const XG = /* @__PURE__ */ new Set(["pingback", "prefetch", "stylesheet"]);
function JG(t) {
  if (!Ac(t, "link"))
    return !1;
  if (Br(t, "itemProp"))
    return !0;
  const n = (t.properties || {}).rel || [];
  let r = -1;
  if (!Array.isArray(n) || n.length === 0)
    return !1;
  for (; ++r < n.length; )
    if (!XG.has(String(n[r])))
      return !1;
  return !0;
}
const ZG = In([
  "a",
  "abbr",
  // `area` is in fact only phrasing if it is inside a `map` element.
  // However, since `area`s are required to be inside a `map` element, and it’s
  // a rather involved check, it’s ignored here for now.
  "area",
  "b",
  "bdi",
  "bdo",
  "br",
  "button",
  "cite",
  "code",
  "data",
  "datalist",
  "del",
  "dfn",
  "em",
  "i",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "map",
  "mark",
  "meter",
  "noscript",
  "output",
  "progress",
  "q",
  "ruby",
  "s",
  "samp",
  "script",
  "select",
  "small",
  "span",
  "strong",
  "sub",
  "sup",
  "template",
  "textarea",
  "time",
  "u",
  "var",
  "wbr"
]), eW = In("meta");
function Qw(t) {
  return Boolean(
    tW(t) && (t.type === "text" || ZG(t) || LS(t) || JG(t) || eW(t) && Br(t, "itemProp"))
  );
}
function tW(t) {
  return t && typeof t == "object" && "type" in t;
}
const Xw = (
  /** @type {AssertPredicatePhrasing} */
  wh([
    "break",
    "delete",
    "emphasis",
    "footnote",
    "footnoteReference",
    "image",
    "imageReference",
    "inlineCode",
    "link",
    "linkReference",
    "strong",
    "text"
  ])
);
function Jw(t) {
  return Zw(t, e);
  function e(n) {
    const r = n[0];
    return n.length === 1 && r.type === "text" && (r.value === " " || r.value === `
`) ? [] : { type: "paragraph", children: n };
  }
}
function hv(t) {
  let e = -1, n;
  for (; ++e < t.length; )
    if (n = t[e], !eO(n) || "children" in n && hv(n.children))
      return !0;
  return !1;
}
function Zw(t, e, n) {
  const r = n || iW, i = nW(t);
  let s = [], l = -1, c, h;
  for (; ++l < i.length; )
    h = i[l], eO(h) ? (c || (c = []), c.push(h)) : (c && (s = s.concat(e(c)), c = void 0), s = s.concat(r(h)));
  return c && (s = s.concat(e(c))), s;
}
function nW(t) {
  let e = [], n = -1, r;
  for (; ++n < t.length; )
    r = t[n], (r.type === "delete" || r.type === "link") && hv(r.children) ? e = e.concat(rW(r)) : e.push(r);
  return e;
}
function rW(t) {
  return Zw(t.children, n, e);
  function e(r) {
    if ("children" in r && "children" in t) {
      const { children: i, ...s } = t;
      return {
        ...r,
        // @ts-expect-error: assume matching parent & child.
        children: [{ ...Iy(!0, {}, s), children: r.children }]
      };
    }
    return { ...r };
  }
  function n(r) {
    const { children: i, ...s } = t;
    return { ...Iy(!0, {}, s), children: r };
  }
}
function eO(t) {
  return t.data && t.data.hName ? Qw({
    type: "element",
    tagName: t.data.hName,
    properties: {},
    children: []
  }) : Xw(t);
}
function iW(t) {
  return t;
}
function nr(t, e) {
  return Jw(vt(t, e));
}
function Tf(t, e) {
  return e == null ? "" : t.frozenBaseUrl ? String(new URL(e, t.frozenBaseUrl)) : e;
}
function oW(t, e) {
  const n = e.properties;
  return t(
    e,
    "link",
    {
      title: n.title || null,
      url: Tf(t, String(n.href || "") || null)
    },
    vt(t, e)
  );
}
function aW(t, e) {
  t.baseFound || (t.frozenBaseUrl = String(e.properties && e.properties.href || "") || null, t.baseFound = !0);
}
function sW(t, e) {
  return t(e, "blockquote", nr(t, e));
}
function lW(t, e) {
  return t.wrapText ? t(e, "break") : t(e, "text", " ");
}
const H_ = (
  /**
   * @type {(
   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => T | null) &
   *  ((node: Parent, index: Node | number, test?: Test) => Node | null)
   * )}
   */
  /**
   * @param {Parent} parent
   * @param {Node | number} index
   * @param {Test} [test]
   * @returns {Node | null}
   */
  function(t, e, n) {
    const r = wh(n);
    if (!t || !t.type || !t.children)
      throw new Error("Expected parent node");
    if (typeof e == "number") {
      if (e < 0 || e === Number.POSITIVE_INFINITY)
        throw new Error("Expected positive finite number as index");
    } else if (e = t.children.indexOf(e), e < 0)
      throw new Error("Expected child node or index");
    for (; ++e < t.children.length; )
      if (r(t.children[e], e, t))
        return t.children[e];
    return null;
  }
), z_ = /\n/g, q_ = /[\t ]+/g, BC = In("br"), uW = In("p"), j_ = In(["th", "td"]), V_ = In("tr"), cW = In([
  // List from: <https://html.spec.whatwg.org/#hidden-elements>
  "datalist",
  "head",
  "noembed",
  "noframes",
  "noscript",
  // Act as if we support scripting.
  "rp",
  "script",
  "style",
  "template",
  "title",
  // Hidden attribute.
  pW,
  // From: <https://html.spec.whatwg.org/#flow-content-3>
  mW
]), tO = In([
  "address",
  // Flow content
  "article",
  // Sections and headings
  "aside",
  // Sections and headings
  "blockquote",
  // Flow content
  "body",
  // Page
  "caption",
  // `table-caption`
  "center",
  // Flow content (legacy)
  "dd",
  // Lists
  "dialog",
  // Flow content
  "dir",
  // Lists (legacy)
  "dl",
  // Lists
  "dt",
  // Lists
  "div",
  // Flow content
  "figure",
  // Flow content
  "figcaption",
  // Flow content
  "footer",
  // Flow content
  "form,",
  // Flow content
  "h1",
  // Sections and headings
  "h2",
  // Sections and headings
  "h3",
  // Sections and headings
  "h4",
  // Sections and headings
  "h5",
  // Sections and headings
  "h6",
  // Sections and headings
  "header",
  // Flow content
  "hgroup",
  // Sections and headings
  "hr",
  // Flow content
  "html",
  // Page
  "legend",
  // Flow content
  "listing",
  // Flow content (legacy)
  "main",
  // Flow content
  "menu",
  // Lists
  "nav",
  // Sections and headings
  "ol",
  // Lists
  "p",
  // Flow content
  "plaintext",
  // Flow content (legacy)
  "pre",
  // Flow content
  "section",
  // Sections and headings
  "ul",
  // Lists
  "xmp"
  // Flow content (legacy)
]);
function A0(t, e = {}) {
  const n = "children" in t ? t.children : [], r = tO(t), i = iO(t, {
    whitespace: e.whitespace || "normal",
    breakBefore: !1,
    breakAfter: !1
  }), s = [];
  (t.type === "text" || t.type === "comment") && s.push(
    ...rO(t, {
      whitespace: i,
      breakBefore: !0,
      breakAfter: !0
    })
  );
  let l = -1;
  for (; ++l < n.length; )
    s.push(
      ...nO(n[l], t, {
        whitespace: i,
        breakBefore: l ? void 0 : r,
        breakAfter: l < n.length - 1 ? BC(n[l + 1]) : r
      })
    );
  const c = [];
  let h;
  for (l = -1; ++l < s.length; ) {
    const g = s[l];
    typeof g == "number" ? h !== void 0 && g > h && (h = g) : g && (h !== void 0 && h > -1 && c.push(`
`.repeat(h) || " "), h = -1, c.push(g));
  }
  return c.join("");
}
function nO(t, e, n) {
  return t.type === "element" ? fW(t, e, n) : t.type === "text" ? n.whitespace === "normal" ? rO(t, n) : dW(t) : [];
}
function fW(t, e, n) {
  const r = iO(t, n), i = t.children || [];
  let s = -1, l = [];
  if (cW(t))
    return l;
  let c, h;
  for (BC(t) || V_(t) && H_(e, t, V_) ? h = `
` : uW(t) ? (c = 2, h = 2) : tO(t) && (c = 1, h = 1); ++s < i.length; )
    l = l.concat(
      nO(i[s], t, {
        whitespace: r,
        breakBefore: s ? void 0 : c,
        breakAfter: s < i.length - 1 ? BC(i[s + 1]) : h
      })
    );
  return j_(t) && H_(e, t, j_) && l.push("	"), c && l.unshift(c), h && l.push(h), l;
}
function rO(t, e) {
  const n = String(t.value), r = [], i = [];
  let s = 0;
  for (; s <= n.length; ) {
    z_.lastIndex = s;
    const h = z_.exec(n), g = h && "index" in h ? h.index : n.length;
    r.push(
      // Any sequence of collapsible spaces and tabs immediately preceding or
      // following a segment break is removed.
      hW(
        // […] ignoring bidi formatting characters (characters with the
        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if
        // they were not there.
        n.slice(s, g).replace(/[\u061C\u200E\u200F\u202A-\u202E\u2066-\u2069]/g, ""),
        s === 0 ? e.breakBefore : !0,
        g === n.length ? e.breakAfter : !0
      )
    ), s = g + 1;
  }
  let l = -1, c;
  for (; ++l < r.length; )
    r[l].charCodeAt(r[l].length - 1) === 8203 || l < r.length - 1 && r[l + 1].charCodeAt(0) === 8203 ? (i.push(r[l]), c = void 0) : r[l] ? (typeof c == "number" && i.push(c), i.push(r[l]), c = 0) : (l === 0 || l === r.length - 1) && i.push(0);
  return i;
}
function dW(t) {
  return [String(t.value)];
}
function hW(t, e, n) {
  const r = [];
  let i = 0, s;
  for (; i < t.length; ) {
    q_.lastIndex = i;
    const l = q_.exec(t);
    s = l ? l.index : t.length, !i && !s && l && !e && r.push(""), i !== s && r.push(t.slice(i, s)), i = l ? s + l[0].length : s;
  }
  return i !== s && !n && r.push(""), r.join(" ");
}
function iO(t, e) {
  if (t.type === "element") {
    const n = t.properties || {};
    switch (t.tagName) {
      case "listing":
      case "plaintext":
      case "xmp":
        return "pre";
      case "nobr":
        return "nowrap";
      case "pre":
        return n.wrap ? "pre-wrap" : "pre";
      case "td":
      case "th":
        return n.noWrap ? "nowrap" : e.whitespace;
      case "textarea":
        return "pre-wrap";
    }
  }
  return e.whitespace;
}
function pW(t) {
  return Boolean((t.properties || {}).hidden);
}
function mW(t) {
  return t.tagName === "dialog" && !(t.properties || {}).open;
}
function gW(t) {
  const e = String(t);
  let n = e.length;
  for (; n > 0; ) {
    const r = e.codePointAt(n - 1);
    if (r !== void 0 && (r === 10 || r === 13))
      n--;
    else
      break;
  }
  return e.slice(0, n);
}
const I4 = "language-", yW = In("pre"), vW = In("code");
function L9(t, e) {
  const n = e.children;
  let r = -1, i, s;
  if (yW(e))
    for (; ++r < n.length; ) {
      const l = n[r];
      if (vW(l) && l.properties && l.properties.className && Array.isArray(l.properties.className)) {
        i = l.properties.className;
        break;
      }
    }
  if (i) {
    for (r = -1; ++r < i.length; )
      if (String(i[r]).slice(0, I4.length) === I4) {
        s = String(i[r]).slice(I4.length);
        break;
      }
  }
  return t(
    e,
    "code",
    { lang: s || null, meta: null },
    gW(Di(t, A0(e)))
  );
}
function EW(t, e) {
  return t(e, "html", "<!--" + Di(t, e.value) + "-->");
}
function P4(t, e) {
  return t(e, "delete", vt(t, e));
}
function FS(t) {
  let e = -1;
  if (t.length > 1) {
    for (; ++e < t.length; )
      if (t[e].spread)
        return !0;
  }
  return !1;
}
function oO(t, e) {
  const n = vt(t, e);
  let r = -1;
  for (; ++r < n.length; ) {
    const i = n[r];
    i.type !== "listItem" && (n[r] = {
      type: "listItem",
      spread: !1,
      checked: null,
      // @ts-expect-error Assume `children[index]` is block content.
      children: [i]
    });
  }
  return n;
}
const TW = In("div"), CW = In("dt"), SW = In("dd");
function bW(t, e) {
  const n = e.children;
  let r = -1, i = [];
  const s = [];
  let l = { titles: [], definitions: [] }, c, h;
  for (; ++r < n.length; )
    c = n[r], i = i.concat(TW(c) ? c.children : c);
  for (r = -1; ++r < i.length; )
    c = i[r], CW(c) ? (SW(i[r - 1]) && (s.push(l), l = { titles: [], definitions: [] }), l.titles.push(c)) : l.definitions.push(c);
  s.push(l), r = -1;
  const g = [];
  for (; ++r < s.length; )
    h = [
      ...$_(t, s[r].titles),
      ...$_(t, s[r].definitions)
    ], h.length > 0 && g.push({
      type: "listItem",
      spread: h.length > 1,
      checked: null,
      children: h
    });
  if (g.length > 0)
    return t(
      e,
      "list",
      { ordered: !1, start: null, spread: FS(g) },
      g
    );
}
function $_(t, e) {
  const n = oO(t, { type: "element", tagName: "x", children: e });
  return n.length === 0 ? [] : n.length === 1 ? n[0].children : [
    {
      type: "list",
      ordered: !1,
      start: null,
      spread: FS(n),
      children: n
    }
  ];
}
function I9(t, e) {
  return t(e, "emphasis", vt(t, e));
}
function Kd(t, e) {
  const n = Number(e.tagName.charAt(1)) || 1, r = t.wrapText;
  t.wrapText = !1;
  const i = t(e, "heading", { depth: n }, vt(t, e));
  return t.wrapText = r, i;
}
function AW(t, e) {
  return t(e, "thematicBreak");
}
function xW(t, e) {
  const n = e.properties, r = String(n.src || ""), i = String(n.title || "");
  if (r && i)
    return {
      type: "link",
      title: null,
      url: Tf(t, r),
      children: [{ type: "text", value: Di(t, i) }]
    };
}
function G_(t, e) {
  const n = e.properties;
  return t(e, "image", {
    url: Tf(t, String(n.src || "") || null),
    title: n.title || null,
    alt: n.alt || ""
  });
}
function Um(t, e) {
  return t(e, "inlineCode", Di(t, A0(e)));
}
const _W = In("option");
function aO(t, e, n) {
  const r = n || e.properties;
  let i = sO(e);
  const s = Math.min(Number.parseInt(String(r.size), 10), 0) || (r.multiple ? 4 : 1);
  let l = -1;
  const c = [], h = [];
  for (; ++l < i.length; )
    Br(i[l], "selected") && c.push(i[l]);
  for (i = (c.length > 0 ? c : i).slice(0, s), l = -1; ++l < i.length; ) {
    const v = i[l], C = Di(t, A0(v)), S = v.properties, b = C || String(S.label || ""), N = String(S.value || "") || C;
    h.push([N, b === N ? null : b]);
  }
  return h;
}
function sO(t) {
  const e = t.children;
  let n = -1, r = [], i;
  for (; ++n < e.length; )
    i = e[n], Array.isArray(i.children) && (r = r.concat(sO(i))), _W(i) && !Br(i, "disabled") && r.push(i);
  return r;
}
const kW = In("datalist");
function NW(t, e) {
  const n = e.properties;
  let r = String(n.value || n.placeholder || "");
  const i = [], s = [];
  let l = [], c = -1, h;
  if (!(n.disabled || n.type === "hidden" || n.type === "file")) {
    if (n.type === "checkbox" || n.type === "radio")
      return t(
        e,
        "text",
        Di(t, t[n.checked ? "checked" : "unchecked"])
      );
    if (n.type === "image")
      return n.alt || r ? t(e, "image", {
        url: Tf(t, String(n.src || "") || null),
        title: Di(t, String(n.title || "")) || null,
        alt: Di(t, String(n.alt || r))
      }) : [];
    if (r ? l = [[r, null]] : (
      // `list` is not supported on these types:
      n.type !== "password" && n.type !== "file" && n.type !== "submit" && n.type !== "reset" && n.type !== "button" && n.list && (h = String(n.list).toUpperCase(), Hy.call(t.nodeById, h) && kW(t.nodeById[h]) && (l = aO(t, t.nodeById[h], n)))
    ), l.length !== 0) {
      if (n.type === "password" && (l[0] = ["•".repeat(l[0][0].length), null]), n.type === "url" || n.type === "email") {
        for (; ++c < l.length; )
          r = Tf(t, l[c][0]), i.push(
            t(
              e,
              "link",
              {
                title: null,
                url: Di(t, n.type === "email" ? "mailto:" + r : r)
              },
              [{ type: "text", value: Di(t, l[c][1] || r) }]
            )
          ), c !== l.length - 1 && i.push({ type: "text", value: ", " });
        return i;
      }
      for (; ++c < l.length; )
        s.push(
          l[c][1] ? l[c][1] + " (" + l[c][0] + ")" : l[c][0]
        );
      return t(e, "text", Di(t, s.join(", ")));
    }
  }
}
const wW = In("p"), OW = In("input");
function F4(t, e) {
  const n = e.children[0];
  let r = null, i, s;
  wW(n) && (i = n.children[0], OW(i) && i.properties && (i.properties.type === "checkbox" || i.properties.type === "radio") && (r = Boolean(i.properties.checked), s = {
    ...e,
    children: [
      { ...n, children: n.children.slice(1) },
      ...e.children.slice(1)
    ]
  }));
  const l = nr(t, s || e);
  return t(e, "listItem", { spread: l.length > 1, checked: r }, l);
}
const RW = In("ol");
function B4(t, e) {
  const n = RW(e), r = oO(t, e);
  let i = null;
  return n && (i = Br(e, "start") ? (
    // @ts-expect-error: `props` exist.
    Number.parseInt(String(e.properties.start), 10)
  ) : 1), t(
    e,
    "list",
    { ordered: n, start: i, spread: FS(r) },
    r
  );
}
function pv(t, e) {
  const n = (e || {}).includeImageAlt;
  return lO(
    t,
    typeof n == "boolean" ? n : !0
  );
}
function lO(t, e) {
  return DW(t) && ("value" in t && t.value || e && "alt" in t && t.alt || "children" in t && W_(t.children, e)) || Array.isArray(t) && W_(t, e) || "";
}
function W_(t, e) {
  const n = [];
  let r = -1;
  for (; ++r < t.length; )
    n[r] = lO(t[r], e);
  return n.join("");
}
function DW(t) {
  return Boolean(t && typeof t == "object");
}
const MW = In("source"), LW = In("video");
function K_(t, e) {
  let n = vt(t, e);
  const r = e.properties, i = LW(e) && String(r.poster || "");
  let s = String(r.src || ""), l = -1, c = !1, h;
  if (Ca({ type: "root", children: n }, "link", g), c || hv(n))
    return n;
  for (; !s && ++l < e.children.length; )
    h = e.children[l], MW(h) && (s = String(h.properties.src || ""));
  return i && (n = [
    {
      type: "image",
      title: null,
      url: Tf(t, i),
      alt: pv({ children: n })
    }
  ]), {
    type: "link",
    // @ts-expect-error Types are broken.
    title: e.properties.title || null,
    url: Tf(t, s),
    // @ts-expect-error Assume phrasing content.
    children: n
  };
  function g() {
    return c = !0, y0;
  }
}
function Y_(t, e) {
  const n = vt(t, e);
  if (n.length > 0)
    return t(e, "paragraph", n);
}
function IW(t, e) {
  const n = t.quotes[t.qNesting % t.quotes.length];
  t.qNesting++;
  const r = vt(t, e);
  return t.qNesting--, r.unshift({ type: "text", value: n.charAt(0) }), r.push({
    type: "text",
    value: n.length > 1 ? n.charAt(1) : n
  }), r;
}
function PW(t, e) {
  let n = vt(t, e);
  return (t.document || hv(n)) && (n = Jw(n)), t(e, "root", n);
}
function FW(t, e) {
  const n = aO(t, e);
  let r = -1;
  const i = [];
  let s;
  for (; ++r < n.length; )
    s = n[r], i.push(s[1] ? s[1] + " (" + s[0] + ")" : s[0]);
  if (i.length > 0)
    return t(e, "text", Di(t, i.join(", ")));
}
function Q_(t, e) {
  return t(e, "strong", vt(t, e));
}
function X_(t, e) {
  const n = t.wrapText;
  t.wrapText = !1;
  const r = t(e, "tableCell", vt(t, e));
  if (e.properties && (e.properties.rowSpan || e.properties.colSpan)) {
    const i = r.data || (r.data = {});
    e.properties.rowSpan && (i.rowSpan = e.properties.rowSpan), e.properties.colSpan && (i.colSpan = e.properties.colSpan);
  }
  return t.wrapText = n, r;
}
function BW(t, e) {
  return t(e, "tableRow", vt(t, e));
}
const UW = In("thead"), HW = In("tr"), zW = In(["th", "td"]);
function qW(t, e) {
  if (t.inTable)
    return t(e, "text", Di(t, A0(e)));
  t.inTable = !0;
  const { headless: n, align: r } = jW(e), i = VW(vt(t, e), n);
  let s = 1, l = -1;
  for (; ++l < i.length; ) {
    const h = i[l].children;
    let g = -1;
    for (; ++g < h.length; ) {
      const v = h[g];
      if (v.data) {
        const C = Number.parseInt(String(v.data.colSpan), 10) || 1, S = Number.parseInt(String(v.data.rowSpan), 10) || 1;
        if (C > 1 || S > 1) {
          let b = l - 1;
          for (; ++b < l + S; ) {
            let N = g - 1;
            for (; ++N < g + C && i[b]; ) {
              const O = [];
              (b !== l || N !== g) && O.push({ type: "tableCell", children: [] }), i[b].children.splice(N, 0, ...O);
            }
          }
        }
        "colSpan" in v.data && delete v.data.colSpan, "rowSpan" in v.data && delete v.data.rowSpan, Object.keys(v.data).length === 0 && delete v.data;
      }
    }
    h.length > s && (s = h.length);
  }
  for (l = -1; ++l < i.length; ) {
    const h = i[l].children;
    let g = h.length - 1;
    for (; ++g < s; )
      h.push({ type: "tableCell", children: [] });
  }
  let c = r.length - 1;
  for (; ++c < s; )
    r.push(null);
  return t.inTable = !1, t(e, "table", { align: r }, i);
}
function jW(t) {
  let e = !0, n = 0, r = 0;
  const i = [null];
  return Ca(t, "element", (s) => {
    if (s.tagName === "table" && t !== s)
      return dv;
    zW(s) && s.properties ? (i[r] || (i[r] = String(s.properties.align || "") || null), e && n < 2 && s.tagName === "th" && (e = !1), r++) : UW(s) ? e = !1 : HW(s) && (n++, r = 0);
  }), { align: i, headless: e };
}
function VW(t, e) {
  let n = -1;
  const r = [];
  let i;
  for (e && r.push({ type: "tableRow", children: [] }); ++n < t.length; ) {
    const s = t[n];
    s.type === "tableRow" ? (i && (s.children.unshift(...i), i = void 0), r.push(s)) : (i || (i = []), i.push(s));
  }
  for (i && r[r.length - 1].children.push(...i), n = -1; ++n < r.length; )
    r[n].children = $W(r[n].children);
  return r;
}
function $W(t) {
  const e = [];
  let n = -1, r, i;
  for (; ++n < t.length; )
    r = t[n], r.type === "tableCell" ? (i && (r.children.unshift(...i), i = void 0), e.push(r)) : (i || (i = []), i.push(r));
  return i && (r = e[e.length - 1], r || (r = { type: "tableCell", children: [] }, e.push(r)), r.children.push(...i)), e;
}
function GW(t, e) {
  return t(e, "text", Di(t, e.value));
}
function WW(t, e) {
  return t(e, "text", Di(t, A0(e)));
}
function KW(t, e) {
  return t(e, "text", "​");
}
const J_ = {
  root: PW,
  text: GW,
  comment: EW,
  doctype: Qt,
  applet: Qt,
  area: Qt,
  basefont: Qt,
  bgsound: Qt,
  caption: Qt,
  col: Qt,
  colgroup: Qt,
  command: Qt,
  content: Qt,
  datalist: Qt,
  dialog: Qt,
  element: Qt,
  embed: Qt,
  frame: Qt,
  frameset: Qt,
  isindex: Qt,
  keygen: Qt,
  link: Qt,
  math: Qt,
  menu: Qt,
  menuitem: Qt,
  meta: Qt,
  nextid: Qt,
  noembed: Qt,
  noframes: Qt,
  optgroup: Qt,
  option: Qt,
  param: Qt,
  script: Qt,
  shadow: Qt,
  source: Qt,
  spacer: Qt,
  style: Qt,
  svg: Qt,
  template: Qt,
  title: Qt,
  track: Qt,
  abbr: vt,
  acronym: vt,
  bdi: vt,
  bdo: vt,
  big: vt,
  blink: vt,
  button: vt,
  canvas: vt,
  cite: vt,
  data: vt,
  details: vt,
  dfn: vt,
  font: vt,
  ins: vt,
  label: vt,
  map: vt,
  marquee: vt,
  meter: vt,
  nobr: vt,
  noscript: vt,
  object: vt,
  output: vt,
  progress: vt,
  rb: vt,
  rbc: vt,
  rp: vt,
  rt: vt,
  rtc: vt,
  ruby: vt,
  slot: vt,
  small: vt,
  span: vt,
  sup: vt,
  sub: vt,
  tbody: vt,
  tfoot: vt,
  thead: vt,
  time: vt,
  address: nr,
  article: nr,
  aside: nr,
  body: nr,
  center: nr,
  div: nr,
  fieldset: nr,
  figcaption: nr,
  figure: nr,
  form: nr,
  footer: nr,
  header: nr,
  hgroup: nr,
  html: nr,
  legend: nr,
  main: nr,
  multicol: nr,
  nav: nr,
  picture: nr,
  section: nr,
  a: oW,
  audio: K_,
  b: Q_,
  base: aW,
  blockquote: sW,
  br: lW,
  code: Um,
  dir: B4,
  dl: bW,
  dt: F4,
  dd: F4,
  del: P4,
  em: I9,
  h1: Kd,
  h2: Kd,
  h3: Kd,
  h4: Kd,
  h5: Kd,
  h6: Kd,
  hr: AW,
  i: I9,
  iframe: xW,
  img: G_,
  image: G_,
  input: NW,
  kbd: Um,
  li: F4,
  listing: L9,
  mark: I9,
  ol: B4,
  p: Y_,
  plaintext: L9,
  pre: L9,
  q: IW,
  s: P4,
  samp: Um,
  select: FW,
  strike: P4,
  strong: Q_,
  summary: Y_,
  table: qW,
  td: X_,
  textarea: WW,
  th: X_,
  tr: BW,
  tt: Um,
  u: I9,
  ul: B4,
  var: Um,
  video: K_,
  wbr: KW,
  xmp: L9
};
function Qt() {
}
const YW = wh(["heading", "paragraph", "root"]);
function uO(t, e = {}) {
  const n = {};
  let r;
  const i = Object.assign(
    /**
     * @type {HWithProps & HWithoutProps}
     */
    /**
     * @param {Node} node
     * @param {string} type
     * @param {Properties|string|Array<Node>} [props]
     * @param {string|Array<Node>} [children]
     */
    (c, h, g, v) => {
      let C;
      typeof g == "string" || Array.isArray(g) ? (v = g, C = {}) : C = g;
      const S = { type: h, ...C };
      return typeof v == "string" ? S.value = v : v && (S.children = v), c.position && (S.position = c.position), S;
    },
    {
      nodeById: n,
      baseFound: !1,
      inTable: !1,
      wrapText: !0,
      /** @type {string|null} */
      frozenBaseUrl: null,
      qNesting: 0,
      handlers: e.handlers ? { ...J_, ...e.handlers } : J_,
      document: e.document,
      checked: e.checked || "[x]",
      unchecked: e.unchecked || "[ ]",
      quotes: e.quotes || ['"']
    }
  );
  Ca(t, "element", (c) => {
    const h = c.properties && "id" in c.properties && String(c.properties.id).toUpperCase();
    h && !Hy.call(n, h) && (n[h] = c);
  }), Vw({ newlines: e.newlines === !0 })(t);
  const s = Yw(i, t, void 0);
  return s ? Array.isArray(s) ? r = { type: "root", children: s } : r = s : r = { type: "root", children: [] }, Ca(r, "text", l), r;
  function l(c, h, g) {
    if (h === null || !g)
      return;
    const v = g.children[h - 1];
    if (v && v.type === c.type)
      return v.value += c.value, g.children.splice(h, 1), v.position && c.position && (v.position.end = c.position.end), h - 1;
    if (c.value = c.value.replace(/[\t ]*(\r?\n|\r)[\t ]*/, "$1"), g && YW(g) && (h || (c.value = c.value.replace(/^[\t ]+/, "")), h === g.children.length - 1 && (c.value = c.value.replace(/[\t ]+$/, ""))), !c.value)
      return g.children.splice(h, 1), h;
  }
}
const QW = (
  /**
   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}
   */
  /**
   * @param {Processor|Options} [destination]
   * @param {Options} [options]
   */
  function(t, e) {
    let n, r;
    return typeof t == "function" ? (r = t, n = e || {}) : n = t || {}, (n.document === void 0 || n.document === null) && (n = Object.assign({}, n, { document: !0 })), r ? JW(r, n) : ZW(n);
  }
), XW = QW;
function JW(t, e) {
  return (n, r, i) => {
    t.run(uO(n, e), r, (s) => {
      i(s);
    });
  };
}
function ZW(t = {}) {
  return (e) => (
    /** @type {MdastRoot} */
    uO(e, t)
  );
}
const Z_ = {}.hasOwnProperty;
function Oh(t, e) {
  const n = e || {};
  function r(i, ...s) {
    let l = r.invalid;
    const c = r.handlers;
    if (i && Z_.call(i, t)) {
      const h = String(i[t]);
      l = Z_.call(c, h) ? c[h] : r.unknown;
    }
    if (l)
      return l.call(this, i, ...s);
  }
  return r.handlers = n.handlers || {}, r.invalid = n.invalid, r.unknown = n.unknown, r;
}
function Y9(t, e) {
  let n = -1, r;
  if (e.extensions)
    for (; ++n < e.extensions.length; )
      Y9(t, e.extensions[n]);
  for (r in e)
    r === "extensions" || (r === "unsafe" || r === "join" ? t[r] = [...t[r] || [], ...e[r] || []] : r === "handlers" ? t[r] = Object.assign(t[r], e[r] || {}) : t.options[r] = e[r]);
  return t;
}
function eK(t, e, n, r) {
  const i = n.enter("blockquote"), s = n.createTracker(r);
  s.move("> "), s.shift(2);
  const l = n.indentLines(
    n.containerFlow(t, s.current()),
    tK
  );
  return i(), l;
}
function tK(t, e, n) {
  return ">" + (n ? "" : " ") + t;
}
function cO(t, e) {
  return ek(t, e.inConstruct, !0) && !ek(t, e.notInConstruct, !1);
}
function ek(t, e, n) {
  if (typeof e == "string" && (e = [e]), !e || e.length === 0)
    return n;
  let r = -1;
  for (; ++r < e.length; )
    if (t.includes(e[r]))
      return !0;
  return !1;
}
function tk(t, e, n, r) {
  let i = -1;
  for (; ++i < n.unsafe.length; )
    if (n.unsafe[i].character === `
` && cO(n.stack, n.unsafe[i]))
      return /[ \t]/.test(r.before) ? "" : " ";
  return `\\
`;
}
function nK(t, e) {
  const n = String(t);
  let r = n.indexOf(e), i = r, s = 0, l = 0;
  if (typeof e != "string")
    throw new TypeError("Expected substring");
  for (; r !== -1; )
    r === i ? ++s > l && (l = s) : s = 1, i = r + e.length, r = n.indexOf(e, i);
  return l;
}
function UC(t, e) {
  return Boolean(
    !e.options.fences && t.value && // If there’s no info…
    !t.lang && // And there’s a non-whitespace character…
    /[^ \r\n]/.test(t.value) && // And the value doesn’t start or end in a blank…
    !/^[\t ]*(?:[\r\n]|$)|(?:^|[\r\n])[\t ]*$/.test(t.value)
  );
}
function rK(t) {
  const e = t.options.fence || "`";
  if (e !== "`" && e !== "~")
    throw new Error(
      "Cannot serialize code with `" + e + "` for `options.fence`, expected `` ` `` or `~`"
    );
  return e;
}
function iK(t, e, n, r) {
  const i = rK(n), s = t.value || "", l = i === "`" ? "GraveAccent" : "Tilde";
  if (UC(t, n)) {
    const C = n.enter("codeIndented"), S = n.indentLines(s, oK);
    return C(), S;
  }
  const c = n.createTracker(r), h = i.repeat(Math.max(nK(s, i) + 1, 3)), g = n.enter("codeFenced");
  let v = c.move(h);
  if (t.lang) {
    const C = n.enter(`codeFencedLang${l}`);
    v += c.move(
      n.safe(t.lang, {
        before: v,
        after: " ",
        encode: ["`"],
        ...c.current()
      })
    ), C();
  }
  if (t.lang && t.meta) {
    const C = n.enter(`codeFencedMeta${l}`);
    v += c.move(" "), v += c.move(
      n.safe(t.meta, {
        before: v,
        after: `
`,
        encode: ["`"],
        ...c.current()
      })
    ), C();
  }
  return v += c.move(`
`), s && (v += c.move(s + `
`)), v += c.move(h), g(), v;
}
function oK(t, e, n) {
  return (n ? "" : "    ") + t;
}
function mv(t) {
  const e = t.options.quote || '"';
  if (e !== '"' && e !== "'")
    throw new Error(
      "Cannot serialize title with `" + e + "` for `options.quote`, expected `\"`, or `'`"
    );
  return e;
}
function aK(t, e, n, r) {
  const i = mv(n), s = i === '"' ? "Quote" : "Apostrophe", l = n.enter("definition");
  let c = n.enter("label");
  const h = n.createTracker(r);
  let g = h.move("[");
  return g += h.move(
    n.safe(n.associationId(t), {
      before: g,
      after: "]",
      ...h.current()
    })
  ), g += h.move("]: "), c(), // If there’s no url, or…
  !t.url || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(t.url) ? (c = n.enter("destinationLiteral"), g += h.move("<"), g += h.move(
    n.safe(t.url, { before: g, after: ">", ...h.current() })
  ), g += h.move(">")) : (c = n.enter("destinationRaw"), g += h.move(
    n.safe(t.url, {
      before: g,
      after: t.title ? " " : `
`,
      ...h.current()
    })
  )), c(), t.title && (c = n.enter(`title${s}`), g += h.move(" " + i), g += h.move(
    n.safe(t.title, {
      before: g,
      after: i,
      ...h.current()
    })
  ), g += h.move(i), c()), l(), g;
}
function sK(t) {
  const e = t.options.emphasis || "*";
  if (e !== "*" && e !== "_")
    throw new Error(
      "Cannot serialize emphasis with `" + e + "` for `options.emphasis`, expected `*`, or `_`"
    );
  return e;
}
fO.peek = lK;
function fO(t, e, n, r) {
  const i = sK(n), s = n.enter("emphasis"), l = n.createTracker(r);
  let c = l.move(i);
  return c += l.move(
    n.containerPhrasing(t, {
      before: c,
      after: i,
      ...l.current()
    })
  ), c += l.move(i), s(), c;
}
function lK(t, e, n) {
  return n.options.emphasis || "*";
}
function dO(t, e) {
  let n = !1;
  return Ca(t, (r) => {
    if ("value" in r && /\r?\n|\r/.test(r.value) || r.type === "break")
      return n = !0, y0;
  }), Boolean(
    (!t.depth || t.depth < 3) && pv(t) && (e.options.setext || n)
  );
}
function uK(t, e, n, r) {
  const i = Math.max(Math.min(6, t.depth || 1), 1), s = n.createTracker(r);
  if (dO(t, n)) {
    const v = n.enter("headingSetext"), C = n.enter("phrasing"), S = n.containerPhrasing(t, {
      ...s.current(),
      before: `
`,
      after: `
`
    });
    return C(), v(), S + `
` + (i === 1 ? "=" : "-").repeat(
      // The whole size…
      S.length - // Minus the position of the character after the last EOL (or
      // 0 if there is none)…
      (Math.max(S.lastIndexOf("\r"), S.lastIndexOf(`
`)) + 1)
    );
  }
  const l = "#".repeat(i), c = n.enter("headingAtx"), h = n.enter("phrasing");
  s.move(l + " ");
  let g = n.containerPhrasing(t, {
    before: "# ",
    after: `
`,
    ...s.current()
  });
  return /^[\t ]/.test(g) && (g = "&#x" + g.charCodeAt(0).toString(16).toUpperCase() + ";" + g.slice(1)), g = g ? l + " " + g : l, n.options.closeAtx && (g += " " + l), h(), c(), g;
}
hO.peek = cK;
function hO(t) {
  return t.value || "";
}
function cK() {
  return "<";
}
pO.peek = fK;
function pO(t, e, n, r) {
  const i = mv(n), s = i === '"' ? "Quote" : "Apostrophe", l = n.enter("image");
  let c = n.enter("label");
  const h = n.createTracker(r);
  let g = h.move("![");
  return g += h.move(
    n.safe(t.alt, { before: g, after: "]", ...h.current() })
  ), g += h.move("]("), c(), // If there’s no url but there is a title…
  !t.url && t.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(t.url) ? (c = n.enter("destinationLiteral"), g += h.move("<"), g += h.move(
    n.safe(t.url, { before: g, after: ">", ...h.current() })
  ), g += h.move(">")) : (c = n.enter("destinationRaw"), g += h.move(
    n.safe(t.url, {
      before: g,
      after: t.title ? " " : ")",
      ...h.current()
    })
  )), c(), t.title && (c = n.enter(`title${s}`), g += h.move(" " + i), g += h.move(
    n.safe(t.title, {
      before: g,
      after: i,
      ...h.current()
    })
  ), g += h.move(i), c()), g += h.move(")"), l(), g;
}
function fK() {
  return "!";
}
mO.peek = dK;
function mO(t, e, n, r) {
  const i = t.referenceType, s = n.enter("imageReference");
  let l = n.enter("label");
  const c = n.createTracker(r);
  let h = c.move("![");
  const g = n.safe(t.alt, {
    before: h,
    after: "]",
    ...c.current()
  });
  h += c.move(g + "]["), l();
  const v = n.stack;
  n.stack = [], l = n.enter("reference");
  const C = n.safe(n.associationId(t), {
    before: h,
    after: "]",
    ...c.current()
  });
  return l(), n.stack = v, s(), i === "full" || !g || g !== C ? h += c.move(C + "]") : i === "shortcut" ? h = h.slice(0, -1) : h += c.move("]"), h;
}
function dK() {
  return "!";
}
function gO(t) {
  if (!t._compiled) {
    const e = (t.atBreak ? "[\\r\\n][\\t ]*" : "") + (t.before ? "(?:" + t.before + ")" : "");
    t._compiled = new RegExp(
      (e ? "(" + e + ")" : "") + (/[|\\{}()[\]^$+*?.-]/.test(t.character) ? "\\" : "") + t.character + (t.after ? "(?:" + t.after + ")" : ""),
      "g"
    );
  }
  return t._compiled;
}
yO.peek = hK;
function yO(t, e, n) {
  let r = t.value || "", i = "`", s = -1;
  for (; new RegExp("(^|[^`])" + i + "([^`]|$)").test(r); )
    i += "`";
  for (/[^ \r\n]/.test(r) && (/^[ \r\n]/.test(r) && /[ \r\n]$/.test(r) || /^`|`$/.test(r)) && (r = " " + r + " "); ++s < n.unsafe.length; ) {
    const l = n.unsafe[s], c = gO(l);
    let h;
    if (l.atBreak)
      for (; h = c.exec(r); ) {
        let g = h.index;
        r.charCodeAt(g) === 10 && r.charCodeAt(g - 1) === 13 && g--, r = r.slice(0, g) + " " + r.slice(h.index + 1);
      }
  }
  return i + r + i;
}
function hK() {
  return "`";
}
function vO(t, e) {
  const n = pv(t);
  return Boolean(
    !e.options.resourceLink && // If there’s a url…
    t.url && // And there’s a no title…
    !t.title && // And the content of `node` is a single text node…
    t.children && t.children.length === 1 && t.children[0].type === "text" && // And if the url is the same as the content…
    (n === t.url || "mailto:" + n === t.url) && // And that starts w/ a protocol…
    /^[a-z][a-z+.-]+:/i.test(t.url) && // And that doesn’t contain ASCII control codes (character escapes and
    // references don’t work), space, or angle brackets…
    !/[\0- <>\u007F]/.test(t.url)
  );
}
EO.peek = pK;
function EO(t, e, n, r) {
  const i = mv(n), s = i === '"' ? "Quote" : "Apostrophe", l = n.createTracker(r);
  let c, h;
  if (vO(t, n)) {
    const v = n.stack;
    n.stack = [], c = n.enter("autolink");
    let C = l.move("<");
    return C += l.move(
      n.containerPhrasing(t, {
        before: C,
        after: ">",
        ...l.current()
      })
    ), C += l.move(">"), c(), n.stack = v, C;
  }
  c = n.enter("link"), h = n.enter("label");
  let g = l.move("[");
  return g += l.move(
    n.containerPhrasing(t, {
      before: g,
      after: "](",
      ...l.current()
    })
  ), g += l.move("]("), h(), // If there’s no url but there is a title…
  !t.url && t.title || // If there are control characters or whitespace.
  /[\0- \u007F]/.test(t.url) ? (h = n.enter("destinationLiteral"), g += l.move("<"), g += l.move(
    n.safe(t.url, { before: g, after: ">", ...l.current() })
  ), g += l.move(">")) : (h = n.enter("destinationRaw"), g += l.move(
    n.safe(t.url, {
      before: g,
      after: t.title ? " " : ")",
      ...l.current()
    })
  )), h(), t.title && (h = n.enter(`title${s}`), g += l.move(" " + i), g += l.move(
    n.safe(t.title, {
      before: g,
      after: i,
      ...l.current()
    })
  ), g += l.move(i), h()), g += l.move(")"), c(), g;
}
function pK(t, e, n) {
  return vO(t, n) ? "<" : "[";
}
TO.peek = mK;
function TO(t, e, n, r) {
  const i = t.referenceType, s = n.enter("linkReference");
  let l = n.enter("label");
  const c = n.createTracker(r);
  let h = c.move("[");
  const g = n.containerPhrasing(t, {
    before: h,
    after: "]",
    ...c.current()
  });
  h += c.move(g + "]["), l();
  const v = n.stack;
  n.stack = [], l = n.enter("reference");
  const C = n.safe(n.associationId(t), {
    before: h,
    after: "]",
    ...c.current()
  });
  return l(), n.stack = v, s(), i === "full" || !g || g !== C ? h += c.move(C + "]") : i === "shortcut" ? h = h.slice(0, -1) : h += c.move("]"), h;
}
function mK() {
  return "[";
}
function BS(t) {
  const e = t.options.bullet || "*";
  if (e !== "*" && e !== "+" && e !== "-")
    throw new Error(
      "Cannot serialize items with `" + e + "` for `options.bullet`, expected `*`, `+`, or `-`"
    );
  return e;
}
function gK(t) {
  const e = BS(t), n = t.options.bulletOther;
  if (!n)
    return e === "*" ? "-" : "*";
  if (n !== "*" && n !== "+" && n !== "-")
    throw new Error(
      "Cannot serialize items with `" + n + "` for `options.bulletOther`, expected `*`, `+`, or `-`"
    );
  if (n === e)
    throw new Error(
      "Expected `bullet` (`" + e + "`) and `bulletOther` (`" + n + "`) to be different"
    );
  return n;
}
function CO(t) {
  const e = t.options.bulletOrdered || ".";
  if (e !== "." && e !== ")")
    throw new Error(
      "Cannot serialize items with `" + e + "` for `options.bulletOrdered`, expected `.` or `)`"
    );
  return e;
}
function yK(t) {
  const e = CO(t), n = t.options.bulletOrderedOther;
  if (!n)
    return e === "." ? ")" : ".";
  if (n !== "." && n !== ")")
    throw new Error(
      "Cannot serialize items with `" + n + "` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`"
    );
  if (n === e)
    throw new Error(
      "Expected `bulletOrdered` (`" + e + "`) and `bulletOrderedOther` (`" + n + "`) to be different"
    );
  return n;
}
function SO(t) {
  const e = t.options.rule || "*";
  if (e !== "*" && e !== "-" && e !== "_")
    throw new Error(
      "Cannot serialize rules with `" + e + "` for `options.rule`, expected `*`, `-`, or `_`"
    );
  return e;
}
function vK(t, e, n, r) {
  const i = n.enter("list"), s = n.bulletCurrent;
  let l = t.ordered ? CO(n) : BS(n);
  const c = t.ordered ? yK(n) : gK(n), h = n.bulletLastUsed;
  let g = !1;
  if (e && // Explicit `other` set.
  (t.ordered ? n.options.bulletOrderedOther : n.options.bulletOther) && h && l === h && (g = !0), !t.ordered) {
    const C = t.children ? t.children[0] : void 0;
    if (
      // Bullet could be used as a thematic break marker:
      (l === "*" || l === "-") && // Empty first list item:
      C && (!C.children || !C.children[0]) && // Directly in two other list items:
      n.stack[n.stack.length - 1] === "list" && n.stack[n.stack.length - 2] === "listItem" && n.stack[n.stack.length - 3] === "list" && n.stack[n.stack.length - 4] === "listItem" && // That are each the first child.
      n.indexStack[n.indexStack.length - 1] === 0 && n.indexStack[n.indexStack.length - 2] === 0 && n.indexStack[n.indexStack.length - 3] === 0 && (g = !0), SO(n) === l && C
    ) {
      let S = -1;
      for (; ++S < t.children.length; ) {
        const b = t.children[S];
        if (b && b.type === "listItem" && b.children && b.children[0] && b.children[0].type === "thematicBreak") {
          g = !0;
          break;
        }
      }
    }
  }
  g && (l = c), n.bulletCurrent = l;
  const v = n.containerFlow(t, r);
  return n.bulletLastUsed = l, n.bulletCurrent = s, i(), v;
}
function EK(t) {
  const e = t.options.listItemIndent || "tab";
  if (e === 1 || e === "1")
    return "one";
  if (e !== "tab" && e !== "one" && e !== "mixed")
    throw new Error(
      "Cannot serialize items with `" + e + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`"
    );
  return e;
}
function TK(t, e, n, r) {
  const i = EK(n);
  let s = n.bulletCurrent || BS(n);
  e && e.type === "list" && e.ordered && (s = (typeof e.start == "number" && e.start > -1 ? e.start : 1) + (n.options.incrementListMarker === !1 ? 0 : e.children.indexOf(t)) + s);
  let l = s.length + 1;
  (i === "tab" || i === "mixed" && (e && e.type === "list" && e.spread || t.spread)) && (l = Math.ceil(l / 4) * 4);
  const c = n.createTracker(r);
  c.move(s + " ".repeat(l - s.length)), c.shift(l);
  const h = n.enter("listItem"), g = n.indentLines(
    n.containerFlow(t, c.current()),
    v
  );
  return h(), g;
  function v(C, S, b) {
    return S ? (b ? "" : " ".repeat(l)) + C : (b ? s : s + " ".repeat(l - s.length)) + C;
  }
}
function CK(t, e, n, r) {
  const i = n.enter("paragraph"), s = n.enter("phrasing"), l = n.containerPhrasing(t, r);
  return s(), i(), l;
}
function SK(t, e, n, r) {
  return (t.children.some((l) => Xw(l)) ? n.containerPhrasing : n.containerFlow).call(n, t, r);
}
function bK(t) {
  const e = t.options.strong || "*";
  if (e !== "*" && e !== "_")
    throw new Error(
      "Cannot serialize strong with `" + e + "` for `options.strong`, expected `*`, or `_`"
    );
  return e;
}
bO.peek = AK;
function bO(t, e, n, r) {
  const i = bK(n), s = n.enter("strong"), l = n.createTracker(r);
  let c = l.move(i + i);
  return c += l.move(
    n.containerPhrasing(t, {
      before: c,
      after: i,
      ...l.current()
    })
  ), c += l.move(i + i), s(), c;
}
function AK(t, e, n) {
  return n.options.strong || "*";
}
function xK(t, e, n, r) {
  return n.safe(t.value, r);
}
function _K(t) {
  const e = t.options.ruleRepetition || 3;
  if (e < 3)
    throw new Error(
      "Cannot serialize rules with repetition `" + e + "` for `options.ruleRepetition`, expected `3` or more"
    );
  return e;
}
function kK(t, e, n) {
  const r = (SO(n) + (n.options.ruleSpaces ? " " : "")).repeat(_K(n));
  return n.options.ruleSpaces ? r.slice(0, -1) : r;
}
const NK = {
  blockquote: eK,
  break: tk,
  code: iK,
  definition: aK,
  emphasis: fO,
  hardBreak: tk,
  heading: uK,
  html: hO,
  image: pO,
  imageReference: mO,
  inlineCode: yO,
  link: EO,
  linkReference: TO,
  list: vK,
  listItem: TK,
  paragraph: CK,
  root: SK,
  strong: bO,
  text: xK,
  thematicBreak: kK
}, wK = [OK];
function OK(t, e, n, r) {
  if (e.type === "code" && UC(e, r) && (t.type === "list" || t.type === e.type && UC(t, r)) || t.type === "list" && t.type === e.type && Boolean(t.ordered) === Boolean(e.ordered) && !(t.ordered ? r.options.bulletOrderedOther : r.options.bulletOther))
    return !1;
  if ("spread" in n && typeof n.spread == "boolean")
    return t.type === "paragraph" && // Two paragraphs.
    (t.type === e.type || e.type === "definition" || // Paragraph followed by a setext heading.
    e.type === "heading" && dO(e, r)) ? void 0 : n.spread ? 1 : 0;
}
const J1 = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
], RK = [
  { character: "	", after: "[\\r\\n]", inConstruct: "phrasing" },
  { character: "	", before: "[\\r\\n]", inConstruct: "phrasing" },
  {
    character: "	",
    inConstruct: ["codeFencedLangGraveAccent", "codeFencedLangTilde"]
  },
  {
    character: "\r",
    inConstruct: [
      "codeFencedLangGraveAccent",
      "codeFencedLangTilde",
      "codeFencedMetaGraveAccent",
      "codeFencedMetaTilde",
      "destinationLiteral",
      "headingAtx"
    ]
  },
  {
    character: `
`,
    inConstruct: [
      "codeFencedLangGraveAccent",
      "codeFencedLangTilde",
      "codeFencedMetaGraveAccent",
      "codeFencedMetaTilde",
      "destinationLiteral",
      "headingAtx"
    ]
  },
  { character: " ", after: "[\\r\\n]", inConstruct: "phrasing" },
  { character: " ", before: "[\\r\\n]", inConstruct: "phrasing" },
  {
    character: " ",
    inConstruct: ["codeFencedLangGraveAccent", "codeFencedLangTilde"]
  },
  // An exclamation mark can start an image, if it is followed by a link or
  // a link reference.
  {
    character: "!",
    after: "\\[",
    inConstruct: "phrasing",
    notInConstruct: J1
  },
  // A quote can break out of a title.
  { character: '"', inConstruct: "titleQuote" },
  // A number sign could start an ATX heading if it starts a line.
  { atBreak: !0, character: "#" },
  { character: "#", inConstruct: "headingAtx", after: `(?:[\r
]|$)` },
  // Dollar sign and percentage are not used in markdown.
  // An ampersand could start a character reference.
  { character: "&", after: "[#A-Za-z]", inConstruct: "phrasing" },
  // An apostrophe can break out of a title.
  { character: "'", inConstruct: "titleApostrophe" },
  // A left paren could break out of a destination raw.
  { character: "(", inConstruct: "destinationRaw" },
  // A left paren followed by `]` could make something into a link or image.
  {
    before: "\\]",
    character: "(",
    inConstruct: "phrasing",
    notInConstruct: J1
  },
  // A right paren could start a list item or break out of a destination
  // raw.
  { atBreak: !0, before: "\\d+", character: ")" },
  { character: ")", inConstruct: "destinationRaw" },
  // An asterisk can start thematic breaks, list items, emphasis, strong.
  { atBreak: !0, character: "*", after: `(?:[ 	\r
*])` },
  { character: "*", inConstruct: "phrasing", notInConstruct: J1 },
  // A plus sign could start a list item.
  { atBreak: !0, character: "+", after: `(?:[ 	\r
])` },
  // A dash can start thematic breaks, list items, and setext heading
  // underlines.
  { atBreak: !0, character: "-", after: `(?:[ 	\r
-])` },
  // A dot could start a list item.
  { atBreak: !0, before: "\\d+", character: ".", after: `(?:[ 	\r
]|$)` },
  // Slash, colon, and semicolon are not used in markdown for constructs.
  // A less than can start html (flow or text) or an autolink.
  // HTML could start with an exclamation mark (declaration, cdata, comment),
  // slash (closing tag), question mark (instruction), or a letter (tag).
  // An autolink also starts with a letter.
  // Finally, it could break out of a destination literal.
  { atBreak: !0, character: "<", after: "[!/?A-Za-z]" },
  {
    character: "<",
    after: "[!/?A-Za-z]",
    inConstruct: "phrasing",
    notInConstruct: J1
  },
  { character: "<", inConstruct: "destinationLiteral" },
  // An equals to can start setext heading underlines.
  { atBreak: !0, character: "=" },
  // A greater than can start block quotes and it can break out of a
  // destination literal.
  { atBreak: !0, character: ">" },
  { character: ">", inConstruct: "destinationLiteral" },
  // Question mark and at sign are not used in markdown for constructs.
  // A left bracket can start definitions, references, labels,
  { atBreak: !0, character: "[" },
  { character: "[", inConstruct: "phrasing", notInConstruct: J1 },
  { character: "[", inConstruct: ["label", "reference"] },
  // A backslash can start an escape (when followed by punctuation) or a
  // hard break (when followed by an eol).
  // Note: typical escapes are handled in `safe`!
  { character: "\\", after: "[\\r\\n]", inConstruct: "phrasing" },
  // A right bracket can exit labels.
  { character: "]", inConstruct: ["label", "reference"] },
  // Caret is not used in markdown for constructs.
  // An underscore can start emphasis, strong, or a thematic break.
  { atBreak: !0, character: "_" },
  { character: "_", inConstruct: "phrasing", notInConstruct: J1 },
  // A grave accent can start code (fenced or text), or it can break out of
  // a grave accent code fence.
  { atBreak: !0, character: "`" },
  {
    character: "`",
    inConstruct: ["codeFencedLangGraveAccent", "codeFencedMetaGraveAccent"]
  },
  { character: "`", inConstruct: "phrasing", notInConstruct: J1 },
  // Left brace, vertical bar, right brace are not used in markdown for
  // constructs.
  // A tilde can start code (fenced).
  { atBreak: !0, character: "~" }
], nk = document.createElement("i");
function v0(t) {
  const e = "&" + t + ";";
  nk.innerHTML = e;
  const n = nk.textContent;
  return n.charCodeAt(n.length - 1) === 59 && t !== "semi" || n === e ? !1 : n;
}
function AO(t, e) {
  const n = Number.parseInt(t, e);
  return (
    // C0 except for HT, LF, FF, CR, space
    n < 9 || n === 11 || n > 13 && n < 32 || // Control character (DEL) of the basic block and C1 controls.
    n > 126 && n < 160 || // Lone high surrogates and low surrogates.
    n > 55295 && n < 57344 || // Noncharacters.
    n > 64975 && n < 65008 || (n & 65535) === 65535 || (n & 65535) === 65534 || // Out of range
    n > 1114111 ? "�" : String.fromCharCode(n)
  );
}
const DK = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function xO(t) {
  return t.replace(DK, MK);
}
function MK(t, e, n) {
  if (e)
    return e;
  if (n.charCodeAt(0) === 35) {
    const i = n.charCodeAt(1), s = i === 120 || i === 88;
    return AO(n.slice(s ? 2 : 1), s ? 16 : 10);
  }
  return v0(n) || t;
}
function LK(t) {
  return t.label || !t.identifier ? t.label || "" : xO(t.identifier);
}
function US(t, e, n) {
  const r = e.indexStack, i = t.children || [], s = [];
  let l = -1, c = n.before;
  r.push(-1);
  let h = e.createTracker(n);
  for (; ++l < i.length; ) {
    const g = i[l];
    let v;
    if (r[r.length - 1] = l, l + 1 < i.length) {
      let C = e.handle.handlers[i[l + 1].type];
      C && C.peek && (C = C.peek), v = C ? C(i[l + 1], t, e, {
        before: "",
        after: "",
        ...h.current()
      }).charAt(0) : "";
    } else
      v = n.after;
    s.length > 0 && (c === "\r" || c === `
`) && g.type === "html" && (s[s.length - 1] = s[s.length - 1].replace(
      /(\r?\n|\r)$/,
      " "
    ), c = " ", h = e.createTracker(n), h.move(s.join(""))), s.push(
      h.move(
        e.handle(g, t, e, {
          ...h.current(),
          before: c,
          after: v
        })
      )
    ), c = s[s.length - 1].slice(-1);
  }
  return r.pop(), s.join("");
}
function _O(t, e, n) {
  const r = e.indexStack, i = t.children || [], s = e.createTracker(n), l = [];
  let c = -1;
  for (r.push(-1); ++c < i.length; ) {
    const h = i[c];
    r[r.length - 1] = c, l.push(
      s.move(
        e.handle(h, t, e, {
          before: `
`,
          after: `
`,
          ...s.current()
        })
      )
    ), h.type !== "list" && (e.bulletLastUsed = void 0), c < i.length - 1 && l.push(
      s.move(IK(h, i[c + 1], t, e))
    );
  }
  return r.pop(), l.join("");
}
function IK(t, e, n, r) {
  let i = r.join.length;
  for (; i--; ) {
    const s = r.join[i](t, e, n, r);
    if (s === !0 || s === 1)
      break;
    if (typeof s == "number")
      return `
`.repeat(1 + s);
    if (s === !1)
      return `

<!---->

`;
  }
  return `

`;
}
const PK = /\r?\n|\r/g;
function FK(t, e) {
  const n = [];
  let r = 0, i = 0, s;
  for (; s = PK.exec(t); )
    l(t.slice(r, s.index)), n.push(s[0]), r = s.index + s[0].length, i++;
  return l(t.slice(r)), n.join("");
  function l(c) {
    n.push(e(c, i, !c));
  }
}
function BK(t, e, n) {
  const r = (n.before || "") + (e || "") + (n.after || ""), i = [], s = [], l = {};
  let c = -1;
  for (; ++c < t.unsafe.length; ) {
    const v = t.unsafe[c];
    if (!cO(t.stack, v))
      continue;
    const C = gO(v);
    let S;
    for (; S = C.exec(r); ) {
      const b = "before" in v || Boolean(v.atBreak), N = "after" in v, O = S.index + (b ? S[1].length : 0);
      i.includes(O) ? (l[O].before && !b && (l[O].before = !1), l[O].after && !N && (l[O].after = !1)) : (i.push(O), l[O] = { before: b, after: N });
    }
  }
  i.sort(UK);
  let h = n.before ? n.before.length : 0;
  const g = r.length - (n.after ? n.after.length : 0);
  for (c = -1; ++c < i.length; ) {
    const v = i[c];
    v < h || v >= g || v + 1 < g && i[c + 1] === v + 1 && l[v].after && !l[v + 1].before && !l[v + 1].after || i[c - 1] === v - 1 && l[v].before && !l[v - 1].before && !l[v - 1].after || (h !== v && s.push(rk(r.slice(h, v), "\\")), h = v, /[!-/:-@[-`{-~]/.test(r.charAt(v)) && (!n.encode || !n.encode.includes(r.charAt(v))) ? s.push("\\") : (s.push(
      "&#x" + r.charCodeAt(v).toString(16).toUpperCase() + ";"
    ), h++));
  }
  return s.push(rk(r.slice(h, g), n.after)), s.join("");
}
function UK(t, e) {
  return t - e;
}
function rk(t, e) {
  const n = /\\(?=[!-/:-@[-`{-~])/g, r = [], i = [], s = t + e;
  let l = -1, c = 0, h;
  for (; h = n.exec(s); )
    r.push(h.index);
  for (; ++l < r.length; )
    c !== r[l] && i.push(t.slice(c, r[l])), i.push("\\"), c = r[l];
  return i.push(t.slice(c)), i.join("");
}
function HS(t) {
  const e = t || {}, n = e.now || {};
  let r = e.lineShift || 0, i = n.line || 1, s = n.column || 1;
  return { move: h, current: l, shift: c };
  function l() {
    return { now: { line: i, column: s }, lineShift: r };
  }
  function c(g) {
    r += g;
  }
  function h(g) {
    const v = g || "", C = v.split(/\r?\n|\r/g), S = C[C.length - 1];
    return i += C.length - 1, s = C.length === 1 ? s + S.length : 1 + S.length + r, v;
  }
}
function HK(t, e = {}) {
  const n = {
    enter: i,
    indentLines: FK,
    associationId: LK,
    containerPhrasing: VK,
    containerFlow: $K,
    createTracker: HS,
    safe: GK,
    stack: [],
    unsafe: [],
    join: [],
    // @ts-expect-error: we’ll fill it next.
    handlers: {},
    options: {},
    indexStack: [],
    // @ts-expect-error: we’ll add `handle` later.
    handle: void 0
  };
  Y9(n, { unsafe: RK, join: wK, handlers: NK }), Y9(n, e), n.options.tightDefinitions && Y9(n, { join: [jK] }), n.handle = Oh("type", {
    invalid: zK,
    unknown: qK,
    handlers: n.handlers
  });
  let r = n.handle(t, void 0, n, {
    before: `
`,
    after: `
`,
    now: { line: 1, column: 1 },
    lineShift: 0
  });
  return r && r.charCodeAt(r.length - 1) !== 10 && r.charCodeAt(r.length - 1) !== 13 && (r += `
`), r;
  function i(s) {
    return n.stack.push(s), l;
    function l() {
      n.stack.pop();
    }
  }
}
function zK(t) {
  throw new Error("Cannot handle value `" + t + "`, expected node");
}
function qK(t) {
  throw new Error("Cannot handle unknown node `" + t.type + "`");
}
function jK(t, e) {
  if (t.type === "definition" && t.type === e.type)
    return 0;
}
function VK(t, e) {
  return US(t, this, e);
}
function $K(t, e) {
  return _O(t, this, e);
}
function GK(t, e) {
  return BK(this, t, e);
}
function WK(t) {
  Object.assign(this, { Compiler: (n) => {
    const r = (
      /** @type {Options} */
      this.data("settings")
    );
    return HK(
      n,
      Object.assign({}, r, t, {
        // Note: this option is not in the readme.
        // The goal is for it to be set by plugins on `data` instead of being
        // passed by users.
        extensions: (
          /** @type {ToMarkdownOptions['extensions']} */
          this.data("toMarkdownExtensions") || []
        )
      })
    );
  } });
}
function Bo(t, e, n, r) {
  const i = t.length;
  let s = 0, l;
  if (e < 0 ? e = -e > i ? 0 : i + e : e = e > i ? i : e, n = n > 0 ? n : 0, r.length < 1e4)
    l = Array.from(r), l.unshift(e, n), [].splice.apply(t, l);
  else
    for (n && [].splice.apply(t, [e, n]); s < r.length; )
      l = r.slice(s, s + 1e4), l.unshift(e, 0), [].splice.apply(t, l), s += 1e4, e += 1e4;
}
function ha(t, e) {
  return t.length > 0 ? (Bo(t, t.length, 0, e), t) : e;
}
const ik = {}.hasOwnProperty;
function kO(t) {
  const e = {};
  let n = -1;
  for (; ++n < t.length; )
    KK(e, t[n]);
  return e;
}
function KK(t, e) {
  let n;
  for (n in e) {
    const i = (ik.call(t, n) ? t[n] : void 0) || (t[n] = {}), s = e[n];
    let l;
    for (l in s) {
      ik.call(i, l) || (i[l] = []);
      const c = s[l];
      YK(
        // @ts-expect-error Looks like a list.
        i[l],
        Array.isArray(c) ? c : c ? [c] : []
      );
    }
  }
}
function YK(t, e) {
  let n = -1;
  const r = [];
  for (; ++n < e.length; )
    (e[n].add === "after" ? t : r).push(e[n]);
  Bo(t, 0, 0, r);
}
const QK = /[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/, ga = Dc(/[A-Za-z]/), HC = Dc(/\d/), XK = Dc(/[\dA-Fa-f]/), $i = Dc(/[\dA-Za-z]/), JK = Dc(/[!-/:-@[-`{-~]/), ok = Dc(/[#-'*+\--9=?A-Z^-~]/);
function zC(t) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    t !== null && (t < 32 || t === 127)
  );
}
function Pr(t) {
  return t !== null && (t < 0 || t === 32);
}
function Et(t) {
  return t !== null && t < -2;
}
function Kn(t) {
  return t === -2 || t === -1 || t === 32;
}
const ZK = Dc(/\s/), eY = Dc(QK);
function Dc(t) {
  return e;
  function e(n) {
    return n !== null && t.test(String.fromCharCode(n));
  }
}
function zy(t) {
  if (t === null || Pr(t) || ZK(t))
    return 1;
  if (eY(t))
    return 2;
}
function gv(t, e, n) {
  const r = [];
  let i = -1;
  for (; ++i < t.length; ) {
    const s = t[i].resolveAll;
    s && !r.includes(s) && (e = s(e, n), r.push(s));
  }
  return e;
}
function tY(t = {}) {
  let e = t.singleTilde;
  const n = {
    tokenize: i,
    resolveAll: r
  };
  return e == null && (e = !0), {
    text: {
      [126]: n
    },
    insideSpan: {
      null: [n]
    },
    attentionMarkers: {
      null: [126]
    }
  };
  function r(s, l) {
    let c = -1;
    for (; ++c < s.length; )
      if (s[c][0] === "enter" && s[c][1].type === "strikethroughSequenceTemporary" && s[c][1]._close) {
        let h = c;
        for (; h--; )
          if (s[h][0] === "exit" && s[h][1].type === "strikethroughSequenceTemporary" && s[h][1]._open && // If the sizes are the same:
          s[c][1].end.offset - s[c][1].start.offset === s[h][1].end.offset - s[h][1].start.offset) {
            s[c][1].type = "strikethroughSequence", s[h][1].type = "strikethroughSequence";
            const g = {
              type: "strikethrough",
              start: Object.assign({}, s[h][1].start),
              end: Object.assign({}, s[c][1].end)
            }, v = {
              type: "strikethroughText",
              start: Object.assign({}, s[h][1].end),
              end: Object.assign({}, s[c][1].start)
            }, C = [
              ["enter", g, l],
              ["enter", s[h][1], l],
              ["exit", s[h][1], l],
              ["enter", v, l]
            ];
            Bo(
              C,
              C.length,
              0,
              gv(
                l.parser.constructs.insideSpan.null,
                s.slice(h + 1, c),
                l
              )
            ), Bo(C, C.length, 0, [
              ["exit", v, l],
              ["enter", s[c][1], l],
              ["exit", s[c][1], l],
              ["exit", g, l]
            ]), Bo(s, h - 1, c - h + 3, C), c = h + C.length - 2;
            break;
          }
      }
    for (c = -1; ++c < s.length; )
      s[c][1].type === "strikethroughSequenceTemporary" && (s[c][1].type = "data");
    return s;
  }
  function i(s, l, c) {
    const h = this.previous, g = this.events;
    let v = 0;
    return C;
    function C(b) {
      return h === 126 && g[g.length - 1][1].type !== "characterEscape" ? c(b) : (s.enter("strikethroughSequenceTemporary"), S(b));
    }
    function S(b) {
      const N = zy(h);
      if (b === 126)
        return v > 1 ? c(b) : (s.consume(b), v++, S);
      if (v < 2 && !e)
        return c(b);
      const O = s.exit("strikethroughSequenceTemporary"), L = zy(b);
      return O._open = !L || L === 2 && Boolean(N), O._close = !N || N === 2 && Boolean(L), l(b);
    }
  }
}
const nY = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
];
NO.peek = sY;
const rY = {
  canContainEols: ["delete"],
  enter: { strikethrough: oY },
  exit: { strikethrough: aY }
}, iY = {
  unsafe: [
    {
      character: "~",
      inConstruct: "phrasing",
      notInConstruct: nY
    }
  ],
  handlers: { delete: NO }
};
function oY(t) {
  this.enter({ type: "delete", children: [] }, t);
}
function aY(t) {
  this.exit(t);
}
function NO(t, e, n, r) {
  const i = HS(r), s = n.enter("strikethrough");
  let l = i.move("~~");
  return l += US(t, n, {
    ...i.current(),
    before: l,
    after: "~"
  }), l += i.move("~~"), s(), l;
}
function sY() {
  return "~";
}
function lY(t) {
  return kO([tY(t)]);
}
function uY() {
  return [rY];
}
function cY() {
  return {
    extensions: [iY]
  };
}
function fY(t = {}) {
  const e = this.data(), n = (r, i) => {
    (e[r] ? e[r] : e[r] = []).push(i);
  };
  n("micromarkExtensions", lY(t)), n("fromMarkdownExtensions", uY()), n("toMarkdownExtensions", cY());
}
const wO = fY, OO = "֑-߿יִ-﷽ﹰ-ﻼ", RO = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿‎Ⰰ-﬜︀-﹯﻽-￿", dY = new RegExp("^[^" + RO + "]*[" + OO + "]"), hY = new RegExp("^[^" + OO + "]*[" + RO + "]");
function pY(t) {
  const e = String(t || "");
  return dY.test(e) ? "rtl" : hY.test(e) ? "ltr" : "neutral";
}
function mY(t) {
  return "children" in t ? DO(t) : "value" in t ? t.value : "";
}
function gY(t) {
  return t.type === "text" ? t.value : "children" in t ? DO(t) : "";
}
function DO(t) {
  let e = -1;
  const n = [];
  for (; ++e < t.children.length; )
    n[e] = gY(t.children[e]);
  return n.join("");
}
function yY(t, e) {
  const n = t.schema, r = t.language, i = t.direction, s = t.editableOrEditingHost;
  let l;
  if (e.type === "element" && e.properties) {
    const g = e.properties.xmlLang || e.properties.lang, v = e.properties.type || "text", C = ak(e);
    g != null && (t.language = String(g)), n && n.space === "html" ? (e.properties.contentEditable === "true" && (t.editableOrEditingHost = !0), e.tagName === "svg" && (t.schema = lu), C === "rtl" ? l = C : /* Explicit `[dir=ltr]`. */ C === "ltr" || // HTML with an invalid or no `[dir]`.
    C !== "auto" && e.tagName === "html" || // `input[type=tel]` with an invalid or no `[dir]`.
    C !== "auto" && e.tagName === "input" && v === "tel" ? l = "ltr" : (C === "auto" || e.tagName === "bdi") && (e.tagName === "textarea" ? l = U4(mY(e)) : e.tagName === "input" && (v === "email" || v === "search" || v === "tel" || v === "text") ? l = e.properties.value ? (
      // @ts-expect-error Assume string
      U4(e.properties.value)
    ) : "ltr" : Ca(e, h)), l && (t.direction = l)) : t.editableOrEditingHost && (t.editableOrEditingHost = !1);
  }
  return c;
  function c() {
    t.schema = n, t.language = r, t.direction = i, t.editableOrEditingHost = s;
  }
  function h(g) {
    if (g.type === "text")
      return l = U4(g.value), l ? y0 : void 0;
    if (g !== e && g.type === "element" && (g.tagName === "bdi" || g.tagName === "script" || g.tagName === "style" || g.tagName === "textare" || ak(g)))
      return dv;
  }
}
function U4(t) {
  const e = pY(t);
  return e === "neutral" ? void 0 : e;
}
function ak(t) {
  const e = t.type === "element" && t.properties && typeof t.properties.dir == "string" ? t.properties.dir.toLowerCase() : void 0;
  return e === "auto" || e === "ltr" || e === "rtl" ? e : void 0;
}
const vY = Oh("operator", {
  unknown: kY,
  // @ts-expect-error: hush.
  invalid: TY,
  handlers: {
    "=": CY,
    "~=": SY,
    "|=": bY,
    "^=": AY,
    "$=": xY,
    "*=": _Y
  }
});
function EY(t, e, n) {
  const r = t.attrs;
  let i = -1;
  for (; ++i < r.length; )
    if (!vY(r[i], e, b0(n, r[i].name)))
      return !1;
  return !0;
}
function TY(t, e, n) {
  return Br(e, n.property);
}
function CY(t, e, n) {
  return Boolean(
    Br(e, n.property) && e.properties && Rh(e.properties[n.property], n) === t.value
  );
}
function SY(t, e, n) {
  const r = e.properties && e.properties[n.property];
  return (
    // If this is a space-separated list, and the query is contained in it, return
    // true.
    !n.commaSeparated && r && typeof r == "object" && t.value && r.includes(t.value) || // For all other values (including comma-separated lists), return whether this
    // is an exact match.
    Br(e, n.property) && Rh(r, n) === t.value
  );
}
function bY(t, e, n) {
  const r = Rh(
    e.properties && e.properties[n.property],
    n
  );
  return Boolean(
    Br(e, n.property) && t.value && (r === t.value || r.slice(0, t.value.length) === t.value && r.charAt(t.value.length) === "-")
  );
}
function AY(t, e, n) {
  return Boolean(
    Br(e, n.property) && e.properties && t.value && Rh(e.properties[n.property], n).slice(
      0,
      t.value.length
    ) === t.value
  );
}
function xY(t, e, n) {
  return Boolean(
    Br(e, n.property) && e.properties && t.value && Rh(e.properties[n.property], n).slice(
      -t.value.length
    ) === t.value
  );
}
function _Y(t, e, n) {
  return Boolean(
    Br(e, n.property) && e.properties && t.value && Rh(e.properties[n.property], n).includes(
      t.value
    )
  );
}
function kY(t) {
  throw new Error("Unknown operator `" + t.operator + "`");
}
function Rh(t, e) {
  return typeof t == "boolean" ? e.attribute : Array.isArray(t) ? (e.commaSeparated ? RS : OS)(t) : String(t);
}
function NY(t, e) {
  const n = e.properties.className || [];
  let r = -1;
  if (t.classNames) {
    for (; ++r < t.classNames.length; )
      if (!n.includes(t.classNames[r]))
        return !1;
  }
  return !0;
}
function wY(t, e) {
  return Boolean(e.properties && e.properties.id === t.id);
}
function OY(t, e) {
  return t.tagName === "*" || t.tagName === e.tagName;
}
function RY(t, e) {
  return function(n, r) {
    let i = sk(n, "tag");
    const s = sk(
      r ?? "*",
      "range"
    ), l = [];
    let c = -1;
    for (; ++c < s.length; ) {
      const h = s[c].toLowerCase();
      if (!e && h === "*")
        continue;
      let g = -1;
      const v = [];
      for (; ++g < i.length; )
        if (t(i[g].toLowerCase(), h)) {
          if (!e)
            return (
              /** @type {IsFilter extends true ? Tags : Tag|undefined} */
              i[g]
            );
          l.push(i[g]);
        } else
          v.push(i[g]);
      i = v;
    }
    return (
      /** @type {IsFilter extends true ? Tags : Tag|undefined} */
      e ? l : void 0
    );
  };
}
const DY = RY(function(t, e) {
  const n = t.split("-"), r = e.split("-");
  let i = 0, s = 0;
  if (r[s] !== "*" && n[i] !== r[s])
    return !1;
  for (i++, s++; s < r.length; ) {
    if (r[s] === "*") {
      s++;
      continue;
    }
    if (!n[i])
      return !1;
    if (n[i] === r[s]) {
      i++, s++;
      continue;
    }
    if (n[i].length === 1)
      return !1;
    i++;
  }
  return !0;
}, !0);
function sk(t, e) {
  const n = t && typeof t == "string" ? [t] : t;
  if (!n || typeof n != "object" || !("length" in n))
    throw new Error(
      "Invalid " + e + " `" + n + "`, expected non-empty string"
    );
  return n;
}
const MY = /* @__PURE__ */ new Set([9, 10, 12, 13, 32]), lk = "0".charCodeAt(0), LY = "9".charCodeAt(0);
function IY(t) {
  if (t = t.trim().toLowerCase(), t === "even")
    return [2, 0];
  if (t === "odd")
    return [2, 1];
  let e = 0, n = 0, r = s(), i = l();
  if (e < t.length && t.charAt(e) === "n" && (e++, n = r * (i ?? 1), c(), e < t.length ? (r = s(), c(), i = l()) : r = i = 0), i === null || e < t.length)
    throw new Error(`n-th rule couldn't be parsed ('${t}')`);
  return [n, r * i];
  function s() {
    return t.charAt(e) === "-" ? (e++, -1) : (t.charAt(e) === "+" && e++, 1);
  }
  function l() {
    const h = e;
    let g = 0;
    for (; e < t.length && t.charCodeAt(e) >= lk && t.charCodeAt(e) <= LY; )
      g = g * 10 + (t.charCodeAt(e) - lk), e++;
    return e === h ? null : g;
  }
  function c() {
    for (; e < t.length && MY.has(t.charCodeAt(e)); )
      e++;
  }
}
var uk = {
  trueFunc: function() {
    return !0;
  },
  falseFunc: function() {
    return !1;
  }
};
function PY(t) {
  const e = t[0], n = t[1] - 1;
  if (n < 0 && e <= 0)
    return uk.falseFunc;
  if (e === -1)
    return (s) => s <= n;
  if (e === 0)
    return (s) => s === n;
  if (e === 1)
    return n < 0 ? uk.trueFunc : (s) => s >= n;
  const r = Math.abs(e), i = (n % r + r) % r;
  return e > 1 ? (s) => s >= n && s % r === i : (s) => s <= n && s % r === i;
}
function ck(t) {
  return PY(IY(t));
}
const FY = ck.default || ck, BY = Oh("name", {
  unknown: uQ,
  invalid: lQ,
  handlers: {
    any: qC,
    "any-link": UY,
    blank: HY,
    checked: zY,
    dir: qY,
    disabled: LO,
    empty: jY,
    enabled: VY,
    "first-child": $Y,
    "first-of-type": GY,
    has: WY,
    lang: KY,
    "last-child": YY,
    "last-of-type": QY,
    matches: qC,
    not: XY,
    "nth-child": JY,
    "nth-last-child": ZY,
    "nth-of-type": tQ,
    "nth-last-of-type": eQ,
    "only-child": nQ,
    "only-of-type": rQ,
    optional: iQ,
    "read-only": oQ,
    "read-write": IO,
    required: PO,
    root: aQ,
    scope: sQ
  }
});
MO.needsIndex = [
  "any",
  "first-child",
  "first-of-type",
  "last-child",
  "last-of-type",
  "matches",
  "not",
  "nth-child",
  "nth-last-child",
  "nth-of-type",
  "nth-last-of-type",
  "only-child",
  "only-of-type"
];
function MO(t, e, n, r, i) {
  const s = t.pseudos;
  let l = -1;
  for (; ++l < s.length; )
    if (!BY(s[l], e, n, r, i))
      return !1;
  return !0;
}
function UY(t, e) {
  return (e.tagName === "a" || e.tagName === "area" || e.tagName === "link") && Br(e, "href");
}
function HY(t, e) {
  return !FO(e, n);
  function n(r) {
    return r.type === "element" || r.type === "text" && !xc(r);
  }
}
function zY(t, e) {
  return e.tagName === "input" || e.tagName === "menuitem" ? Boolean(
    e.properties && (e.properties.type === "checkbox" || e.properties.type === "radio") && Br(e, "checked")
  ) : e.tagName === "option" ? Br(e, "selected") : !1;
}
function qY(t, e, n, r, i) {
  return i.direction === t.value;
}
function LO(t, e) {
  return (e.tagName === "button" || e.tagName === "input" || e.tagName === "select" || e.tagName === "textarea" || e.tagName === "optgroup" || e.tagName === "option" || e.tagName === "menuitem" || e.tagName === "fieldset") && Br(e, "disabled");
}
function jY(t, e) {
  return !FO(e, n);
  function n(r) {
    return r.type === "element" || r.type === "text";
  }
}
function VY(t, e) {
  return !LO(t, e);
}
function $Y(t, e, n, r, i) {
  return dl(i, t), i.elementIndex === 0;
}
function GY(t, e, n, r, i) {
  return dl(i, t), i.typeIndex === 0;
}
function WY(t, e, n, r, i) {
  const s = {
    ...i,
    // Not found yet.
    found: !1,
    // Do walk deep.
    shallow: !1,
    // One result is enough.
    one: !0,
    scopeElements: [e],
    results: [],
    rootQuery: zS(t.value)
  };
  return qS(s, { type: "root", children: e.children }), s.results.length > 0;
}
function KY(t, e, n, r, i) {
  return i.language !== "" && i.language !== void 0 && // @ts-expect-error never `selectors`.
  DY(i.language, IC(t.value)).length > 0;
}
function YY(t, e, n, r, i) {
  return dl(i, t), Boolean(
    i.elementCount && i.elementIndex === i.elementCount - 1
  );
}
function QY(t, e, n, r, i) {
  return dl(i, t), typeof i.typeIndex == "number" && typeof i.typeCount == "number" && i.typeIndex === i.typeCount - 1;
}
function qC(t, e, n, r, i) {
  const s = {
    ...i,
    // Not found yet.
    found: !1,
    // Do walk deep.
    shallow: !1,
    // One result is enough.
    one: !0,
    scopeElements: [e],
    results: [],
    rootQuery: zS(t.value)
  };
  return qS(s, e), s.results[0] === e;
}
function XY(t, e, n, r, i) {
  return !qC(t, e, n, r, i);
}
function JY(t, e, n, r, i) {
  const s = yv(t);
  return dl(i, t), typeof i.elementIndex == "number" && s(i.elementIndex);
}
function ZY(t, e, n, r, i) {
  const s = yv(t);
  return dl(i, t), Boolean(
    typeof i.elementCount == "number" && typeof i.elementIndex == "number" && s(i.elementCount - i.elementIndex - 1)
  );
}
function eQ(t, e, n, r, i) {
  const s = yv(t);
  return dl(i, t), typeof i.typeCount == "number" && typeof i.typeIndex == "number" && s(i.typeCount - 1 - i.typeIndex);
}
function tQ(t, e, n, r, i) {
  const s = yv(t);
  return dl(i, t), typeof i.typeIndex == "number" && s(i.typeIndex);
}
function nQ(t, e, n, r, i) {
  return dl(i, t), i.elementCount === 1;
}
function rQ(t, e, n, r, i) {
  return dl(i, t), i.typeCount === 1;
}
function iQ(t, e) {
  return !PO(t, e);
}
function oQ(t, e, n, r, i) {
  return !IO(t, e, n, r, i);
}
function IO(t, e, n, r, i) {
  return e.tagName === "input" || e.tagName === "textarea" ? !Br(e, "readOnly") && !Br(e, "disabled") : Boolean(i.editableOrEditingHost);
}
function PO(t, e) {
  return (e.tagName === "input" || e.tagName === "textarea" || e.tagName === "select") && Br(e, "required");
}
function aQ(t, e, n, r, i) {
  return Boolean(
    (!r || r.type === "root") && i.schema && (i.schema.space === "html" || i.schema.space === "svg") && (e.tagName === "html" || e.tagName === "svg")
  );
}
function sQ(t, e, n, r, i) {
  return i.scopeElements.includes(e);
}
function lQ() {
  throw new Error("Invalid pseudo-selector");
}
function uQ(t) {
  throw t.name ? new Error("Unknown pseudo-selector `" + t.name + "`") : new Error("Unexpected pseudo-element or empty pseudo-class");
}
function FO(t, e) {
  const n = t.children;
  let r = -1;
  for (; ++r < n.length; )
    if (e(n[r]))
      return !0;
  return !1;
}
function dl(t, e) {
  if (t.shallow)
    throw new Error("Cannot use `:" + e.name + "` without parent");
}
function yv(t) {
  let e = t._cachedFn;
  return e || (e = FY(t.value), t._cachedFn = e), e;
}
function cQ(t, e, n, r, i) {
  return Boolean(
    (!t.tagName || OY(t, e)) && (!t.classNames || NY(t, e)) && (!t.id || wY(t, e)) && (!t.attrs || EY(t, e, i.schema)) && (!t.pseudos || MO(t, e, n, r, i))
  );
}
const fQ = [];
function zS(t) {
  return t === null ? { type: "selectors", selectors: [] } : t.type === "ruleSet" ? { type: "selectors", selectors: [t] } : t;
}
function qS(t, e) {
  e && BO(t, [], e, void 0, void 0);
}
function BO(t, e, n, r, i) {
  let s = {
    directChild: void 0,
    descendant: void 0,
    adjacentSibling: void 0,
    generalSibling: void 0
  };
  const l = yY(t, n);
  return n.type === "element" && (s = hQ(
    t,
    // Try the root rules for this element too.
    Q9(e, t.rootQuery.selectors),
    n,
    r,
    i
  )), "children" in n && !t.shallow && !(t.one && t.found) && dQ(t, s, n), l(), s;
}
function dQ(t, e, n) {
  const r = Q9(e.descendant, e.directChild);
  let i, s = -1;
  const l = { count: 0, types: /* @__PURE__ */ new Map() }, c = { count: 0, types: /* @__PURE__ */ new Map() };
  for (; ++s < n.children.length; )
    fk(l, n.children[s]);
  for (s = -1; ++s < n.children.length; ) {
    const h = n.children[s], g = h.type === "element" ? h.tagName.toUpperCase() : void 0;
    if (t.elementIndex = c.count, t.typeIndex = g && c.types.get(g) || 0, t.elementCount = l.count, t.typeCount = g ? l.types.get(g) : 0, "children" in h) {
      const v = Q9(r, i), C = BO(t, v, n.children[s], s, n);
      i = Q9(C.generalSibling, C.adjacentSibling);
    }
    if (t.one && t.found)
      break;
    fk(c, n.children[s]);
  }
}
function hQ(t, e, n, r, i) {
  const s = {
    directChild: void 0,
    descendant: void 0,
    adjacentSibling: void 0,
    generalSibling: void 0
  };
  let l = -1;
  for (; ++l < e.length; ) {
    const c = e[l];
    if (t.one && t.found)
      break;
    if (t.shallow && c.rule.rule)
      throw new Error("Expected selector without nesting");
    if (cQ(c.rule, n, r, i, t)) {
      const h = c.rule.rule;
      if (h) {
        const g = { type: "ruleSet", rule: h }, v = h.nestingOperator === "+" ? "adjacentSibling" : h.nestingOperator === "~" ? "generalSibling" : h.nestingOperator === ">" ? "directChild" : "descendant";
        H4(s, v, g);
      } else
        t.found = !0, t.results.includes(n) || t.results.push(n);
    }
    c.rule.nestingOperator === null ? H4(s, "descendant", c) : c.rule.nestingOperator === "~" && H4(s, "generalSibling", c);
  }
  return s;
}
function Q9(t, e) {
  return t && e && t.length > 0 && e.length > 0 ? [...t, ...e] : t && t.length > 0 ? t : e && e.length > 0 ? e : fQ;
}
function H4(t, e, n) {
  const r = t[e];
  r ? r.push(n) : t[e] = [n];
}
function fk(t, e) {
  if (e.type === "element") {
    const n = e.tagName.toUpperCase(), r = (t.types.get(n) || 0) + 1;
    t.count++, t.types.set(n, r);
  }
}
var UO = {}, jS = {}, VS = {};
(function(t) {
  Object.defineProperty(t, "__esModule", { value: !0 });
  function e(l) {
    return l >= "a" && l <= "z" || l >= "A" && l <= "Z" || l === "-" || l === "_";
  }
  t.isIdentStart = e;
  function n(l) {
    return l >= "a" && l <= "z" || l >= "A" && l <= "Z" || l >= "0" && l <= "9" || l === "-" || l === "_";
  }
  t.isIdent = n;
  function r(l) {
    return l >= "a" && l <= "f" || l >= "A" && l <= "F" || l >= "0" && l <= "9";
  }
  t.isHex = r;
  function i(l) {
    for (var c = l.length, h = "", g = 0; g < c; ) {
      var v = l.charAt(g);
      if (t.identSpecialChars[v])
        h += "\\" + v;
      else if (v === "_" || v === "-" || v >= "A" && v <= "Z" || v >= "a" && v <= "z" || g !== 0 && v >= "0" && v <= "9")
        h += v;
      else {
        var C = v.charCodeAt(0);
        if ((C & 63488) === 55296) {
          var S = l.charCodeAt(g++);
          if ((C & 64512) !== 55296 || (S & 64512) !== 56320)
            throw Error("UCS-2(decode): illegal sequence");
          C = ((C & 1023) << 10) + (S & 1023) + 65536;
        }
        h += "\\" + C.toString(16) + " ";
      }
      g++;
    }
    return h;
  }
  t.escapeIdentifier = i;
  function s(l) {
    for (var c = l.length, h = "", g = 0, v; g < c; ) {
      var C = l.charAt(g);
      C === '"' ? C = '\\"' : C === "\\" ? C = "\\\\" : (v = t.strReplacementsRev[C]) !== void 0 && (C = v), h += C, g++;
    }
    return '"' + h + '"';
  }
  t.escapeStr = s, t.identSpecialChars = {
    "!": !0,
    '"': !0,
    "#": !0,
    $: !0,
    "%": !0,
    "&": !0,
    "'": !0,
    "(": !0,
    ")": !0,
    "*": !0,
    "+": !0,
    ",": !0,
    ".": !0,
    "/": !0,
    ";": !0,
    "<": !0,
    "=": !0,
    ">": !0,
    "?": !0,
    "@": !0,
    "[": !0,
    "\\": !0,
    "]": !0,
    "^": !0,
    "`": !0,
    "{": !0,
    "|": !0,
    "}": !0,
    "~": !0
  }, t.strReplacementsRev = {
    "\n": "\\n",
    "\r": "\\r",
    "	": "\\t",
    "\f": "\\f",
    "\v": "\\v"
  }, t.singleQuoteEscapeChars = {
    n: `
`,
    r: "\r",
    t: "	",
    f: "\f",
    "\\": "\\",
    "'": "'"
  }, t.doubleQuotesEscapeChars = {
    n: `
`,
    r: "\r",
    t: "	",
    f: "\f",
    "\\": "\\",
    '"': '"'
  };
})(VS);
Object.defineProperty(jS, "__esModule", { value: !0 });
var Ya = VS;
function pQ(t, e, n, r, i, s) {
  var l = t.length, c = "";
  function h(O, L) {
    var P = "";
    for (e++, c = t.charAt(e); e < l; ) {
      if (c === O)
        return e++, P;
      if (c === "\\") {
        e++, c = t.charAt(e);
        var Y = void 0;
        if (c === O)
          P += O;
        else if ((Y = L[c]) !== void 0)
          P += Y;
        else if (Ya.isHex(c)) {
          var j = c;
          for (e++, c = t.charAt(e); Ya.isHex(c); )
            j += c, e++, c = t.charAt(e);
          c === " " && (e++, c = t.charAt(e)), P += String.fromCharCode(parseInt(j, 16));
          continue;
        } else
          P += c;
      } else
        P += c;
      e++, c = t.charAt(e);
    }
    return P;
  }
  function g() {
    var O = "";
    for (c = t.charAt(e); e < l; ) {
      if (Ya.isIdent(c))
        O += c;
      else if (c === "\\") {
        if (e++, e >= l)
          throw Error("Expected symbol but end of file reached.");
        if (c = t.charAt(e), Ya.identSpecialChars[c])
          O += c;
        else if (Ya.isHex(c)) {
          var L = c;
          for (e++, c = t.charAt(e); Ya.isHex(c); )
            L += c, e++, c = t.charAt(e);
          c === " " && (e++, c = t.charAt(e)), O += String.fromCharCode(parseInt(L, 16));
          continue;
        } else
          O += c;
      } else
        return O;
      e++, c = t.charAt(e);
    }
    return O;
  }
  function v() {
    c = t.charAt(e);
    for (var O = !1; c === " " || c === "	" || c === `
` || c === "\r" || c === "\f"; )
      O = !0, e++, c = t.charAt(e);
    return O;
  }
  function C() {
    var O = S();
    if (e < l)
      throw Error('Rule expected but "' + t.charAt(e) + '" found.');
    return O;
  }
  function S() {
    var O = b();
    if (!O)
      return null;
    var L = O;
    for (c = t.charAt(e); c === ","; ) {
      if (e++, v(), L.type !== "selectors" && (L = {
        type: "selectors",
        selectors: [O]
      }), O = b(), !O)
        throw Error('Rule expected after ",".');
      L.selectors.push(O);
    }
    return L;
  }
  function b() {
    v();
    var O = {
      type: "ruleSet"
    }, L = N();
    if (!L)
      return null;
    for (var P = O; L && (L.type = "rule", P.rule = L, P = L, v(), c = t.charAt(e), !(e >= l || c === "," || c === ")")); )
      if (i[c]) {
        var Y = c;
        if (e++, v(), L = N(), !L)
          throw Error('Rule expected after "' + Y + '".');
        L.nestingOperator = Y;
      } else
        L = N(), L && (L.nestingOperator = null);
    return O;
  }
  function N() {
    for (var O = null; e < l; )
      if (c = t.charAt(e), c === "*")
        e++, (O = O || {}).tagName = "*";
      else if (Ya.isIdentStart(c) || c === "\\")
        (O = O || {}).tagName = g();
      else if (c === ".")
        e++, O = O || {}, (O.classNames = O.classNames || []).push(g());
      else if (c === "#")
        e++, (O = O || {}).id = g();
      else if (c === "[") {
        e++, v();
        var L = {
          name: g()
        };
        if (v(), c === "]")
          e++;
        else {
          var P = "";
          if (r[c] && (P = c, e++, c = t.charAt(e)), e >= l)
            throw Error('Expected "=" but end of file reached.');
          if (c !== "=")
            throw Error('Expected "=" but "' + c + '" found.');
          L.operator = P + "=", e++, v();
          var Y = "";
          if (L.valueType = "string", c === '"')
            Y = h('"', Ya.doubleQuotesEscapeChars);
          else if (c === "'")
            Y = h("'", Ya.singleQuoteEscapeChars);
          else if (s && c === "$")
            e++, Y = g(), L.valueType = "substitute";
          else {
            for (; e < l && c !== "]"; )
              Y += c, e++, c = t.charAt(e);
            Y = Y.trim();
          }
          if (v(), e >= l)
            throw Error('Expected "]" but end of file reached.');
          if (c !== "]")
            throw Error('Expected "]" but "' + c + '" found.');
          e++, L.value = Y;
        }
        O = O || {}, (O.attrs = O.attrs || []).push(L);
      } else if (c === ":") {
        e++;
        var j = g(), oe = {
          name: j
        };
        if (c === "(") {
          e++;
          var ee = "";
          if (v(), n[j] === "selector")
            oe.valueType = "selector", ee = S();
          else {
            if (oe.valueType = n[j] || "string", c === '"')
              ee = h('"', Ya.doubleQuotesEscapeChars);
            else if (c === "'")
              ee = h("'", Ya.singleQuoteEscapeChars);
            else if (s && c === "$")
              e++, ee = g(), oe.valueType = "substitute";
            else {
              for (; e < l && c !== ")"; )
                ee += c, e++, c = t.charAt(e);
              ee = ee.trim();
            }
            v();
          }
          if (e >= l)
            throw Error('Expected ")" but end of file reached.');
          if (c !== ")")
            throw Error('Expected ")" but "' + c + '" found.');
          e++, oe.value = ee;
        }
        O = O || {}, (O.pseudos = O.pseudos || []).push(oe);
      } else
        break;
    return O;
  }
  return C();
}
jS.parseCssSelector = pQ;
var $S = {};
Object.defineProperty($S, "__esModule", { value: !0 });
var Io = VS;
function X9(t) {
  var e = "";
  switch (t.type) {
    case "ruleSet":
      for (var n = t.rule, r = []; n; )
        n.nestingOperator && r.push(n.nestingOperator), r.push(X9(n)), n = n.rule;
      e = r.join(" ");
      break;
    case "selectors":
      e = t.selectors.map(X9).join(", ");
      break;
    case "rule":
      t.tagName && (t.tagName === "*" ? e = "*" : e = Io.escapeIdentifier(t.tagName)), t.id && (e += "#" + Io.escapeIdentifier(t.id)), t.classNames && (e += t.classNames.map(function(i) {
        return "." + Io.escapeIdentifier(i);
      }).join("")), t.attrs && (e += t.attrs.map(function(i) {
        return "operator" in i ? i.valueType === "substitute" ? "[" + Io.escapeIdentifier(i.name) + i.operator + "$" + i.value + "]" : "[" + Io.escapeIdentifier(i.name) + i.operator + Io.escapeStr(i.value) + "]" : "[" + Io.escapeIdentifier(i.name) + "]";
      }).join("")), t.pseudos && (e += t.pseudos.map(function(i) {
        return i.valueType ? i.valueType === "selector" ? ":" + Io.escapeIdentifier(i.name) + "(" + X9(i.value) + ")" : i.valueType === "substitute" ? ":" + Io.escapeIdentifier(i.name) + "($" + i.value + ")" : i.valueType === "numeric" ? ":" + Io.escapeIdentifier(i.name) + "(" + i.value + ")" : ":" + Io.escapeIdentifier(i.name) + "(" + Io.escapeIdentifier(i.value) + ")" : ":" + Io.escapeIdentifier(i.name);
      }).join(""));
      break;
    default:
      throw Error('Unknown entity type: "' + t.type + '".');
  }
  return e;
}
$S.renderEntity = X9;
Object.defineProperty(UO, "__esModule", { value: !0 });
var mQ = jS, gQ = $S, yQ = (
  /** @class */
  function() {
    function t() {
      this.pseudos = {}, this.attrEqualityMods = {}, this.ruleNestingOperators = {}, this.substitutesEnabled = !1;
    }
    return t.prototype.registerSelectorPseudos = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        this.pseudos[s] = "selector";
      }
      return this;
    }, t.prototype.unregisterSelectorPseudos = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        delete this.pseudos[s];
      }
      return this;
    }, t.prototype.registerNumericPseudos = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        this.pseudos[s] = "numeric";
      }
      return this;
    }, t.prototype.unregisterNumericPseudos = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        delete this.pseudos[s];
      }
      return this;
    }, t.prototype.registerNestingOperators = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        this.ruleNestingOperators[s] = !0;
      }
      return this;
    }, t.prototype.unregisterNestingOperators = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        delete this.ruleNestingOperators[s];
      }
      return this;
    }, t.prototype.registerAttrEqualityMods = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        this.attrEqualityMods[s] = !0;
      }
      return this;
    }, t.prototype.unregisterAttrEqualityMods = function() {
      for (var e = [], n = 0; n < arguments.length; n++)
        e[n] = arguments[n];
      for (var r = 0, i = e; r < i.length; r++) {
        var s = i[r];
        delete this.attrEqualityMods[s];
      }
      return this;
    }, t.prototype.enableSubstitutes = function() {
      return this.substitutesEnabled = !0, this;
    }, t.prototype.disableSubstitutes = function() {
      return this.substitutesEnabled = !1, this;
    }, t.prototype.parse = function(e) {
      return mQ.parseCssSelector(e, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);
    }, t.prototype.render = function(e) {
      return gQ.renderEntity(e).trim();
    }, t;
  }()
), vQ = UO.CssSelectorParser = yQ;
const vv = new vQ();
vv.registerAttrEqualityMods("~", "|", "^", "$", "*");
vv.registerSelectorPseudos("any", "matches", "not", "has");
vv.registerNestingOperators(">", "+", "~");
function EQ(t) {
  if (typeof t != "string")
    throw new TypeError("Expected `string` as selector, not `" + t + "`");
  return vv.parse(t);
}
function TQ(t, e, n) {
  const r = CQ(t, e, n);
  return qS(r, e || void 0), r.results;
}
function CQ(t, e, n) {
  return {
    // State of the query.
    rootQuery: zS(EQ(t)),
    results: [],
    // @ts-expect-error assume elements.
    scopeElements: e ? e.type === "root" ? e.children : [e] : [],
    one: !1,
    shallow: !1,
    found: !1,
    // State in the tree.
    schema: n === "svg" ? lu : Nh,
    language: void 0,
    direction: "ltr",
    editableOrEditingHost: !1,
    typeIndex: void 0,
    elementIndex: void 0,
    typeCount: void 0,
    elementCount: void 0
  };
}
const SQ = (t) => {
  const { selector: e, rewrite: n } = t || {};
  return (r) => {
    if (!(!n || typeof n != "function")) {
      if (e && typeof e == "string") {
        const i = TQ(e, r);
        i && i.length > 0 && Ca(r, i, (s, l, c) => {
          n(s, l, c);
        });
        return;
      }
      Ca(r, (i, s, l) => {
        n(i, s, l);
      });
    }
  };
}, HO = SQ, a0 = {
  strip: ["script"],
  clobberPrefix: "user-content-",
  clobber: ["name", "id"],
  ancestors: {
    tbody: ["table"],
    tfoot: ["table"],
    thead: ["table"],
    td: ["table"],
    th: ["table"],
    tr: ["table"]
  },
  protocols: {
    href: ["http", "https", "mailto", "xmpp", "irc", "ircs"],
    cite: ["http", "https"],
    src: ["http", "https"],
    longDesc: ["http", "https"]
  },
  tagNames: [
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "br",
    "b",
    "i",
    "strong",
    "em",
    "a",
    "pre",
    "code",
    "img",
    "tt",
    "div",
    "ins",
    "del",
    "sup",
    "sub",
    "p",
    "ol",
    "ul",
    "table",
    "thead",
    "tbody",
    "tfoot",
    "blockquote",
    "dl",
    "dt",
    "dd",
    "kbd",
    "q",
    "samp",
    "var",
    "hr",
    "ruby",
    "rt",
    "rp",
    "li",
    "tr",
    "td",
    "th",
    "s",
    "strike",
    "summary",
    "details",
    "caption",
    "figure",
    "figcaption",
    "abbr",
    "bdo",
    "cite",
    "dfn",
    "mark",
    "small",
    "span",
    "time",
    "wbr",
    "input"
  ],
  attributes: {
    a: ["href"],
    img: ["src", "longDesc"],
    input: [
      ["type", "checkbox"],
      ["disabled", !0]
    ],
    li: [["className", "task-list-item"]],
    div: ["itemScope", "itemType"],
    blockquote: ["cite"],
    del: ["cite"],
    ins: ["cite"],
    q: ["cite"],
    "*": [
      "abbr",
      "accept",
      "acceptCharset",
      "accessKey",
      "action",
      "align",
      "alt",
      "ariaDescribedBy",
      "ariaHidden",
      "ariaLabel",
      "ariaLabelledBy",
      "axis",
      "border",
      "cellPadding",
      "cellSpacing",
      "char",
      "charOff",
      "charSet",
      "checked",
      "clear",
      "cols",
      "colSpan",
      "color",
      "compact",
      "coords",
      "dateTime",
      "dir",
      "disabled",
      "encType",
      "htmlFor",
      "frame",
      "headers",
      "height",
      "hrefLang",
      "hSpace",
      "isMap",
      "id",
      "label",
      "lang",
      "maxLength",
      "media",
      "method",
      "multiple",
      "name",
      "noHref",
      "noShade",
      "noWrap",
      "open",
      "prompt",
      "readOnly",
      "rel",
      "rev",
      "rows",
      "rowSpan",
      "rules",
      "scope",
      "selected",
      "shape",
      "size",
      "span",
      "start",
      "summary",
      "tabIndex",
      "target",
      "title",
      "type",
      "useMap",
      "vAlign",
      "value",
      "vSpace",
      "width",
      "itemProp"
    ]
  },
  required: {
    input: {
      type: "checkbox",
      disabled: !0
    }
  }
}, al = {}.hasOwnProperty, z4 = {
  root: { children: dk },
  doctype: AQ,
  comment: xQ,
  element: {
    tagName: qO,
    properties: _Q,
    children: dk
  },
  text: { value: wQ },
  "*": { data: hk, position: hk }
};
function bQ(t, e) {
  let n = { type: "root", children: [] };
  if (t && typeof t == "object" && t.type) {
    const r = zO(
      Object.assign({}, a0, e || {}),
      t,
      []
    );
    r && (Array.isArray(r) ? r.length === 1 ? n = r[0] : n.children = r : n = r);
  }
  return n;
}
function zO(t, e, n) {
  const r = e && e.type, i = { type: e.type };
  let s;
  if (al.call(z4, r)) {
    let l = z4[r];
    if (typeof l == "function" && (l = l(t, e)), l) {
      const c = Object.assign({}, l, z4["*"]);
      let h;
      s = !0;
      for (h in c)
        if (al.call(c, h)) {
          const g = c[h](t, e[h], e, n);
          g === !1 ? (s = void 0, i[h] = e[h]) : g != null && (i[h] = g);
        }
    }
  }
  return s ? i : i.type === "element" && t.strip && !t.strip.includes(i.tagName) ? i.children : void 0;
}
function dk(t, e, n, r) {
  const i = [];
  if (Array.isArray(e)) {
    let s = -1;
    for (n.type === "element" && r.push(n.tagName); ++s < e.length; ) {
      const l = zO(t, e[s], r);
      l && (Array.isArray(l) ? i.push(...l) : i.push(l));
    }
    n.type === "element" && r.pop();
  }
  return i;
}
function AQ(t) {
  return t.allowDoctypes ? { name: kQ } : void 0;
}
function xQ(t) {
  return t.allowComments ? { value: NQ } : void 0;
}
function _Q(t, e, n, r) {
  const i = qO(t, n.tagName, n, r), s = t.attributes || {}, l = t.required || {}, c = e || {}, h = Object.assign(
    {},
    pk(s["*"]),
    pk(i && al.call(s, i) ? s[i] : [])
  ), g = {};
  let v;
  for (v in c)
    if (al.call(c, v)) {
      let C = c[v], S;
      if (al.call(h, v))
        S = h[v];
      else if (DQ(v) && al.call(h, "data*"))
        S = h["data*"];
      else
        continue;
      C = Array.isArray(C) ? OQ(t, C, v, S) : jO(t, C, v, S), C != null && (g[v] = C);
    }
  if (i && al.call(l, i))
    for (v in l[i])
      al.call(g, v) || (g[v] = l[i][v]);
  return g;
}
function kQ() {
  return "html";
}
function qO(t, e, n, r) {
  const i = typeof e == "string" ? e : "";
  let s = -1;
  if (!i || i === "*" || t.tagNames && !t.tagNames.includes(i))
    return !1;
  if (t.ancestors && al.call(t.ancestors, i)) {
    for (; ++s < t.ancestors[i].length; )
      if (r.includes(t.ancestors[i][s]))
        return i;
    return !1;
  }
  return i;
}
function NQ(t, e) {
  const n = typeof e == "string" ? e : "", r = n.indexOf("-->");
  return r < 0 ? n : n.slice(0, r);
}
function wQ(t, e) {
  return typeof e == "string" ? e : "";
}
function hk(t, e) {
  return e;
}
function OQ(t, e, n, r) {
  let i = -1;
  const s = [];
  for (; ++i < e.length; ) {
    const l = jO(t, e[i], n, r);
    l != null && s.push(l);
  }
  return s;
}
function jO(t, e, n, r) {
  if ((typeof e == "boolean" || typeof e == "number" || typeof e == "string") && RQ(t, e, n) && (r.length === 0 || r.some(
    (i) => i && typeof i == "object" && "flags" in i ? i.test(String(e)) : i === e
  )))
    return t.clobberPrefix && t.clobber && t.clobber.includes(n) ? t.clobberPrefix + e : e;
}
function RQ(t, e, n) {
  const r = String(e), i = r.indexOf(":"), s = r.indexOf("?"), l = r.indexOf("#"), c = r.indexOf("/"), h = t.protocols && al.call(t.protocols, n) ? t.protocols[n].concat() : [];
  let g = -1;
  if (h.length === 0 || i < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.
  c > -1 && i > c || s > -1 && i > s || l > -1 && i > l)
    return !0;
  for (; ++g < h.length; )
    if (i === h[g].length && r.slice(0, h[g].length) === h[g])
      return !0;
  return !1;
}
function pk(t) {
  const e = {};
  let n = -1;
  for (; ++n < t.length; ) {
    const r = t[n];
    Array.isArray(r) ? e[r[0]] = r.slice(1) : e[r] = [];
  }
  return e;
}
function DQ(t) {
  return t.length > 4 && t.slice(0, 4).toLowerCase() === "data";
}
function VO(t = a0) {
  return (e) => bQ(e, t);
}
const $O = [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "image",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "menuitem",
  "meta",
  "nextid",
  "param",
  "source",
  "track",
  "wbr"
];
function GO(t, e) {
  if (t = t.replace(
    e.subset ? MQ(e.subset) : /["&'<>`]/g,
    r
  ), e.subset || e.escapeOnly)
    return t;
  return t.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, n).replace(
    // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
    /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,
    r
  );
  function n(i, s, l) {
    return e.format(
      (i.charCodeAt(0) - 55296) * 1024 + i.charCodeAt(1) - 56320 + 65536,
      l.charCodeAt(s + 2),
      e
    );
  }
  function r(i, s, l) {
    return e.format(
      i.charCodeAt(0),
      l.charCodeAt(s + 1),
      e
    );
  }
}
function MQ(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.length; )
    e.push(t[n].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
  return new RegExp("(?:" + e.join("|") + ")", "g");
}
function LQ(t, e, n) {
  const r = "&#x" + t.toString(16).toUpperCase();
  return n && e && !/[\dA-Fa-f]/.test(String.fromCharCode(e)) ? r : r + ";";
}
function IQ(t, e, n) {
  const r = "&#" + String(t);
  return n && e && !/\d/.test(String.fromCharCode(e)) ? r : r + ";";
}
const WO = [
  "AElig",
  "AMP",
  "Aacute",
  "Acirc",
  "Agrave",
  "Aring",
  "Atilde",
  "Auml",
  "COPY",
  "Ccedil",
  "ETH",
  "Eacute",
  "Ecirc",
  "Egrave",
  "Euml",
  "GT",
  "Iacute",
  "Icirc",
  "Igrave",
  "Iuml",
  "LT",
  "Ntilde",
  "Oacute",
  "Ocirc",
  "Ograve",
  "Oslash",
  "Otilde",
  "Ouml",
  "QUOT",
  "REG",
  "THORN",
  "Uacute",
  "Ucirc",
  "Ugrave",
  "Uuml",
  "Yacute",
  "aacute",
  "acirc",
  "acute",
  "aelig",
  "agrave",
  "amp",
  "aring",
  "atilde",
  "auml",
  "brvbar",
  "ccedil",
  "cedil",
  "cent",
  "copy",
  "curren",
  "deg",
  "divide",
  "eacute",
  "ecirc",
  "egrave",
  "eth",
  "euml",
  "frac12",
  "frac14",
  "frac34",
  "gt",
  "iacute",
  "icirc",
  "iexcl",
  "igrave",
  "iquest",
  "iuml",
  "laquo",
  "lt",
  "macr",
  "micro",
  "middot",
  "nbsp",
  "not",
  "ntilde",
  "oacute",
  "ocirc",
  "ograve",
  "ordf",
  "ordm",
  "oslash",
  "otilde",
  "ouml",
  "para",
  "plusmn",
  "pound",
  "quot",
  "raquo",
  "reg",
  "sect",
  "shy",
  "sup1",
  "sup2",
  "sup3",
  "szlig",
  "thorn",
  "times",
  "uacute",
  "ucirc",
  "ugrave",
  "uml",
  "uuml",
  "yacute",
  "yen",
  "yuml"
], q4 = {
  nbsp: " ",
  iexcl: "¡",
  cent: "¢",
  pound: "£",
  curren: "¤",
  yen: "¥",
  brvbar: "¦",
  sect: "§",
  uml: "¨",
  copy: "©",
  ordf: "ª",
  laquo: "«",
  not: "¬",
  shy: "­",
  reg: "®",
  macr: "¯",
  deg: "°",
  plusmn: "±",
  sup2: "²",
  sup3: "³",
  acute: "´",
  micro: "µ",
  para: "¶",
  middot: "·",
  cedil: "¸",
  sup1: "¹",
  ordm: "º",
  raquo: "»",
  frac14: "¼",
  frac12: "½",
  frac34: "¾",
  iquest: "¿",
  Agrave: "À",
  Aacute: "Á",
  Acirc: "Â",
  Atilde: "Ã",
  Auml: "Ä",
  Aring: "Å",
  AElig: "Æ",
  Ccedil: "Ç",
  Egrave: "È",
  Eacute: "É",
  Ecirc: "Ê",
  Euml: "Ë",
  Igrave: "Ì",
  Iacute: "Í",
  Icirc: "Î",
  Iuml: "Ï",
  ETH: "Ð",
  Ntilde: "Ñ",
  Ograve: "Ò",
  Oacute: "Ó",
  Ocirc: "Ô",
  Otilde: "Õ",
  Ouml: "Ö",
  times: "×",
  Oslash: "Ø",
  Ugrave: "Ù",
  Uacute: "Ú",
  Ucirc: "Û",
  Uuml: "Ü",
  Yacute: "Ý",
  THORN: "Þ",
  szlig: "ß",
  agrave: "à",
  aacute: "á",
  acirc: "â",
  atilde: "ã",
  auml: "ä",
  aring: "å",
  aelig: "æ",
  ccedil: "ç",
  egrave: "è",
  eacute: "é",
  ecirc: "ê",
  euml: "ë",
  igrave: "ì",
  iacute: "í",
  icirc: "î",
  iuml: "ï",
  eth: "ð",
  ntilde: "ñ",
  ograve: "ò",
  oacute: "ó",
  ocirc: "ô",
  otilde: "õ",
  ouml: "ö",
  divide: "÷",
  oslash: "ø",
  ugrave: "ù",
  uacute: "ú",
  ucirc: "û",
  uuml: "ü",
  yacute: "ý",
  thorn: "þ",
  yuml: "ÿ",
  fnof: "ƒ",
  Alpha: "Α",
  Beta: "Β",
  Gamma: "Γ",
  Delta: "Δ",
  Epsilon: "Ε",
  Zeta: "Ζ",
  Eta: "Η",
  Theta: "Θ",
  Iota: "Ι",
  Kappa: "Κ",
  Lambda: "Λ",
  Mu: "Μ",
  Nu: "Ν",
  Xi: "Ξ",
  Omicron: "Ο",
  Pi: "Π",
  Rho: "Ρ",
  Sigma: "Σ",
  Tau: "Τ",
  Upsilon: "Υ",
  Phi: "Φ",
  Chi: "Χ",
  Psi: "Ψ",
  Omega: "Ω",
  alpha: "α",
  beta: "β",
  gamma: "γ",
  delta: "δ",
  epsilon: "ε",
  zeta: "ζ",
  eta: "η",
  theta: "θ",
  iota: "ι",
  kappa: "κ",
  lambda: "λ",
  mu: "μ",
  nu: "ν",
  xi: "ξ",
  omicron: "ο",
  pi: "π",
  rho: "ρ",
  sigmaf: "ς",
  sigma: "σ",
  tau: "τ",
  upsilon: "υ",
  phi: "φ",
  chi: "χ",
  psi: "ψ",
  omega: "ω",
  thetasym: "ϑ",
  upsih: "ϒ",
  piv: "ϖ",
  bull: "•",
  hellip: "…",
  prime: "′",
  Prime: "″",
  oline: "‾",
  frasl: "⁄",
  weierp: "℘",
  image: "ℑ",
  real: "ℜ",
  trade: "™",
  alefsym: "ℵ",
  larr: "←",
  uarr: "↑",
  rarr: "→",
  darr: "↓",
  harr: "↔",
  crarr: "↵",
  lArr: "⇐",
  uArr: "⇑",
  rArr: "⇒",
  dArr: "⇓",
  hArr: "⇔",
  forall: "∀",
  part: "∂",
  exist: "∃",
  empty: "∅",
  nabla: "∇",
  isin: "∈",
  notin: "∉",
  ni: "∋",
  prod: "∏",
  sum: "∑",
  minus: "−",
  lowast: "∗",
  radic: "√",
  prop: "∝",
  infin: "∞",
  ang: "∠",
  and: "∧",
  or: "∨",
  cap: "∩",
  cup: "∪",
  int: "∫",
  there4: "∴",
  sim: "∼",
  cong: "≅",
  asymp: "≈",
  ne: "≠",
  equiv: "≡",
  le: "≤",
  ge: "≥",
  sub: "⊂",
  sup: "⊃",
  nsub: "⊄",
  sube: "⊆",
  supe: "⊇",
  oplus: "⊕",
  otimes: "⊗",
  perp: "⊥",
  sdot: "⋅",
  lceil: "⌈",
  rceil: "⌉",
  lfloor: "⌊",
  rfloor: "⌋",
  lang: "〈",
  rang: "〉",
  loz: "◊",
  spades: "♠",
  clubs: "♣",
  hearts: "♥",
  diams: "♦",
  quot: '"',
  amp: "&",
  lt: "<",
  gt: ">",
  OElig: "Œ",
  oelig: "œ",
  Scaron: "Š",
  scaron: "š",
  Yuml: "Ÿ",
  circ: "ˆ",
  tilde: "˜",
  ensp: " ",
  emsp: " ",
  thinsp: " ",
  zwnj: "‌",
  zwj: "‍",
  lrm: "‎",
  rlm: "‏",
  ndash: "–",
  mdash: "—",
  lsquo: "‘",
  rsquo: "’",
  sbquo: "‚",
  ldquo: "“",
  rdquo: "”",
  bdquo: "„",
  dagger: "†",
  Dagger: "‡",
  permil: "‰",
  lsaquo: "‹",
  rsaquo: "›",
  euro: "€"
}, PQ = [
  "cent",
  "copy",
  "divide",
  "gt",
  "lt",
  "not",
  "para",
  "times"
], KO = {}.hasOwnProperty, jC = {};
let P9;
for (P9 in q4)
  KO.call(q4, P9) && (jC[q4[P9]] = P9);
function FQ(t, e, n, r) {
  const i = String.fromCharCode(t);
  if (KO.call(jC, i)) {
    const s = jC[i], l = "&" + s;
    return n && WO.includes(s) && !PQ.includes(s) && (!r || e && e !== 61 && /[^\da-z]/i.test(String.fromCharCode(e))) ? l : l + ";";
  }
  return "";
}
function BQ(t, e, n) {
  let r = LQ(t, e, n.omitOptionalSemicolons), i;
  if ((n.useNamedReferences || n.useShortestReferences) && (i = FQ(
    t,
    e,
    n.omitOptionalSemicolons,
    n.attribute
  )), (n.useShortestReferences || !i) && n.useShortestReferences) {
    const s = IQ(t, e, n.omitOptionalSemicolons);
    s.length < r.length && (r = s);
  }
  return i && (!n.useShortestReferences || i.length < r.length) ? i : r;
}
function UQ(t) {
  return "&#x" + t.toString(16).toUpperCase() + ";";
}
function mh(t, e) {
  return GO(t, Object.assign({ format: BQ }, e));
}
function HQ(t, e) {
  return GO(t, Object.assign({ format: UQ }, e));
}
function zQ(t, e, n, r) {
  return r.settings.bogusComments ? "<?" + mh(
    t.value,
    Object.assign({}, r.settings.characterReferences, { subset: [">"] })
  ) + ">" : "<!--" + t.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, i) + "-->";
  function i(s) {
    return mh(
      s,
      Object.assign({}, r.settings.characterReferences, {
        subset: ["<", ">"]
      })
    );
  }
}
function qQ(t, e, n, r) {
  return "<!" + (r.settings.upperDoctype ? "DOCTYPE" : "doctype") + (r.settings.tightDoctype ? "" : " ") + "html>";
}
function mk(t, e) {
  const n = String(t);
  if (typeof e != "string")
    throw new TypeError("Expected character");
  let r = 0, i = n.indexOf(e);
  for (; i !== -1; )
    r++, i = n.indexOf(e, i + e.length);
  return r;
}
const xr = QO(1), YO = QO(-1);
function QO(t) {
  return e;
  function e(n, r, i) {
    const s = n ? n.children : [];
    let l = (r || 0) + t, c = s && s[l];
    if (!i)
      for (; c && xc(c); )
        l += t, c = s[l];
    return c;
  }
}
const jQ = {}.hasOwnProperty;
function XO(t) {
  return e;
  function e(n, r, i) {
    return jQ.call(t, n.tagName) && t[n.tagName](n, r, i);
  }
}
const GS = XO({
  html: VQ,
  head: j4,
  body: $Q,
  p: GQ,
  li: WQ,
  dt: KQ,
  dd: YQ,
  rt: gk,
  rp: gk,
  optgroup: QQ,
  option: XQ,
  menuitem: JQ,
  colgroup: j4,
  caption: j4,
  thead: ZQ,
  tbody: eX,
  tfoot: tX,
  tr: nX,
  td: yk,
  th: yk
});
function j4(t, e, n) {
  const r = xr(n, e, !0);
  return !r || r.type !== "comment" && !(r.type === "text" && xc(r.value.charAt(0)));
}
function VQ(t, e, n) {
  const r = xr(n, e);
  return !r || r.type !== "comment";
}
function $Q(t, e, n) {
  const r = xr(n, e);
  return !r || r.type !== "comment";
}
function GQ(t, e, n) {
  const r = xr(n, e);
  return r ? r.type === "element" && (r.tagName === "address" || r.tagName === "article" || r.tagName === "aside" || r.tagName === "blockquote" || r.tagName === "details" || r.tagName === "div" || r.tagName === "dl" || r.tagName === "fieldset" || r.tagName === "figcaption" || r.tagName === "figure" || r.tagName === "footer" || r.tagName === "form" || r.tagName === "h1" || r.tagName === "h2" || r.tagName === "h3" || r.tagName === "h4" || r.tagName === "h5" || r.tagName === "h6" || r.tagName === "header" || r.tagName === "hgroup" || r.tagName === "hr" || r.tagName === "main" || r.tagName === "menu" || r.tagName === "nav" || r.tagName === "ol" || r.tagName === "p" || r.tagName === "pre" || r.tagName === "section" || r.tagName === "table" || r.tagName === "ul") : !n || // Confusing parent.
  !(n.type === "element" && (n.tagName === "a" || n.tagName === "audio" || n.tagName === "del" || n.tagName === "ins" || n.tagName === "map" || n.tagName === "noscript" || n.tagName === "video"));
}
function WQ(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && r.tagName === "li";
}
function KQ(t, e, n) {
  const r = xr(n, e);
  return r && r.type === "element" && (r.tagName === "dt" || r.tagName === "dd");
}
function YQ(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && (r.tagName === "dt" || r.tagName === "dd");
}
function gk(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && (r.tagName === "rp" || r.tagName === "rt");
}
function QQ(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && r.tagName === "optgroup";
}
function XQ(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && (r.tagName === "option" || r.tagName === "optgroup");
}
function JQ(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && (r.tagName === "menuitem" || r.tagName === "hr" || r.tagName === "menu");
}
function ZQ(t, e, n) {
  const r = xr(n, e);
  return r && r.type === "element" && (r.tagName === "tbody" || r.tagName === "tfoot");
}
function eX(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && (r.tagName === "tbody" || r.tagName === "tfoot");
}
function tX(t, e, n) {
  return !xr(n, e);
}
function nX(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && r.tagName === "tr";
}
function yk(t, e, n) {
  const r = xr(n, e);
  return !r || r.type === "element" && (r.tagName === "td" || r.tagName === "th");
}
const rX = XO({
  html: iX,
  head: oX,
  body: aX,
  colgroup: sX,
  tbody: lX
});
function iX(t) {
  const e = xr(t, -1);
  return !e || e.type !== "comment";
}
function oX(t) {
  const e = t.children, n = [];
  let r = -1;
  for (; ++r < e.length; ) {
    const i = e[r];
    if (i.type === "element" && (i.tagName === "title" || i.tagName === "base")) {
      if (n.includes(i.tagName))
        return !1;
      n.push(i.tagName);
    }
  }
  return e.length > 0;
}
function aX(t) {
  const e = xr(t, -1, !0);
  return !e || e.type !== "comment" && !(e.type === "text" && xc(e.value.charAt(0))) && !(e.type === "element" && (e.tagName === "meta" || e.tagName === "link" || e.tagName === "script" || e.tagName === "style" || e.tagName === "template"));
}
function sX(t, e, n) {
  const r = YO(n, e), i = xr(t, -1, !0);
  return n && r && r.type === "element" && r.tagName === "colgroup" && GS(r, n.children.indexOf(r), n) ? !1 : i && i.type === "element" && i.tagName === "col";
}
function lX(t, e, n) {
  const r = YO(n, e), i = xr(t, -1);
  return n && r && r.type === "element" && (r.tagName === "thead" || r.tagName === "tbody") && GS(r, n.children.indexOf(r), n) ? !1 : i && i.type === "element" && i.tagName === "tr";
}
const F9 = {
  // See: <https://html.spec.whatwg.org/#attribute-name-state>.
  name: [
    [`	
\f\r &/=>`.split(""), `	
\f\r "&'/=>\``.split("")],
    [`\0	
\f\r "&'/<=>`.split(""), `\0	
\f\r "&'/<=>\``.split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.
  unquoted: [
    [`	
\f\r &>`.split(""), `\0	
\f\r "&'<=>\``.split("")],
    [`\0	
\f\r "&'<=>\``.split(""), `\0	
\f\r "&'<=>\``.split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.
  single: [
    ["&'".split(""), "\"&'`".split("")],
    ["\0&'".split(""), "\0\"&'`".split("")]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.
  double: [
    ['"&'.split(""), "\"&'`".split("")],
    ['\0"&'.split(""), "\0\"&'`".split("")]
  ]
};
function uX(t, e, n, r) {
  const i = r.schema, s = i.space === "svg" ? !1 : r.settings.omitOptionalTags;
  let l = i.space === "svg" ? r.settings.closeEmptyElements : r.settings.voids.includes(t.tagName.toLowerCase());
  const c = [];
  let h;
  i.space === "html" && t.tagName === "svg" && (r.schema = lu);
  const g = cX(r, t.properties), v = r.all(
    i.space === "html" && t.tagName === "template" ? t.content : t
  );
  return r.schema = i, v && (l = !1), (g || !s || !rX(t, e, n)) && (c.push("<", t.tagName, g ? " " + g : ""), l && (i.space === "svg" || r.settings.closeSelfClosing) && (h = g.charAt(g.length - 1), (!r.settings.tightSelfClosing || h === "/" || h && h !== '"' && h !== "'") && c.push(" "), c.push("/")), c.push(">")), c.push(v), !l && (!s || !GS(t, e, n)) && c.push("</" + t.tagName + ">"), c.join("");
}
function cX(t, e) {
  const n = [];
  let r = -1, i;
  if (e) {
    for (i in e)
      if (e[i] !== void 0 && e[i] !== null) {
        const s = fX(t, i, e[i]);
        s && n.push(s);
      }
  }
  for (; ++r < n.length; ) {
    const s = t.settings.tightAttributes ? n[r].charAt(n[r].length - 1) : null;
    r !== n.length - 1 && s !== '"' && s !== "'" && (n[r] += " ");
  }
  return n.join("");
}
function fX(t, e, n) {
  const r = b0(t.schema, e), i = t.settings.allowParseErrors && t.schema.space === "html" ? 0 : 1, s = t.settings.allowDangerousCharacters ? 0 : 1;
  let l = t.quote, c;
  if (r.overloadedBoolean && (n === r.attribute || n === "") ? n = !0 : (r.boolean || r.overloadedBoolean && typeof n != "string") && (n = Boolean(n)), n == null || n === !1 || typeof n == "number" && Number.isNaN(n))
    return "";
  const h = mh(
    r.attribute,
    Object.assign({}, t.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: F9.name[i][s]
    })
  );
  return n === !0 || (n = Array.isArray(n) ? (r.commaSeparated ? RS : OS)(n, {
    padLeft: !t.settings.tightCommaSeparatedLists
  }) : String(n), t.settings.collapseEmptyAttributes && !n) ? h : (t.settings.preferUnquoted && (c = mh(
    n,
    Object.assign({}, t.settings.characterReferences, {
      subset: F9.unquoted[i][s],
      attribute: !0
    })
  )), c !== n && (t.settings.quoteSmart && mk(n, l) > mk(n, t.alternative) && (l = t.alternative), c = l + mh(
    n,
    Object.assign({}, t.settings.characterReferences, {
      // Always encode without parse errors in non-HTML.
      subset: (l === "'" ? F9.single : F9.double)[i][s],
      attribute: !0
    })
  ) + l), h + (c && "=" + c));
}
function JO(t, e, n, r) {
  return n && n.type === "element" && (n.tagName === "script" || n.tagName === "style") ? t.value : mh(
    t.value,
    Object.assign({}, r.settings.characterReferences, {
      subset: ["<", "&"]
    })
  );
}
function dX(t, e, n, r) {
  return r.settings.allowDangerousHtml ? t.value : JO(t, e, n, r);
}
function hX(t, e, n, r) {
  return r.all(t);
}
const pX = Oh("type", {
  invalid: mX,
  unknown: gX,
  handlers: { comment: zQ, doctype: qQ, element: uX, raw: dX, root: hX, text: JO }
});
function mX(t) {
  throw new Error("Expected node, not `" + t + "`");
}
function gX(t) {
  throw new Error("Cannot compile unknown node `" + t.type + "`");
}
function ZO(t, e) {
  const n = e || {}, r = n.quote || '"', i = r === '"' ? "'" : '"';
  if (r !== '"' && r !== "'")
    throw new Error("Invalid quote `" + r + "`, expected `'` or `\"`");
  return {
    one: yX,
    all: vX,
    settings: {
      omitOptionalTags: n.omitOptionalTags || !1,
      allowParseErrors: n.allowParseErrors || !1,
      allowDangerousCharacters: n.allowDangerousCharacters || !1,
      quoteSmart: n.quoteSmart || !1,
      preferUnquoted: n.preferUnquoted || !1,
      tightAttributes: n.tightAttributes || !1,
      upperDoctype: n.upperDoctype || !1,
      tightDoctype: n.tightDoctype || !1,
      bogusComments: n.bogusComments || !1,
      tightCommaSeparatedLists: n.tightCommaSeparatedLists || !1,
      tightSelfClosing: n.tightSelfClosing || !1,
      collapseEmptyAttributes: n.collapseEmptyAttributes || !1,
      allowDangerousHtml: n.allowDangerousHtml || !1,
      voids: n.voids || $O,
      characterReferences: n.characterReferences || n.entities || {},
      closeSelfClosing: n.closeSelfClosing || !1,
      closeEmptyElements: n.closeEmptyElements || !1
    },
    schema: n.space === "svg" ? lu : Nh,
    quote: r,
    alternative: i
  }.one(
    Array.isArray(t) ? { type: "root", children: t } : t,
    void 0,
    void 0
  );
}
function yX(t, e, n) {
  return pX(t, e, n, this);
}
function vX(t) {
  const e = [], n = t && t.children || [];
  let r = -1;
  for (; ++r < n.length; )
    e[r] = this.one(n[r], r, t);
  return e.join("");
}
const EX = {
  bullet: "*",
  listItemIndent: "one",
  rule: "-",
  emphasis: "_"
}, TX = { allowDangerousHtml: !0 }, eR = { fragment: !0 }, CX = {
  handlers: {
    figure(t, e) {
      return t(
        e,
        "html",
        ZO(e, {
          closeSelfClosing: !1,
          closeEmptyElements: !0
        })
      );
    }
  }
}, tR = {
  closeSelfClosing: !1,
  closeEmptyElements: !0
}, nR = {
  rewrite: (t, e, n) => {
    t.type == "element" && t.tagName == "a" && t.properties && (t.properties.target = "_blank", t.properties.rel = "noopener noreferrer nofollow"), t.type == "element" && t.tagName == "del" && (t.tagName = "s"), t.type == "element" && t.tagName == "u" && (t.tagName = "strong");
  }
}, rR = {
  tagNames: [
    ...a0.tagNames,
    "iframe",
    "footer",
    "header",
    "audio",
    "source"
  ],
  protocols: {
    ...a0.protocols,
    href: ["http", "https", "mailto", "tel"]
  },
  attributes: {
    ...a0.attributes,
    a: ["href", "ref", "target"],
    img: ["src", "srcSet", "data*"],
    audio: ["controls", "data*", ["preload", "metadata"]],
    source: ["src", "type", "data*"],
    figure: [["className", "image", "audio", "embed-code", "embed-video"]],
    div: [
      [
        "className",
        "player",
        "progress-bar",
        "meta",
        "time",
        "iframe-container"
      ],
      "data*"
    ],
    h4: [["className", "title"]],
    span: [["className", "play", "current", "duration"], "data*"],
    iframe: [
      "src",
      "allowFullScreen",
      ["loading", "lazy"],
      ["frameBorder", "0"],
      ["sandbox", "allow-scripts", "allow-same-origin", "allow-popups"]
    ]
  }
}, SX = yS().use(qw, eR).use(HO, nR).use(XW, CX).use(wO).use(WK, EX), one = async (t) => {
  const e = await SX.process(t);
  return String(e);
};
function on(t, e, n, r) {
  const i = r ? r - 1 : Number.POSITIVE_INFINITY;
  let s = 0;
  return l;
  function l(h) {
    return Kn(h) ? (t.enter(n), c(h)) : e(h);
  }
  function c(h) {
    return Kn(h) && s++ < i ? (t.consume(h), c) : (t.exit(n), e(h));
  }
}
const bX = {
  tokenize: AX
};
function AX(t) {
  const e = t.attempt(
    this.parser.constructs.contentInitial,
    r,
    i
  );
  let n;
  return e;
  function r(c) {
    if (c === null) {
      t.consume(c);
      return;
    }
    return t.enter("lineEnding"), t.consume(c), t.exit("lineEnding"), on(t, e, "linePrefix");
  }
  function i(c) {
    return t.enter("paragraph"), s(c);
  }
  function s(c) {
    const h = t.enter("chunkText", {
      contentType: "text",
      previous: n
    });
    return n && (n.next = h), n = h, l(c);
  }
  function l(c) {
    if (c === null) {
      t.exit("chunkText"), t.exit("paragraph"), t.consume(c);
      return;
    }
    return Et(c) ? (t.consume(c), t.exit("chunkText"), s) : (t.consume(c), l);
  }
}
const xX = {
  tokenize: _X
}, vk = {
  tokenize: kX
};
function _X(t) {
  const e = this, n = [];
  let r = 0, i, s, l;
  return c;
  function c(j) {
    if (r < n.length) {
      const oe = n[r];
      return e.containerState = oe[1], t.attempt(
        oe[0].continuation,
        h,
        g
      )(j);
    }
    return g(j);
  }
  function h(j) {
    if (r++, e.containerState._closeFlow) {
      e.containerState._closeFlow = void 0, i && Y();
      const oe = e.events.length;
      let ee = oe, z;
      for (; ee--; )
        if (e.events[ee][0] === "exit" && e.events[ee][1].type === "chunkFlow") {
          z = e.events[ee][1].end;
          break;
        }
      P(r);
      let H = oe;
      for (; H < e.events.length; )
        e.events[H][1].end = Object.assign({}, z), H++;
      return Bo(
        e.events,
        ee + 1,
        0,
        e.events.slice(oe)
      ), e.events.length = H, g(j);
    }
    return c(j);
  }
  function g(j) {
    if (r === n.length) {
      if (!i)
        return S(j);
      if (i.currentConstruct && i.currentConstruct.concrete)
        return N(j);
      e.interrupt = Boolean(
        i.currentConstruct && !i._gfmTableDynamicInterruptHack
      );
    }
    return e.containerState = {}, t.check(
      vk,
      v,
      C
    )(j);
  }
  function v(j) {
    return i && Y(), P(r), S(j);
  }
  function C(j) {
    return e.parser.lazy[e.now().line] = r !== n.length, l = e.now().offset, N(j);
  }
  function S(j) {
    return e.containerState = {}, t.attempt(
      vk,
      b,
      N
    )(j);
  }
  function b(j) {
    return r++, n.push([e.currentConstruct, e.containerState]), S(j);
  }
  function N(j) {
    if (j === null) {
      i && Y(), P(0), t.consume(j);
      return;
    }
    return i = i || e.parser.flow(e.now()), t.enter("chunkFlow", {
      contentType: "flow",
      previous: s,
      _tokenizer: i
    }), O(j);
  }
  function O(j) {
    if (j === null) {
      L(t.exit("chunkFlow"), !0), P(0), t.consume(j);
      return;
    }
    return Et(j) ? (t.consume(j), L(t.exit("chunkFlow")), r = 0, e.interrupt = void 0, c) : (t.consume(j), O);
  }
  function L(j, oe) {
    const ee = e.sliceStream(j);
    if (oe && ee.push(null), j.previous = s, s && (s.next = j), s = j, i.defineSkip(j.start), i.write(ee), e.parser.lazy[j.start.line]) {
      let z = i.events.length;
      for (; z--; )
        if (
          // The token starts before the line ending…
          i.events[z][1].start.offset < l && // …and either is not ended yet…
          (!i.events[z][1].end || // …or ends after it.
          i.events[z][1].end.offset > l)
        )
          return;
      const H = e.events.length;
      let Z = H, me, Ie;
      for (; Z--; )
        if (e.events[Z][0] === "exit" && e.events[Z][1].type === "chunkFlow") {
          if (me) {
            Ie = e.events[Z][1].end;
            break;
          }
          me = !0;
        }
      for (P(r), z = H; z < e.events.length; )
        e.events[z][1].end = Object.assign({}, Ie), z++;
      Bo(
        e.events,
        Z + 1,
        0,
        e.events.slice(H)
      ), e.events.length = z;
    }
  }
  function P(j) {
    let oe = n.length;
    for (; oe-- > j; ) {
      const ee = n[oe];
      e.containerState = ee[1], ee[0].exit.call(e, t);
    }
    n.length = j;
  }
  function Y() {
    i.write([null]), s = void 0, i = void 0, e.containerState._closeFlow = void 0;
  }
}
function kX(t, e, n) {
  return on(
    t,
    t.attempt(this.parser.constructs.document, e, n),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}
const VC = {
  name: "attention",
  tokenize: wX,
  resolveAll: NX
};
function NX(t, e) {
  let n = -1, r, i, s, l, c, h, g, v;
  for (; ++n < t.length; )
    if (t[n][0] === "enter" && t[n][1].type === "attentionSequence" && t[n][1]._close) {
      for (r = n; r--; )
        if (t[r][0] === "exit" && t[r][1].type === "attentionSequence" && t[r][1]._open && // If the markers are the same:
        e.sliceSerialize(t[r][1]).charCodeAt(0) === e.sliceSerialize(t[n][1]).charCodeAt(0)) {
          if ((t[r][1]._close || t[n][1]._open) && (t[n][1].end.offset - t[n][1].start.offset) % 3 && !((t[r][1].end.offset - t[r][1].start.offset + t[n][1].end.offset - t[n][1].start.offset) % 3))
            continue;
          h = t[r][1].end.offset - t[r][1].start.offset > 1 && t[n][1].end.offset - t[n][1].start.offset > 1 ? 2 : 1;
          const C = Object.assign({}, t[r][1].end), S = Object.assign({}, t[n][1].start);
          Ek(C, -h), Ek(S, h), l = {
            type: h > 1 ? "strongSequence" : "emphasisSequence",
            start: C,
            end: Object.assign({}, t[r][1].end)
          }, c = {
            type: h > 1 ? "strongSequence" : "emphasisSequence",
            start: Object.assign({}, t[n][1].start),
            end: S
          }, s = {
            type: h > 1 ? "strongText" : "emphasisText",
            start: Object.assign({}, t[r][1].end),
            end: Object.assign({}, t[n][1].start)
          }, i = {
            type: h > 1 ? "strong" : "emphasis",
            start: Object.assign({}, l.start),
            end: Object.assign({}, c.end)
          }, t[r][1].end = Object.assign({}, l.start), t[n][1].start = Object.assign({}, c.end), g = [], t[r][1].end.offset - t[r][1].start.offset && (g = ha(g, [
            ["enter", t[r][1], e],
            ["exit", t[r][1], e]
          ])), g = ha(g, [
            ["enter", i, e],
            ["enter", l, e],
            ["exit", l, e],
            ["enter", s, e]
          ]), g = ha(
            g,
            gv(
              e.parser.constructs.insideSpan.null,
              t.slice(r + 1, n),
              e
            )
          ), g = ha(g, [
            ["exit", s, e],
            ["enter", c, e],
            ["exit", c, e],
            ["exit", i, e]
          ]), t[n][1].end.offset - t[n][1].start.offset ? (v = 2, g = ha(g, [
            ["enter", t[n][1], e],
            ["exit", t[n][1], e]
          ])) : v = 0, Bo(t, r - 1, n - r + 3, g), n = r + g.length - v - 2;
          break;
        }
    }
  for (n = -1; ++n < t.length; )
    t[n][1].type === "attentionSequence" && (t[n][1].type = "data");
  return t;
}
function wX(t, e) {
  const n = this.parser.constructs.attentionMarkers.null, r = this.previous, i = zy(r);
  let s;
  return l;
  function l(h) {
    return t.enter("attentionSequence"), s = h, c(h);
  }
  function c(h) {
    if (h === s)
      return t.consume(h), c;
    const g = t.exit("attentionSequence"), v = zy(h), C = !v || v === 2 && i || n.includes(h), S = !i || i === 2 && v || n.includes(r);
    return g._open = Boolean(s === 42 ? C : C && (i || !S)), g._close = Boolean(s === 42 ? S : S && (v || !C)), e(h);
  }
}
function Ek(t, e) {
  t.column += e, t.offset += e, t._bufferIndex += e;
}
const OX = {
  name: "autolink",
  tokenize: RX
};
function RX(t, e, n) {
  let r = 1;
  return i;
  function i(N) {
    return t.enter("autolink"), t.enter("autolinkMarker"), t.consume(N), t.exit("autolinkMarker"), t.enter("autolinkProtocol"), s;
  }
  function s(N) {
    return ga(N) ? (t.consume(N), l) : ok(N) ? g(N) : n(N);
  }
  function l(N) {
    return N === 43 || N === 45 || N === 46 || $i(N) ? c(N) : g(N);
  }
  function c(N) {
    return N === 58 ? (t.consume(N), h) : (N === 43 || N === 45 || N === 46 || $i(N)) && r++ < 32 ? (t.consume(N), c) : g(N);
  }
  function h(N) {
    return N === 62 ? (t.exit("autolinkProtocol"), b(N)) : N === null || N === 32 || N === 60 || zC(N) ? n(N) : (t.consume(N), h);
  }
  function g(N) {
    return N === 64 ? (t.consume(N), r = 0, v) : ok(N) ? (t.consume(N), g) : n(N);
  }
  function v(N) {
    return $i(N) ? C(N) : n(N);
  }
  function C(N) {
    return N === 46 ? (t.consume(N), r = 0, v) : N === 62 ? (t.exit("autolinkProtocol").type = "autolinkEmail", b(N)) : S(N);
  }
  function S(N) {
    return (N === 45 || $i(N)) && r++ < 63 ? (t.consume(N), N === 45 ? S : C) : n(N);
  }
  function b(N) {
    return t.enter("autolinkMarker"), t.consume(N), t.exit("autolinkMarker"), t.exit("autolink"), e;
  }
}
const Ev = {
  tokenize: DX,
  partial: !0
};
function DX(t, e, n) {
  return on(t, r, "linePrefix");
  function r(i) {
    return i === null || Et(i) ? e(i) : n(i);
  }
}
const iR = {
  name: "blockQuote",
  tokenize: MX,
  continuation: {
    tokenize: LX
  },
  exit: IX
};
function MX(t, e, n) {
  const r = this;
  return i;
  function i(l) {
    if (l === 62) {
      const c = r.containerState;
      return c.open || (t.enter("blockQuote", {
        _container: !0
      }), c.open = !0), t.enter("blockQuotePrefix"), t.enter("blockQuoteMarker"), t.consume(l), t.exit("blockQuoteMarker"), s;
    }
    return n(l);
  }
  function s(l) {
    return Kn(l) ? (t.enter("blockQuotePrefixWhitespace"), t.consume(l), t.exit("blockQuotePrefixWhitespace"), t.exit("blockQuotePrefix"), e) : (t.exit("blockQuotePrefix"), e(l));
  }
}
function LX(t, e, n) {
  return on(
    t,
    t.attempt(iR, e, n),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}
function IX(t) {
  t.exit("blockQuote");
}
const oR = {
  name: "characterEscape",
  tokenize: PX
};
function PX(t, e, n) {
  return r;
  function r(s) {
    return t.enter("characterEscape"), t.enter("escapeMarker"), t.consume(s), t.exit("escapeMarker"), i;
  }
  function i(s) {
    return JK(s) ? (t.enter("characterEscapeValue"), t.consume(s), t.exit("characterEscapeValue"), t.exit("characterEscape"), e) : n(s);
  }
}
const aR = {
  name: "characterReference",
  tokenize: FX
};
function FX(t, e, n) {
  const r = this;
  let i = 0, s, l;
  return c;
  function c(C) {
    return t.enter("characterReference"), t.enter("characterReferenceMarker"), t.consume(C), t.exit("characterReferenceMarker"), h;
  }
  function h(C) {
    return C === 35 ? (t.enter("characterReferenceMarkerNumeric"), t.consume(C), t.exit("characterReferenceMarkerNumeric"), g) : (t.enter("characterReferenceValue"), s = 31, l = $i, v(C));
  }
  function g(C) {
    return C === 88 || C === 120 ? (t.enter("characterReferenceMarkerHexadecimal"), t.consume(C), t.exit("characterReferenceMarkerHexadecimal"), t.enter("characterReferenceValue"), s = 6, l = XK, v) : (t.enter("characterReferenceValue"), s = 7, l = HC, v(C));
  }
  function v(C) {
    let S;
    return C === 59 && i ? (S = t.exit("characterReferenceValue"), l === $i && !v0(r.sliceSerialize(S)) ? n(C) : (t.enter("characterReferenceMarker"), t.consume(C), t.exit("characterReferenceMarker"), t.exit("characterReference"), e)) : l(C) && i++ < s ? (t.consume(C), v) : n(C);
  }
}
const Tk = {
  name: "codeFenced",
  tokenize: BX,
  concrete: !0
};
function BX(t, e, n) {
  const r = this, i = {
    tokenize: ee,
    partial: !0
  }, s = {
    tokenize: oe,
    partial: !0
  }, l = this.events[this.events.length - 1], c = l && l[1].type === "linePrefix" ? l[2].sliceSerialize(l[1], !0).length : 0;
  let h = 0, g;
  return v;
  function v(z) {
    return t.enter("codeFenced"), t.enter("codeFencedFence"), t.enter("codeFencedFenceSequence"), g = z, C(z);
  }
  function C(z) {
    return z === g ? (t.consume(z), h++, C) : (t.exit("codeFencedFenceSequence"), h < 3 ? n(z) : on(t, S, "whitespace")(z));
  }
  function S(z) {
    return z === null || Et(z) ? L(z) : (t.enter("codeFencedFenceInfo"), t.enter("chunkString", {
      contentType: "string"
    }), b(z));
  }
  function b(z) {
    return z === null || Pr(z) ? (t.exit("chunkString"), t.exit("codeFencedFenceInfo"), on(t, N, "whitespace")(z)) : z === 96 && z === g ? n(z) : (t.consume(z), b);
  }
  function N(z) {
    return z === null || Et(z) ? L(z) : (t.enter("codeFencedFenceMeta"), t.enter("chunkString", {
      contentType: "string"
    }), O(z));
  }
  function O(z) {
    return z === null || Et(z) ? (t.exit("chunkString"), t.exit("codeFencedFenceMeta"), L(z)) : z === 96 && z === g ? n(z) : (t.consume(z), O);
  }
  function L(z) {
    return t.exit("codeFencedFence"), r.interrupt ? e(z) : P(z);
  }
  function P(z) {
    return z === null ? j(z) : Et(z) ? t.attempt(
      s,
      t.attempt(
        i,
        j,
        c ? on(
          t,
          P,
          "linePrefix",
          c + 1
        ) : P
      ),
      j
    )(z) : (t.enter("codeFlowValue"), Y(z));
  }
  function Y(z) {
    return z === null || Et(z) ? (t.exit("codeFlowValue"), P(z)) : (t.consume(z), Y);
  }
  function j(z) {
    return t.exit("codeFenced"), e(z);
  }
  function oe(z, H, Z) {
    const me = this;
    return Ie;
    function Ie(pe) {
      return z.enter("lineEnding"), z.consume(pe), z.exit("lineEnding"), fe;
    }
    function fe(pe) {
      return me.parser.lazy[me.now().line] ? Z(pe) : H(pe);
    }
  }
  function ee(z, H, Z) {
    let me = 0;
    return on(
      z,
      Ie,
      "linePrefix",
      this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    );
    function Ie(Ce) {
      return z.enter("codeFencedFence"), z.enter("codeFencedFenceSequence"), fe(Ce);
    }
    function fe(Ce) {
      return Ce === g ? (z.consume(Ce), me++, fe) : me < h ? Z(Ce) : (z.exit("codeFencedFenceSequence"), on(z, pe, "whitespace")(Ce));
    }
    function pe(Ce) {
      return Ce === null || Et(Ce) ? (z.exit("codeFencedFence"), H(Ce)) : Z(Ce);
    }
  }
}
const V4 = {
  name: "codeIndented",
  tokenize: HX
}, UX = {
  tokenize: zX,
  partial: !0
};
function HX(t, e, n) {
  const r = this;
  return i;
  function i(g) {
    return t.enter("codeIndented"), on(t, s, "linePrefix", 4 + 1)(g);
  }
  function s(g) {
    const v = r.events[r.events.length - 1];
    return v && v[1].type === "linePrefix" && v[2].sliceSerialize(v[1], !0).length >= 4 ? l(g) : n(g);
  }
  function l(g) {
    return g === null ? h(g) : Et(g) ? t.attempt(UX, l, h)(g) : (t.enter("codeFlowValue"), c(g));
  }
  function c(g) {
    return g === null || Et(g) ? (t.exit("codeFlowValue"), l(g)) : (t.consume(g), c);
  }
  function h(g) {
    return t.exit("codeIndented"), e(g);
  }
}
function zX(t, e, n) {
  const r = this;
  return i;
  function i(l) {
    return r.parser.lazy[r.now().line] ? n(l) : Et(l) ? (t.enter("lineEnding"), t.consume(l), t.exit("lineEnding"), i) : on(t, s, "linePrefix", 4 + 1)(l);
  }
  function s(l) {
    const c = r.events[r.events.length - 1];
    return c && c[1].type === "linePrefix" && c[2].sliceSerialize(c[1], !0).length >= 4 ? e(l) : Et(l) ? i(l) : n(l);
  }
}
const qX = {
  name: "codeText",
  tokenize: $X,
  resolve: jX,
  previous: VX
};
function jX(t) {
  let e = t.length - 4, n = 3, r, i;
  if ((t[n][1].type === "lineEnding" || t[n][1].type === "space") && (t[e][1].type === "lineEnding" || t[e][1].type === "space")) {
    for (r = n; ++r < e; )
      if (t[r][1].type === "codeTextData") {
        t[n][1].type = "codeTextPadding", t[e][1].type = "codeTextPadding", n += 2, e -= 2;
        break;
      }
  }
  for (r = n - 1, e++; ++r <= e; )
    i === void 0 ? r !== e && t[r][1].type !== "lineEnding" && (i = r) : (r === e || t[r][1].type === "lineEnding") && (t[i][1].type = "codeTextData", r !== i + 2 && (t[i][1].end = t[r - 1][1].end, t.splice(i + 2, r - i - 2), e -= r - i - 2, r = i + 2), i = void 0);
  return t;
}
function VX(t) {
  return t !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function $X(t, e, n) {
  let r = 0, i, s;
  return l;
  function l(C) {
    return t.enter("codeText"), t.enter("codeTextSequence"), c(C);
  }
  function c(C) {
    return C === 96 ? (t.consume(C), r++, c) : (t.exit("codeTextSequence"), h(C));
  }
  function h(C) {
    return C === null ? n(C) : C === 96 ? (s = t.enter("codeTextSequence"), i = 0, v(C)) : C === 32 ? (t.enter("space"), t.consume(C), t.exit("space"), h) : Et(C) ? (t.enter("lineEnding"), t.consume(C), t.exit("lineEnding"), h) : (t.enter("codeTextData"), g(C));
  }
  function g(C) {
    return C === null || C === 32 || C === 96 || Et(C) ? (t.exit("codeTextData"), h(C)) : (t.consume(C), g);
  }
  function v(C) {
    return C === 96 ? (t.consume(C), i++, v) : i === r ? (t.exit("codeTextSequence"), t.exit("codeText"), e(C)) : (s.type = "codeTextData", g(C));
  }
}
function sR(t) {
  const e = {};
  let n = -1, r, i, s, l, c, h, g;
  for (; ++n < t.length; ) {
    for (; n in e; )
      n = e[n];
    if (r = t[n], n && r[1].type === "chunkFlow" && t[n - 1][1].type === "listItemPrefix" && (h = r[1]._tokenizer.events, s = 0, s < h.length && h[s][1].type === "lineEndingBlank" && (s += 2), s < h.length && h[s][1].type === "content"))
      for (; ++s < h.length && h[s][1].type !== "content"; )
        h[s][1].type === "chunkText" && (h[s][1]._isInFirstContentOfListItem = !0, s++);
    if (r[0] === "enter")
      r[1].contentType && (Object.assign(e, GX(t, n)), n = e[n], g = !0);
    else if (r[1]._container) {
      for (s = n, i = void 0; s-- && (l = t[s], l[1].type === "lineEnding" || l[1].type === "lineEndingBlank"); )
        l[0] === "enter" && (i && (t[i][1].type = "lineEndingBlank"), l[1].type = "lineEnding", i = s);
      i && (r[1].end = Object.assign({}, t[i][1].start), c = t.slice(i, n), c.unshift(r), Bo(t, i, n - i + 1, c));
    }
  }
  return !g;
}
function GX(t, e) {
  const n = t[e][1], r = t[e][2];
  let i = e - 1;
  const s = [], l = n._tokenizer || r.parser[n.contentType](n.start), c = l.events, h = [], g = {};
  let v, C, S = -1, b = n, N = 0, O = 0;
  const L = [O];
  for (; b; ) {
    for (; t[++i][1] !== b; )
      ;
    s.push(i), b._tokenizer || (v = r.sliceStream(b), b.next || v.push(null), C && l.defineSkip(b.start), b._isInFirstContentOfListItem && (l._gfmTasklistFirstContentOfListItem = !0), l.write(v), b._isInFirstContentOfListItem && (l._gfmTasklistFirstContentOfListItem = void 0)), C = b, b = b.next;
  }
  for (b = n; ++S < c.length; )
    // Find a void token that includes a break.
    c[S][0] === "exit" && c[S - 1][0] === "enter" && c[S][1].type === c[S - 1][1].type && c[S][1].start.line !== c[S][1].end.line && (O = S + 1, L.push(O), b._tokenizer = void 0, b.previous = void 0, b = b.next);
  for (l.events = [], b ? (b._tokenizer = void 0, b.previous = void 0) : L.pop(), S = L.length; S--; ) {
    const P = c.slice(L[S], L[S + 1]), Y = s.pop();
    h.unshift([Y, Y + P.length - 1]), Bo(t, Y, 2, P);
  }
  for (S = -1; ++S < h.length; )
    g[N + h[S][0]] = N + h[S][1], N += h[S][1] - h[S][0] - 1;
  return g;
}
const WX = {
  tokenize: QX,
  resolve: YX
}, KX = {
  tokenize: XX,
  partial: !0
};
function YX(t) {
  return sR(t), t;
}
function QX(t, e) {
  let n;
  return r;
  function r(c) {
    return t.enter("content"), n = t.enter("chunkContent", {
      contentType: "content"
    }), i(c);
  }
  function i(c) {
    return c === null ? s(c) : Et(c) ? t.check(
      KX,
      l,
      s
    )(c) : (t.consume(c), i);
  }
  function s(c) {
    return t.exit("chunkContent"), t.exit("content"), e(c);
  }
  function l(c) {
    return t.consume(c), t.exit("chunkContent"), n.next = t.enter("chunkContent", {
      contentType: "content",
      previous: n
    }), n = n.next, i;
  }
}
function XX(t, e, n) {
  const r = this;
  return i;
  function i(l) {
    return t.exit("chunkContent"), t.enter("lineEnding"), t.consume(l), t.exit("lineEnding"), on(t, s, "linePrefix");
  }
  function s(l) {
    if (l === null || Et(l))
      return n(l);
    const c = r.events[r.events.length - 1];
    return !r.parser.constructs.disable.null.includes("codeIndented") && c && c[1].type === "linePrefix" && c[2].sliceSerialize(c[1], !0).length >= 4 ? e(l) : t.interrupt(r.parser.constructs.flow, n, e)(l);
  }
}
function lR(t, e, n, r, i, s, l, c, h) {
  const g = h || Number.POSITIVE_INFINITY;
  let v = 0;
  return C;
  function C(P) {
    return P === 60 ? (t.enter(r), t.enter(i), t.enter(s), t.consume(P), t.exit(s), S) : P === null || P === 41 || zC(P) ? n(P) : (t.enter(r), t.enter(l), t.enter(c), t.enter("chunkString", {
      contentType: "string"
    }), O(P));
  }
  function S(P) {
    return P === 62 ? (t.enter(s), t.consume(P), t.exit(s), t.exit(i), t.exit(r), e) : (t.enter(c), t.enter("chunkString", {
      contentType: "string"
    }), b(P));
  }
  function b(P) {
    return P === 62 ? (t.exit("chunkString"), t.exit(c), S(P)) : P === null || P === 60 || Et(P) ? n(P) : (t.consume(P), P === 92 ? N : b);
  }
  function N(P) {
    return P === 60 || P === 62 || P === 92 ? (t.consume(P), b) : b(P);
  }
  function O(P) {
    return P === 40 ? ++v > g ? n(P) : (t.consume(P), O) : P === 41 ? v-- ? (t.consume(P), O) : (t.exit("chunkString"), t.exit(c), t.exit(l), t.exit(r), e(P)) : P === null || Pr(P) ? v ? n(P) : (t.exit("chunkString"), t.exit(c), t.exit(l), t.exit(r), e(P)) : zC(P) ? n(P) : (t.consume(P), P === 92 ? L : O);
  }
  function L(P) {
    return P === 40 || P === 41 || P === 92 ? (t.consume(P), O) : O(P);
  }
}
function uR(t, e, n, r, i, s) {
  const l = this;
  let c = 0, h;
  return g;
  function g(b) {
    return t.enter(r), t.enter(i), t.consume(b), t.exit(i), t.enter(s), v;
  }
  function v(b) {
    return b === null || b === 91 || b === 93 && !h || /* To do: remove in the future once we’ve switched from
     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
     * which doesn’t need this */
    /* Hidden footnotes hook */
    /* c8 ignore next 3 */
    b === 94 && !c && "_hiddenFootnoteSupport" in l.parser.constructs || c > 999 ? n(b) : b === 93 ? (t.exit(s), t.enter(i), t.consume(b), t.exit(i), t.exit(r), e) : Et(b) ? (t.enter("lineEnding"), t.consume(b), t.exit("lineEnding"), v) : (t.enter("chunkString", {
      contentType: "string"
    }), C(b));
  }
  function C(b) {
    return b === null || b === 91 || b === 93 || Et(b) || c++ > 999 ? (t.exit("chunkString"), v(b)) : (t.consume(b), h = h || !Kn(b), b === 92 ? S : C);
  }
  function S(b) {
    return b === 91 || b === 92 || b === 93 ? (t.consume(b), c++, C) : C(b);
  }
}
function cR(t, e, n, r, i, s) {
  let l;
  return c;
  function c(S) {
    return t.enter(r), t.enter(i), t.consume(S), t.exit(i), l = S === 40 ? 41 : S, h;
  }
  function h(S) {
    return S === l ? (t.enter(i), t.consume(S), t.exit(i), t.exit(r), e) : (t.enter(s), g(S));
  }
  function g(S) {
    return S === l ? (t.exit(s), h(l)) : S === null ? n(S) : Et(S) ? (t.enter("lineEnding"), t.consume(S), t.exit("lineEnding"), on(t, g, "linePrefix")) : (t.enter("chunkString", {
      contentType: "string"
    }), v(S));
  }
  function v(S) {
    return S === l || S === null || Et(S) ? (t.exit("chunkString"), g(S)) : (t.consume(S), S === 92 ? C : v);
  }
  function C(S) {
    return S === l || S === 92 ? (t.consume(S), v) : v(S);
  }
}
function iu(t, e) {
  let n;
  return r;
  function r(i) {
    return Et(i) ? (t.enter("lineEnding"), t.consume(i), t.exit("lineEnding"), n = !0, r) : Kn(i) ? on(
      t,
      r,
      n ? "linePrefix" : "lineSuffix"
    )(i) : e(i);
  }
}
function gh(t) {
  return t.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
const JX = {
  name: "definition",
  tokenize: eJ
}, ZX = {
  tokenize: tJ,
  partial: !0
};
function eJ(t, e, n) {
  const r = this;
  let i;
  return s;
  function s(h) {
    return t.enter("definition"), uR.call(
      r,
      t,
      l,
      n,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(h);
  }
  function l(h) {
    return i = gh(
      r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1)
    ), h === 58 ? (t.enter("definitionMarker"), t.consume(h), t.exit("definitionMarker"), iu(
      t,
      lR(
        t,
        t.attempt(
          ZX,
          on(t, c, "whitespace"),
          on(t, c, "whitespace")
        ),
        n,
        "definitionDestination",
        "definitionDestinationLiteral",
        "definitionDestinationLiteralMarker",
        "definitionDestinationRaw",
        "definitionDestinationString"
      )
    )) : n(h);
  }
  function c(h) {
    return h === null || Et(h) ? (t.exit("definition"), r.parser.defined.includes(i) || r.parser.defined.push(i), e(h)) : n(h);
  }
}
function tJ(t, e, n) {
  return r;
  function r(l) {
    return Pr(l) ? iu(t, i)(l) : n(l);
  }
  function i(l) {
    return l === 34 || l === 39 || l === 40 ? cR(
      t,
      on(t, s, "whitespace"),
      n,
      "definitionTitle",
      "definitionTitleMarker",
      "definitionTitleString"
    )(l) : n(l);
  }
  function s(l) {
    return l === null || Et(l) ? e(l) : n(l);
  }
}
const nJ = {
  name: "hardBreakEscape",
  tokenize: rJ
};
function rJ(t, e, n) {
  return r;
  function r(s) {
    return t.enter("hardBreakEscape"), t.enter("escapeMarker"), t.consume(s), i;
  }
  function i(s) {
    return Et(s) ? (t.exit("escapeMarker"), t.exit("hardBreakEscape"), e(s)) : n(s);
  }
}
const iJ = {
  name: "headingAtx",
  tokenize: aJ,
  resolve: oJ
};
function oJ(t, e) {
  let n = t.length - 2, r = 3, i, s;
  return t[r][1].type === "whitespace" && (r += 2), n - 2 > r && t[n][1].type === "whitespace" && (n -= 2), t[n][1].type === "atxHeadingSequence" && (r === n - 1 || n - 4 > r && t[n - 2][1].type === "whitespace") && (n -= r + 1 === n ? 2 : 4), n > r && (i = {
    type: "atxHeadingText",
    start: t[r][1].start,
    end: t[n][1].end
  }, s = {
    type: "chunkText",
    start: t[r][1].start,
    end: t[n][1].end,
    // @ts-expect-error Constants are fine to assign.
    contentType: "text"
  }, Bo(t, r, n - r + 1, [
    ["enter", i, e],
    ["enter", s, e],
    ["exit", s, e],
    ["exit", i, e]
  ])), t;
}
function aJ(t, e, n) {
  const r = this;
  let i = 0;
  return s;
  function s(v) {
    return t.enter("atxHeading"), t.enter("atxHeadingSequence"), l(v);
  }
  function l(v) {
    return v === 35 && i++ < 6 ? (t.consume(v), l) : v === null || Pr(v) ? (t.exit("atxHeadingSequence"), r.interrupt ? e(v) : c(v)) : n(v);
  }
  function c(v) {
    return v === 35 ? (t.enter("atxHeadingSequence"), h(v)) : v === null || Et(v) ? (t.exit("atxHeading"), e(v)) : Kn(v) ? on(t, c, "whitespace")(v) : (t.enter("atxHeadingText"), g(v));
  }
  function h(v) {
    return v === 35 ? (t.consume(v), h) : (t.exit("atxHeadingSequence"), c(v));
  }
  function g(v) {
    return v === null || v === 35 || Pr(v) ? (t.exit("atxHeadingText"), c(v)) : (t.consume(v), g);
  }
}
const sJ = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], Ck = ["pre", "script", "style", "textarea"], lJ = {
  name: "htmlFlow",
  tokenize: fJ,
  resolveTo: cJ,
  concrete: !0
}, uJ = {
  tokenize: dJ,
  partial: !0
};
function cJ(t) {
  let e = t.length;
  for (; e-- && !(t[e][0] === "enter" && t[e][1].type === "htmlFlow"); )
    ;
  return e > 1 && t[e - 2][1].type === "linePrefix" && (t[e][1].start = t[e - 2][1].start, t[e + 1][1].start = t[e - 2][1].start, t.splice(e - 2, 2)), t;
}
function fJ(t, e, n) {
  const r = this;
  let i, s, l, c, h;
  return g;
  function g(F) {
    return t.enter("htmlFlow"), t.enter("htmlFlowData"), t.consume(F), v;
  }
  function v(F) {
    return F === 33 ? (t.consume(F), C) : F === 47 ? (t.consume(F), N) : F === 63 ? (t.consume(F), i = 3, r.interrupt ? e : De) : ga(F) ? (t.consume(F), l = String.fromCharCode(F), s = !0, O) : n(F);
  }
  function C(F) {
    return F === 45 ? (t.consume(F), i = 2, S) : F === 91 ? (t.consume(F), i = 5, l = "CDATA[", c = 0, b) : ga(F) ? (t.consume(F), i = 4, r.interrupt ? e : De) : n(F);
  }
  function S(F) {
    return F === 45 ? (t.consume(F), r.interrupt ? e : De) : n(F);
  }
  function b(F) {
    return F === l.charCodeAt(c++) ? (t.consume(F), c === l.length ? r.interrupt ? e : fe : b) : n(F);
  }
  function N(F) {
    return ga(F) ? (t.consume(F), l = String.fromCharCode(F), O) : n(F);
  }
  function O(F) {
    return F === null || F === 47 || F === 62 || Pr(F) ? F !== 47 && s && Ck.includes(l.toLowerCase()) ? (i = 1, r.interrupt ? e(F) : fe(F)) : sJ.includes(l.toLowerCase()) ? (i = 6, F === 47 ? (t.consume(F), L) : r.interrupt ? e(F) : fe(F)) : (i = 7, r.interrupt && !r.parser.lazy[r.now().line] ? n(F) : s ? Y(F) : P(F)) : F === 45 || $i(F) ? (t.consume(F), l += String.fromCharCode(F), O) : n(F);
  }
  function L(F) {
    return F === 62 ? (t.consume(F), r.interrupt ? e : fe) : n(F);
  }
  function P(F) {
    return Kn(F) ? (t.consume(F), P) : me(F);
  }
  function Y(F) {
    return F === 47 ? (t.consume(F), me) : F === 58 || F === 95 || ga(F) ? (t.consume(F), j) : Kn(F) ? (t.consume(F), Y) : me(F);
  }
  function j(F) {
    return F === 45 || F === 46 || F === 58 || F === 95 || $i(F) ? (t.consume(F), j) : oe(F);
  }
  function oe(F) {
    return F === 61 ? (t.consume(F), ee) : Kn(F) ? (t.consume(F), oe) : Y(F);
  }
  function ee(F) {
    return F === null || F === 60 || F === 61 || F === 62 || F === 96 ? n(F) : F === 34 || F === 39 ? (t.consume(F), h = F, z) : Kn(F) ? (t.consume(F), ee) : (h = null, H(F));
  }
  function z(F) {
    return F === null || Et(F) ? n(F) : F === h ? (t.consume(F), Z) : (t.consume(F), z);
  }
  function H(F) {
    return F === null || F === 34 || F === 39 || F === 60 || F === 61 || F === 62 || F === 96 || Pr(F) ? oe(F) : (t.consume(F), H);
  }
  function Z(F) {
    return F === 47 || F === 62 || Kn(F) ? Y(F) : n(F);
  }
  function me(F) {
    return F === 62 ? (t.consume(F), Ie) : n(F);
  }
  function Ie(F) {
    return Kn(F) ? (t.consume(F), Ie) : F === null || Et(F) ? fe(F) : n(F);
  }
  function fe(F) {
    return F === 45 && i === 2 ? (t.consume(F), J) : F === 60 && i === 1 ? (t.consume(F), lt) : F === 62 && i === 4 ? (t.consume(F), We) : F === 63 && i === 3 ? (t.consume(F), De) : F === 93 && i === 5 ? (t.consume(F), he) : Et(F) && (i === 6 || i === 7) ? t.check(
      uJ,
      We,
      pe
    )(F) : F === null || Et(F) ? pe(F) : (t.consume(F), fe);
  }
  function pe(F) {
    return t.exit("htmlFlowData"), Ce(F);
  }
  function Ce(F) {
    return F === null ? I(F) : Et(F) ? t.attempt(
      {
        tokenize: Be,
        partial: !0
      },
      Ce,
      I
    )(F) : (t.enter("htmlFlowData"), fe(F));
  }
  function Be(F, we, Je) {
    return Ze;
    function Ze(Yt) {
      return F.enter("lineEnding"), F.consume(Yt), F.exit("lineEnding"), rt;
    }
    function rt(Yt) {
      return r.parser.lazy[r.now().line] ? Je(Yt) : we(Yt);
    }
  }
  function J(F) {
    return F === 45 ? (t.consume(F), De) : fe(F);
  }
  function lt(F) {
    return F === 47 ? (t.consume(F), l = "", te) : fe(F);
  }
  function te(F) {
    return F === 62 && Ck.includes(l.toLowerCase()) ? (t.consume(F), We) : ga(F) && l.length < 8 ? (t.consume(F), l += String.fromCharCode(F), te) : fe(F);
  }
  function he(F) {
    return F === 93 ? (t.consume(F), De) : fe(F);
  }
  function De(F) {
    return F === 62 ? (t.consume(F), We) : F === 45 && i === 2 ? (t.consume(F), De) : fe(F);
  }
  function We(F) {
    return F === null || Et(F) ? (t.exit("htmlFlowData"), I(F)) : (t.consume(F), We);
  }
  function I(F) {
    return t.exit("htmlFlow"), e(F);
  }
}
function dJ(t, e, n) {
  return r;
  function r(i) {
    return t.exit("htmlFlowData"), t.enter("lineEndingBlank"), t.consume(i), t.exit("lineEndingBlank"), t.attempt(Ev, e, n);
  }
}
const hJ = {
  name: "htmlText",
  tokenize: pJ
};
function pJ(t, e, n) {
  const r = this;
  let i, s, l, c;
  return h;
  function h(I) {
    return t.enter("htmlText"), t.enter("htmlTextData"), t.consume(I), g;
  }
  function g(I) {
    return I === 33 ? (t.consume(I), v) : I === 47 ? (t.consume(I), H) : I === 63 ? (t.consume(I), ee) : ga(I) ? (t.consume(I), Ie) : n(I);
  }
  function v(I) {
    return I === 45 ? (t.consume(I), C) : I === 91 ? (t.consume(I), s = "CDATA[", l = 0, L) : ga(I) ? (t.consume(I), oe) : n(I);
  }
  function C(I) {
    return I === 45 ? (t.consume(I), S) : n(I);
  }
  function S(I) {
    return I === null || I === 62 ? n(I) : I === 45 ? (t.consume(I), b) : N(I);
  }
  function b(I) {
    return I === null || I === 62 ? n(I) : N(I);
  }
  function N(I) {
    return I === null ? n(I) : I === 45 ? (t.consume(I), O) : Et(I) ? (c = N, he(I)) : (t.consume(I), N);
  }
  function O(I) {
    return I === 45 ? (t.consume(I), We) : N(I);
  }
  function L(I) {
    return I === s.charCodeAt(l++) ? (t.consume(I), l === s.length ? P : L) : n(I);
  }
  function P(I) {
    return I === null ? n(I) : I === 93 ? (t.consume(I), Y) : Et(I) ? (c = P, he(I)) : (t.consume(I), P);
  }
  function Y(I) {
    return I === 93 ? (t.consume(I), j) : P(I);
  }
  function j(I) {
    return I === 62 ? We(I) : I === 93 ? (t.consume(I), j) : P(I);
  }
  function oe(I) {
    return I === null || I === 62 ? We(I) : Et(I) ? (c = oe, he(I)) : (t.consume(I), oe);
  }
  function ee(I) {
    return I === null ? n(I) : I === 63 ? (t.consume(I), z) : Et(I) ? (c = ee, he(I)) : (t.consume(I), ee);
  }
  function z(I) {
    return I === 62 ? We(I) : ee(I);
  }
  function H(I) {
    return ga(I) ? (t.consume(I), Z) : n(I);
  }
  function Z(I) {
    return I === 45 || $i(I) ? (t.consume(I), Z) : me(I);
  }
  function me(I) {
    return Et(I) ? (c = me, he(I)) : Kn(I) ? (t.consume(I), me) : We(I);
  }
  function Ie(I) {
    return I === 45 || $i(I) ? (t.consume(I), Ie) : I === 47 || I === 62 || Pr(I) ? fe(I) : n(I);
  }
  function fe(I) {
    return I === 47 ? (t.consume(I), We) : I === 58 || I === 95 || ga(I) ? (t.consume(I), pe) : Et(I) ? (c = fe, he(I)) : Kn(I) ? (t.consume(I), fe) : We(I);
  }
  function pe(I) {
    return I === 45 || I === 46 || I === 58 || I === 95 || $i(I) ? (t.consume(I), pe) : Ce(I);
  }
  function Ce(I) {
    return I === 61 ? (t.consume(I), Be) : Et(I) ? (c = Ce, he(I)) : Kn(I) ? (t.consume(I), Ce) : fe(I);
  }
  function Be(I) {
    return I === null || I === 60 || I === 61 || I === 62 || I === 96 ? n(I) : I === 34 || I === 39 ? (t.consume(I), i = I, J) : Et(I) ? (c = Be, he(I)) : Kn(I) ? (t.consume(I), Be) : (t.consume(I), i = void 0, te);
  }
  function J(I) {
    return I === i ? (t.consume(I), lt) : I === null ? n(I) : Et(I) ? (c = J, he(I)) : (t.consume(I), J);
  }
  function lt(I) {
    return I === 62 || I === 47 || Pr(I) ? fe(I) : n(I);
  }
  function te(I) {
    return I === null || I === 34 || I === 39 || I === 60 || I === 61 || I === 96 ? n(I) : I === 62 || Pr(I) ? fe(I) : (t.consume(I), te);
  }
  function he(I) {
    return t.exit("htmlTextData"), t.enter("lineEnding"), t.consume(I), t.exit("lineEnding"), on(
      t,
      De,
      "linePrefix",
      r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    );
  }
  function De(I) {
    return t.enter("htmlTextData"), c(I);
  }
  function We(I) {
    return I === 62 ? (t.consume(I), t.exit("htmlTextData"), t.exit("htmlText"), e) : n(I);
  }
}
const WS = {
  name: "labelEnd",
  tokenize: TJ,
  resolveTo: EJ,
  resolveAll: vJ
}, mJ = {
  tokenize: CJ
}, gJ = {
  tokenize: SJ
}, yJ = {
  tokenize: bJ
};
function vJ(t) {
  let e = -1, n;
  for (; ++e < t.length; )
    n = t[e][1], (n.type === "labelImage" || n.type === "labelLink" || n.type === "labelEnd") && (t.splice(e + 1, n.type === "labelImage" ? 4 : 2), n.type = "data", e++);
  return t;
}
function EJ(t, e) {
  let n = t.length, r = 0, i, s, l, c;
  for (; n--; )
    if (i = t[n][1], s) {
      if (i.type === "link" || i.type === "labelLink" && i._inactive)
        break;
      t[n][0] === "enter" && i.type === "labelLink" && (i._inactive = !0);
    } else if (l) {
      if (t[n][0] === "enter" && (i.type === "labelImage" || i.type === "labelLink") && !i._balanced && (s = n, i.type !== "labelLink")) {
        r = 2;
        break;
      }
    } else
      i.type === "labelEnd" && (l = n);
  const h = {
    type: t[s][1].type === "labelLink" ? "link" : "image",
    start: Object.assign({}, t[s][1].start),
    end: Object.assign({}, t[t.length - 1][1].end)
  }, g = {
    type: "label",
    start: Object.assign({}, t[s][1].start),
    end: Object.assign({}, t[l][1].end)
  }, v = {
    type: "labelText",
    start: Object.assign({}, t[s + r + 2][1].end),
    end: Object.assign({}, t[l - 2][1].start)
  };
  return c = [
    ["enter", h, e],
    ["enter", g, e]
  ], c = ha(c, t.slice(s + 1, s + r + 3)), c = ha(c, [["enter", v, e]]), c = ha(
    c,
    gv(
      e.parser.constructs.insideSpan.null,
      t.slice(s + r + 4, l - 3),
      e
    )
  ), c = ha(c, [
    ["exit", v, e],
    t[l - 2],
    t[l - 1],
    ["exit", g, e]
  ]), c = ha(c, t.slice(l + 1)), c = ha(c, [["exit", h, e]]), Bo(t, s, t.length, c), t;
}
function TJ(t, e, n) {
  const r = this;
  let i = r.events.length, s, l;
  for (; i--; )
    if ((r.events[i][1].type === "labelImage" || r.events[i][1].type === "labelLink") && !r.events[i][1]._balanced) {
      s = r.events[i][1];
      break;
    }
  return c;
  function c(v) {
    return s ? s._inactive ? g(v) : (l = r.parser.defined.includes(
      gh(
        r.sliceSerialize({
          start: s.end,
          end: r.now()
        })
      )
    ), t.enter("labelEnd"), t.enter("labelMarker"), t.consume(v), t.exit("labelMarker"), t.exit("labelEnd"), h) : n(v);
  }
  function h(v) {
    return v === 40 ? t.attempt(
      mJ,
      e,
      l ? e : g
    )(v) : v === 91 ? t.attempt(
      gJ,
      e,
      l ? t.attempt(yJ, e, g) : g
    )(v) : l ? e(v) : g(v);
  }
  function g(v) {
    return s._balanced = !0, n(v);
  }
}
function CJ(t, e, n) {
  return r;
  function r(h) {
    return t.enter("resource"), t.enter("resourceMarker"), t.consume(h), t.exit("resourceMarker"), iu(t, i);
  }
  function i(h) {
    return h === 41 ? c(h) : lR(
      t,
      s,
      n,
      "resourceDestination",
      "resourceDestinationLiteral",
      "resourceDestinationLiteralMarker",
      "resourceDestinationRaw",
      "resourceDestinationString",
      32
    )(h);
  }
  function s(h) {
    return Pr(h) ? iu(t, l)(h) : c(h);
  }
  function l(h) {
    return h === 34 || h === 39 || h === 40 ? cR(
      t,
      iu(t, c),
      n,
      "resourceTitle",
      "resourceTitleMarker",
      "resourceTitleString"
    )(h) : c(h);
  }
  function c(h) {
    return h === 41 ? (t.enter("resourceMarker"), t.consume(h), t.exit("resourceMarker"), t.exit("resource"), e) : n(h);
  }
}
function SJ(t, e, n) {
  const r = this;
  return i;
  function i(l) {
    return uR.call(
      r,
      t,
      s,
      n,
      "reference",
      "referenceMarker",
      "referenceString"
    )(l);
  }
  function s(l) {
    return r.parser.defined.includes(
      gh(
        r.sliceSerialize(r.events[r.events.length - 1][1]).slice(1, -1)
      )
    ) ? e(l) : n(l);
  }
}
function bJ(t, e, n) {
  return r;
  function r(s) {
    return t.enter("reference"), t.enter("referenceMarker"), t.consume(s), t.exit("referenceMarker"), i;
  }
  function i(s) {
    return s === 93 ? (t.enter("referenceMarker"), t.consume(s), t.exit("referenceMarker"), t.exit("reference"), e) : n(s);
  }
}
const AJ = {
  name: "labelStartImage",
  tokenize: xJ,
  resolveAll: WS.resolveAll
};
function xJ(t, e, n) {
  const r = this;
  return i;
  function i(c) {
    return t.enter("labelImage"), t.enter("labelImageMarker"), t.consume(c), t.exit("labelImageMarker"), s;
  }
  function s(c) {
    return c === 91 ? (t.enter("labelMarker"), t.consume(c), t.exit("labelMarker"), t.exit("labelImage"), l) : n(c);
  }
  function l(c) {
    return c === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(c) : e(c);
  }
}
const _J = {
  name: "labelStartLink",
  tokenize: kJ,
  resolveAll: WS.resolveAll
};
function kJ(t, e, n) {
  const r = this;
  return i;
  function i(l) {
    return t.enter("labelLink"), t.enter("labelMarker"), t.consume(l), t.exit("labelMarker"), t.exit("labelLink"), s;
  }
  function s(l) {
    return l === 94 && "_hiddenFootnoteSupport" in r.parser.constructs ? n(l) : e(l);
  }
}
const $4 = {
  name: "lineEnding",
  tokenize: NJ
};
function NJ(t, e) {
  return n;
  function n(r) {
    return t.enter("lineEnding"), t.consume(r), t.exit("lineEnding"), on(t, e, "linePrefix");
  }
}
const J9 = {
  name: "thematicBreak",
  tokenize: wJ
};
function wJ(t, e, n) {
  let r = 0, i;
  return s;
  function s(h) {
    return t.enter("thematicBreak"), i = h, l(h);
  }
  function l(h) {
    return h === i ? (t.enter("thematicBreakSequence"), c(h)) : Kn(h) ? on(t, l, "whitespace")(h) : r < 3 || h !== null && !Et(h) ? n(h) : (t.exit("thematicBreak"), e(h));
  }
  function c(h) {
    return h === i ? (t.consume(h), r++, c) : (t.exit("thematicBreakSequence"), l(h));
  }
}
const co = {
  name: "list",
  tokenize: DJ,
  continuation: {
    tokenize: MJ
  },
  exit: IJ
}, OJ = {
  tokenize: PJ,
  partial: !0
}, RJ = {
  tokenize: LJ,
  partial: !0
};
function DJ(t, e, n) {
  const r = this, i = r.events[r.events.length - 1];
  let s = i && i[1].type === "linePrefix" ? i[2].sliceSerialize(i[1], !0).length : 0, l = 0;
  return c;
  function c(b) {
    const N = r.containerState.type || (b === 42 || b === 43 || b === 45 ? "listUnordered" : "listOrdered");
    if (N === "listUnordered" ? !r.containerState.marker || b === r.containerState.marker : HC(b)) {
      if (r.containerState.type || (r.containerState.type = N, t.enter(N, {
        _container: !0
      })), N === "listUnordered")
        return t.enter("listItemPrefix"), b === 42 || b === 45 ? t.check(J9, n, g)(b) : g(b);
      if (!r.interrupt || b === 49)
        return t.enter("listItemPrefix"), t.enter("listItemValue"), h(b);
    }
    return n(b);
  }
  function h(b) {
    return HC(b) && ++l < 10 ? (t.consume(b), h) : (!r.interrupt || l < 2) && (r.containerState.marker ? b === r.containerState.marker : b === 41 || b === 46) ? (t.exit("listItemValue"), g(b)) : n(b);
  }
  function g(b) {
    return t.enter("listItemMarker"), t.consume(b), t.exit("listItemMarker"), r.containerState.marker = r.containerState.marker || b, t.check(
      Ev,
      // Can’t be empty when interrupting.
      r.interrupt ? n : v,
      t.attempt(
        OJ,
        S,
        C
      )
    );
  }
  function v(b) {
    return r.containerState.initialBlankLine = !0, s++, S(b);
  }
  function C(b) {
    return Kn(b) ? (t.enter("listItemPrefixWhitespace"), t.consume(b), t.exit("listItemPrefixWhitespace"), S) : n(b);
  }
  function S(b) {
    return r.containerState.size = s + r.sliceSerialize(t.exit("listItemPrefix"), !0).length, e(b);
  }
}
function MJ(t, e, n) {
  const r = this;
  return r.containerState._closeFlow = void 0, t.check(Ev, i, s);
  function i(c) {
    return r.containerState.furtherBlankLines = r.containerState.furtherBlankLines || r.containerState.initialBlankLine, on(
      t,
      e,
      "listItemIndent",
      r.containerState.size + 1
    )(c);
  }
  function s(c) {
    return r.containerState.furtherBlankLines || !Kn(c) ? (r.containerState.furtherBlankLines = void 0, r.containerState.initialBlankLine = void 0, l(c)) : (r.containerState.furtherBlankLines = void 0, r.containerState.initialBlankLine = void 0, t.attempt(RJ, e, l)(c));
  }
  function l(c) {
    return r.containerState._closeFlow = !0, r.interrupt = void 0, on(
      t,
      t.attempt(co, e, n),
      "linePrefix",
      r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(c);
  }
}
function LJ(t, e, n) {
  const r = this;
  return on(
    t,
    i,
    "listItemIndent",
    r.containerState.size + 1
  );
  function i(s) {
    const l = r.events[r.events.length - 1];
    return l && l[1].type === "listItemIndent" && l[2].sliceSerialize(l[1], !0).length === r.containerState.size ? e(s) : n(s);
  }
}
function IJ(t) {
  t.exit(this.containerState.type);
}
function PJ(t, e, n) {
  const r = this;
  return on(
    t,
    i,
    "listItemPrefixWhitespace",
    r.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4 + 1
  );
  function i(s) {
    const l = r.events[r.events.length - 1];
    return !Kn(s) && l && l[1].type === "listItemPrefixWhitespace" ? e(s) : n(s);
  }
}
const Sk = {
  name: "setextUnderline",
  tokenize: BJ,
  resolveTo: FJ
};
function FJ(t, e) {
  let n = t.length, r, i, s;
  for (; n--; )
    if (t[n][0] === "enter") {
      if (t[n][1].type === "content") {
        r = n;
        break;
      }
      t[n][1].type === "paragraph" && (i = n);
    } else
      t[n][1].type === "content" && t.splice(n, 1), !s && t[n][1].type === "definition" && (s = n);
  const l = {
    type: "setextHeading",
    start: Object.assign({}, t[i][1].start),
    end: Object.assign({}, t[t.length - 1][1].end)
  };
  return t[i][1].type = "setextHeadingText", s ? (t.splice(i, 0, ["enter", l, e]), t.splice(s + 1, 0, ["exit", t[r][1], e]), t[r][1].end = Object.assign({}, t[s][1].end)) : t[r][1] = l, t.push(["exit", l, e]), t;
}
function BJ(t, e, n) {
  const r = this;
  let i = r.events.length, s, l;
  for (; i--; )
    if (r.events[i][1].type !== "lineEnding" && r.events[i][1].type !== "linePrefix" && r.events[i][1].type !== "content") {
      l = r.events[i][1].type === "paragraph";
      break;
    }
  return c;
  function c(v) {
    return !r.parser.lazy[r.now().line] && (r.interrupt || l) ? (t.enter("setextHeadingLine"), t.enter("setextHeadingLineSequence"), s = v, h(v)) : n(v);
  }
  function h(v) {
    return v === s ? (t.consume(v), h) : (t.exit("setextHeadingLineSequence"), on(t, g, "lineSuffix")(v));
  }
  function g(v) {
    return v === null || Et(v) ? (t.exit("setextHeadingLine"), e(v)) : n(v);
  }
}
const UJ = {
  tokenize: HJ
};
function HJ(t) {
  const e = this, n = t.attempt(
    // Try to parse a blank line.
    Ev,
    r,
    // Try to parse initial flow (essentially, only code).
    t.attempt(
      this.parser.constructs.flowInitial,
      i,
      on(
        t,
        t.attempt(
          this.parser.constructs.flow,
          i,
          t.attempt(WX, i)
        ),
        "linePrefix"
      )
    )
  );
  return n;
  function r(s) {
    if (s === null) {
      t.consume(s);
      return;
    }
    return t.enter("lineEndingBlank"), t.consume(s), t.exit("lineEndingBlank"), e.currentConstruct = void 0, n;
  }
  function i(s) {
    if (s === null) {
      t.consume(s);
      return;
    }
    return t.enter("lineEnding"), t.consume(s), t.exit("lineEnding"), e.currentConstruct = void 0, n;
  }
}
const zJ = {
  resolveAll: dR()
}, qJ = fR("string"), jJ = fR("text");
function fR(t) {
  return {
    tokenize: e,
    resolveAll: dR(
      t === "text" ? VJ : void 0
    )
  };
  function e(n) {
    const r = this, i = this.parser.constructs[t], s = n.attempt(i, l, c);
    return l;
    function l(v) {
      return g(v) ? s(v) : c(v);
    }
    function c(v) {
      if (v === null) {
        n.consume(v);
        return;
      }
      return n.enter("data"), n.consume(v), h;
    }
    function h(v) {
      return g(v) ? (n.exit("data"), s(v)) : (n.consume(v), h);
    }
    function g(v) {
      if (v === null)
        return !0;
      const C = i[v];
      let S = -1;
      if (C)
        for (; ++S < C.length; ) {
          const b = C[S];
          if (!b.previous || b.previous.call(r, r.previous))
            return !0;
        }
      return !1;
    }
  }
}
function dR(t) {
  return e;
  function e(n, r) {
    let i = -1, s;
    for (; ++i <= n.length; )
      s === void 0 ? n[i] && n[i][1].type === "data" && (s = i, i++) : (!n[i] || n[i][1].type !== "data") && (i !== s + 2 && (n[s][1].end = n[i - 1][1].end, n.splice(s + 2, i - s - 2), i = s + 2), s = void 0);
    return t ? t(n, r) : n;
  }
}
function VJ(t, e) {
  let n = 0;
  for (; ++n <= t.length; )
    if ((n === t.length || t[n][1].type === "lineEnding") && t[n - 1][1].type === "data") {
      const r = t[n - 1][1], i = e.sliceStream(r);
      let s = i.length, l = -1, c = 0, h;
      for (; s--; ) {
        const g = i[s];
        if (typeof g == "string") {
          for (l = g.length; g.charCodeAt(l - 1) === 32; )
            c++, l--;
          if (l)
            break;
          l = -1;
        } else if (g === -2)
          h = !0, c++;
        else if (g !== -1) {
          s++;
          break;
        }
      }
      if (c) {
        const g = {
          type: n === t.length || h || c < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            line: r.end.line,
            column: r.end.column - c,
            offset: r.end.offset - c,
            _index: r.start._index + s,
            _bufferIndex: s ? l : r.start._bufferIndex + l
          },
          end: Object.assign({}, r.end)
        };
        r.end = Object.assign({}, g.start), r.start.offset === r.end.offset ? Object.assign(r, g) : (t.splice(
          n,
          0,
          ["enter", g, e],
          ["exit", g, e]
        ), n += 2);
      }
      n++;
    }
  return t;
}
function $J(t, e, n) {
  let r = Object.assign(
    n ? Object.assign({}, n) : {
      line: 1,
      column: 1,
      offset: 0
    },
    {
      _index: 0,
      _bufferIndex: -1
    }
  );
  const i = {}, s = [];
  let l = [], c = [];
  const h = {
    consume: Y,
    enter: j,
    exit: oe,
    attempt: H(ee),
    check: H(z),
    interrupt: H(z, {
      interrupt: !0
    })
  }, g = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser: t,
    sliceStream: b,
    sliceSerialize: S,
    now: N,
    defineSkip: O,
    write: C
  };
  let v = e.tokenize.call(g, h);
  return e.resolveAll && s.push(e), g;
  function C(fe) {
    return l = ha(l, fe), L(), l[l.length - 1] !== null ? [] : (Z(e, 0), g.events = gv(s, g.events, g), g.events);
  }
  function S(fe, pe) {
    return WJ(b(fe), pe);
  }
  function b(fe) {
    return GJ(l, fe);
  }
  function N() {
    return Object.assign({}, r);
  }
  function O(fe) {
    i[fe.line] = fe.column, Ie();
  }
  function L() {
    let fe;
    for (; r._index < l.length; ) {
      const pe = l[r._index];
      if (typeof pe == "string")
        for (fe = r._index, r._bufferIndex < 0 && (r._bufferIndex = 0); r._index === fe && r._bufferIndex < pe.length; )
          P(pe.charCodeAt(r._bufferIndex));
      else
        P(pe);
    }
  }
  function P(fe) {
    v = v(fe);
  }
  function Y(fe) {
    Et(fe) ? (r.line++, r.column = 1, r.offset += fe === -3 ? 2 : 1, Ie()) : fe !== -1 && (r.column++, r.offset++), r._bufferIndex < 0 ? r._index++ : (r._bufferIndex++, r._bufferIndex === l[r._index].length && (r._bufferIndex = -1, r._index++)), g.previous = fe;
  }
  function j(fe, pe) {
    const Ce = pe || {};
    return Ce.type = fe, Ce.start = N(), g.events.push(["enter", Ce, g]), c.push(Ce), Ce;
  }
  function oe(fe) {
    const pe = c.pop();
    return pe.end = N(), g.events.push(["exit", pe, g]), pe;
  }
  function ee(fe, pe) {
    Z(fe, pe.from);
  }
  function z(fe, pe) {
    pe.restore();
  }
  function H(fe, pe) {
    return Ce;
    function Ce(Be, J, lt) {
      let te, he, De, We;
      return Array.isArray(Be) ? (
        /* c8 ignore next 1 */
        F(Be)
      ) : "tokenize" in Be ? F([Be]) : I(Be);
      function I(rt) {
        return Yt;
        function Yt(Lt) {
          const It = Lt !== null && rt[Lt], En = Lt !== null && rt.null, an = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(It) ? It : It ? [It] : [],
            ...Array.isArray(En) ? En : En ? [En] : []
          ];
          return F(an)(Lt);
        }
      }
      function F(rt) {
        return te = rt, he = 0, rt.length === 0 ? lt : we(rt[he]);
      }
      function we(rt) {
        return Yt;
        function Yt(Lt) {
          return We = me(), De = rt, rt.partial || (g.currentConstruct = rt), rt.name && g.parser.constructs.disable.null.includes(rt.name) ? Ze() : rt.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            pe ? Object.assign(Object.create(g), pe) : g,
            h,
            Je,
            Ze
          )(Lt);
        }
      }
      function Je(rt) {
        return fe(De, We), J;
      }
      function Ze(rt) {
        return We.restore(), ++he < te.length ? we(te[he]) : lt;
      }
    }
  }
  function Z(fe, pe) {
    fe.resolveAll && !s.includes(fe) && s.push(fe), fe.resolve && Bo(
      g.events,
      pe,
      g.events.length - pe,
      fe.resolve(g.events.slice(pe), g)
    ), fe.resolveTo && (g.events = fe.resolveTo(g.events, g));
  }
  function me() {
    const fe = N(), pe = g.previous, Ce = g.currentConstruct, Be = g.events.length, J = Array.from(c);
    return {
      restore: lt,
      from: Be
    };
    function lt() {
      r = fe, g.previous = pe, g.currentConstruct = Ce, g.events.length = Be, c = J, Ie();
    }
  }
  function Ie() {
    r.line in i && r.column < 2 && (r.column = i[r.line], r.offset += i[r.line] - 1);
  }
}
function GJ(t, e) {
  const n = e.start._index, r = e.start._bufferIndex, i = e.end._index, s = e.end._bufferIndex;
  let l;
  return n === i ? l = [t[n].slice(r, s)] : (l = t.slice(n, i), r > -1 && (l[0] = l[0].slice(r)), s > 0 && l.push(t[i].slice(0, s))), l;
}
function WJ(t, e) {
  let n = -1;
  const r = [];
  let i;
  for (; ++n < t.length; ) {
    const s = t[n];
    let l;
    if (typeof s == "string")
      l = s;
    else
      switch (s) {
        case -5: {
          l = "\r";
          break;
        }
        case -4: {
          l = `
`;
          break;
        }
        case -3: {
          l = `\r
`;
          break;
        }
        case -2: {
          l = e ? " " : "	";
          break;
        }
        case -1: {
          if (!e && i)
            continue;
          l = " ";
          break;
        }
        default:
          l = String.fromCharCode(s);
      }
    i = s === -2, r.push(l);
  }
  return r.join("");
}
const KJ = {
  [42]: co,
  [43]: co,
  [45]: co,
  [48]: co,
  [49]: co,
  [50]: co,
  [51]: co,
  [52]: co,
  [53]: co,
  [54]: co,
  [55]: co,
  [56]: co,
  [57]: co,
  [62]: iR
}, YJ = {
  [91]: JX
}, QJ = {
  [-2]: V4,
  [-1]: V4,
  [32]: V4
}, XJ = {
  [35]: iJ,
  [42]: J9,
  [45]: [Sk, J9],
  [60]: lJ,
  [61]: Sk,
  [95]: J9,
  [96]: Tk,
  [126]: Tk
}, JJ = {
  [38]: aR,
  [92]: oR
}, ZJ = {
  [-5]: $4,
  [-4]: $4,
  [-3]: $4,
  [33]: AJ,
  [38]: aR,
  [42]: VC,
  [60]: [OX, hJ],
  [91]: _J,
  [92]: [nJ, oR],
  [93]: WS,
  [95]: VC,
  [96]: qX
}, eZ = {
  null: [VC, zJ]
}, tZ = {
  null: [42, 95]
}, nZ = {
  null: []
}, rZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  attentionMarkers: tZ,
  contentInitial: YJ,
  disable: nZ,
  document: KJ,
  flow: XJ,
  flowInitial: QJ,
  insideSpan: eZ,
  string: JJ,
  text: ZJ
}, Symbol.toStringTag, { value: "Module" }));
function iZ(t = {}) {
  const e = kO(
    // @ts-expect-error Same as above.
    [rZ].concat(t.extensions || [])
  ), n = {
    defined: [],
    lazy: {},
    constructs: e,
    content: r(bX),
    document: r(xX),
    flow: r(UJ),
    string: r(qJ),
    text: r(jJ)
  };
  return n;
  function r(i) {
    return s;
    function s(l) {
      return $J(n, i, l);
    }
  }
}
const bk = /[\0\t\n\r]/g;
function oZ() {
  let t = 1, e = "", n = !0, r;
  return i;
  function i(s, l, c) {
    const h = [];
    let g, v, C, S, b;
    for (s = e + s.toString(l), C = 0, e = "", n && (s.charCodeAt(0) === 65279 && C++, n = void 0); C < s.length; ) {
      if (bk.lastIndex = C, g = bk.exec(s), S = g && g.index !== void 0 ? g.index : s.length, b = s.charCodeAt(S), !g) {
        e = s.slice(C);
        break;
      }
      if (b === 10 && C === S && r)
        h.push(-3), r = void 0;
      else
        switch (r && (h.push(-5), r = void 0), C < S && (h.push(s.slice(C, S)), t += S - C), b) {
          case 0: {
            h.push(65533), t++;
            break;
          }
          case 9: {
            for (v = Math.ceil(t / 4) * 4, h.push(-2); t++ < v; )
              h.push(-1);
            break;
          }
          case 10: {
            h.push(-4), t = 1;
            break;
          }
          default:
            r = !0, t = 1;
        }
      C = S + 1;
    }
    return c && (r && h.push(-5), e && h.push(e), h.push(null)), h;
  }
}
function aZ(t) {
  for (; !sR(t); )
    ;
  return t;
}
const hR = {}.hasOwnProperty, sZ = (
  /**
   * @type {(
   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &
   *   ((value: Value, options?: Options | null | undefined) => Root)
   * )}
   */
  /**
   * @param {Value} value
   * @param {Encoding | Options | null | undefined} [encoding]
   * @param {Options | null | undefined} [options]
   * @returns {Root}
   */
  function(t, e, n) {
    return typeof e != "string" && (n = e, e = void 0), lZ(n)(
      aZ(
        // @ts-expect-error: micromark types need to accept `null`.
        iZ(n).document().write(oZ()(t, e, !0))
      )
    );
  }
);
function lZ(t) {
  const e = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: c(fr),
      autolinkProtocol: fe,
      autolinkEmail: fe,
      atxHeading: c(zr),
      blockQuote: c(an),
      characterEscape: fe,
      characterReference: fe,
      codeFenced: c(Xt),
      codeFencedFenceInfo: h,
      codeFencedFenceMeta: h,
      codeIndented: c(Xt, h),
      codeText: c(Hr, h),
      codeTextData: fe,
      data: fe,
      codeFlowValue: fe,
      definition: c(ur),
      definitionDestinationString: h,
      definitionLabelString: h,
      definitionTitleString: h,
      emphasis: c(wn),
      hardBreakEscape: c(qr),
      hardBreakTrailing: c(qr),
      htmlFlow: c(cr, h),
      htmlFlowData: fe,
      htmlText: c(cr, h),
      htmlTextData: fe,
      image: c(yo),
      label: h,
      link: c(fr),
      listItem: c(vo),
      listItemValue: N,
      listOrdered: c(ni, b),
      listUnordered: c(ni),
      paragraph: c(Ci),
      reference: Ze,
      referenceString: h,
      resourceDestinationString: h,
      resourceTitleString: h,
      setextHeading: c(zr),
      strong: c(ir),
      thematicBreak: c(gn)
    },
    exit: {
      atxHeading: v(),
      atxHeadingSequence: H,
      autolink: v(),
      autolinkEmail: En,
      autolinkProtocol: It,
      blockQuote: v(),
      characterEscapeValue: pe,
      characterReferenceMarkerHexadecimal: Yt,
      characterReferenceMarkerNumeric: Yt,
      characterReferenceValue: Lt,
      codeFenced: v(Y),
      codeFencedFence: P,
      codeFencedFenceInfo: O,
      codeFencedFenceMeta: L,
      codeFlowValue: pe,
      codeIndented: v(j),
      codeText: v(te),
      codeTextData: pe,
      data: pe,
      definition: v(),
      definitionDestinationString: z,
      definitionLabelString: oe,
      definitionTitleString: ee,
      emphasis: v(),
      hardBreakEscape: v(Be),
      hardBreakTrailing: v(Be),
      htmlFlow: v(J),
      htmlFlowData: pe,
      htmlText: v(lt),
      htmlTextData: pe,
      image: v(De),
      label: I,
      labelText: We,
      lineEnding: Ce,
      link: v(he),
      listItem: v(),
      listOrdered: v(),
      listUnordered: v(),
      paragraph: v(),
      referenceString: rt,
      resourceDestinationString: F,
      resourceTitleString: we,
      resource: Je,
      setextHeading: v(Ie),
      setextHeadingLineSequence: me,
      setextHeadingText: Z,
      strong: v(),
      thematicBreak: v()
    }
  };
  pR(e, (t || {}).mdastExtensions || []);
  const n = {};
  return r;
  function r(le) {
    let Re = {
      type: "root",
      children: []
    };
    const at = {
      stack: [Re],
      tokenStack: [],
      config: e,
      enter: g,
      exit: C,
      buffer: h,
      resume: S,
      setData: s,
      getData: l
    }, Bt = [];
    let be = -1;
    for (; ++be < le.length; )
      if (le[be][1].type === "listOrdered" || le[be][1].type === "listUnordered")
        if (le[be][0] === "enter")
          Bt.push(be);
        else {
          const ze = Bt.pop();
          be = i(le, ze, be);
        }
    for (be = -1; ++be < le.length; ) {
      const ze = e[le[be][0]];
      hR.call(ze, le[be][1].type) && ze[le[be][1].type].call(
        Object.assign(
          {
            sliceSerialize: le[be][2].sliceSerialize
          },
          at
        ),
        le[be][1]
      );
    }
    if (at.tokenStack.length > 0) {
      const ze = at.tokenStack[at.tokenStack.length - 1];
      (ze[1] || Ak).call(at, void 0, ze[0]);
    }
    for (Re.position = {
      start: lc(
        le.length > 0 ? le[0][1].start : {
          line: 1,
          column: 1,
          offset: 0
        }
      ),
      end: lc(
        le.length > 0 ? le[le.length - 2][1].end : {
          line: 1,
          column: 1,
          offset: 0
        }
      )
    }, be = -1; ++be < e.transforms.length; )
      Re = e.transforms[be](Re) || Re;
    return Re;
  }
  function i(le, Re, at) {
    let Bt = Re - 1, be = -1, ze = !1, st, Ot, en, tn;
    for (; ++Bt <= at; ) {
      const Tt = le[Bt];
      if (Tt[1].type === "listUnordered" || Tt[1].type === "listOrdered" || Tt[1].type === "blockQuote" ? (Tt[0] === "enter" ? be++ : be--, tn = void 0) : Tt[1].type === "lineEndingBlank" ? Tt[0] === "enter" && (st && !tn && !be && !en && (en = Bt), tn = void 0) : Tt[1].type === "linePrefix" || Tt[1].type === "listItemValue" || Tt[1].type === "listItemMarker" || Tt[1].type === "listItemPrefix" || Tt[1].type === "listItemPrefixWhitespace" || (tn = void 0), !be && Tt[0] === "enter" && Tt[1].type === "listItemPrefix" || be === -1 && Tt[0] === "exit" && (Tt[1].type === "listUnordered" || Tt[1].type === "listOrdered")) {
        if (st) {
          let On = Bt;
          for (Ot = void 0; On--; ) {
            const Gt = le[On];
            if (Gt[1].type === "lineEnding" || Gt[1].type === "lineEndingBlank") {
              if (Gt[0] === "exit")
                continue;
              Ot && (le[Ot][1].type = "lineEndingBlank", ze = !0), Gt[1].type = "lineEnding", Ot = On;
            } else if (!(Gt[1].type === "linePrefix" || Gt[1].type === "blockQuotePrefix" || Gt[1].type === "blockQuotePrefixWhitespace" || Gt[1].type === "blockQuoteMarker" || Gt[1].type === "listItemIndent"))
              break;
          }
          en && (!Ot || en < Ot) && (st._spread = !0), st.end = Object.assign(
            {},
            Ot ? le[Ot][1].start : Tt[1].end
          ), le.splice(Ot || Bt, 0, ["exit", st, Tt[2]]), Bt++, at++;
        }
        Tt[1].type === "listItemPrefix" && (st = {
          type: "listItem",
          // @ts-expect-error Patched
          _spread: !1,
          start: Object.assign({}, Tt[1].start)
        }, le.splice(Bt, 0, ["enter", st, Tt[2]]), Bt++, at++, en = void 0, tn = !0);
      }
    }
    return le[Re][1]._spread = ze, at;
  }
  function s(le, Re) {
    n[le] = Re;
  }
  function l(le) {
    return n[le];
  }
  function c(le, Re) {
    return at;
    function at(Bt) {
      g.call(this, le(Bt), Bt), Re && Re.call(this, Bt);
    }
  }
  function h() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function g(le, Re, at) {
    return this.stack[this.stack.length - 1].children.push(le), this.stack.push(le), this.tokenStack.push([Re, at]), le.position = {
      start: lc(Re.start)
    }, le;
  }
  function v(le) {
    return Re;
    function Re(at) {
      le && le.call(this, at), C.call(this, at);
    }
  }
  function C(le, Re) {
    const at = this.stack.pop(), Bt = this.tokenStack.pop();
    if (Bt)
      Bt[0].type !== le.type && (Re ? Re.call(this, le, Bt[0]) : (Bt[1] || Ak).call(this, le, Bt[0]));
    else
      throw new Error(
        "Cannot close `" + le.type + "` (" + Zm({
          start: le.start,
          end: le.end
        }) + "): it’s not open"
      );
    return at.position.end = lc(le.end), at;
  }
  function S() {
    return pv(this.stack.pop());
  }
  function b() {
    s("expectingFirstListItemValue", !0);
  }
  function N(le) {
    if (l("expectingFirstListItemValue")) {
      const Re = this.stack[this.stack.length - 2];
      Re.start = Number.parseInt(this.sliceSerialize(le), 10), s("expectingFirstListItemValue");
    }
  }
  function O() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.lang = le;
  }
  function L() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.meta = le;
  }
  function P() {
    l("flowCodeInside") || (this.buffer(), s("flowCodeInside", !0));
  }
  function Y() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.value = le.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), s("flowCodeInside");
  }
  function j() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.value = le.replace(/(\r?\n|\r)$/g, "");
  }
  function oe(le) {
    const Re = this.resume(), at = this.stack[this.stack.length - 1];
    at.label = Re, at.identifier = gh(
      this.sliceSerialize(le)
    ).toLowerCase();
  }
  function ee() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.title = le;
  }
  function z() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.url = le;
  }
  function H(le) {
    const Re = this.stack[this.stack.length - 1];
    if (!Re.depth) {
      const at = this.sliceSerialize(le).length;
      Re.depth = at;
    }
  }
  function Z() {
    s("setextHeadingSlurpLineEnding", !0);
  }
  function me(le) {
    const Re = this.stack[this.stack.length - 1];
    Re.depth = this.sliceSerialize(le).charCodeAt(0) === 61 ? 1 : 2;
  }
  function Ie() {
    s("setextHeadingSlurpLineEnding");
  }
  function fe(le) {
    const Re = this.stack[this.stack.length - 1];
    let at = Re.children[Re.children.length - 1];
    (!at || at.type !== "text") && (at = jr(), at.position = {
      start: lc(le.start)
    }, Re.children.push(at)), this.stack.push(at);
  }
  function pe(le) {
    const Re = this.stack.pop();
    Re.value += this.sliceSerialize(le), Re.position.end = lc(le.end);
  }
  function Ce(le) {
    const Re = this.stack[this.stack.length - 1];
    if (l("atHardBreak")) {
      const at = Re.children[Re.children.length - 1];
      at.position.end = lc(le.end), s("atHardBreak");
      return;
    }
    !l("setextHeadingSlurpLineEnding") && e.canContainEols.includes(Re.type) && (fe.call(this, le), pe.call(this, le));
  }
  function Be() {
    s("atHardBreak", !0);
  }
  function J() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.value = le;
  }
  function lt() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.value = le;
  }
  function te() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.value = le;
  }
  function he() {
    const le = this.stack[this.stack.length - 1];
    if (l("inReference")) {
      const Re = l("referenceType") || "shortcut";
      le.type += "Reference", le.referenceType = Re, delete le.url, delete le.title;
    } else
      delete le.identifier, delete le.label;
    s("referenceType");
  }
  function De() {
    const le = this.stack[this.stack.length - 1];
    if (l("inReference")) {
      const Re = l("referenceType") || "shortcut";
      le.type += "Reference", le.referenceType = Re, delete le.url, delete le.title;
    } else
      delete le.identifier, delete le.label;
    s("referenceType");
  }
  function We(le) {
    const Re = this.sliceSerialize(le), at = this.stack[this.stack.length - 2];
    at.label = xO(Re), at.identifier = gh(Re).toLowerCase();
  }
  function I() {
    const le = this.stack[this.stack.length - 1], Re = this.resume(), at = this.stack[this.stack.length - 1];
    if (s("inReference", !0), at.type === "link") {
      const Bt = le.children;
      at.children = Bt;
    } else
      at.alt = Re;
  }
  function F() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.url = le;
  }
  function we() {
    const le = this.resume(), Re = this.stack[this.stack.length - 1];
    Re.title = le;
  }
  function Je() {
    s("inReference");
  }
  function Ze() {
    s("referenceType", "collapsed");
  }
  function rt(le) {
    const Re = this.resume(), at = this.stack[this.stack.length - 1];
    at.label = Re, at.identifier = gh(
      this.sliceSerialize(le)
    ).toLowerCase(), s("referenceType", "full");
  }
  function Yt(le) {
    s("characterReferenceType", le.type);
  }
  function Lt(le) {
    const Re = this.sliceSerialize(le), at = l("characterReferenceType");
    let Bt;
    at ? (Bt = AO(
      Re,
      at === "characterReferenceMarkerNumeric" ? 10 : 16
    ), s("characterReferenceType")) : Bt = v0(Re);
    const be = this.stack.pop();
    be.value += Bt, be.position.end = lc(le.end);
  }
  function It(le) {
    pe.call(this, le);
    const Re = this.stack[this.stack.length - 1];
    Re.url = this.sliceSerialize(le);
  }
  function En(le) {
    pe.call(this, le);
    const Re = this.stack[this.stack.length - 1];
    Re.url = "mailto:" + this.sliceSerialize(le);
  }
  function an() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function Xt() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function Hr() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function ur() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function wn() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function zr() {
    return {
      type: "heading",
      depth: void 0,
      children: []
    };
  }
  function qr() {
    return {
      type: "break"
    };
  }
  function cr() {
    return {
      type: "html",
      value: ""
    };
  }
  function yo() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function fr() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function ni(le) {
    return {
      type: "list",
      ordered: le.type === "listOrdered",
      start: null,
      // @ts-expect-error Patched.
      spread: le._spread,
      children: []
    };
  }
  function vo(le) {
    return {
      type: "listItem",
      // @ts-expect-error Patched.
      spread: le._spread,
      checked: null,
      children: []
    };
  }
  function Ci() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function ir() {
    return {
      type: "strong",
      children: []
    };
  }
  function jr() {
    return {
      type: "text",
      value: ""
    };
  }
  function gn() {
    return {
      type: "thematicBreak"
    };
  }
}
function lc(t) {
  return {
    line: t.line,
    column: t.column,
    offset: t.offset
  };
}
function pR(t, e) {
  let n = -1;
  for (; ++n < e.length; ) {
    const r = e[n];
    Array.isArray(r) ? pR(t, r) : uZ(t, r);
  }
}
function uZ(t, e) {
  let n;
  for (n in e)
    if (hR.call(e, n)) {
      if (n === "canContainEols") {
        const r = e[n];
        r && t[n].push(...r);
      } else if (n === "transforms") {
        const r = e[n];
        r && t[n].push(...r);
      } else if (n === "enter" || n === "exit") {
        const r = e[n];
        r && Object.assign(t[n], r);
      }
    }
}
function Ak(t, e) {
  throw t ? new Error(
    "Cannot close `" + t.type + "` (" + Zm({
      start: t.start,
      end: t.end
    }) + "): a different token (`" + e.type + "`, " + Zm({
      start: e.start,
      end: e.end
    }) + ") is open"
  ) : new Error(
    "Cannot close document, a token (`" + e.type + "`, " + Zm({
      start: e.start,
      end: e.end
    }) + ") is still open"
  );
}
function cZ(t) {
  Object.assign(this, { Parser: (n) => {
    const r = (
      /** @type {Options} */
      this.data("settings")
    );
    return sZ(
      n,
      Object.assign({}, r, t, {
        // Note: these options are not in the readme.
        // The goal is for them to be set by plugins on `data` instead of being
        // passed by users.
        extensions: this.data("micromarkExtensions") || [],
        mdastExtensions: this.data("fromMarkdownExtensions") || []
      })
    );
  } });
}
function fZ(t, e) {
  const n = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: t.wrap(t.all(e), !0)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function dZ(t, e) {
  const n = { type: "element", tagName: "br", properties: {}, children: [] };
  return t.patch(e, n), [t.applyData(e, n), { type: "text", value: `
` }];
}
function hZ(t, e) {
  const n = e.value ? e.value + `
` : "", r = e.lang ? e.lang.match(/^[^ \t]+(?=[ \t]|$)/) : null, i = {};
  r && (i.className = ["language-" + r]);
  let s = {
    type: "element",
    tagName: "code",
    properties: i,
    children: [{ type: "text", value: n }]
  };
  return e.meta && (s.data = { meta: e.meta }), t.patch(e, s), s = t.applyData(e, s), s = { type: "element", tagName: "pre", properties: {}, children: [s] }, t.patch(e, s), s;
}
function pZ(t, e) {
  const n = {
    type: "element",
    tagName: "del",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function mZ(t, e) {
  const n = {
    type: "element",
    tagName: "em",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function Dh(t) {
  const e = [];
  let n = -1, r = 0, i = 0;
  for (; ++n < t.length; ) {
    const s = t.charCodeAt(n);
    let l = "";
    if (s === 37 && $i(t.charCodeAt(n + 1)) && $i(t.charCodeAt(n + 2)))
      i = 2;
    else if (s < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(s)) || (l = String.fromCharCode(s));
    else if (s > 55295 && s < 57344) {
      const c = t.charCodeAt(n + 1);
      s < 56320 && c > 56319 && c < 57344 ? (l = String.fromCharCode(s, c), i = 1) : l = "�";
    } else
      l = String.fromCharCode(s);
    l && (e.push(t.slice(r, n), encodeURIComponent(l)), r = n + i + 1, l = ""), i && (n += i, i = 0);
  }
  return e.join("") + t.slice(r);
}
function mR(t, e) {
  const n = String(e.identifier).toUpperCase(), r = Dh(n.toLowerCase()), i = t.footnoteOrder.indexOf(n);
  let s;
  i === -1 ? (t.footnoteOrder.push(n), t.footnoteCounts[n] = 1, s = t.footnoteOrder.length) : (t.footnoteCounts[n]++, s = i + 1);
  const l = t.footnoteCounts[n], c = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + t.clobberPrefix + "fn-" + r,
      id: t.clobberPrefix + "fnref-" + r + (l > 1 ? "-" + l : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(s) }]
  };
  t.patch(e, c);
  const h = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [c]
  };
  return t.patch(e, h), t.applyData(e, h);
}
function gZ(t, e) {
  const n = t.footnoteById;
  let r = 1;
  for (; r in n; )
    r++;
  const i = String(r);
  return n[i] = {
    type: "footnoteDefinition",
    identifier: i,
    children: [{ type: "paragraph", children: e.children }],
    position: e.position
  }, mR(t, {
    type: "footnoteReference",
    identifier: i,
    position: e.position
  });
}
function yZ(t, e) {
  const n = {
    type: "element",
    tagName: "h" + e.depth,
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function vZ(t, e) {
  if (t.dangerous) {
    const n = { type: "raw", value: e.value };
    return t.patch(e, n), t.applyData(e, n);
  }
  return null;
}
function gR(t, e) {
  const n = e.referenceType;
  let r = "]";
  if (n === "collapsed" ? r += "[]" : n === "full" && (r += "[" + (e.label || e.identifier) + "]"), e.type === "imageReference")
    return { type: "text", value: "![" + e.alt + r };
  const i = t.all(e), s = i[0];
  s && s.type === "text" ? s.value = "[" + s.value : i.unshift({ type: "text", value: "[" });
  const l = i[i.length - 1];
  return l && l.type === "text" ? l.value += r : i.push({ type: "text", value: r }), i;
}
function EZ(t, e) {
  const n = t.definition(e.identifier);
  if (!n)
    return gR(t, e);
  const r = { src: Dh(n.url || ""), alt: e.alt };
  n.title !== null && n.title !== void 0 && (r.title = n.title);
  const i = { type: "element", tagName: "img", properties: r, children: [] };
  return t.patch(e, i), t.applyData(e, i);
}
function TZ(t, e) {
  const n = { src: Dh(e.url) };
  e.alt !== null && e.alt !== void 0 && (n.alt = e.alt), e.title !== null && e.title !== void 0 && (n.title = e.title);
  const r = { type: "element", tagName: "img", properties: n, children: [] };
  return t.patch(e, r), t.applyData(e, r);
}
function CZ(t, e) {
  const n = { type: "text", value: e.value.replace(/\r?\n|\r/g, " ") };
  t.patch(e, n);
  const r = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [n]
  };
  return t.patch(e, r), t.applyData(e, r);
}
function SZ(t, e) {
  const n = t.definition(e.identifier);
  if (!n)
    return gR(t, e);
  const r = { href: Dh(n.url || "") };
  n.title !== null && n.title !== void 0 && (r.title = n.title);
  const i = {
    type: "element",
    tagName: "a",
    properties: r,
    children: t.all(e)
  };
  return t.patch(e, i), t.applyData(e, i);
}
function bZ(t, e) {
  const n = { href: Dh(e.url) };
  e.title !== null && e.title !== void 0 && (n.title = e.title);
  const r = {
    type: "element",
    tagName: "a",
    properties: n,
    children: t.all(e)
  };
  return t.patch(e, r), t.applyData(e, r);
}
function AZ(t, e, n) {
  const r = t.all(e), i = n ? xZ(n) : yR(e), s = {}, l = [];
  if (typeof e.checked == "boolean") {
    const v = r[0];
    let C;
    v && v.type === "element" && v.tagName === "p" ? C = v : (C = { type: "element", tagName: "p", properties: {}, children: [] }, r.unshift(C)), C.children.length > 0 && C.children.unshift({ type: "text", value: " " }), C.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: e.checked, disabled: !0 },
      children: []
    }), s.className = ["task-list-item"];
  }
  let c = -1;
  for (; ++c < r.length; ) {
    const v = r[c];
    (i || c !== 0 || v.type !== "element" || v.tagName !== "p") && l.push({ type: "text", value: `
` }), v.type === "element" && v.tagName === "p" && !i ? l.push(...v.children) : l.push(v);
  }
  const h = r[r.length - 1];
  h && (i || h.type !== "element" || h.tagName !== "p") && l.push({ type: "text", value: `
` });
  const g = { type: "element", tagName: "li", properties: s, children: l };
  return t.patch(e, g), t.applyData(e, g);
}
function xZ(t) {
  let e = !1;
  if (t.type === "list") {
    e = t.spread || !1;
    const n = t.children;
    let r = -1;
    for (; !e && ++r < n.length; )
      e = yR(n[r]);
  }
  return e;
}
function yR(t) {
  const e = t.spread;
  return e ?? t.children.length > 1;
}
function _Z(t, e) {
  const n = {}, r = t.all(e);
  let i = -1;
  for (typeof e.start == "number" && e.start !== 1 && (n.start = e.start); ++i < r.length; ) {
    const l = r[i];
    if (l.type === "element" && l.tagName === "li" && l.properties && Array.isArray(l.properties.className) && l.properties.className.includes("task-list-item")) {
      n.className = ["contains-task-list"];
      break;
    }
  }
  const s = {
    type: "element",
    tagName: e.ordered ? "ol" : "ul",
    properties: n,
    children: t.wrap(r, !0)
  };
  return t.patch(e, s), t.applyData(e, s);
}
function kZ(t, e) {
  const n = {
    type: "element",
    tagName: "p",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
function NZ(t, e) {
  const n = { type: "root", children: t.wrap(t.all(e)) };
  return t.patch(e, n), t.applyData(e, n);
}
function wZ(t, e) {
  const n = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
const x0 = vR("start"), Tv = vR("end");
function OZ(t) {
  return { start: x0(t), end: Tv(t) };
}
function vR(t) {
  return e;
  function e(n) {
    const r = n && n.position && n.position[t] || {};
    return {
      // @ts-expect-error: in practice, null is allowed.
      line: r.line || null,
      // @ts-expect-error: in practice, null is allowed.
      column: r.column || null,
      // @ts-expect-error: in practice, null is allowed.
      offset: r.offset > -1 ? r.offset : null
    };
  }
}
function RZ(t, e) {
  const n = t.all(e), r = n.shift(), i = [];
  if (r) {
    const l = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: t.wrap([r], !0)
    };
    t.patch(e.children[0], l), i.push(l);
  }
  if (n.length > 0) {
    const l = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: t.wrap(n, !0)
    }, c = x0(e.children[1]), h = Tv(e.children[e.children.length - 1]);
    c.line && h.line && (l.position = { start: c, end: h }), i.push(l);
  }
  const s = {
    type: "element",
    tagName: "table",
    properties: {},
    children: t.wrap(i, !0)
  };
  return t.patch(e, s), t.applyData(e, s);
}
function DZ(t, e, n) {
  const r = n ? n.children : void 0, s = (r ? r.indexOf(e) : 1) === 0 ? "th" : "td", l = n && n.type === "table" ? n.align : void 0, c = l ? l.length : e.children.length;
  let h = -1;
  const g = [];
  for (; ++h < c; ) {
    const C = e.children[h], S = {}, b = l ? l[h] : void 0;
    b && (S.align = b);
    let N = { type: "element", tagName: s, properties: S, children: [] };
    C && (N.children = t.all(C), t.patch(C, N), N = t.applyData(e, N)), g.push(N);
  }
  const v = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: t.wrap(g, !0)
  };
  return t.patch(e, v), t.applyData(e, v);
}
function MZ(t, e) {
  const n = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: t.all(e)
  };
  return t.patch(e, n), t.applyData(e, n);
}
const xk = 9, _k = 32;
function LZ(t) {
  const e = String(t), n = /\r?\n|\r/g;
  let r = n.exec(e), i = 0;
  const s = [];
  for (; r; )
    s.push(
      kk(e.slice(i, r.index), i > 0, !0),
      r[0]
    ), i = r.index + r[0].length, r = n.exec(e);
  return s.push(kk(e.slice(i), i > 0, !1)), s.join("");
}
function kk(t, e, n) {
  let r = 0, i = t.length;
  if (e) {
    let s = t.codePointAt(r);
    for (; s === xk || s === _k; )
      r++, s = t.codePointAt(r);
  }
  if (n) {
    let s = t.codePointAt(i - 1);
    for (; s === xk || s === _k; )
      i--, s = t.codePointAt(i - 1);
  }
  return i > r ? t.slice(r, i) : "";
}
function IZ(t, e) {
  const n = { type: "text", value: LZ(String(e.value)) };
  return t.patch(e, n), t.applyData(e, n);
}
function PZ(t, e) {
  const n = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return t.patch(e, n), t.applyData(e, n);
}
const FZ = {
  blockquote: fZ,
  break: dZ,
  code: hZ,
  delete: pZ,
  emphasis: mZ,
  footnoteReference: mR,
  footnote: gZ,
  heading: yZ,
  html: vZ,
  imageReference: EZ,
  image: TZ,
  inlineCode: CZ,
  linkReference: SZ,
  link: bZ,
  listItem: AZ,
  list: _Z,
  paragraph: kZ,
  root: NZ,
  strong: wZ,
  table: RZ,
  tableCell: MZ,
  tableRow: DZ,
  text: IZ,
  thematicBreak: PZ,
  toml: B9,
  yaml: B9,
  definition: B9,
  footnoteDefinition: B9
};
function B9() {
  return null;
}
function BZ(t) {
  return !t || !t.position || !t.position.start || !t.position.start.line || !t.position.start.column || !t.position.end || !t.position.end.line || !t.position.end.column;
}
const Nk = {}.hasOwnProperty;
function UZ(t) {
  const e = /* @__PURE__ */ Object.create(null);
  if (!t || !t.type)
    throw new Error("mdast-util-definitions expected node");
  return Ca(t, "definition", (r) => {
    const i = wk(r.identifier);
    i && !Nk.call(e, i) && (e[i] = r);
  }), n;
  function n(r) {
    const i = wk(r);
    return i && Nk.call(e, i) ? e[i] : null;
  }
}
function wk(t) {
  return String(t || "").toUpperCase();
}
const qy = {}.hasOwnProperty;
function HZ(t, e) {
  const n = e || {}, r = n.allowDangerousHtml || !1, i = {};
  return l.dangerous = r, l.clobberPrefix = n.clobberPrefix === void 0 || n.clobberPrefix === null ? "user-content-" : n.clobberPrefix, l.footnoteLabel = n.footnoteLabel || "Footnotes", l.footnoteLabelTagName = n.footnoteLabelTagName || "h2", l.footnoteLabelProperties = n.footnoteLabelProperties || {
    className: ["sr-only"]
  }, l.footnoteBackLabel = n.footnoteBackLabel || "Back to content", l.unknownHandler = n.unknownHandler, l.passThrough = n.passThrough, l.handlers = { ...FZ, ...n.handlers }, l.definition = UZ(t), l.footnoteById = i, l.footnoteOrder = [], l.footnoteCounts = {}, l.patch = zZ, l.applyData = qZ, l.one = c, l.all = h, l.wrap = VZ, l.augment = s, Ca(t, "footnoteDefinition", (g) => {
    const v = String(g.identifier).toUpperCase();
    qy.call(i, v) || (i[v] = g);
  }), l;
  function s(g, v) {
    if (g && "data" in g && g.data) {
      const C = g.data;
      C.hName && (v.type !== "element" && (v = {
        type: "element",
        tagName: "",
        properties: {},
        children: []
      }), v.tagName = C.hName), v.type === "element" && C.hProperties && (v.properties = { ...v.properties, ...C.hProperties }), "children" in v && v.children && C.hChildren && (v.children = C.hChildren);
    }
    if (g) {
      const C = "type" in g ? g : { position: g };
      BZ(C) || (v.position = { start: x0(C), end: Tv(C) });
    }
    return v;
  }
  function l(g, v, C, S) {
    return Array.isArray(C) && (S = C, C = {}), s(g, {
      type: "element",
      tagName: v,
      properties: C || {},
      children: S || []
    });
  }
  function c(g, v) {
    return ER(l, g, v);
  }
  function h(g) {
    return KS(l, g);
  }
}
function zZ(t, e) {
  t.position && (e.position = OZ(t));
}
function qZ(t, e) {
  let n = e;
  if (t && t.data) {
    const r = t.data.hName, i = t.data.hChildren, s = t.data.hProperties;
    typeof r == "string" && (n.type === "element" ? n.tagName = r : n = {
      type: "element",
      tagName: r,
      properties: {},
      children: []
    }), n.type === "element" && s && (n.properties = { ...n.properties, ...s }), "children" in n && n.children && i !== null && i !== void 0 && (n.children = i);
  }
  return n;
}
function ER(t, e, n) {
  const r = e && e.type;
  if (!r)
    throw new Error("Expected node, got `" + e + "`");
  return qy.call(t.handlers, r) ? t.handlers[r](t, e, n) : t.passThrough && t.passThrough.includes(r) ? "children" in e ? { ...e, children: KS(t, e) } : e : t.unknownHandler ? t.unknownHandler(t, e, n) : jZ(t, e);
}
function KS(t, e) {
  const n = [];
  if ("children" in e) {
    const r = e.children;
    let i = -1;
    for (; ++i < r.length; ) {
      const s = ER(t, r[i], e);
      if (s) {
        if (i && r[i - 1].type === "break" && (!Array.isArray(s) && s.type === "text" && (s.value = s.value.replace(/^\s+/, "")), !Array.isArray(s) && s.type === "element")) {
          const l = s.children[0];
          l && l.type === "text" && (l.value = l.value.replace(/^\s+/, ""));
        }
        Array.isArray(s) ? n.push(...s) : n.push(s);
      }
    }
  }
  return n;
}
function jZ(t, e) {
  const n = e.data || {}, r = "value" in e && !(qy.call(n, "hProperties") || qy.call(n, "hChildren")) ? { type: "text", value: e.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: KS(t, e)
  };
  return t.patch(e, r), t.applyData(e, r);
}
function VZ(t, e) {
  const n = [];
  let r = -1;
  for (e && n.push({ type: "text", value: `
` }); ++r < t.length; )
    r && n.push({ type: "text", value: `
` }), n.push(t[r]);
  return e && t.length > 0 && n.push({ type: "text", value: `
` }), n;
}
function $Z(t) {
  const e = [];
  let n = -1;
  for (; ++n < t.footnoteOrder.length; ) {
    const r = t.footnoteById[t.footnoteOrder[n]];
    if (!r)
      continue;
    const i = t.all(r), s = String(r.identifier).toUpperCase(), l = Dh(s.toLowerCase());
    let c = 0;
    const h = [];
    for (; ++c <= t.footnoteCounts[s]; ) {
      const C = {
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + t.clobberPrefix + "fnref-" + l + (c > 1 ? "-" + c : ""),
          dataFootnoteBackref: !0,
          className: ["data-footnote-backref"],
          ariaLabel: t.footnoteBackLabel
        },
        children: [{ type: "text", value: "↩" }]
      };
      c > 1 && C.children.push({
        type: "element",
        tagName: "sup",
        children: [{ type: "text", value: String(c) }]
      }), h.length > 0 && h.push({ type: "text", value: " " }), h.push(C);
    }
    const g = i[i.length - 1];
    if (g && g.type === "element" && g.tagName === "p") {
      const C = g.children[g.children.length - 1];
      C && C.type === "text" ? C.value += " " : g.children.push({ type: "text", value: " " }), g.children.push(...h);
    } else
      i.push(...h);
    const v = {
      type: "element",
      tagName: "li",
      properties: { id: t.clobberPrefix + "fn-" + l },
      children: t.wrap(i, !0)
    };
    t.patch(r, v), e.push(v);
  }
  if (e.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: t.footnoteLabelTagName,
          properties: {
            // To do: use structured clone.
            ...JSON.parse(JSON.stringify(t.footnoteLabelProperties)),
            id: "footnote-label"
          },
          children: [{ type: "text", value: t.footnoteLabel }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: t.wrap(e, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}
function TR(t, e) {
  const n = HZ(t, e), r = n.one(t, null), i = $Z(n);
  return i && r.children.push({ type: "text", value: `
` }, i), Array.isArray(r) ? { type: "root", children: r } : r;
}
const GZ = (
  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */
  function(t, e) {
    return t && "run" in t ? KZ(t, e) : YZ(t || e);
  }
), WZ = GZ;
function KZ(t, e) {
  return (n, r, i) => {
    t.run(TR(n, e), r, (s) => {
      i(s);
    });
  };
}
function YZ(t) {
  return (e) => TR(e, t);
}
function CR(t) {
  const e = (
    /** @type {Options} */
    this.data("settings")
  ), n = Object.assign({}, e, t);
  Object.assign(this, { Compiler: r });
  function r(i) {
    return ZO(i, n);
  }
}
const QZ = {}.hasOwnProperty, SR = Oh("type", { handlers: { root: JZ, element: ree, text: tee, comment: nee, doctype: eee } });
function XZ(t, e) {
  const n = e && typeof e == "object" ? e.space : e;
  return SR(t, n === "svg" ? lu : Nh);
}
function JZ(t, e) {
  const n = {
    nodeName: "#document",
    // @ts-expect-error: `parse5` uses enums, which are actually strings.
    mode: (t.data || {}).quirksMode ? "quirks" : "no-quirks",
    childNodes: []
  };
  return n.childNodes = YS(t.children, n, e), Mh(t, n), n;
}
function ZZ(t, e) {
  const n = { nodeName: "#document-fragment", childNodes: [] };
  return n.childNodes = YS(t.children, n, e), Mh(t, n), n;
}
function eee(t) {
  const e = {
    nodeName: "#documentType",
    name: "html",
    publicId: "",
    systemId: "",
    // @ts-expect-error: change to `null` in a major?
    parentNode: void 0
  };
  return Mh(t, e), e;
}
function tee(t) {
  const e = {
    nodeName: "#text",
    value: t.value,
    // @ts-expect-error: no `parentNode`
    parentNode: void 0
  };
  return Mh(t, e), e;
}
function nee(t) {
  const e = {
    nodeName: "#comment",
    data: t.value,
    // @ts-expect-error: no `parentNode`
    parentNode: void 0
  };
  return Mh(t, e), e;
}
function ree(t, e) {
  const n = e;
  let r = n;
  t.type === "element" && t.tagName.toLowerCase() === "svg" && n.space === "html" && (r = lu);
  const i = [];
  let s;
  if (t.properties) {
    for (s in t.properties)
      if (s !== "children" && QZ.call(t.properties, s)) {
        const c = iee(
          r,
          s,
          t.properties[s]
        );
        c && i.push(c);
      }
  }
  const l = {
    nodeName: t.tagName,
    tagName: t.tagName,
    attrs: i,
    // @ts-expect-error: html and svg both have a space.
    namespaceURI: g0[r.space],
    childNodes: [],
    // @ts-expect-error: no `parentNode`
    parentNode: void 0
  };
  return l.childNodes = YS(t.children, l, r), Mh(t, l), t.tagName === "template" && t.content && (l.content = ZZ(t.content, r)), l;
}
function iee(t, e, n) {
  const r = b0(t, e);
  if (n == null || n === !1 || typeof n == "number" && Number.isNaN(n) || !n && r.boolean)
    return;
  Array.isArray(n) && (n = r.commaSeparated ? RS(n) : OS(n));
  const i = {
    name: r.attribute,
    value: n === !0 ? "" : String(n)
  };
  if (r.space && r.space !== "html" && r.space !== "svg") {
    const s = i.name.indexOf(":");
    s < 0 ? i.prefix = "" : (i.name = i.name.slice(s + 1), i.prefix = r.attribute.slice(0, s)), i.namespace = g0[r.space];
  }
  return i;
}
function YS(t, e, n) {
  let r = -1;
  const i = [];
  if (t)
    for (; ++r < t.length; ) {
      const s = SR(t[r], n);
      s.parentNode = e, i.push(s);
    }
  return i;
}
function Mh(t, e) {
  const n = t.position;
  n && n.start && n.end && (e.sourceCodeLocation = {
    startLine: n.start.line,
    startCol: n.start.column,
    // @ts-expect-error assume this is set.
    startOffset: n.start.offset,
    endLine: n.end.line,
    endCol: n.end.column,
    // @ts-expect-error assume this is set.
    endOffset: n.end.offset
  });
}
const oee = "IN_TEMPLATE_MODE", aee = "DATA_STATE", see = "CHARACTER_TOKEN", lee = "START_TAG_TOKEN", uee = "END_TAG_TOKEN", cee = "COMMENT_TOKEN", fee = "DOCTYPE_TOKEN", dee = { sourceCodeLocationInfo: !0, scriptingEnabled: !1 }, bR = (
  /**
   * @type {(
   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &
   *   ((tree: Node, options?: Options) => Node)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {VFile} [file]
   * @param {Options} [options]
   */
  function(t, e, n) {
    let r = -1;
    const i = new Nw(dee), s = Oh("type", {
      handlers: { root: O, element: L, text: P, comment: j, doctype: Y, raw: oe },
      // @ts-expect-error: hush.
      unknown: gee
    });
    let l, c, h, g, v;
    if (vee(e) && (n = e, e = void 0), n && n.passThrough)
      for (; ++r < n.passThrough.length; )
        s.handlers[n.passThrough[r]] = ee;
    const C = Hw(
      yee(t) ? b() : S(),
      e
    );
    if (l && Ca(C, "comment", (H, Z, me) => {
      const Ie = (
        /** @type {Stitch} */
        /** @type {unknown} */
        H
      );
      if (Ie.value.stitch && me !== null && Z !== null)
        return me.children[Z] = Ie.value.stitch, Z;
    }), t.type !== "root" && C.type === "root" && C.children.length === 1)
      return C.children[0];
    return C;
    function S() {
      const H = {
        nodeName: "template",
        tagName: "template",
        attrs: [],
        namespaceURI: g0.html,
        childNodes: []
      }, Z = {
        nodeName: "documentmock",
        tagName: "documentmock",
        attrs: [],
        namespaceURI: g0.html,
        childNodes: []
      }, me = { nodeName: "#document-fragment", childNodes: [] };
      if (i._bootstrap(Z, H), i._pushTmplInsertionMode(oee), i._initTokenizerForFragmentParsing(), i._insertFakeRootElement(), i._resetInsertionMode(), i._findFormInFragmentContext(), c = i.tokenizer, !c)
        throw new Error("Expected `tokenizer`");
      return h = c.preprocessor, v = c.__mixins[0], g = v.posTracker, s(t), z(), i._adoptNodes(Z.childNodes[0], me), me;
    }
    function b() {
      const H = i.treeAdapter.createDocument();
      if (i._bootstrap(H, void 0), c = i.tokenizer, !c)
        throw new Error("Expected `tokenizer`");
      return h = c.preprocessor, v = c.__mixins[0], g = v.posTracker, s(t), z(), H;
    }
    function N(H) {
      let Z = -1;
      if (H)
        for (; ++Z < H.length; )
          s(H[Z]);
    }
    function O(H) {
      N(H.children);
    }
    function L(H) {
      z(), i._processInputToken(hee(H)), N(H.children), $O.includes(H.tagName) || (z(), i._processInputToken(mee(H)));
    }
    function P(H) {
      z(), i._processInputToken({
        type: see,
        chars: H.value,
        location: lh(H)
      });
    }
    function Y(H) {
      z(), i._processInputToken({
        type: fee,
        name: "html",
        forceQuirks: !1,
        publicId: "",
        systemId: "",
        location: lh(H)
      });
    }
    function j(H) {
      z(), i._processInputToken({
        type: cee,
        data: H.value,
        location: lh(H)
      });
    }
    function oe(H) {
      const Z = x0(H), me = Z.line || 1, Ie = Z.column || 1, fe = Z.offset || 0;
      if (!h)
        throw new Error("Expected `preprocessor`");
      if (!c)
        throw new Error("Expected `tokenizer`");
      if (!g)
        throw new Error("Expected `posTracker`");
      if (!v)
        throw new Error("Expected `locationTracker`");
      h.html = void 0, h.pos = -1, h.lastGapPos = -1, h.lastCharPos = -1, h.gapStack = [], h.skipNextNewLine = !1, h.lastChunkWritten = !1, h.endOfChunkHit = !1, g.isEol = !1, g.lineStartPos = -Ie + 1, g.droppedBufferSize = fe, g.offset = 0, g.col = 1, g.line = me, v.currentAttrLocation = void 0, v.ctLoc = lh(H), c.write(H.value), i._runParsingLoop(null), (c.state === "NAMED_CHARACTER_REFERENCE_STATE" || c.state === "NUMERIC_CHARACTER_REFERENCE_END_STATE") && (h.lastChunkWritten = !0, c[c.state](c._consume()));
    }
    function ee(H) {
      l = !0;
      let Z;
      "children" in H ? Z = {
        ...H,
        children: bR(
          { type: "root", children: H.children },
          e,
          n
          // @ts-expect-error Assume a given parent yields a parent.
        ).children
      } : Z = { ...H }, j({ type: "comment", value: { stitch: Z } });
    }
    function z() {
      if (!c)
        throw new Error("Expected `tokenizer`");
      if (!g)
        throw new Error("Expected `posTracker`");
      const H = c.currentCharacterToken;
      H && (H.location.endLine = g.line, H.location.endCol = g.col + 1, H.location.endOffset = g.offset + 1, i._processInputToken(H)), c.tokenQueue = [], c.state = aee, c.returnState = "", c.charRefCode = -1, c.tempBuff = [], c.lastStartTagName = "", c.consumedAfterSnapshot = -1, c.active = !1, c.currentCharacterToken = void 0, c.currentToken = void 0, c.currentAttr = void 0;
    }
  }
);
function hee(t) {
  const e = Object.assign(lh(t));
  return e.startTag = Object.assign({}, e), {
    type: lee,
    tagName: t.tagName,
    selfClosing: !1,
    attrs: pee(t),
    location: e
  };
}
function pee(t) {
  return XZ({
    tagName: t.tagName,
    type: "element",
    properties: t.properties,
    children: []
    // @ts-expect-error Assume element.
  }).attrs;
}
function mee(t) {
  const e = Object.assign(lh(t));
  return e.startTag = Object.assign({}, e), {
    type: uee,
    tagName: t.tagName,
    attrs: [],
    location: e
  };
}
function gee(t) {
  throw new Error("Cannot compile `" + t.type + "` node");
}
function yee(t) {
  const e = t.type === "root" ? t.children[0] : t;
  return Boolean(
    e && (e.type === "doctype" || e.type === "element" && e.tagName === "html")
  );
}
function lh(t) {
  const e = x0(t), n = Tv(t);
  return {
    startLine: e.line,
    startCol: e.column,
    startOffset: e.offset,
    endLine: n.line,
    endCol: n.column,
    endOffset: n.offset
  };
}
function vee(t) {
  return Boolean(t && !("message" in t && "messages" in t));
}
function AR(t = {}) {
  return (e, n) => (
    /** @type {Root} */
    bR(e, n, t)
  );
}
const Eee = [
  "pre",
  "script",
  "style",
  "textarea"
], Tee = Vw({ newlines: !0 });
function xR(t = {}) {
  let e = t.indent || 2, n = t.indentInitial;
  return typeof e == "number" && (e = " ".repeat(e)), n == null && (n = !0), (s) => {
    let l;
    Tee(s), PS(s, (c, h) => {
      let g = -1;
      if (!("children" in c))
        return;
      if (Ac(c, "head") && (l = !0), l && Ac(c, "body") && (l = void 0), Ac(c, Eee))
        return dv;
      const v = c.children;
      let C = h.length;
      if (v.length === 0 || !G4(c, l))
        return;
      n || C--;
      let S;
      for (; ++g < v.length; ) {
        const O = v[g];
        (O.type === "text" || O.type === "comment") && (O.value.includes(`
`) && (S = !0), O.value = O.value.replace(
          / *\n/g,
          "$&" + String(e).repeat(C)
        ));
      }
      const b = [];
      let N;
      for (g = -1; ++g < v.length; ) {
        const O = v[g];
        (G4(O, l) || S && !g) && (r(b, C, O), S = !0), N = O, b.push(O);
      }
      N && (S || G4(N, l)) && (xc(N) && (b.pop(), N = b[b.length - 1]), r(b, C - 1)), c.children = b;
    });
  };
  function r(s, l, c) {
    const h = s[s.length - 1], g = xc(h) ? s[s.length - 2] : h, v = (i(g) && i(c) ? `

` : `
`) + String(e).repeat(Math.max(l, 0));
    h && h.type === "text" ? h.value = xc(h) ? v : h.value + v : s.push({ type: "text", value: v });
  }
  function i(s) {
    return Boolean(
      s && s.type === "element" && t.blanks && t.blanks.length > 0 && t.blanks.includes(s.tagName)
    );
  }
}
function G4(t, e) {
  return t.type === "root" || (t.type === "element" ? e || Ac(t, "script") || LS(t) || !Qw(t) : !1);
}
const W4 = /[\t ]*(?:\r?\n|\r)/g;
function Cee() {
  return (t) => {
    Ca(t, "text", (e, n, r) => {
      const i = [];
      let s = 0;
      W4.lastIndex = 0;
      let l = W4.exec(e.value);
      for (; l; ) {
        const c = l.index;
        s !== c && i.push({ type: "text", value: e.value.slice(s, c) }), i.push({ type: "break" }), s = c + l[0].length, l = W4.exec(e.value);
      }
      if (i.length > 0 && r && typeof n == "number")
        return s < e.value.length && i.push({ type: "text", value: e.value.slice(s) }), r.children.splice(n, 1, ...i), n + i.length;
    });
  };
}
function QS(t, e, n, r, i, s, l, c, h, g, v, C, S, b, N) {
  let O, L;
  return P;
  function P(J) {
    return t.enter(r), t.enter(i), t.consume(J), t.exit(i), Y;
  }
  function Y(J) {
    return J === 35 ? (O = l, j(J)) : J === 46 ? (O = c, j(J)) : J === 58 || J === 95 || ga(J) ? (t.enter(s), t.enter(h), t.consume(J), z) : N && Kn(J) ? on(t, Y, "whitespace")(J) : !N && Pr(J) ? iu(t, Y)(J) : Be(J);
  }
  function j(J) {
    return t.enter(s), t.enter(O), t.enter(O + "Marker"), t.consume(J), t.exit(O + "Marker"), oe;
  }
  function oe(J) {
    return J === null || J === 34 || J === 35 || J === 39 || J === 46 || J === 60 || J === 61 || J === 62 || J === 96 || J === 125 || Pr(J) ? n(J) : (t.enter(O + "Value"), t.consume(J), ee);
  }
  function ee(J) {
    return J === null || J === 34 || J === 39 || J === 60 || J === 61 || J === 62 || J === 96 ? n(J) : J === 35 || J === 46 || J === 125 || Pr(J) ? (t.exit(O + "Value"), t.exit(O), t.exit(s), Y(J)) : (t.consume(J), ee);
  }
  function z(J) {
    return J === 45 || J === 46 || J === 58 || J === 95 || $i(J) ? (t.consume(J), z) : (t.exit(h), N && Kn(J) ? on(t, H, "whitespace")(J) : !N && Pr(J) ? iu(t, H)(J) : H(J));
  }
  function H(J) {
    return J === 61 ? (t.enter(g), t.consume(J), t.exit(g), Z) : (t.exit(s), Y(J));
  }
  function Z(J) {
    return J === null || J === 60 || J === 61 || J === 62 || J === 96 || J === 125 || N && Et(J) ? n(J) : J === 34 || J === 39 ? (t.enter(v), t.enter(S), t.consume(J), t.exit(S), L = J, Ie) : N && Kn(J) ? on(t, Z, "whitespace")(J) : !N && Pr(J) ? iu(t, Z)(J) : (t.enter(C), t.enter(b), t.consume(J), L = void 0, me);
  }
  function me(J) {
    return J === null || J === 34 || J === 39 || J === 60 || J === 61 || J === 62 || J === 96 ? n(J) : J === 125 || Pr(J) ? (t.exit(b), t.exit(C), t.exit(s), Y(J)) : (t.consume(J), me);
  }
  function Ie(J) {
    return J === L ? (t.enter(S), t.consume(J), t.exit(S), t.exit(v), t.exit(s), Ce) : (t.enter(C), fe(J));
  }
  function fe(J) {
    return J === L ? (t.exit(C), Ie(J)) : J === null ? n(J) : Et(J) ? N ? n(J) : iu(t, fe)(J) : (t.enter(b), t.consume(J), pe);
  }
  function pe(J) {
    return J === L || J === null || Et(J) ? (t.exit(b), fe(J)) : (t.consume(J), pe);
  }
  function Ce(J) {
    return J === 125 || Pr(J) ? Y(J) : Be(J);
  }
  function Be(J) {
    return J === 125 ? (t.enter(i), t.consume(J), t.exit(i), t.exit(r), e) : n(J);
  }
}
function XS(t, e, n, r, i, s, l) {
  let c = 0, h = 0, g;
  return v;
  function v(L) {
    return t.enter(r), t.enter(i), t.consume(L), t.exit(i), C;
  }
  function C(L) {
    return L === 93 ? (t.enter(i), t.consume(L), t.exit(i), t.exit(r), e) : (t.enter(s), S(L));
  }
  function S(L) {
    if (L === 93 && !h)
      return O(L);
    const P = t.enter("chunkText", {
      contentType: "text",
      previous: g
    });
    return g && (g.next = P), g = P, b(L);
  }
  function b(L) {
    return L === null || c > 999 || L === 91 && ++h > 32 ? n(L) : L === 93 && !h-- ? (t.exit("chunkText"), O(L)) : Et(L) ? l ? n(L) : (t.consume(L), t.exit("chunkText"), S) : (t.consume(L), L === 92 ? N : b);
  }
  function N(L) {
    return L === 91 || L === 92 || L === 93 ? (t.consume(L), c++, b) : b(L);
  }
  function O(L) {
    return t.exit(s), t.enter(i), t.consume(L), t.exit(i), t.exit(r), e;
  }
}
function JS(t, e, n, r) {
  const i = this;
  return s;
  function s(c) {
    return ga(c) ? (t.enter(r), t.consume(c), l) : n(c);
  }
  function l(c) {
    return c === 45 || c === 95 || $i(c) ? (t.consume(c), l) : (t.exit(r), i.previous === 45 || i.previous === 95 ? n(c) : e(c));
  }
}
const See = {
  tokenize: xee,
  concrete: !0
}, bee = {
  tokenize: _ee,
  partial: !0
}, Aee = {
  tokenize: kee,
  partial: !0
}, Ok = {
  tokenize: Nee,
  partial: !0
};
function xee(t, e, n) {
  const r = this, i = r.events[r.events.length - 1], s = i && i[1].type === "linePrefix" ? i[2].sliceSerialize(i[1], !0).length : 0;
  let l = 0, c;
  return h;
  function h(H) {
    return t.enter("directiveContainer"), t.enter("directiveContainerFence"), t.enter("directiveContainerSequence"), g(H);
  }
  function g(H) {
    return H === 58 ? (t.consume(H), l++, g) : l < 3 ? n(H) : (t.exit("directiveContainerSequence"), JS.call(
      r,
      t,
      v,
      n,
      "directiveContainerName"
    )(H));
  }
  function v(H) {
    return H === 91 ? t.attempt(bee, C, C)(H) : C(H);
  }
  function C(H) {
    return H === 123 ? t.attempt(Aee, S, S)(H) : S(H);
  }
  function S(H) {
    return on(t, b, "whitespace")(H);
  }
  function b(H) {
    return t.exit("directiveContainerFence"), H === null ? N(H) : Et(H) ? r.interrupt ? e(H) : t.attempt(Ok, O, N)(H) : n(H);
  }
  function N(H) {
    return t.exit("directiveContainer"), e(H);
  }
  function O(H) {
    return H === null ? (t.exit("directiveContainer"), e(H)) : (t.enter("directiveContainerContent"), L(H));
  }
  function L(H) {
    return H === null ? ee(H) : t.attempt(
      {
        tokenize: z,
        partial: !0
      },
      ee,
      s ? on(t, P, "linePrefix", s + 1) : P
    )(H);
  }
  function P(H) {
    if (H === null)
      return ee(H);
    const Z = t.enter("chunkDocument", {
      contentType: "document",
      previous: c
    });
    return c && (c.next = Z), c = Z, Y(H);
  }
  function Y(H) {
    if (H === null) {
      const Z = t.exit("chunkDocument");
      return r.parser.lazy[Z.start.line] = !1, ee(H);
    }
    return Et(H) ? t.check(Ok, j, oe)(H) : (t.consume(H), Y);
  }
  function j(H) {
    t.consume(H);
    const Z = t.exit("chunkDocument");
    return r.parser.lazy[Z.start.line] = !1, L;
  }
  function oe(H) {
    const Z = t.exit("chunkDocument");
    return r.parser.lazy[Z.start.line] = !1, ee(H);
  }
  function ee(H) {
    return t.exit("directiveContainerContent"), t.exit("directiveContainer"), e(H);
  }
  function z(H, Z, me) {
    let Ie = 0;
    return on(H, fe, "linePrefix", 4);
    function fe(Be) {
      return H.enter("directiveContainerFence"), H.enter("directiveContainerSequence"), pe(Be);
    }
    function pe(Be) {
      return Be === 58 ? (H.consume(Be), Ie++, pe) : Ie < l ? me(Be) : (H.exit("directiveContainerSequence"), on(H, Ce, "whitespace")(Be));
    }
    function Ce(Be) {
      return Be === null || Et(Be) ? (H.exit("directiveContainerFence"), Z(Be)) : me(Be);
    }
  }
}
function _ee(t, e, n) {
  return XS(
    t,
    e,
    n,
    "directiveContainerLabel",
    "directiveContainerLabelMarker",
    "directiveContainerLabelString",
    !0
  );
}
function kee(t, e, n) {
  return QS(
    t,
    e,
    n,
    "directiveContainerAttributes",
    "directiveContainerAttributesMarker",
    "directiveContainerAttribute",
    "directiveContainerAttributeId",
    "directiveContainerAttributeClass",
    "directiveContainerAttributeName",
    "directiveContainerAttributeInitializerMarker",
    "directiveContainerAttributeValueLiteral",
    "directiveContainerAttributeValue",
    "directiveContainerAttributeValueMarker",
    "directiveContainerAttributeValueData",
    !0
  );
}
function Nee(t, e, n) {
  const r = this;
  return i;
  function i(l) {
    return t.enter("lineEnding"), t.consume(l), t.exit("lineEnding"), s;
  }
  function s(l) {
    return r.parser.lazy[r.now().line] ? n(l) : e(l);
  }
}
const wee = {
  tokenize: Dee
}, Oee = {
  tokenize: Mee,
  partial: !0
}, Ree = {
  tokenize: Lee,
  partial: !0
};
function Dee(t, e, n) {
  const r = this;
  return i;
  function i(v) {
    return t.enter("directiveLeaf"), t.enter("directiveLeafSequence"), t.consume(v), s;
  }
  function s(v) {
    return v === 58 ? (t.consume(v), t.exit("directiveLeafSequence"), JS.call(
      r,
      t,
      l,
      n,
      "directiveLeafName"
    )) : n(v);
  }
  function l(v) {
    return v === 91 ? t.attempt(Oee, c, c)(v) : c(v);
  }
  function c(v) {
    return v === 123 ? t.attempt(Ree, h, h)(v) : h(v);
  }
  function h(v) {
    return on(t, g, "whitespace")(v);
  }
  function g(v) {
    return v === null || Et(v) ? (t.exit("directiveLeaf"), e(v)) : n(v);
  }
}
function Mee(t, e, n) {
  return XS(
    t,
    e,
    n,
    "directiveLeafLabel",
    "directiveLeafLabelMarker",
    "directiveLeafLabelString",
    !0
  );
}
function Lee(t, e, n) {
  return QS(
    t,
    e,
    n,
    "directiveLeafAttributes",
    "directiveLeafAttributesMarker",
    "directiveLeafAttribute",
    "directiveLeafAttributeId",
    "directiveLeafAttributeClass",
    "directiveLeafAttributeName",
    "directiveLeafAttributeInitializerMarker",
    "directiveLeafAttributeValueLiteral",
    "directiveLeafAttributeValue",
    "directiveLeafAttributeValueMarker",
    "directiveLeafAttributeValueData",
    !0
  );
}
const Iee = {
  tokenize: Uee,
  previous: Bee
}, Pee = {
  tokenize: Hee,
  partial: !0
}, Fee = {
  tokenize: zee,
  partial: !0
};
function Bee(t) {
  return t !== 58 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function Uee(t, e, n) {
  const r = this;
  return i;
  function i(h) {
    return t.enter("directiveText"), t.enter("directiveTextMarker"), t.consume(h), t.exit("directiveTextMarker"), JS.call(r, t, s, n, "directiveTextName");
  }
  function s(h) {
    return h === 58 ? n(h) : h === 91 ? t.attempt(Pee, l, l)(h) : l(h);
  }
  function l(h) {
    return h === 123 ? t.attempt(Fee, c, c)(h) : c(h);
  }
  function c(h) {
    return t.exit("directiveText"), e(h);
  }
}
function Hee(t, e, n) {
  return XS(
    t,
    e,
    n,
    "directiveTextLabel",
    "directiveTextLabelMarker",
    "directiveTextLabelString"
  );
}
function zee(t, e, n) {
  return QS(
    t,
    e,
    n,
    "directiveTextAttributes",
    "directiveTextAttributesMarker",
    "directiveTextAttribute",
    "directiveTextAttributeId",
    "directiveTextAttributeClass",
    "directiveTextAttributeName",
    "directiveTextAttributeInitializerMarker",
    "directiveTextAttributeValueLiteral",
    "directiveTextAttributeValue",
    "directiveTextAttributeValueMarker",
    "directiveTextAttributeValueData"
  );
}
function qee() {
  return {
    text: {
      [58]: Iee
    },
    flow: {
      [58]: [See, wee]
    }
  };
}
const Rk = {
  0: "�",
  128: "€",
  130: "‚",
  131: "ƒ",
  132: "„",
  133: "…",
  134: "†",
  135: "‡",
  136: "ˆ",
  137: "‰",
  138: "Š",
  139: "‹",
  140: "Œ",
  142: "Ž",
  145: "‘",
  146: "’",
  147: "“",
  148: "”",
  149: "•",
  150: "–",
  151: "—",
  152: "˜",
  153: "™",
  154: "š",
  155: "›",
  156: "œ",
  158: "ž",
  159: "Ÿ"
};
function _R(t) {
  const e = typeof t == "string" ? t.charCodeAt(0) : t;
  return e >= 48 && e <= 57;
}
function jee(t) {
  const e = typeof t == "string" ? t.charCodeAt(0) : t;
  return e >= 97 && e <= 102 || e >= 65 && e <= 70 || e >= 48 && e <= 57;
}
function Vee(t) {
  const e = typeof t == "string" ? t.charCodeAt(0) : t;
  return e >= 97 && e <= 122 || e >= 65 && e <= 90;
}
function Dk(t) {
  return Vee(t) || _R(t);
}
const Yd = String.fromCharCode, $ee = [
  "",
  /* 1: Non terminated (named) */
  "Named character references must be terminated by a semicolon",
  /* 2: Non terminated (numeric) */
  "Numeric character references must be terminated by a semicolon",
  /* 3: Empty (named) */
  "Named character references cannot be empty",
  /* 4: Empty (numeric) */
  "Numeric character references cannot be empty",
  /* 5: Unknown (named) */
  "Named character references must be known",
  /* 6: Disallowed (numeric) */
  "Numeric character references cannot be disallowed",
  /* 7: Prohibited (numeric) */
  "Numeric character references cannot be outside the permissible Unicode range"
];
function ZS(t, e = {}) {
  const n = typeof e.additional == "string" ? e.additional.charCodeAt(0) : e.additional, r = [];
  let i = 0, s = -1, l = "", c, h;
  e.position && ("start" in e.position || "indent" in e.position ? (h = e.position.indent, c = e.position.start) : c = e.position);
  let g = (c ? c.line : 0) || 1, v = (c ? c.column : 0) || 1, C = b(), S;
  for (i--; ++i <= t.length; )
    if (S === 10 && (v = (h ? h[s] : 0) || 1), S = t.charCodeAt(i), S === 38) {
      const L = t.charCodeAt(i + 1);
      if (L === 9 || L === 10 || L === 12 || L === 32 || L === 38 || L === 60 || Number.isNaN(L) || n && L === n) {
        l += Yd(S), v++;
        continue;
      }
      const P = i + 1;
      let Y = P, j = P, oe;
      if (L === 35) {
        j = ++Y;
        const pe = t.charCodeAt(j);
        pe === 88 || pe === 120 ? (oe = "hexadecimal", j = ++Y) : oe = "decimal";
      } else
        oe = "named";
      let ee = "", z = "", H = "";
      const Z = oe === "named" ? Dk : oe === "decimal" ? _R : jee;
      for (j--; ++j <= t.length; ) {
        const pe = t.charCodeAt(j);
        if (!Z(pe))
          break;
        H += Yd(pe), oe === "named" && WO.includes(H) && (ee = H, z = v0(H));
      }
      let me = t.charCodeAt(j) === 59;
      if (me) {
        j++;
        const pe = oe === "named" ? v0(H) : !1;
        pe && (ee = H, z = pe);
      }
      let Ie = 1 + j - P, fe = "";
      if (!(!me && e.nonTerminated === !1))
        if (!H)
          oe !== "named" && N(4, Ie);
        else if (oe === "named") {
          if (me && !z)
            N(5, 1);
          else if (ee !== H && (j = Y + ee.length, Ie = 1 + j - Y, me = !1), !me) {
            const pe = ee ? 1 : 3;
            if (e.attribute) {
              const Ce = t.charCodeAt(j);
              Ce === 61 ? (N(pe, Ie), z = "") : Dk(Ce) ? z = "" : N(pe, Ie);
            } else
              N(pe, Ie);
          }
          fe = z;
        } else {
          me || N(2, Ie);
          let pe = Number.parseInt(
            H,
            oe === "hexadecimal" ? 16 : 10
          );
          if (Gee(pe))
            N(7, Ie), fe = Yd(
              65533
              /* `�` */
            );
          else if (pe in Rk)
            N(6, Ie), fe = Rk[pe];
          else {
            let Ce = "";
            Wee(pe) && N(6, Ie), pe > 65535 && (pe -= 65536, Ce += Yd(pe >>> 10 | 55296), pe = 56320 | pe & 1023), fe = Ce + Yd(pe);
          }
        }
      if (fe) {
        O(), C = b(), i = j - 1, v += j - P + 1, r.push(fe);
        const pe = b();
        pe.offset++, e.reference && e.reference.call(
          e.referenceContext,
          fe,
          { start: C, end: pe },
          t.slice(P - 1, j)
        ), C = pe;
      } else
        H = t.slice(P - 1, j), l += H, v += H.length, i = j - 1;
    } else
      S === 10 && (g++, s++, v = 0), Number.isNaN(S) ? O() : (l += Yd(S), v++);
  return r.join("");
  function b() {
    return {
      line: g,
      column: v,
      offset: i + ((c ? c.offset : 0) || 0)
    };
  }
  function N(L, P) {
    let Y;
    e.warning && (Y = b(), Y.column += P, Y.offset += P, e.warning.call(
      e.warningContext,
      $ee[L],
      Y,
      L
    ));
  }
  function O() {
    l && (r.push(l), e.text && e.text.call(e.textContext, l, {
      start: C,
      end: b()
    }), l = "");
  }
}
function Gee(t) {
  return t >= 55296 && t <= 57343 || t > 1114111;
}
function Wee(t) {
  return t >= 1 && t <= 8 || t === 11 || t >= 13 && t <= 31 || t >= 127 && t <= 159 || t >= 64976 && t <= 65007 || (t & 65535) === 65535 || (t & 65535) === 65534;
}
const Kee = {}.hasOwnProperty, Mk = /^[^\t\n\r "#'.<=>`}]+$/;
Z9.peek = nte;
const Yee = {
  canContainEols: ["textDirective"],
  enter: {
    directiveContainer: Xee,
    directiveContainerAttributes: Y4,
    directiveContainerLabel: ete,
    directiveLeaf: Jee,
    directiveLeafAttributes: Y4,
    directiveText: Zee,
    directiveTextAttributes: Y4
  },
  exit: {
    directiveContainer: tC,
    directiveContainerAttributeClassValue: X4,
    directiveContainerAttributeIdValue: Q4,
    directiveContainerAttributeName: Z4,
    directiveContainerAttributeValue: J4,
    directiveContainerAttributes: eC,
    directiveContainerLabel: tte,
    directiveContainerName: K4,
    directiveLeaf: tC,
    directiveLeafAttributeClassValue: X4,
    directiveLeafAttributeIdValue: Q4,
    directiveLeafAttributeName: Z4,
    directiveLeafAttributeValue: J4,
    directiveLeafAttributes: eC,
    directiveLeafName: K4,
    directiveText: tC,
    directiveTextAttributeClassValue: X4,
    directiveTextAttributeIdValue: Q4,
    directiveTextAttributeName: Z4,
    directiveTextAttributeValue: J4,
    directiveTextAttributes: eC,
    directiveTextName: K4
  }
}, Qee = {
  unsafe: [
    {
      character: "\r",
      inConstruct: ["leafDirectiveLabel", "containerDirectiveLabel"]
    },
    {
      character: `
`,
      inConstruct: ["leafDirectiveLabel", "containerDirectiveLabel"]
    },
    {
      before: "[^:]",
      character: ":",
      after: "[A-Za-z]",
      inConstruct: ["phrasing"]
    },
    { atBreak: !0, character: ":", after: ":" }
  ],
  handlers: {
    containerDirective: Z9,
    leafDirective: Z9,
    textDirective: Z9
  }
};
function Xee(t) {
  eb.call(this, "containerDirective", t);
}
function Jee(t) {
  eb.call(this, "leafDirective", t);
}
function Zee(t) {
  eb.call(this, "textDirective", t);
}
function eb(t, e) {
  this.enter({ type: t, name: "", attributes: {}, children: [] }, e);
}
function K4(t) {
  const e = (
    /** @type {Directive} */
    this.stack[this.stack.length - 1]
  );
  e.name = this.sliceSerialize(t);
}
function ete(t) {
  this.enter(
    { type: "paragraph", data: { directiveLabel: !0 }, children: [] },
    t
  );
}
function tte(t) {
  this.exit(t);
}
function Y4() {
  this.setData("directiveAttributes", []), this.buffer();
}
function Q4(t) {
  /** @type {Array<[string, string]>} */
  this.getData("directiveAttributes").push([
    "id",
    ZS(this.sliceSerialize(t), {
      attribute: !0
    })
  ]);
}
function X4(t) {
  /** @type {Array<[string, string]>} */
  this.getData("directiveAttributes").push([
    "class",
    ZS(this.sliceSerialize(t), {
      attribute: !0
    })
  ]);
}
function J4(t) {
  const e = (
    /** @type {Array<[string, string]>} */
    this.getData("directiveAttributes")
  );
  e[e.length - 1][1] = ZS(this.sliceSerialize(t), {
    attribute: !0
  });
}
function Z4(t) {
  /** @type {Array<[string, string]>} */
  this.getData("directiveAttributes").push([this.sliceSerialize(t), ""]);
}
function eC() {
  const t = (
    /** @type {Array<[string, string]>} */
    this.getData("directiveAttributes")
  ), e = {};
  let n = -1;
  for (; ++n < t.length; ) {
    const i = t[n];
    i[0] === "class" && e.class ? e.class += " " + i[1] : e[i[0]] = i[1];
  }
  this.setData("directiveAttributes"), this.resume();
  const r = (
    /** @type {Directive} */
    this.stack[this.stack.length - 1]
  );
  r.attributes = e;
}
function tC(t) {
  this.exit(t);
}
function Z9(t, e, n, r) {
  const i = HS(r), s = ite(t), l = n.enter(t.type);
  let c = i.move(s + (t.name || "")), h;
  if (t.type === "containerDirective") {
    const g = (t.children || [])[0];
    h = Lk(g) ? g : void 0;
  } else
    h = t;
  if (h && h.children && h.children.length > 0) {
    const g = n.enter("label"), v = `${t.type}Label`, C = n.enter(v);
    c += i.move("["), c += i.move(
      US(h, n, {
        ...i.current(),
        before: c,
        after: "]"
      })
    ), c += i.move("]"), C(), g();
  }
  if (c += i.move(rte(t, n)), t.type === "containerDirective") {
    const g = (t.children || [])[0];
    let v = t;
    Lk(g) && (v = Object.assign({}, t, { children: t.children.slice(1) })), v && v.children && v.children.length > 0 && (c += i.move(`
`), c += i.move(_O(v, n, i.current()))), c += i.move(`
` + s);
  }
  return l(), c;
}
function nte() {
  return ":";
}
function rte(t, e) {
  const n = mv(e), r = t.type === "textDirective" ? [n] : [n, `
`, "\r"], i = t.attributes || {}, s = [];
  let l, c, h, g;
  for (g in i)
    if (Kee.call(i, g) && i[g] !== void 0 && i[g] !== null) {
      const C = String(i[g]);
      if (g === "id")
        h = Mk.test(C) ? "#" + C : v("id", C);
      else if (g === "class") {
        const S = C.split(/[\t\n\r ]+/g), b = [], N = [];
        let O = -1;
        for (; ++O < S.length; )
          (Mk.test(S[O]) ? N : b).push(
            S[O]
          );
        l = b.length > 0 ? v("class", b.join(" ")) : "", c = N.length > 0 ? "." + N.join(".") : "";
      } else
        s.push(v(g, C));
    }
  return l && s.unshift(l), c && s.unshift(c), h && s.unshift(h), s.length > 0 ? "{" + s.join(" ") + "}" : "";
  function v(C, S) {
    return C + (S ? "=" + n + HQ(S, { subset: r }) + n : "");
  }
}
function Lk(t) {
  return Boolean(
    t && t.type === "paragraph" && t.data && t.data.directiveLabel
  );
}
function ite(t) {
  let e = 0;
  return t.type === "containerDirective" ? (PS(t, function(n, r) {
    if (n.type === "containerDirective") {
      let i = r.length, s = 0;
      for (; i--; )
        r[i].type === "containerDirective" && s++;
      s > e && (e = s);
    }
  }), e += 3) : t.type === "leafDirective" ? e = 2 : e = 1, ":".repeat(e);
}
function ote() {
  const t = this.data();
  e("micromarkExtensions", qee()), e("fromMarkdownExtensions", Yee), e("toMarkdownExtensions", Qee);
  function e(n, r) {
    /** @type {unknown[]} */
    // Other extensions
    /* c8 ignore next 2 */
    (t[n] ? t[n] : t[n] = []).push(r);
  }
}
function ate(t, e) {
  return n(t, null, null);
  function n(r, i, s) {
    const l = Object.assign({}, e(r, i, s));
    return "children" in r && (l.children = r.children.map(function(c, h) {
      return n(c, h, r);
    })), l;
  }
}
const ste = (t) => {
  const { type: e } = t;
  return e === "textDirective" || e === "leafDirective" || e === "containerDirective";
}, lte = (t) => {
  if (ste(t)) {
    const { properties: e, tagName: n } = Bw(t.name, t.attributes);
    return Object.assign(Object.assign({}, t), { data: {
      hName: n,
      hProperties: e
    } });
  }
  return t;
}, ute = (t) => ate(t, lte), cte = () => ute, fte = yS().use(cZ).use(ote).use(cte).use(Cee).use(wO).use(WZ, TX).use(HO, nR).use(AR).use(VO, rR).use(xR).use(CR, tR), ane = async (t) => {
  const e = await fte.process(t);
  return String(e);
}, dte = yS().use(qw, eR).use(AR).use(VO, rR).use(xR).use(CR, tR), sne = async (t) => {
  const e = await dte.process(t);
  return String(e);
};
var Gn;
(function(t) {
  t.Attribute = "attribute", t.Pseudo = "pseudo", t.PseudoElement = "pseudo-element", t.Tag = "tag", t.Universal = "universal", t.Adjacent = "adjacent", t.Child = "child", t.Descendant = "descendant", t.Parent = "parent", t.Sibling = "sibling", t.ColumnCombinator = "column-combinator";
})(Gn || (Gn = {}));
var pa;
(function(t) {
  t.Any = "any", t.Element = "element", t.End = "end", t.Equals = "equals", t.Exists = "exists", t.Hyphen = "hyphen", t.Not = "not", t.Start = "start";
})(pa || (pa = {}));
const Ik = /^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/, hte = /\\([\da-f]{1,6}\s?|(\s)|.)/gi, pte = /* @__PURE__ */ new Map([
  [126, pa.Element],
  [94, pa.Start],
  [36, pa.End],
  [42, pa.Any],
  [33, pa.Not],
  [124, pa.Hyphen]
]), mte = /* @__PURE__ */ new Set([
  "has",
  "not",
  "matches",
  "is",
  "where",
  "host",
  "host-context"
]);
function gte(t) {
  switch (t.type) {
    case Gn.Adjacent:
    case Gn.Child:
    case Gn.Descendant:
    case Gn.Parent:
    case Gn.Sibling:
    case Gn.ColumnCombinator:
      return !0;
    default:
      return !1;
  }
}
const yte = /* @__PURE__ */ new Set(["contains", "icontains"]);
function vte(t, e, n) {
  const r = parseInt(e, 16) - 65536;
  return r !== r || n ? e : r < 0 ? (
    // BMP codepoint
    String.fromCharCode(r + 65536)
  ) : (
    // Supplemental Plane codepoint (surrogate pair)
    String.fromCharCode(r >> 10 | 55296, r & 1023 | 56320)
  );
}
function Hm(t) {
  return t.replace(hte, vte);
}
function nC(t) {
  return t === 39 || t === 34;
}
function Pk(t) {
  return t === 32 || t === 9 || t === 10 || t === 12 || t === 13;
}
function Ete(t) {
  const e = [], n = kR(e, `${t}`, 0);
  if (n < t.length)
    throw new Error(`Unmatched selector: ${t.slice(n)}`);
  return e;
}
function kR(t, e, n) {
  let r = [];
  function i(S) {
    const b = e.slice(n + S).match(Ik);
    if (!b)
      throw new Error(`Expected name, found ${e.slice(n)}`);
    const [N] = b;
    return n += S + N.length, Hm(N);
  }
  function s(S) {
    for (n += S; n < e.length && Pk(e.charCodeAt(n)); )
      n++;
  }
  function l() {
    n += 1;
    const S = n;
    let b = 1;
    for (; b > 0 && n < e.length; n++)
      e.charCodeAt(n) === 40 && !c(n) ? b++ : e.charCodeAt(n) === 41 && !c(n) && b--;
    if (b)
      throw new Error("Parenthesis not matched");
    return Hm(e.slice(S, n - 1));
  }
  function c(S) {
    let b = 0;
    for (; e.charCodeAt(--S) === 92; )
      b++;
    return (b & 1) === 1;
  }
  function h() {
    if (r.length > 0 && gte(r[r.length - 1]))
      throw new Error("Did not expect successive traversals.");
  }
  function g(S) {
    if (r.length > 0 && r[r.length - 1].type === Gn.Descendant) {
      r[r.length - 1].type = S;
      return;
    }
    h(), r.push({ type: S });
  }
  function v(S, b) {
    r.push({
      type: Gn.Attribute,
      name: S,
      action: b,
      value: i(1),
      namespace: null,
      ignoreCase: "quirks"
    });
  }
  function C() {
    if (r.length && r[r.length - 1].type === Gn.Descendant && r.pop(), r.length === 0)
      throw new Error("Empty sub-selector");
    t.push(r);
  }
  if (s(0), e.length === n)
    return n;
  e:
    for (; n < e.length; ) {
      const S = e.charCodeAt(n);
      switch (S) {
        case 32:
        case 9:
        case 10:
        case 12:
        case 13: {
          (r.length === 0 || r[0].type !== Gn.Descendant) && (h(), r.push({ type: Gn.Descendant })), s(1);
          break;
        }
        case 62: {
          g(Gn.Child), s(1);
          break;
        }
        case 60: {
          g(Gn.Parent), s(1);
          break;
        }
        case 126: {
          g(Gn.Sibling), s(1);
          break;
        }
        case 43: {
          g(Gn.Adjacent), s(1);
          break;
        }
        case 46: {
          v("class", pa.Element);
          break;
        }
        case 35: {
          v("id", pa.Equals);
          break;
        }
        case 91: {
          s(1);
          let b, N = null;
          e.charCodeAt(n) === 124 ? b = i(1) : e.startsWith("*|", n) ? (N = "*", b = i(2)) : (b = i(0), e.charCodeAt(n) === 124 && e.charCodeAt(n + 1) !== 61 && (N = b, b = i(1))), s(0);
          let O = pa.Exists;
          const L = pte.get(e.charCodeAt(n));
          if (L) {
            if (O = L, e.charCodeAt(n + 1) !== 61)
              throw new Error("Expected `=`");
            s(2);
          } else
            e.charCodeAt(n) === 61 && (O = pa.Equals, s(1));
          let P = "", Y = null;
          if (O !== "exists") {
            if (nC(e.charCodeAt(n))) {
              const ee = e.charCodeAt(n);
              let z = n + 1;
              for (; z < e.length && (e.charCodeAt(z) !== ee || c(z)); )
                z += 1;
              if (e.charCodeAt(z) !== ee)
                throw new Error("Attribute value didn't end");
              P = Hm(e.slice(n + 1, z)), n = z + 1;
            } else {
              const ee = n;
              for (; n < e.length && (!Pk(e.charCodeAt(n)) && e.charCodeAt(n) !== 93 || c(n)); )
                n += 1;
              P = Hm(e.slice(ee, n));
            }
            s(0);
            const oe = e.charCodeAt(n) | 32;
            oe === 115 ? (Y = !1, s(1)) : oe === 105 && (Y = !0, s(1));
          }
          if (e.charCodeAt(n) !== 93)
            throw new Error("Attribute selector didn't terminate");
          n += 1;
          const j = {
            type: Gn.Attribute,
            name: b,
            action: O,
            value: P,
            namespace: N,
            ignoreCase: Y
          };
          r.push(j);
          break;
        }
        case 58: {
          if (e.charCodeAt(n + 1) === 58) {
            r.push({
              type: Gn.PseudoElement,
              name: i(2).toLowerCase(),
              data: e.charCodeAt(n) === 40 ? l() : null
            });
            continue;
          }
          const b = i(1).toLowerCase();
          let N = null;
          if (e.charCodeAt(n) === 40)
            if (mte.has(b)) {
              if (nC(e.charCodeAt(n + 1)))
                throw new Error(`Pseudo-selector ${b} cannot be quoted`);
              if (N = [], n = kR(N, e, n + 1), e.charCodeAt(n) !== 41)
                throw new Error(`Missing closing parenthesis in :${b} (${e})`);
              n += 1;
            } else {
              if (N = l(), yte.has(b)) {
                const O = N.charCodeAt(0);
                O === N.charCodeAt(N.length - 1) && nC(O) && (N = N.slice(1, -1));
              }
              N = Hm(N);
            }
          r.push({ type: Gn.Pseudo, name: b, data: N });
          break;
        }
        case 44: {
          C(), r = [], s(1);
          break;
        }
        default: {
          if (e.startsWith("/*", n)) {
            const O = e.indexOf("*/", n + 2);
            if (O < 0)
              throw new Error("Comment was not terminated");
            n = O + 2, r.length === 0 && s(0);
            break;
          }
          let b = null, N;
          if (S === 42)
            n += 1, N = "*";
          else if (S === 124) {
            if (N = "", e.charCodeAt(n + 1) === 124) {
              g(Gn.ColumnCombinator), s(2);
              break;
            }
          } else if (Ik.test(e.slice(n)))
            N = i(0);
          else
            break e;
          e.charCodeAt(n) === 124 && e.charCodeAt(n + 1) !== 124 && (b = N, e.charCodeAt(n + 1) === 42 ? (N = "*", n += 2) : N = i(1)), r.push(N === "*" ? { type: Gn.Universal, namespace: b } : { type: Gn.Tag, name: N, namespace: b });
        }
      }
    }
  return C(), n;
}
var Tte = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/, Cte = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g, Ste = {
  aacute: "á",
  Aacute: "Á",
  abreve: "ă",
  Abreve: "Ă",
  ac: "∾",
  acd: "∿",
  acE: "∾̳",
  acirc: "â",
  Acirc: "Â",
  acute: "´",
  acy: "а",
  Acy: "А",
  aelig: "æ",
  AElig: "Æ",
  af: "⁡",
  afr: "𝔞",
  Afr: "𝔄",
  agrave: "à",
  Agrave: "À",
  alefsym: "ℵ",
  aleph: "ℵ",
  alpha: "α",
  Alpha: "Α",
  amacr: "ā",
  Amacr: "Ā",
  amalg: "⨿",
  amp: "&",
  AMP: "&",
  and: "∧",
  And: "⩓",
  andand: "⩕",
  andd: "⩜",
  andslope: "⩘",
  andv: "⩚",
  ang: "∠",
  ange: "⦤",
  angle: "∠",
  angmsd: "∡",
  angmsdaa: "⦨",
  angmsdab: "⦩",
  angmsdac: "⦪",
  angmsdad: "⦫",
  angmsdae: "⦬",
  angmsdaf: "⦭",
  angmsdag: "⦮",
  angmsdah: "⦯",
  angrt: "∟",
  angrtvb: "⊾",
  angrtvbd: "⦝",
  angsph: "∢",
  angst: "Å",
  angzarr: "⍼",
  aogon: "ą",
  Aogon: "Ą",
  aopf: "𝕒",
  Aopf: "𝔸",
  ap: "≈",
  apacir: "⩯",
  ape: "≊",
  apE: "⩰",
  apid: "≋",
  apos: "'",
  ApplyFunction: "⁡",
  approx: "≈",
  approxeq: "≊",
  aring: "å",
  Aring: "Å",
  ascr: "𝒶",
  Ascr: "𝒜",
  Assign: "≔",
  ast: "*",
  asymp: "≈",
  asympeq: "≍",
  atilde: "ã",
  Atilde: "Ã",
  auml: "ä",
  Auml: "Ä",
  awconint: "∳",
  awint: "⨑",
  backcong: "≌",
  backepsilon: "϶",
  backprime: "‵",
  backsim: "∽",
  backsimeq: "⋍",
  Backslash: "∖",
  Barv: "⫧",
  barvee: "⊽",
  barwed: "⌅",
  Barwed: "⌆",
  barwedge: "⌅",
  bbrk: "⎵",
  bbrktbrk: "⎶",
  bcong: "≌",
  bcy: "б",
  Bcy: "Б",
  bdquo: "„",
  becaus: "∵",
  because: "∵",
  Because: "∵",
  bemptyv: "⦰",
  bepsi: "϶",
  bernou: "ℬ",
  Bernoullis: "ℬ",
  beta: "β",
  Beta: "Β",
  beth: "ℶ",
  between: "≬",
  bfr: "𝔟",
  Bfr: "𝔅",
  bigcap: "⋂",
  bigcirc: "◯",
  bigcup: "⋃",
  bigodot: "⨀",
  bigoplus: "⨁",
  bigotimes: "⨂",
  bigsqcup: "⨆",
  bigstar: "★",
  bigtriangledown: "▽",
  bigtriangleup: "△",
  biguplus: "⨄",
  bigvee: "⋁",
  bigwedge: "⋀",
  bkarow: "⤍",
  blacklozenge: "⧫",
  blacksquare: "▪",
  blacktriangle: "▴",
  blacktriangledown: "▾",
  blacktriangleleft: "◂",
  blacktriangleright: "▸",
  blank: "␣",
  blk12: "▒",
  blk14: "░",
  blk34: "▓",
  block: "█",
  bne: "=⃥",
  bnequiv: "≡⃥",
  bnot: "⌐",
  bNot: "⫭",
  bopf: "𝕓",
  Bopf: "𝔹",
  bot: "⊥",
  bottom: "⊥",
  bowtie: "⋈",
  boxbox: "⧉",
  boxdl: "┐",
  boxdL: "╕",
  boxDl: "╖",
  boxDL: "╗",
  boxdr: "┌",
  boxdR: "╒",
  boxDr: "╓",
  boxDR: "╔",
  boxh: "─",
  boxH: "═",
  boxhd: "┬",
  boxhD: "╥",
  boxHd: "╤",
  boxHD: "╦",
  boxhu: "┴",
  boxhU: "╨",
  boxHu: "╧",
  boxHU: "╩",
  boxminus: "⊟",
  boxplus: "⊞",
  boxtimes: "⊠",
  boxul: "┘",
  boxuL: "╛",
  boxUl: "╜",
  boxUL: "╝",
  boxur: "└",
  boxuR: "╘",
  boxUr: "╙",
  boxUR: "╚",
  boxv: "│",
  boxV: "║",
  boxvh: "┼",
  boxvH: "╪",
  boxVh: "╫",
  boxVH: "╬",
  boxvl: "┤",
  boxvL: "╡",
  boxVl: "╢",
  boxVL: "╣",
  boxvr: "├",
  boxvR: "╞",
  boxVr: "╟",
  boxVR: "╠",
  bprime: "‵",
  breve: "˘",
  Breve: "˘",
  brvbar: "¦",
  bscr: "𝒷",
  Bscr: "ℬ",
  bsemi: "⁏",
  bsim: "∽",
  bsime: "⋍",
  bsol: "\\",
  bsolb: "⧅",
  bsolhsub: "⟈",
  bull: "•",
  bullet: "•",
  bump: "≎",
  bumpe: "≏",
  bumpE: "⪮",
  bumpeq: "≏",
  Bumpeq: "≎",
  cacute: "ć",
  Cacute: "Ć",
  cap: "∩",
  Cap: "⋒",
  capand: "⩄",
  capbrcup: "⩉",
  capcap: "⩋",
  capcup: "⩇",
  capdot: "⩀",
  CapitalDifferentialD: "ⅅ",
  caps: "∩︀",
  caret: "⁁",
  caron: "ˇ",
  Cayleys: "ℭ",
  ccaps: "⩍",
  ccaron: "č",
  Ccaron: "Č",
  ccedil: "ç",
  Ccedil: "Ç",
  ccirc: "ĉ",
  Ccirc: "Ĉ",
  Cconint: "∰",
  ccups: "⩌",
  ccupssm: "⩐",
  cdot: "ċ",
  Cdot: "Ċ",
  cedil: "¸",
  Cedilla: "¸",
  cemptyv: "⦲",
  cent: "¢",
  centerdot: "·",
  CenterDot: "·",
  cfr: "𝔠",
  Cfr: "ℭ",
  chcy: "ч",
  CHcy: "Ч",
  check: "✓",
  checkmark: "✓",
  chi: "χ",
  Chi: "Χ",
  cir: "○",
  circ: "ˆ",
  circeq: "≗",
  circlearrowleft: "↺",
  circlearrowright: "↻",
  circledast: "⊛",
  circledcirc: "⊚",
  circleddash: "⊝",
  CircleDot: "⊙",
  circledR: "®",
  circledS: "Ⓢ",
  CircleMinus: "⊖",
  CirclePlus: "⊕",
  CircleTimes: "⊗",
  cire: "≗",
  cirE: "⧃",
  cirfnint: "⨐",
  cirmid: "⫯",
  cirscir: "⧂",
  ClockwiseContourIntegral: "∲",
  CloseCurlyDoubleQuote: "”",
  CloseCurlyQuote: "’",
  clubs: "♣",
  clubsuit: "♣",
  colon: ":",
  Colon: "∷",
  colone: "≔",
  Colone: "⩴",
  coloneq: "≔",
  comma: ",",
  commat: "@",
  comp: "∁",
  compfn: "∘",
  complement: "∁",
  complexes: "ℂ",
  cong: "≅",
  congdot: "⩭",
  Congruent: "≡",
  conint: "∮",
  Conint: "∯",
  ContourIntegral: "∮",
  copf: "𝕔",
  Copf: "ℂ",
  coprod: "∐",
  Coproduct: "∐",
  copy: "©",
  COPY: "©",
  copysr: "℗",
  CounterClockwiseContourIntegral: "∳",
  crarr: "↵",
  cross: "✗",
  Cross: "⨯",
  cscr: "𝒸",
  Cscr: "𝒞",
  csub: "⫏",
  csube: "⫑",
  csup: "⫐",
  csupe: "⫒",
  ctdot: "⋯",
  cudarrl: "⤸",
  cudarrr: "⤵",
  cuepr: "⋞",
  cuesc: "⋟",
  cularr: "↶",
  cularrp: "⤽",
  cup: "∪",
  Cup: "⋓",
  cupbrcap: "⩈",
  cupcap: "⩆",
  CupCap: "≍",
  cupcup: "⩊",
  cupdot: "⊍",
  cupor: "⩅",
  cups: "∪︀",
  curarr: "↷",
  curarrm: "⤼",
  curlyeqprec: "⋞",
  curlyeqsucc: "⋟",
  curlyvee: "⋎",
  curlywedge: "⋏",
  curren: "¤",
  curvearrowleft: "↶",
  curvearrowright: "↷",
  cuvee: "⋎",
  cuwed: "⋏",
  cwconint: "∲",
  cwint: "∱",
  cylcty: "⌭",
  dagger: "†",
  Dagger: "‡",
  daleth: "ℸ",
  darr: "↓",
  dArr: "⇓",
  Darr: "↡",
  dash: "‐",
  dashv: "⊣",
  Dashv: "⫤",
  dbkarow: "⤏",
  dblac: "˝",
  dcaron: "ď",
  Dcaron: "Ď",
  dcy: "д",
  Dcy: "Д",
  dd: "ⅆ",
  DD: "ⅅ",
  ddagger: "‡",
  ddarr: "⇊",
  DDotrahd: "⤑",
  ddotseq: "⩷",
  deg: "°",
  Del: "∇",
  delta: "δ",
  Delta: "Δ",
  demptyv: "⦱",
  dfisht: "⥿",
  dfr: "𝔡",
  Dfr: "𝔇",
  dHar: "⥥",
  dharl: "⇃",
  dharr: "⇂",
  DiacriticalAcute: "´",
  DiacriticalDot: "˙",
  DiacriticalDoubleAcute: "˝",
  DiacriticalGrave: "`",
  DiacriticalTilde: "˜",
  diam: "⋄",
  diamond: "⋄",
  Diamond: "⋄",
  diamondsuit: "♦",
  diams: "♦",
  die: "¨",
  DifferentialD: "ⅆ",
  digamma: "ϝ",
  disin: "⋲",
  div: "÷",
  divide: "÷",
  divideontimes: "⋇",
  divonx: "⋇",
  djcy: "ђ",
  DJcy: "Ђ",
  dlcorn: "⌞",
  dlcrop: "⌍",
  dollar: "$",
  dopf: "𝕕",
  Dopf: "𝔻",
  dot: "˙",
  Dot: "¨",
  DotDot: "⃜",
  doteq: "≐",
  doteqdot: "≑",
  DotEqual: "≐",
  dotminus: "∸",
  dotplus: "∔",
  dotsquare: "⊡",
  doublebarwedge: "⌆",
  DoubleContourIntegral: "∯",
  DoubleDot: "¨",
  DoubleDownArrow: "⇓",
  DoubleLeftArrow: "⇐",
  DoubleLeftRightArrow: "⇔",
  DoubleLeftTee: "⫤",
  DoubleLongLeftArrow: "⟸",
  DoubleLongLeftRightArrow: "⟺",
  DoubleLongRightArrow: "⟹",
  DoubleRightArrow: "⇒",
  DoubleRightTee: "⊨",
  DoubleUpArrow: "⇑",
  DoubleUpDownArrow: "⇕",
  DoubleVerticalBar: "∥",
  downarrow: "↓",
  Downarrow: "⇓",
  DownArrow: "↓",
  DownArrowBar: "⤓",
  DownArrowUpArrow: "⇵",
  DownBreve: "̑",
  downdownarrows: "⇊",
  downharpoonleft: "⇃",
  downharpoonright: "⇂",
  DownLeftRightVector: "⥐",
  DownLeftTeeVector: "⥞",
  DownLeftVector: "↽",
  DownLeftVectorBar: "⥖",
  DownRightTeeVector: "⥟",
  DownRightVector: "⇁",
  DownRightVectorBar: "⥗",
  DownTee: "⊤",
  DownTeeArrow: "↧",
  drbkarow: "⤐",
  drcorn: "⌟",
  drcrop: "⌌",
  dscr: "𝒹",
  Dscr: "𝒟",
  dscy: "ѕ",
  DScy: "Ѕ",
  dsol: "⧶",
  dstrok: "đ",
  Dstrok: "Đ",
  dtdot: "⋱",
  dtri: "▿",
  dtrif: "▾",
  duarr: "⇵",
  duhar: "⥯",
  dwangle: "⦦",
  dzcy: "џ",
  DZcy: "Џ",
  dzigrarr: "⟿",
  eacute: "é",
  Eacute: "É",
  easter: "⩮",
  ecaron: "ě",
  Ecaron: "Ě",
  ecir: "≖",
  ecirc: "ê",
  Ecirc: "Ê",
  ecolon: "≕",
  ecy: "э",
  Ecy: "Э",
  eDDot: "⩷",
  edot: "ė",
  eDot: "≑",
  Edot: "Ė",
  ee: "ⅇ",
  efDot: "≒",
  efr: "𝔢",
  Efr: "𝔈",
  eg: "⪚",
  egrave: "è",
  Egrave: "È",
  egs: "⪖",
  egsdot: "⪘",
  el: "⪙",
  Element: "∈",
  elinters: "⏧",
  ell: "ℓ",
  els: "⪕",
  elsdot: "⪗",
  emacr: "ē",
  Emacr: "Ē",
  empty: "∅",
  emptyset: "∅",
  EmptySmallSquare: "◻",
  emptyv: "∅",
  EmptyVerySmallSquare: "▫",
  emsp: " ",
  emsp13: " ",
  emsp14: " ",
  eng: "ŋ",
  ENG: "Ŋ",
  ensp: " ",
  eogon: "ę",
  Eogon: "Ę",
  eopf: "𝕖",
  Eopf: "𝔼",
  epar: "⋕",
  eparsl: "⧣",
  eplus: "⩱",
  epsi: "ε",
  epsilon: "ε",
  Epsilon: "Ε",
  epsiv: "ϵ",
  eqcirc: "≖",
  eqcolon: "≕",
  eqsim: "≂",
  eqslantgtr: "⪖",
  eqslantless: "⪕",
  Equal: "⩵",
  equals: "=",
  EqualTilde: "≂",
  equest: "≟",
  Equilibrium: "⇌",
  equiv: "≡",
  equivDD: "⩸",
  eqvparsl: "⧥",
  erarr: "⥱",
  erDot: "≓",
  escr: "ℯ",
  Escr: "ℰ",
  esdot: "≐",
  esim: "≂",
  Esim: "⩳",
  eta: "η",
  Eta: "Η",
  eth: "ð",
  ETH: "Ð",
  euml: "ë",
  Euml: "Ë",
  euro: "€",
  excl: "!",
  exist: "∃",
  Exists: "∃",
  expectation: "ℰ",
  exponentiale: "ⅇ",
  ExponentialE: "ⅇ",
  fallingdotseq: "≒",
  fcy: "ф",
  Fcy: "Ф",
  female: "♀",
  ffilig: "ﬃ",
  fflig: "ﬀ",
  ffllig: "ﬄ",
  ffr: "𝔣",
  Ffr: "𝔉",
  filig: "ﬁ",
  FilledSmallSquare: "◼",
  FilledVerySmallSquare: "▪",
  fjlig: "fj",
  flat: "♭",
  fllig: "ﬂ",
  fltns: "▱",
  fnof: "ƒ",
  fopf: "𝕗",
  Fopf: "𝔽",
  forall: "∀",
  ForAll: "∀",
  fork: "⋔",
  forkv: "⫙",
  Fouriertrf: "ℱ",
  fpartint: "⨍",
  frac12: "½",
  frac13: "⅓",
  frac14: "¼",
  frac15: "⅕",
  frac16: "⅙",
  frac18: "⅛",
  frac23: "⅔",
  frac25: "⅖",
  frac34: "¾",
  frac35: "⅗",
  frac38: "⅜",
  frac45: "⅘",
  frac56: "⅚",
  frac58: "⅝",
  frac78: "⅞",
  frasl: "⁄",
  frown: "⌢",
  fscr: "𝒻",
  Fscr: "ℱ",
  gacute: "ǵ",
  gamma: "γ",
  Gamma: "Γ",
  gammad: "ϝ",
  Gammad: "Ϝ",
  gap: "⪆",
  gbreve: "ğ",
  Gbreve: "Ğ",
  Gcedil: "Ģ",
  gcirc: "ĝ",
  Gcirc: "Ĝ",
  gcy: "г",
  Gcy: "Г",
  gdot: "ġ",
  Gdot: "Ġ",
  ge: "≥",
  gE: "≧",
  gel: "⋛",
  gEl: "⪌",
  geq: "≥",
  geqq: "≧",
  geqslant: "⩾",
  ges: "⩾",
  gescc: "⪩",
  gesdot: "⪀",
  gesdoto: "⪂",
  gesdotol: "⪄",
  gesl: "⋛︀",
  gesles: "⪔",
  gfr: "𝔤",
  Gfr: "𝔊",
  gg: "≫",
  Gg: "⋙",
  ggg: "⋙",
  gimel: "ℷ",
  gjcy: "ѓ",
  GJcy: "Ѓ",
  gl: "≷",
  gla: "⪥",
  glE: "⪒",
  glj: "⪤",
  gnap: "⪊",
  gnapprox: "⪊",
  gne: "⪈",
  gnE: "≩",
  gneq: "⪈",
  gneqq: "≩",
  gnsim: "⋧",
  gopf: "𝕘",
  Gopf: "𝔾",
  grave: "`",
  GreaterEqual: "≥",
  GreaterEqualLess: "⋛",
  GreaterFullEqual: "≧",
  GreaterGreater: "⪢",
  GreaterLess: "≷",
  GreaterSlantEqual: "⩾",
  GreaterTilde: "≳",
  gscr: "ℊ",
  Gscr: "𝒢",
  gsim: "≳",
  gsime: "⪎",
  gsiml: "⪐",
  gt: ">",
  Gt: "≫",
  GT: ">",
  gtcc: "⪧",
  gtcir: "⩺",
  gtdot: "⋗",
  gtlPar: "⦕",
  gtquest: "⩼",
  gtrapprox: "⪆",
  gtrarr: "⥸",
  gtrdot: "⋗",
  gtreqless: "⋛",
  gtreqqless: "⪌",
  gtrless: "≷",
  gtrsim: "≳",
  gvertneqq: "≩︀",
  gvnE: "≩︀",
  Hacek: "ˇ",
  hairsp: " ",
  half: "½",
  hamilt: "ℋ",
  hardcy: "ъ",
  HARDcy: "Ъ",
  harr: "↔",
  hArr: "⇔",
  harrcir: "⥈",
  harrw: "↭",
  Hat: "^",
  hbar: "ℏ",
  hcirc: "ĥ",
  Hcirc: "Ĥ",
  hearts: "♥",
  heartsuit: "♥",
  hellip: "…",
  hercon: "⊹",
  hfr: "𝔥",
  Hfr: "ℌ",
  HilbertSpace: "ℋ",
  hksearow: "⤥",
  hkswarow: "⤦",
  hoarr: "⇿",
  homtht: "∻",
  hookleftarrow: "↩",
  hookrightarrow: "↪",
  hopf: "𝕙",
  Hopf: "ℍ",
  horbar: "―",
  HorizontalLine: "─",
  hscr: "𝒽",
  Hscr: "ℋ",
  hslash: "ℏ",
  hstrok: "ħ",
  Hstrok: "Ħ",
  HumpDownHump: "≎",
  HumpEqual: "≏",
  hybull: "⁃",
  hyphen: "‐",
  iacute: "í",
  Iacute: "Í",
  ic: "⁣",
  icirc: "î",
  Icirc: "Î",
  icy: "и",
  Icy: "И",
  Idot: "İ",
  iecy: "е",
  IEcy: "Е",
  iexcl: "¡",
  iff: "⇔",
  ifr: "𝔦",
  Ifr: "ℑ",
  igrave: "ì",
  Igrave: "Ì",
  ii: "ⅈ",
  iiiint: "⨌",
  iiint: "∭",
  iinfin: "⧜",
  iiota: "℩",
  ijlig: "ĳ",
  IJlig: "Ĳ",
  Im: "ℑ",
  imacr: "ī",
  Imacr: "Ī",
  image: "ℑ",
  ImaginaryI: "ⅈ",
  imagline: "ℐ",
  imagpart: "ℑ",
  imath: "ı",
  imof: "⊷",
  imped: "Ƶ",
  Implies: "⇒",
  in: "∈",
  incare: "℅",
  infin: "∞",
  infintie: "⧝",
  inodot: "ı",
  int: "∫",
  Int: "∬",
  intcal: "⊺",
  integers: "ℤ",
  Integral: "∫",
  intercal: "⊺",
  Intersection: "⋂",
  intlarhk: "⨗",
  intprod: "⨼",
  InvisibleComma: "⁣",
  InvisibleTimes: "⁢",
  iocy: "ё",
  IOcy: "Ё",
  iogon: "į",
  Iogon: "Į",
  iopf: "𝕚",
  Iopf: "𝕀",
  iota: "ι",
  Iota: "Ι",
  iprod: "⨼",
  iquest: "¿",
  iscr: "𝒾",
  Iscr: "ℐ",
  isin: "∈",
  isindot: "⋵",
  isinE: "⋹",
  isins: "⋴",
  isinsv: "⋳",
  isinv: "∈",
  it: "⁢",
  itilde: "ĩ",
  Itilde: "Ĩ",
  iukcy: "і",
  Iukcy: "І",
  iuml: "ï",
  Iuml: "Ï",
  jcirc: "ĵ",
  Jcirc: "Ĵ",
  jcy: "й",
  Jcy: "Й",
  jfr: "𝔧",
  Jfr: "𝔍",
  jmath: "ȷ",
  jopf: "𝕛",
  Jopf: "𝕁",
  jscr: "𝒿",
  Jscr: "𝒥",
  jsercy: "ј",
  Jsercy: "Ј",
  jukcy: "є",
  Jukcy: "Є",
  kappa: "κ",
  Kappa: "Κ",
  kappav: "ϰ",
  kcedil: "ķ",
  Kcedil: "Ķ",
  kcy: "к",
  Kcy: "К",
  kfr: "𝔨",
  Kfr: "𝔎",
  kgreen: "ĸ",
  khcy: "х",
  KHcy: "Х",
  kjcy: "ќ",
  KJcy: "Ќ",
  kopf: "𝕜",
  Kopf: "𝕂",
  kscr: "𝓀",
  Kscr: "𝒦",
  lAarr: "⇚",
  lacute: "ĺ",
  Lacute: "Ĺ",
  laemptyv: "⦴",
  lagran: "ℒ",
  lambda: "λ",
  Lambda: "Λ",
  lang: "⟨",
  Lang: "⟪",
  langd: "⦑",
  langle: "⟨",
  lap: "⪅",
  Laplacetrf: "ℒ",
  laquo: "«",
  larr: "←",
  lArr: "⇐",
  Larr: "↞",
  larrb: "⇤",
  larrbfs: "⤟",
  larrfs: "⤝",
  larrhk: "↩",
  larrlp: "↫",
  larrpl: "⤹",
  larrsim: "⥳",
  larrtl: "↢",
  lat: "⪫",
  latail: "⤙",
  lAtail: "⤛",
  late: "⪭",
  lates: "⪭︀",
  lbarr: "⤌",
  lBarr: "⤎",
  lbbrk: "❲",
  lbrace: "{",
  lbrack: "[",
  lbrke: "⦋",
  lbrksld: "⦏",
  lbrkslu: "⦍",
  lcaron: "ľ",
  Lcaron: "Ľ",
  lcedil: "ļ",
  Lcedil: "Ļ",
  lceil: "⌈",
  lcub: "{",
  lcy: "л",
  Lcy: "Л",
  ldca: "⤶",
  ldquo: "“",
  ldquor: "„",
  ldrdhar: "⥧",
  ldrushar: "⥋",
  ldsh: "↲",
  le: "≤",
  lE: "≦",
  LeftAngleBracket: "⟨",
  leftarrow: "←",
  Leftarrow: "⇐",
  LeftArrow: "←",
  LeftArrowBar: "⇤",
  LeftArrowRightArrow: "⇆",
  leftarrowtail: "↢",
  LeftCeiling: "⌈",
  LeftDoubleBracket: "⟦",
  LeftDownTeeVector: "⥡",
  LeftDownVector: "⇃",
  LeftDownVectorBar: "⥙",
  LeftFloor: "⌊",
  leftharpoondown: "↽",
  leftharpoonup: "↼",
  leftleftarrows: "⇇",
  leftrightarrow: "↔",
  Leftrightarrow: "⇔",
  LeftRightArrow: "↔",
  leftrightarrows: "⇆",
  leftrightharpoons: "⇋",
  leftrightsquigarrow: "↭",
  LeftRightVector: "⥎",
  LeftTee: "⊣",
  LeftTeeArrow: "↤",
  LeftTeeVector: "⥚",
  leftthreetimes: "⋋",
  LeftTriangle: "⊲",
  LeftTriangleBar: "⧏",
  LeftTriangleEqual: "⊴",
  LeftUpDownVector: "⥑",
  LeftUpTeeVector: "⥠",
  LeftUpVector: "↿",
  LeftUpVectorBar: "⥘",
  LeftVector: "↼",
  LeftVectorBar: "⥒",
  leg: "⋚",
  lEg: "⪋",
  leq: "≤",
  leqq: "≦",
  leqslant: "⩽",
  les: "⩽",
  lescc: "⪨",
  lesdot: "⩿",
  lesdoto: "⪁",
  lesdotor: "⪃",
  lesg: "⋚︀",
  lesges: "⪓",
  lessapprox: "⪅",
  lessdot: "⋖",
  lesseqgtr: "⋚",
  lesseqqgtr: "⪋",
  LessEqualGreater: "⋚",
  LessFullEqual: "≦",
  LessGreater: "≶",
  lessgtr: "≶",
  LessLess: "⪡",
  lesssim: "≲",
  LessSlantEqual: "⩽",
  LessTilde: "≲",
  lfisht: "⥼",
  lfloor: "⌊",
  lfr: "𝔩",
  Lfr: "𝔏",
  lg: "≶",
  lgE: "⪑",
  lHar: "⥢",
  lhard: "↽",
  lharu: "↼",
  lharul: "⥪",
  lhblk: "▄",
  ljcy: "љ",
  LJcy: "Љ",
  ll: "≪",
  Ll: "⋘",
  llarr: "⇇",
  llcorner: "⌞",
  Lleftarrow: "⇚",
  llhard: "⥫",
  lltri: "◺",
  lmidot: "ŀ",
  Lmidot: "Ŀ",
  lmoust: "⎰",
  lmoustache: "⎰",
  lnap: "⪉",
  lnapprox: "⪉",
  lne: "⪇",
  lnE: "≨",
  lneq: "⪇",
  lneqq: "≨",
  lnsim: "⋦",
  loang: "⟬",
  loarr: "⇽",
  lobrk: "⟦",
  longleftarrow: "⟵",
  Longleftarrow: "⟸",
  LongLeftArrow: "⟵",
  longleftrightarrow: "⟷",
  Longleftrightarrow: "⟺",
  LongLeftRightArrow: "⟷",
  longmapsto: "⟼",
  longrightarrow: "⟶",
  Longrightarrow: "⟹",
  LongRightArrow: "⟶",
  looparrowleft: "↫",
  looparrowright: "↬",
  lopar: "⦅",
  lopf: "𝕝",
  Lopf: "𝕃",
  loplus: "⨭",
  lotimes: "⨴",
  lowast: "∗",
  lowbar: "_",
  LowerLeftArrow: "↙",
  LowerRightArrow: "↘",
  loz: "◊",
  lozenge: "◊",
  lozf: "⧫",
  lpar: "(",
  lparlt: "⦓",
  lrarr: "⇆",
  lrcorner: "⌟",
  lrhar: "⇋",
  lrhard: "⥭",
  lrm: "‎",
  lrtri: "⊿",
  lsaquo: "‹",
  lscr: "𝓁",
  Lscr: "ℒ",
  lsh: "↰",
  Lsh: "↰",
  lsim: "≲",
  lsime: "⪍",
  lsimg: "⪏",
  lsqb: "[",
  lsquo: "‘",
  lsquor: "‚",
  lstrok: "ł",
  Lstrok: "Ł",
  lt: "<",
  Lt: "≪",
  LT: "<",
  ltcc: "⪦",
  ltcir: "⩹",
  ltdot: "⋖",
  lthree: "⋋",
  ltimes: "⋉",
  ltlarr: "⥶",
  ltquest: "⩻",
  ltri: "◃",
  ltrie: "⊴",
  ltrif: "◂",
  ltrPar: "⦖",
  lurdshar: "⥊",
  luruhar: "⥦",
  lvertneqq: "≨︀",
  lvnE: "≨︀",
  macr: "¯",
  male: "♂",
  malt: "✠",
  maltese: "✠",
  map: "↦",
  Map: "⤅",
  mapsto: "↦",
  mapstodown: "↧",
  mapstoleft: "↤",
  mapstoup: "↥",
  marker: "▮",
  mcomma: "⨩",
  mcy: "м",
  Mcy: "М",
  mdash: "—",
  mDDot: "∺",
  measuredangle: "∡",
  MediumSpace: " ",
  Mellintrf: "ℳ",
  mfr: "𝔪",
  Mfr: "𝔐",
  mho: "℧",
  micro: "µ",
  mid: "∣",
  midast: "*",
  midcir: "⫰",
  middot: "·",
  minus: "−",
  minusb: "⊟",
  minusd: "∸",
  minusdu: "⨪",
  MinusPlus: "∓",
  mlcp: "⫛",
  mldr: "…",
  mnplus: "∓",
  models: "⊧",
  mopf: "𝕞",
  Mopf: "𝕄",
  mp: "∓",
  mscr: "𝓂",
  Mscr: "ℳ",
  mstpos: "∾",
  mu: "μ",
  Mu: "Μ",
  multimap: "⊸",
  mumap: "⊸",
  nabla: "∇",
  nacute: "ń",
  Nacute: "Ń",
  nang: "∠⃒",
  nap: "≉",
  napE: "⩰̸",
  napid: "≋̸",
  napos: "ŉ",
  napprox: "≉",
  natur: "♮",
  natural: "♮",
  naturals: "ℕ",
  nbsp: " ",
  nbump: "≎̸",
  nbumpe: "≏̸",
  ncap: "⩃",
  ncaron: "ň",
  Ncaron: "Ň",
  ncedil: "ņ",
  Ncedil: "Ņ",
  ncong: "≇",
  ncongdot: "⩭̸",
  ncup: "⩂",
  ncy: "н",
  Ncy: "Н",
  ndash: "–",
  ne: "≠",
  nearhk: "⤤",
  nearr: "↗",
  neArr: "⇗",
  nearrow: "↗",
  nedot: "≐̸",
  NegativeMediumSpace: "​",
  NegativeThickSpace: "​",
  NegativeThinSpace: "​",
  NegativeVeryThinSpace: "​",
  nequiv: "≢",
  nesear: "⤨",
  nesim: "≂̸",
  NestedGreaterGreater: "≫",
  NestedLessLess: "≪",
  NewLine: `
`,
  nexist: "∄",
  nexists: "∄",
  nfr: "𝔫",
  Nfr: "𝔑",
  nge: "≱",
  ngE: "≧̸",
  ngeq: "≱",
  ngeqq: "≧̸",
  ngeqslant: "⩾̸",
  nges: "⩾̸",
  nGg: "⋙̸",
  ngsim: "≵",
  ngt: "≯",
  nGt: "≫⃒",
  ngtr: "≯",
  nGtv: "≫̸",
  nharr: "↮",
  nhArr: "⇎",
  nhpar: "⫲",
  ni: "∋",
  nis: "⋼",
  nisd: "⋺",
  niv: "∋",
  njcy: "њ",
  NJcy: "Њ",
  nlarr: "↚",
  nlArr: "⇍",
  nldr: "‥",
  nle: "≰",
  nlE: "≦̸",
  nleftarrow: "↚",
  nLeftarrow: "⇍",
  nleftrightarrow: "↮",
  nLeftrightarrow: "⇎",
  nleq: "≰",
  nleqq: "≦̸",
  nleqslant: "⩽̸",
  nles: "⩽̸",
  nless: "≮",
  nLl: "⋘̸",
  nlsim: "≴",
  nlt: "≮",
  nLt: "≪⃒",
  nltri: "⋪",
  nltrie: "⋬",
  nLtv: "≪̸",
  nmid: "∤",
  NoBreak: "⁠",
  NonBreakingSpace: " ",
  nopf: "𝕟",
  Nopf: "ℕ",
  not: "¬",
  Not: "⫬",
  NotCongruent: "≢",
  NotCupCap: "≭",
  NotDoubleVerticalBar: "∦",
  NotElement: "∉",
  NotEqual: "≠",
  NotEqualTilde: "≂̸",
  NotExists: "∄",
  NotGreater: "≯",
  NotGreaterEqual: "≱",
  NotGreaterFullEqual: "≧̸",
  NotGreaterGreater: "≫̸",
  NotGreaterLess: "≹",
  NotGreaterSlantEqual: "⩾̸",
  NotGreaterTilde: "≵",
  NotHumpDownHump: "≎̸",
  NotHumpEqual: "≏̸",
  notin: "∉",
  notindot: "⋵̸",
  notinE: "⋹̸",
  notinva: "∉",
  notinvb: "⋷",
  notinvc: "⋶",
  NotLeftTriangle: "⋪",
  NotLeftTriangleBar: "⧏̸",
  NotLeftTriangleEqual: "⋬",
  NotLess: "≮",
  NotLessEqual: "≰",
  NotLessGreater: "≸",
  NotLessLess: "≪̸",
  NotLessSlantEqual: "⩽̸",
  NotLessTilde: "≴",
  NotNestedGreaterGreater: "⪢̸",
  NotNestedLessLess: "⪡̸",
  notni: "∌",
  notniva: "∌",
  notnivb: "⋾",
  notnivc: "⋽",
  NotPrecedes: "⊀",
  NotPrecedesEqual: "⪯̸",
  NotPrecedesSlantEqual: "⋠",
  NotReverseElement: "∌",
  NotRightTriangle: "⋫",
  NotRightTriangleBar: "⧐̸",
  NotRightTriangleEqual: "⋭",
  NotSquareSubset: "⊏̸",
  NotSquareSubsetEqual: "⋢",
  NotSquareSuperset: "⊐̸",
  NotSquareSupersetEqual: "⋣",
  NotSubset: "⊂⃒",
  NotSubsetEqual: "⊈",
  NotSucceeds: "⊁",
  NotSucceedsEqual: "⪰̸",
  NotSucceedsSlantEqual: "⋡",
  NotSucceedsTilde: "≿̸",
  NotSuperset: "⊃⃒",
  NotSupersetEqual: "⊉",
  NotTilde: "≁",
  NotTildeEqual: "≄",
  NotTildeFullEqual: "≇",
  NotTildeTilde: "≉",
  NotVerticalBar: "∤",
  npar: "∦",
  nparallel: "∦",
  nparsl: "⫽⃥",
  npart: "∂̸",
  npolint: "⨔",
  npr: "⊀",
  nprcue: "⋠",
  npre: "⪯̸",
  nprec: "⊀",
  npreceq: "⪯̸",
  nrarr: "↛",
  nrArr: "⇏",
  nrarrc: "⤳̸",
  nrarrw: "↝̸",
  nrightarrow: "↛",
  nRightarrow: "⇏",
  nrtri: "⋫",
  nrtrie: "⋭",
  nsc: "⊁",
  nsccue: "⋡",
  nsce: "⪰̸",
  nscr: "𝓃",
  Nscr: "𝒩",
  nshortmid: "∤",
  nshortparallel: "∦",
  nsim: "≁",
  nsime: "≄",
  nsimeq: "≄",
  nsmid: "∤",
  nspar: "∦",
  nsqsube: "⋢",
  nsqsupe: "⋣",
  nsub: "⊄",
  nsube: "⊈",
  nsubE: "⫅̸",
  nsubset: "⊂⃒",
  nsubseteq: "⊈",
  nsubseteqq: "⫅̸",
  nsucc: "⊁",
  nsucceq: "⪰̸",
  nsup: "⊅",
  nsupe: "⊉",
  nsupE: "⫆̸",
  nsupset: "⊃⃒",
  nsupseteq: "⊉",
  nsupseteqq: "⫆̸",
  ntgl: "≹",
  ntilde: "ñ",
  Ntilde: "Ñ",
  ntlg: "≸",
  ntriangleleft: "⋪",
  ntrianglelefteq: "⋬",
  ntriangleright: "⋫",
  ntrianglerighteq: "⋭",
  nu: "ν",
  Nu: "Ν",
  num: "#",
  numero: "№",
  numsp: " ",
  nvap: "≍⃒",
  nvdash: "⊬",
  nvDash: "⊭",
  nVdash: "⊮",
  nVDash: "⊯",
  nvge: "≥⃒",
  nvgt: ">⃒",
  nvHarr: "⤄",
  nvinfin: "⧞",
  nvlArr: "⤂",
  nvle: "≤⃒",
  nvlt: "<⃒",
  nvltrie: "⊴⃒",
  nvrArr: "⤃",
  nvrtrie: "⊵⃒",
  nvsim: "∼⃒",
  nwarhk: "⤣",
  nwarr: "↖",
  nwArr: "⇖",
  nwarrow: "↖",
  nwnear: "⤧",
  oacute: "ó",
  Oacute: "Ó",
  oast: "⊛",
  ocir: "⊚",
  ocirc: "ô",
  Ocirc: "Ô",
  ocy: "о",
  Ocy: "О",
  odash: "⊝",
  odblac: "ő",
  Odblac: "Ő",
  odiv: "⨸",
  odot: "⊙",
  odsold: "⦼",
  oelig: "œ",
  OElig: "Œ",
  ofcir: "⦿",
  ofr: "𝔬",
  Ofr: "𝔒",
  ogon: "˛",
  ograve: "ò",
  Ograve: "Ò",
  ogt: "⧁",
  ohbar: "⦵",
  ohm: "Ω",
  oint: "∮",
  olarr: "↺",
  olcir: "⦾",
  olcross: "⦻",
  oline: "‾",
  olt: "⧀",
  omacr: "ō",
  Omacr: "Ō",
  omega: "ω",
  Omega: "Ω",
  omicron: "ο",
  Omicron: "Ο",
  omid: "⦶",
  ominus: "⊖",
  oopf: "𝕠",
  Oopf: "𝕆",
  opar: "⦷",
  OpenCurlyDoubleQuote: "“",
  OpenCurlyQuote: "‘",
  operp: "⦹",
  oplus: "⊕",
  or: "∨",
  Or: "⩔",
  orarr: "↻",
  ord: "⩝",
  order: "ℴ",
  orderof: "ℴ",
  ordf: "ª",
  ordm: "º",
  origof: "⊶",
  oror: "⩖",
  orslope: "⩗",
  orv: "⩛",
  oS: "Ⓢ",
  oscr: "ℴ",
  Oscr: "𝒪",
  oslash: "ø",
  Oslash: "Ø",
  osol: "⊘",
  otilde: "õ",
  Otilde: "Õ",
  otimes: "⊗",
  Otimes: "⨷",
  otimesas: "⨶",
  ouml: "ö",
  Ouml: "Ö",
  ovbar: "⌽",
  OverBar: "‾",
  OverBrace: "⏞",
  OverBracket: "⎴",
  OverParenthesis: "⏜",
  par: "∥",
  para: "¶",
  parallel: "∥",
  parsim: "⫳",
  parsl: "⫽",
  part: "∂",
  PartialD: "∂",
  pcy: "п",
  Pcy: "П",
  percnt: "%",
  period: ".",
  permil: "‰",
  perp: "⊥",
  pertenk: "‱",
  pfr: "𝔭",
  Pfr: "𝔓",
  phi: "φ",
  Phi: "Φ",
  phiv: "ϕ",
  phmmat: "ℳ",
  phone: "☎",
  pi: "π",
  Pi: "Π",
  pitchfork: "⋔",
  piv: "ϖ",
  planck: "ℏ",
  planckh: "ℎ",
  plankv: "ℏ",
  plus: "+",
  plusacir: "⨣",
  plusb: "⊞",
  pluscir: "⨢",
  plusdo: "∔",
  plusdu: "⨥",
  pluse: "⩲",
  PlusMinus: "±",
  plusmn: "±",
  plussim: "⨦",
  plustwo: "⨧",
  pm: "±",
  Poincareplane: "ℌ",
  pointint: "⨕",
  popf: "𝕡",
  Popf: "ℙ",
  pound: "£",
  pr: "≺",
  Pr: "⪻",
  prap: "⪷",
  prcue: "≼",
  pre: "⪯",
  prE: "⪳",
  prec: "≺",
  precapprox: "⪷",
  preccurlyeq: "≼",
  Precedes: "≺",
  PrecedesEqual: "⪯",
  PrecedesSlantEqual: "≼",
  PrecedesTilde: "≾",
  preceq: "⪯",
  precnapprox: "⪹",
  precneqq: "⪵",
  precnsim: "⋨",
  precsim: "≾",
  prime: "′",
  Prime: "″",
  primes: "ℙ",
  prnap: "⪹",
  prnE: "⪵",
  prnsim: "⋨",
  prod: "∏",
  Product: "∏",
  profalar: "⌮",
  profline: "⌒",
  profsurf: "⌓",
  prop: "∝",
  Proportion: "∷",
  Proportional: "∝",
  propto: "∝",
  prsim: "≾",
  prurel: "⊰",
  pscr: "𝓅",
  Pscr: "𝒫",
  psi: "ψ",
  Psi: "Ψ",
  puncsp: " ",
  qfr: "𝔮",
  Qfr: "𝔔",
  qint: "⨌",
  qopf: "𝕢",
  Qopf: "ℚ",
  qprime: "⁗",
  qscr: "𝓆",
  Qscr: "𝒬",
  quaternions: "ℍ",
  quatint: "⨖",
  quest: "?",
  questeq: "≟",
  quot: '"',
  QUOT: '"',
  rAarr: "⇛",
  race: "∽̱",
  racute: "ŕ",
  Racute: "Ŕ",
  radic: "√",
  raemptyv: "⦳",
  rang: "⟩",
  Rang: "⟫",
  rangd: "⦒",
  range: "⦥",
  rangle: "⟩",
  raquo: "»",
  rarr: "→",
  rArr: "⇒",
  Rarr: "↠",
  rarrap: "⥵",
  rarrb: "⇥",
  rarrbfs: "⤠",
  rarrc: "⤳",
  rarrfs: "⤞",
  rarrhk: "↪",
  rarrlp: "↬",
  rarrpl: "⥅",
  rarrsim: "⥴",
  rarrtl: "↣",
  Rarrtl: "⤖",
  rarrw: "↝",
  ratail: "⤚",
  rAtail: "⤜",
  ratio: "∶",
  rationals: "ℚ",
  rbarr: "⤍",
  rBarr: "⤏",
  RBarr: "⤐",
  rbbrk: "❳",
  rbrace: "}",
  rbrack: "]",
  rbrke: "⦌",
  rbrksld: "⦎",
  rbrkslu: "⦐",
  rcaron: "ř",
  Rcaron: "Ř",
  rcedil: "ŗ",
  Rcedil: "Ŗ",
  rceil: "⌉",
  rcub: "}",
  rcy: "р",
  Rcy: "Р",
  rdca: "⤷",
  rdldhar: "⥩",
  rdquo: "”",
  rdquor: "”",
  rdsh: "↳",
  Re: "ℜ",
  real: "ℜ",
  realine: "ℛ",
  realpart: "ℜ",
  reals: "ℝ",
  rect: "▭",
  reg: "®",
  REG: "®",
  ReverseElement: "∋",
  ReverseEquilibrium: "⇋",
  ReverseUpEquilibrium: "⥯",
  rfisht: "⥽",
  rfloor: "⌋",
  rfr: "𝔯",
  Rfr: "ℜ",
  rHar: "⥤",
  rhard: "⇁",
  rharu: "⇀",
  rharul: "⥬",
  rho: "ρ",
  Rho: "Ρ",
  rhov: "ϱ",
  RightAngleBracket: "⟩",
  rightarrow: "→",
  Rightarrow: "⇒",
  RightArrow: "→",
  RightArrowBar: "⇥",
  RightArrowLeftArrow: "⇄",
  rightarrowtail: "↣",
  RightCeiling: "⌉",
  RightDoubleBracket: "⟧",
  RightDownTeeVector: "⥝",
  RightDownVector: "⇂",
  RightDownVectorBar: "⥕",
  RightFloor: "⌋",
  rightharpoondown: "⇁",
  rightharpoonup: "⇀",
  rightleftarrows: "⇄",
  rightleftharpoons: "⇌",
  rightrightarrows: "⇉",
  rightsquigarrow: "↝",
  RightTee: "⊢",
  RightTeeArrow: "↦",
  RightTeeVector: "⥛",
  rightthreetimes: "⋌",
  RightTriangle: "⊳",
  RightTriangleBar: "⧐",
  RightTriangleEqual: "⊵",
  RightUpDownVector: "⥏",
  RightUpTeeVector: "⥜",
  RightUpVector: "↾",
  RightUpVectorBar: "⥔",
  RightVector: "⇀",
  RightVectorBar: "⥓",
  ring: "˚",
  risingdotseq: "≓",
  rlarr: "⇄",
  rlhar: "⇌",
  rlm: "‏",
  rmoust: "⎱",
  rmoustache: "⎱",
  rnmid: "⫮",
  roang: "⟭",
  roarr: "⇾",
  robrk: "⟧",
  ropar: "⦆",
  ropf: "𝕣",
  Ropf: "ℝ",
  roplus: "⨮",
  rotimes: "⨵",
  RoundImplies: "⥰",
  rpar: ")",
  rpargt: "⦔",
  rppolint: "⨒",
  rrarr: "⇉",
  Rrightarrow: "⇛",
  rsaquo: "›",
  rscr: "𝓇",
  Rscr: "ℛ",
  rsh: "↱",
  Rsh: "↱",
  rsqb: "]",
  rsquo: "’",
  rsquor: "’",
  rthree: "⋌",
  rtimes: "⋊",
  rtri: "▹",
  rtrie: "⊵",
  rtrif: "▸",
  rtriltri: "⧎",
  RuleDelayed: "⧴",
  ruluhar: "⥨",
  rx: "℞",
  sacute: "ś",
  Sacute: "Ś",
  sbquo: "‚",
  sc: "≻",
  Sc: "⪼",
  scap: "⪸",
  scaron: "š",
  Scaron: "Š",
  sccue: "≽",
  sce: "⪰",
  scE: "⪴",
  scedil: "ş",
  Scedil: "Ş",
  scirc: "ŝ",
  Scirc: "Ŝ",
  scnap: "⪺",
  scnE: "⪶",
  scnsim: "⋩",
  scpolint: "⨓",
  scsim: "≿",
  scy: "с",
  Scy: "С",
  sdot: "⋅",
  sdotb: "⊡",
  sdote: "⩦",
  searhk: "⤥",
  searr: "↘",
  seArr: "⇘",
  searrow: "↘",
  sect: "§",
  semi: ";",
  seswar: "⤩",
  setminus: "∖",
  setmn: "∖",
  sext: "✶",
  sfr: "𝔰",
  Sfr: "𝔖",
  sfrown: "⌢",
  sharp: "♯",
  shchcy: "щ",
  SHCHcy: "Щ",
  shcy: "ш",
  SHcy: "Ш",
  ShortDownArrow: "↓",
  ShortLeftArrow: "←",
  shortmid: "∣",
  shortparallel: "∥",
  ShortRightArrow: "→",
  ShortUpArrow: "↑",
  shy: "­",
  sigma: "σ",
  Sigma: "Σ",
  sigmaf: "ς",
  sigmav: "ς",
  sim: "∼",
  simdot: "⩪",
  sime: "≃",
  simeq: "≃",
  simg: "⪞",
  simgE: "⪠",
  siml: "⪝",
  simlE: "⪟",
  simne: "≆",
  simplus: "⨤",
  simrarr: "⥲",
  slarr: "←",
  SmallCircle: "∘",
  smallsetminus: "∖",
  smashp: "⨳",
  smeparsl: "⧤",
  smid: "∣",
  smile: "⌣",
  smt: "⪪",
  smte: "⪬",
  smtes: "⪬︀",
  softcy: "ь",
  SOFTcy: "Ь",
  sol: "/",
  solb: "⧄",
  solbar: "⌿",
  sopf: "𝕤",
  Sopf: "𝕊",
  spades: "♠",
  spadesuit: "♠",
  spar: "∥",
  sqcap: "⊓",
  sqcaps: "⊓︀",
  sqcup: "⊔",
  sqcups: "⊔︀",
  Sqrt: "√",
  sqsub: "⊏",
  sqsube: "⊑",
  sqsubset: "⊏",
  sqsubseteq: "⊑",
  sqsup: "⊐",
  sqsupe: "⊒",
  sqsupset: "⊐",
  sqsupseteq: "⊒",
  squ: "□",
  square: "□",
  Square: "□",
  SquareIntersection: "⊓",
  SquareSubset: "⊏",
  SquareSubsetEqual: "⊑",
  SquareSuperset: "⊐",
  SquareSupersetEqual: "⊒",
  SquareUnion: "⊔",
  squarf: "▪",
  squf: "▪",
  srarr: "→",
  sscr: "𝓈",
  Sscr: "𝒮",
  ssetmn: "∖",
  ssmile: "⌣",
  sstarf: "⋆",
  star: "☆",
  Star: "⋆",
  starf: "★",
  straightepsilon: "ϵ",
  straightphi: "ϕ",
  strns: "¯",
  sub: "⊂",
  Sub: "⋐",
  subdot: "⪽",
  sube: "⊆",
  subE: "⫅",
  subedot: "⫃",
  submult: "⫁",
  subne: "⊊",
  subnE: "⫋",
  subplus: "⪿",
  subrarr: "⥹",
  subset: "⊂",
  Subset: "⋐",
  subseteq: "⊆",
  subseteqq: "⫅",
  SubsetEqual: "⊆",
  subsetneq: "⊊",
  subsetneqq: "⫋",
  subsim: "⫇",
  subsub: "⫕",
  subsup: "⫓",
  succ: "≻",
  succapprox: "⪸",
  succcurlyeq: "≽",
  Succeeds: "≻",
  SucceedsEqual: "⪰",
  SucceedsSlantEqual: "≽",
  SucceedsTilde: "≿",
  succeq: "⪰",
  succnapprox: "⪺",
  succneqq: "⪶",
  succnsim: "⋩",
  succsim: "≿",
  SuchThat: "∋",
  sum: "∑",
  Sum: "∑",
  sung: "♪",
  sup: "⊃",
  Sup: "⋑",
  sup1: "¹",
  sup2: "²",
  sup3: "³",
  supdot: "⪾",
  supdsub: "⫘",
  supe: "⊇",
  supE: "⫆",
  supedot: "⫄",
  Superset: "⊃",
  SupersetEqual: "⊇",
  suphsol: "⟉",
  suphsub: "⫗",
  suplarr: "⥻",
  supmult: "⫂",
  supne: "⊋",
  supnE: "⫌",
  supplus: "⫀",
  supset: "⊃",
  Supset: "⋑",
  supseteq: "⊇",
  supseteqq: "⫆",
  supsetneq: "⊋",
  supsetneqq: "⫌",
  supsim: "⫈",
  supsub: "⫔",
  supsup: "⫖",
  swarhk: "⤦",
  swarr: "↙",
  swArr: "⇙",
  swarrow: "↙",
  swnwar: "⤪",
  szlig: "ß",
  Tab: "	",
  target: "⌖",
  tau: "τ",
  Tau: "Τ",
  tbrk: "⎴",
  tcaron: "ť",
  Tcaron: "Ť",
  tcedil: "ţ",
  Tcedil: "Ţ",
  tcy: "т",
  Tcy: "Т",
  tdot: "⃛",
  telrec: "⌕",
  tfr: "𝔱",
  Tfr: "𝔗",
  there4: "∴",
  therefore: "∴",
  Therefore: "∴",
  theta: "θ",
  Theta: "Θ",
  thetasym: "ϑ",
  thetav: "ϑ",
  thickapprox: "≈",
  thicksim: "∼",
  ThickSpace: "  ",
  thinsp: " ",
  ThinSpace: " ",
  thkap: "≈",
  thksim: "∼",
  thorn: "þ",
  THORN: "Þ",
  tilde: "˜",
  Tilde: "∼",
  TildeEqual: "≃",
  TildeFullEqual: "≅",
  TildeTilde: "≈",
  times: "×",
  timesb: "⊠",
  timesbar: "⨱",
  timesd: "⨰",
  tint: "∭",
  toea: "⤨",
  top: "⊤",
  topbot: "⌶",
  topcir: "⫱",
  topf: "𝕥",
  Topf: "𝕋",
  topfork: "⫚",
  tosa: "⤩",
  tprime: "‴",
  trade: "™",
  TRADE: "™",
  triangle: "▵",
  triangledown: "▿",
  triangleleft: "◃",
  trianglelefteq: "⊴",
  triangleq: "≜",
  triangleright: "▹",
  trianglerighteq: "⊵",
  tridot: "◬",
  trie: "≜",
  triminus: "⨺",
  TripleDot: "⃛",
  triplus: "⨹",
  trisb: "⧍",
  tritime: "⨻",
  trpezium: "⏢",
  tscr: "𝓉",
  Tscr: "𝒯",
  tscy: "ц",
  TScy: "Ц",
  tshcy: "ћ",
  TSHcy: "Ћ",
  tstrok: "ŧ",
  Tstrok: "Ŧ",
  twixt: "≬",
  twoheadleftarrow: "↞",
  twoheadrightarrow: "↠",
  uacute: "ú",
  Uacute: "Ú",
  uarr: "↑",
  uArr: "⇑",
  Uarr: "↟",
  Uarrocir: "⥉",
  ubrcy: "ў",
  Ubrcy: "Ў",
  ubreve: "ŭ",
  Ubreve: "Ŭ",
  ucirc: "û",
  Ucirc: "Û",
  ucy: "у",
  Ucy: "У",
  udarr: "⇅",
  udblac: "ű",
  Udblac: "Ű",
  udhar: "⥮",
  ufisht: "⥾",
  ufr: "𝔲",
  Ufr: "𝔘",
  ugrave: "ù",
  Ugrave: "Ù",
  uHar: "⥣",
  uharl: "↿",
  uharr: "↾",
  uhblk: "▀",
  ulcorn: "⌜",
  ulcorner: "⌜",
  ulcrop: "⌏",
  ultri: "◸",
  umacr: "ū",
  Umacr: "Ū",
  uml: "¨",
  UnderBar: "_",
  UnderBrace: "⏟",
  UnderBracket: "⎵",
  UnderParenthesis: "⏝",
  Union: "⋃",
  UnionPlus: "⊎",
  uogon: "ų",
  Uogon: "Ų",
  uopf: "𝕦",
  Uopf: "𝕌",
  uparrow: "↑",
  Uparrow: "⇑",
  UpArrow: "↑",
  UpArrowBar: "⤒",
  UpArrowDownArrow: "⇅",
  updownarrow: "↕",
  Updownarrow: "⇕",
  UpDownArrow: "↕",
  UpEquilibrium: "⥮",
  upharpoonleft: "↿",
  upharpoonright: "↾",
  uplus: "⊎",
  UpperLeftArrow: "↖",
  UpperRightArrow: "↗",
  upsi: "υ",
  Upsi: "ϒ",
  upsih: "ϒ",
  upsilon: "υ",
  Upsilon: "Υ",
  UpTee: "⊥",
  UpTeeArrow: "↥",
  upuparrows: "⇈",
  urcorn: "⌝",
  urcorner: "⌝",
  urcrop: "⌎",
  uring: "ů",
  Uring: "Ů",
  urtri: "◹",
  uscr: "𝓊",
  Uscr: "𝒰",
  utdot: "⋰",
  utilde: "ũ",
  Utilde: "Ũ",
  utri: "▵",
  utrif: "▴",
  uuarr: "⇈",
  uuml: "ü",
  Uuml: "Ü",
  uwangle: "⦧",
  vangrt: "⦜",
  varepsilon: "ϵ",
  varkappa: "ϰ",
  varnothing: "∅",
  varphi: "ϕ",
  varpi: "ϖ",
  varpropto: "∝",
  varr: "↕",
  vArr: "⇕",
  varrho: "ϱ",
  varsigma: "ς",
  varsubsetneq: "⊊︀",
  varsubsetneqq: "⫋︀",
  varsupsetneq: "⊋︀",
  varsupsetneqq: "⫌︀",
  vartheta: "ϑ",
  vartriangleleft: "⊲",
  vartriangleright: "⊳",
  vBar: "⫨",
  Vbar: "⫫",
  vBarv: "⫩",
  vcy: "в",
  Vcy: "В",
  vdash: "⊢",
  vDash: "⊨",
  Vdash: "⊩",
  VDash: "⊫",
  Vdashl: "⫦",
  vee: "∨",
  Vee: "⋁",
  veebar: "⊻",
  veeeq: "≚",
  vellip: "⋮",
  verbar: "|",
  Verbar: "‖",
  vert: "|",
  Vert: "‖",
  VerticalBar: "∣",
  VerticalLine: "|",
  VerticalSeparator: "❘",
  VerticalTilde: "≀",
  VeryThinSpace: " ",
  vfr: "𝔳",
  Vfr: "𝔙",
  vltri: "⊲",
  vnsub: "⊂⃒",
  vnsup: "⊃⃒",
  vopf: "𝕧",
  Vopf: "𝕍",
  vprop: "∝",
  vrtri: "⊳",
  vscr: "𝓋",
  Vscr: "𝒱",
  vsubne: "⊊︀",
  vsubnE: "⫋︀",
  vsupne: "⊋︀",
  vsupnE: "⫌︀",
  Vvdash: "⊪",
  vzigzag: "⦚",
  wcirc: "ŵ",
  Wcirc: "Ŵ",
  wedbar: "⩟",
  wedge: "∧",
  Wedge: "⋀",
  wedgeq: "≙",
  weierp: "℘",
  wfr: "𝔴",
  Wfr: "𝔚",
  wopf: "𝕨",
  Wopf: "𝕎",
  wp: "℘",
  wr: "≀",
  wreath: "≀",
  wscr: "𝓌",
  Wscr: "𝒲",
  xcap: "⋂",
  xcirc: "◯",
  xcup: "⋃",
  xdtri: "▽",
  xfr: "𝔵",
  Xfr: "𝔛",
  xharr: "⟷",
  xhArr: "⟺",
  xi: "ξ",
  Xi: "Ξ",
  xlarr: "⟵",
  xlArr: "⟸",
  xmap: "⟼",
  xnis: "⋻",
  xodot: "⨀",
  xopf: "𝕩",
  Xopf: "𝕏",
  xoplus: "⨁",
  xotime: "⨂",
  xrarr: "⟶",
  xrArr: "⟹",
  xscr: "𝓍",
  Xscr: "𝒳",
  xsqcup: "⨆",
  xuplus: "⨄",
  xutri: "△",
  xvee: "⋁",
  xwedge: "⋀",
  yacute: "ý",
  Yacute: "Ý",
  yacy: "я",
  YAcy: "Я",
  ycirc: "ŷ",
  Ycirc: "Ŷ",
  ycy: "ы",
  Ycy: "Ы",
  yen: "¥",
  yfr: "𝔶",
  Yfr: "𝔜",
  yicy: "ї",
  YIcy: "Ї",
  yopf: "𝕪",
  Yopf: "𝕐",
  yscr: "𝓎",
  Yscr: "𝒴",
  yucy: "ю",
  YUcy: "Ю",
  yuml: "ÿ",
  Yuml: "Ÿ",
  zacute: "ź",
  Zacute: "Ź",
  zcaron: "ž",
  Zcaron: "Ž",
  zcy: "з",
  Zcy: "З",
  zdot: "ż",
  Zdot: "Ż",
  zeetrf: "ℨ",
  ZeroWidthSpace: "​",
  zeta: "ζ",
  Zeta: "Ζ",
  zfr: "𝔷",
  Zfr: "ℨ",
  zhcy: "ж",
  ZHcy: "Ж",
  zigrarr: "⇝",
  zopf: "𝕫",
  Zopf: "ℤ",
  zscr: "𝓏",
  Zscr: "𝒵",
  zwj: "‍",
  zwnj: "‌"
}, bte = {
  aacute: "á",
  Aacute: "Á",
  acirc: "â",
  Acirc: "Â",
  acute: "´",
  aelig: "æ",
  AElig: "Æ",
  agrave: "à",
  Agrave: "À",
  amp: "&",
  AMP: "&",
  aring: "å",
  Aring: "Å",
  atilde: "ã",
  Atilde: "Ã",
  auml: "ä",
  Auml: "Ä",
  brvbar: "¦",
  ccedil: "ç",
  Ccedil: "Ç",
  cedil: "¸",
  cent: "¢",
  copy: "©",
  COPY: "©",
  curren: "¤",
  deg: "°",
  divide: "÷",
  eacute: "é",
  Eacute: "É",
  ecirc: "ê",
  Ecirc: "Ê",
  egrave: "è",
  Egrave: "È",
  eth: "ð",
  ETH: "Ð",
  euml: "ë",
  Euml: "Ë",
  frac12: "½",
  frac14: "¼",
  frac34: "¾",
  gt: ">",
  GT: ">",
  iacute: "í",
  Iacute: "Í",
  icirc: "î",
  Icirc: "Î",
  iexcl: "¡",
  igrave: "ì",
  Igrave: "Ì",
  iquest: "¿",
  iuml: "ï",
  Iuml: "Ï",
  laquo: "«",
  lt: "<",
  LT: "<",
  macr: "¯",
  micro: "µ",
  middot: "·",
  nbsp: " ",
  not: "¬",
  ntilde: "ñ",
  Ntilde: "Ñ",
  oacute: "ó",
  Oacute: "Ó",
  ocirc: "ô",
  Ocirc: "Ô",
  ograve: "ò",
  Ograve: "Ò",
  ordf: "ª",
  ordm: "º",
  oslash: "ø",
  Oslash: "Ø",
  otilde: "õ",
  Otilde: "Õ",
  ouml: "ö",
  Ouml: "Ö",
  para: "¶",
  plusmn: "±",
  pound: "£",
  quot: '"',
  QUOT: '"',
  raquo: "»",
  reg: "®",
  REG: "®",
  sect: "§",
  shy: "­",
  sup1: "¹",
  sup2: "²",
  sup3: "³",
  szlig: "ß",
  thorn: "þ",
  THORN: "Þ",
  times: "×",
  uacute: "ú",
  Uacute: "Ú",
  ucirc: "û",
  Ucirc: "Û",
  ugrave: "ù",
  Ugrave: "Ù",
  uml: "¨",
  uuml: "ü",
  Uuml: "Ü",
  yacute: "ý",
  Yacute: "Ý",
  yen: "¥",
  yuml: "ÿ"
}, Fk = {
  0: "�",
  128: "€",
  130: "‚",
  131: "ƒ",
  132: "„",
  133: "…",
  134: "†",
  135: "‡",
  136: "ˆ",
  137: "‰",
  138: "Š",
  139: "‹",
  140: "Œ",
  142: "Ž",
  145: "‘",
  146: "’",
  147: "“",
  148: "”",
  149: "•",
  150: "–",
  151: "—",
  152: "˜",
  153: "™",
  154: "š",
  155: "›",
  156: "œ",
  158: "ž",
  159: "Ÿ"
}, Ate = [
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  11,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  127,
  128,
  129,
  130,
  131,
  132,
  133,
  134,
  135,
  136,
  137,
  138,
  139,
  140,
  141,
  142,
  143,
  144,
  145,
  146,
  147,
  148,
  149,
  150,
  151,
  152,
  153,
  154,
  155,
  156,
  157,
  158,
  159,
  64976,
  64977,
  64978,
  64979,
  64980,
  64981,
  64982,
  64983,
  64984,
  64985,
  64986,
  64987,
  64988,
  64989,
  64990,
  64991,
  64992,
  64993,
  64994,
  64995,
  64996,
  64997,
  64998,
  64999,
  65e3,
  65001,
  65002,
  65003,
  65004,
  65005,
  65006,
  65007,
  65534,
  65535,
  131070,
  131071,
  196606,
  196607,
  262142,
  262143,
  327678,
  327679,
  393214,
  393215,
  458750,
  458751,
  524286,
  524287,
  589822,
  589823,
  655358,
  655359,
  720894,
  720895,
  786430,
  786431,
  851966,
  851967,
  917502,
  917503,
  983038,
  983039,
  1048574,
  1048575,
  1114110,
  1114111
], Bk = String.fromCharCode, xte = function(t, e) {
  let n = -1;
  const r = t.length;
  for (; ++n < r; )
    if (t[n] === e)
      return !0;
  return !1;
};
function _te(t, e) {
  if (!t)
    return e;
  const n = {};
  let r;
  for (r in e)
    n[r] = bv(t, r) ? t[r] : e[r];
  return n;
}
var Uk = function(t, e) {
  let n = "";
  return t >= 55296 && t <= 57343 || t > 1114111 ? (e && ru("character reference outside the permissible Unicode range"), "�") : bv(Fk, t) ? (e && ru("disallowed character reference"), Fk[t]) : (e && xte(Ate, t) && ru("disallowed character reference"), t > 65535 && (t -= 65536, n += Bk(t >>> 10 & 1023 | 55296), t = 56320 | t & 1023), n += Bk(t), n);
};
function ru(t) {
  throw new Error(`Parse error: ${t}`);
}
function tb(t, e) {
  e = _te(e, tb.options);
  const n = e.strict;
  return n && Tte.test(t) && ru("malformed character reference"), t.replace(
    Cte,
    (r, i, s, l, c, h, g, v, C) => {
      let S, b, N, O, L, P;
      return i ? (L = i, Ste[L]) : s ? (L = s, P = l, P && e.isAttributeValue ? (n && P === "=" && ru("`&` did not start a character reference"), r) : (n && ru(
        "named character reference was not terminated by a semicolon"
      ), bte[L] + (P || ""))) : c ? (N = c, b = h, n && !b && ru("character reference was not terminated by a semicolon"), S = parseInt(N, 10), Uk(S, n)) : g ? (O = g, b = v, n && !b && ru("character reference was not terminated by a semicolon"), S = parseInt(O, 16), Uk(S, n)) : (n && ru(
        "named character reference was not terminated by a semicolon"
      ), r);
    }
  );
}
tb.options = {
  isAttributeValue: !1,
  strict: !1
};
var $C = (t) => t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;"), Hk = (t) => tb(t);
function kte(t, e, n, r) {
  if (typeof e == "function")
    return e({
      props: { ...n, children: r },
      attrs: n,
      children: r,
      h: t.h,
      context: t
    });
  {
    let i = !0, s;
    if (e ? e.toLowerCase() === "fragment" ? (s = t.document.createDocumentFragment(), i = !1) : s = t.document.createElement(e) : s = t.document.createElement("div"), n && i) {
      const l = s;
      for (let [c, h] of Object.entries(n)) {
        c = c.toString();
        const g = c.toLowerCase();
        g === "classname" ? l.className = h : g === "on" ? Object.entries(h).forEach(([v, C]) => {
          l.setAttribute(`on${v}`, String(C));
        }) : h !== !1 && h != null && (h === !0 ? l.setAttribute(c, c) : l.setAttribute(c, h.toString()));
      }
    }
    if (r)
      for (const l of r) {
        const c = Array.isArray(l) ? [...l] : [l];
        for (const h of c)
          h && h !== !1 && h != null && (typeof h != "object" ? s.appendChild(
            t.document.createTextNode(h.toString())
          ) : s.appendChild(h));
      }
    return s;
  }
}
function NR(t, e, ...n) {
  return typeof t == "object" && (t = "fragment", n = t.children, e = t.attrs), Array.isArray(e) ? (n = [e], e = {}) : e ? e.attrs && (e = { ...e.attrs, ...e }, delete e.attrs) : e = {}, {
    tag: t,
    attrs: e,
    children: typeof n[0] == "string" ? n : n.flat(1 / 0)
  };
}
function Nte(t) {
  return t.h = function(n, r, ...i) {
    const { tag: s, attrs: l, children: c } = NR(n, r, i);
    return kte(t, s, l, c);
  }, t.h;
}
var wR = [
  "area",
  "base",
  "br",
  "col",
  "embed",
  "hr",
  "img",
  "input",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr",
  "command"
];
function OR(t, e, n = {}, r) {
  const i = !(typeof r == "string" && r === "" || Array.isArray(r) && (r.length === 0 || r.length === 1 && r[0] === "") || r == null), s = [];
  if (e = e.replace(/__/g, ":"), e !== "noop" && e !== "") {
    e !== "cdata" ? s.push(`<${e}`) : s.push("<![CDATA[");
    for (let l in n)
      if (l && bv(n, l)) {
        const c = n[l];
        if (l === "html")
          continue;
        l.toLowerCase() === "classname" && (l = "class"), l = l.replace(/__/g, ":"), c === !0 ? s.push(` ${l}`) : l === "style" && typeof c == "object" ? s.push(
          ` ${l}="${Object.keys(c).filter((h) => c[h] != null).map((h) => {
            let g = c[h];
            return g = typeof g == "number" ? `${g}px` : g, `${h.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()}:${g}`;
          }).join(";")}"`
        ) : c !== !1 && c != null && s.push(` ${l}="${$C(c.toString())}"`);
      }
    if (e !== "cdata") {
      if (t && !i)
        return s.push(" />"), s.join("");
      s.push(">");
    }
    if (!t && wR.includes(e))
      return s.join("");
  }
  if (i) {
    if (typeof r == "string")
      s.push(r);
    else if (r && r.length > 0) {
      for (let l of r)
        if (l != null && l !== !1) {
          Array.isArray(l) || (l = [l]);
          for (const c of l)
            c.startsWith("<") && c.endsWith(">") || e === "script" || e === "style" ? s.push(c) : s.push($C(c.toString()));
        }
    }
  }
  return n.html && s.push(n.html), e !== "noop" && e !== "" && (e !== "cdata" ? s.push(`</${e}>`) : s.push("]]>")), s.join("");
}
function Cv(t, e, ...n) {
  const { tag: r, attrs: i, children: s } = NR(t, e, n);
  return OR(!1, r, i, s);
}
var jy = OR.bind(null, !1);
Cv.firstLine = "<!DOCTYPE html>";
Cv.html = !0;
var zk = {};
function wte(t) {
  let e = zk[t];
  return e == null && (e = Ete(t), zk[t] = e), e;
}
function Ote(t, e, { debug: n = !1 } = {}) {
  for (const r of wte(t)) {
    const i = (s, l) => {
      var h, g, v;
      let c = !1;
      for (const C of l) {
        const { type: S, name: b, action: N, value: O, ignoreCase: L = !0, data: P } = C;
        if (S === "attribute")
          N === "equals" ? c = s.getAttribute(b) === O : N === "start" ? c = !!((h = s.getAttribute(b)) != null && h.startsWith(O)) : N === "end" ? c = !!((g = s.getAttribute(b)) != null && g.endsWith(O)) : N === "element" ? b === "class" ? c = s.classList.contains(O) : c = !!((v = s.getAttribute(b)) != null && v.includes(O)) : N === "exists" ? c = s.hasAttribute(b) : console.warn("Unknown CSS selector action", N);
        else if (S === "tag")
          c = s.tagName === b.toUpperCase();
        else if (S === "universal")
          c = !0;
        else if (S === "pseudo") {
          if (b === "not") {
            let Y = !0;
            P.forEach((j) => {
              i(s, j) || (Y = !1);
            }), c = !Y;
          }
        } else
          console.warn("Unknown CSS selector type", S, t, l);
        if (!c)
          break;
      }
      return c;
    };
    if (i(e, r))
      return !0;
  }
  return !1;
}
var Rte = Symbol.for("nodejs.util.inspect.custom"), qk = { fontWeight: "bold" }, jk = { fontStyle: "italic" }, Vk = { backgroundColor: "rgb(255, 250, 165)" }, $k = { textDecorations: "underline" }, rC = { textDecorations: "line-through" }, Dte = {
  b: qk,
  strong: qk,
  em: jk,
  i: jk,
  mark: Vk,
  u: $k,
  a: $k,
  s: rC,
  del: rC,
  ins: Vk,
  strike: rC
  // 'code': C,
  // 'tt': C
}, Mte = (t) => t.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (e, n) => n.toUpperCase()), ey = class {
  constructor() {
    this.append = this.appendChild, this._parentNode = null, this._childNodes = [];
  }
  get nodeType() {
    return console.error("Subclasses should define nodeType!"), 0;
  }
  get nodeName() {
    return console.error("Subclasses should define nodeName!"), "";
  }
  get nodeValue() {
    return null;
  }
  cloneNode(t = !1) {
    const e = new this.constructor();
    return t && (e._childNodes = this._childNodes.map((n) => n.cloneNode(!0)), e._fixChildNodesParent()), e;
  }
  _fixChildNodesParent() {
    this._childNodes.forEach((t) => t._parentNode = this);
  }
  insertBefore(t, e) {
    if (t !== e) {
      let n = e ? this._childNodes.indexOf(e) : 0;
      n < 0 && (n = 0), this._childNodes.splice(n, 0, t), this._fixChildNodesParent();
    }
  }
  appendChild(t) {
    if (t != null) {
      if (t === this) {
        console.warn("Cannot appendChild to self");
        return;
      }
      if (t instanceof rb && console.warn("No defined how to append a document to a node!", t), t instanceof Sv)
        for (const e of [...t._childNodes])
          this.appendChild(e);
      else if (Array.isArray(t))
        for (const e of [...t])
          this.appendChild(e);
      else if (t instanceof ey)
        t.remove(), this._childNodes.push(t);
      else
        try {
          const e = typeof t == "string" ? t : JSON.stringify(t, null, 2);
          this._childNodes.push(new uh(e));
        } catch (e) {
          console.error(
            `The data ${t} to be added to ${this.render()} is problematic: ${e}`
          );
        }
      this._fixChildNodesParent();
    }
  }
  removeChild(t) {
    const e = this._childNodes.indexOf(t);
    e >= 0 && (t._parentNode = null, this._childNodes.splice(e, 1), this._fixChildNodesParent());
  }
  remove() {
    var t;
    return (t = this == null ? void 0 : this.parentNode) == null || t.removeChild(this), this;
  }
  replaceChildren(...t) {
    this._childNodes = t.map(
      (e) => typeof e == "string" ? new uh(e) : e.remove()
    ), this._fixChildNodesParent();
  }
  replaceWith(...t) {
    const e = this._parentNode;
    if (e) {
      const n = this._indexInParent();
      n >= 0 && (t = t.map(
        (r) => typeof r == "string" ? new uh(r) : r.remove()
      ), e._childNodes.splice(n, 1, ...t), this._parentNode = null, e._fixChildNodesParent());
    }
  }
  _indexInParent() {
    return this._parentNode ? this._parentNode.childNodes.indexOf(this) : -1;
  }
  get parentNode() {
    return this._parentNode;
  }
  get childNodes() {
    return this._childNodes || [];
  }
  get children() {
    return this._childNodes || [];
  }
  get firstChild() {
    return this._childNodes[0];
  }
  get lastChild() {
    return this._childNodes[this._childNodes.length - 1];
  }
  get nextSibling() {
    const t = this._indexInParent();
    return t != null && this.parentNode.childNodes[t + 1] || null;
  }
  get previousSibling() {
    const t = this._indexInParent();
    return t > 0 && this.parentNode.childNodes[t - 1] || null;
  }
  flatten() {
    const t = [];
    this instanceof Ja && t.push(this);
    for (const e of this._childNodes)
      t.push(...e.flatten());
    return t;
  }
  flattenNodes() {
    const t = [];
    t.push(this);
    for (const e of this._childNodes)
      t.push(...e.flattenNodes());
    return t;
  }
  render() {
    return "";
  }
  get textContent() {
    return this._childNodes.map((t) => t.textContent).join("");
  }
  set textContent(t) {
    this._childNodes = [], t && this.appendChild(new uh(t.toString()));
  }
  contains(t) {
    return t === this ? !0 : this._childNodes.some((e) => e.contains(t));
  }
  get ownerDocument() {
    var t;
    return this.nodeType === ey.DOCUMENT_NODE || this.nodeType === ey.DOCUMENT_FRAGMENT_NODE ? this : (t = this == null ? void 0 : this._parentNode) == null ? void 0 : t.ownerDocument;
  }
  toString() {
    return `${this.nodeName}`;
  }
  [Rte]() {
    return `${this.constructor.name} "${this.render()}"`;
  }
}, Li = ey;
Li.ELEMENT_NODE = 1;
Li.TEXT_NODE = 3;
Li.CDATA_SECTION_NODE = 4;
Li.PROCESSING_INSTRUCTION_NODE = 7;
Li.COMMENT_NODE = 8;
Li.DOCUMENT_NODE = 9;
Li.DOCUMENT_TYPE_NODE = 10;
Li.DOCUMENT_FRAGMENT_NODE = 11;
var uh = class extends Li {
  constructor(t = "") {
    super(), this._text = t;
  }
  get nodeType() {
    return Li.TEXT_NODE;
  }
  get nodeName() {
    return "#text";
  }
  get nodeValue() {
    return this._text || "";
  }
  get textContent() {
    return this.nodeValue;
  }
  render() {
    var e;
    const t = (e = this.parentNode) == null ? void 0 : e.tagName;
    return t === "SCRIPT" || t === "STYLE" ? this._text : $C(this._text);
  }
  cloneNode(t = !1) {
    const e = super.cloneNode(t);
    return e._text = this._text, e;
  }
}, RR = class extends Li {
  getElementById(t) {
    return this.flatten().find((e) => e._attributes.id === t);
  }
  getElementsByClassName(t) {
    return this.flatten().filter((e) => e.classList.contains(t));
  }
  matches(t) {
    return Ote(t, this);
  }
  querySelectorAll(t) {
    return this.flatten().filter((e) => e.matches(t));
  }
  querySelector(t) {
    return this.flatten().find((e) => e.matches(t));
  }
  //
  parent(t) {
    var e;
    return this.matches(t) ? this : this.parentNode == null ? null : (e = this.parentNode) == null ? void 0 : e.parent(t);
  }
  handle(t, e) {
    let n = 0;
    for (const r of this.querySelectorAll(t))
      e(r, n++);
  }
}, Ja = class extends RR {
  constructor(t = "div", e = {}) {
    super(), this._originalTagName = t, this._nodeName = (t || "").toUpperCase(), this._attributes = e || {}, this._styles = null;
  }
  get nodeType() {
    return Li.ELEMENT_NODE;
  }
  get nodeName() {
    return this._nodeName;
  }
  cloneNode(t = !1) {
    const e = super.cloneNode(t);
    return e._originalTagName = this._originalTagName, e._nodeName = this._nodeName, e._attributes = Object.assign({}, this._attributes), e;
  }
  get attributes() {
    return this._attributes;
  }
  _findAttributeName(t) {
    const e = t.toLowerCase();
    return Object.keys(this._attributes).find(
      (n) => e === n.toLowerCase()
    ) || null;
  }
  setAttribute(t, e) {
    this.removeAttribute(t), this._attributes[t] = e, this._styles = null;
  }
  getAttribute(t) {
    const e = this._findAttributeName(t);
    return e ? this._attributes[e] : null;
  }
  removeAttribute(t) {
    this._findAttributeName(String(t)) && delete this._attributes[t];
  }
  hasAttribute(t) {
    const e = this._findAttributeName(t);
    return e ? this._attributes[e] != null : !1;
  }
  get style() {
    if (this._styles == null) {
      const t = Object.assign({}, Dte[this.tagName.toLowerCase()] || {}), e = this.getAttribute("style");
      if (e) {
        let n;
        const r = /\s*([\w-]+)\s*:\s*([^;]+)/g;
        for (; n = r.exec(e); ) {
          const i = n[1], s = n[2].trim();
          t[i] = s, t[Mte(i)] = s;
        }
      }
      this._styles = t;
    }
    return this._styles;
  }
  get tagName() {
    return this._nodeName;
  }
  get id() {
    return this._attributes.id || null;
  }
  set id(t) {
    t == null ? delete this._attributes.id : this._attributes.id = t;
  }
  get src() {
    return this._attributes.src;
  }
  set src(t) {
    t == null ? delete this._attributes.src : this._attributes.src = t;
  }
  //
  getElementsByTagName(t) {
    t = t.toUpperCase();
    const e = this.flatten();
    return t !== "*" ? e.filter((n) => n.tagName === t) : e;
  }
  // html
  setInnerHTML(t) {
  }
  get innerHTML() {
    return this._childNodes.map((t) => t.render(Cv)).join("");
  }
  set innerHTML(t) {
    this.setInnerHTML(t);
  }
  get outerHTML() {
    return this.render(jy);
  }
  // class
  get className() {
    return this._attributes.class || "";
  }
  set className(t) {
    Array.isArray(t) ? t = t.filter((e) => !!e).join(" ") : typeof t == "object" && (t = Object.entries(t).filter(([e, n]) => !!n).map(([e, n]) => e).join(" ")), this._attributes.class = t;
  }
  get classList() {
    const t = this, e = (this.className || "").trim().split(/\s+/g) || [];
    return {
      contains(n) {
        return e.includes(n);
      },
      add(n) {
        e.includes(n) || (e.push(n), t.className = e);
      },
      remove(n) {
        const r = e.indexOf(n);
        r >= 0 && (e.splice(r, 1), t.className = e);
      }
    };
  }
  //
  render(t = jy) {
    return t(
      this._originalTagName || this.tagName,
      this.attributes,
      this._childNodes.map((e) => e.render(t)).join("")
      // children:string is not escaped again
    );
  }
}, nb = class extends Li {
  get nodeName() {
    return super.nodeName;
  }
  get nodeValue() {
    return super.nodeValue;
  }
  get nodeType() {
    return nb.DOCUMENT_TYPE_NODE;
  }
  render() {
    return "<!DOCTYPE html>";
  }
}, Sv = class extends RR {
  get nodeType() {
    return Li.DOCUMENT_FRAGMENT_NODE;
  }
  get nodeName() {
    return "#document-fragment";
  }
  render(t = jy) {
    return this._childNodes.map((e) => e.render(t) || []).join("");
  }
  get innerHTML() {
    return this._childNodes.map((t) => t.render(Cv)).join("");
  }
  createElement(t, e = {}) {
    return new Ja(t, e);
  }
  createDocumentFragment() {
    return new Sv();
  }
  createTextNode(t) {
    return new uh(t);
  }
}, rb = class extends Sv {
  get nodeType() {
    return Li.DOCUMENT_NODE;
  }
  get nodeName() {
    return "#document";
  }
  get documentElement() {
    return this.firstChild;
  }
  render(t = jy) {
    let e = super.render(t);
    return this.docType && (e = this.docType.render() + e), e;
  }
}, DR = class extends rb {
  constructor(t = !1) {
    if (super(), this.docType = new nb(), !t) {
      const e = new Ja("html"), n = new Ja("body"), r = new Ja("head"), i = new Ja("title");
      e.appendChild(r), r.appendChild(i), e.appendChild(n), this.appendChild(e);
    }
  }
  get body() {
    let t = this.querySelector("body");
    if (!t) {
      let e = this.querySelector("html");
      e || (e = new Ja("html"), this.appendChild(e)), t = new Ja("body"), e.appendChild(e);
    }
    return t;
  }
  get title() {
    var t;
    return ((t = this.querySelector("title")) == null ? void 0 : t.textContent) || "";
  }
  set title(t) {
    const e = this.querySelector("title");
    e && (e.textContent = t);
  }
  get head() {
    let t = this.querySelector("head");
    if (!t) {
      let e = this.querySelector("html");
      e || (e = new Ja("html"), this.appendChild(e)), t = new Ja("head"), e.insertBefore(e);
    }
    return t;
  }
};
function Lte() {
  return new rb();
}
function Ite() {
  return new DR();
}
var MR = Lte();
Nte({ document: MR });
var Pte = {}, Fte = Pte.hasOwnProperty;
function bv(t, e) {
  return Fte.call(t, e);
}
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
var Bte = /([^=\s]+)(\s*=\s*(("([^"]*)")|('([^']*)')|[^>\s]+))?/gm, Ute = /^<\/([^>\s]+)[^>]*>/m, Hte = /^<([^>\s\/]+)((\s+[^=>\s]+(\s*=\s*(("[^"]*")|('[^']*')|[^>\s]+))?)*)\s*\/?\s*>/m, zte = /\s*\/\s*>\s*$/m, qte = class {
  constructor(t = {}) {
    this.attrRe = Bte, this.endTagRe = Ute, this.startTagRe = Hte, this.defaults = { ignoreWhitespaceText: !1 }, t.scanner && (this.scanner = t.scanner), this.options = Object.assign({}, this.defaults, t);
  }
  parse(t) {
    let e = !1, n, r, i;
    for (; t.length; )
      t.substring(0, 4) === "<!--" ? (n = t.indexOf("-->"), n !== -1 ? (this.scanner.comment(t.substring(4, n)), t = t.substring(n + 3), e = !1) : e = !0) : t.substring(0, 2) === "</" ? (r = this.endTagRe.exec(t), r ? (t = RegExp.rightContext, e = !1, this.parseEndTag(RegExp.lastMatch, r[1])) : e = !0) : t.charAt(0) === "<" && (r = this.startTagRe.exec(t), r ? (t = RegExp.rightContext, e = !1, this.parseStartTag(RegExp.lastMatch, r[1], r)) : e = !0), e && (n = t.indexOf("<"), n === 0 && (n = t.substring(1).indexOf("<")), n === -1 ? (i = t, t = "") : (i = t.substring(0, n), t = t.substring(n)), (!this.options.ignoreWhitespaceText || !/^\s*$/.test(i)) && this.scanner.characters(i)), e = !0, r = null;
  }
  parseStartTag(t, e, n) {
    const r = zte.test(t);
    let i = n[2];
    r && (i = i.replace(/\s*\/\s*$/, ""));
    const s = this.parseAttributes(e, i);
    this.scanner.startElement(e, s, r, n[0]);
  }
  parseEndTag(t, e) {
    this.scanner.endElement(e);
  }
  parseAttributes(t, e) {
    const n = {};
    return e.replace(this.attrRe, (...r) => {
      const [i, s, l, c, h, g, v, C] = r;
      n[s] = C ?? g ?? c ?? !0;
    }), n;
  }
};
function LR(t) {
  if (typeof t != "string")
    throw console.error("parseHTML requires string, found", t), new Error("parseHTML requires string");
  const e = t.indexOf("<!") === 0 ? new DR(!0) : new Sv(), n = [e];
  return new qte({
    // the for methods must be implemented yourself
    scanner: {
      startElement(i, s, l) {
        if (i.toLowerCase() === "!doctype") {
          e.docType = new nb();
          return;
        }
        for (const g in s)
          if (bv(s, g)) {
            const v = s[g];
            typeof v == "string" && (s[g] = Hk(v));
          }
        const h = n[n.length - 1];
        if (h) {
          const g = MR.createElement(i, s);
          h.appendChild(g), wR.includes(i.toLowerCase()) || l || n.push(g);
        }
      },
      endElement(i) {
        n.pop();
      },
      characters(i) {
        var l;
        i = Hk(i);
        const s = n[n.length - 1];
        ((l = s == null ? void 0 : s.lastChild) == null ? void 0 : l.nodeType) === Li.TEXT_NODE ? s.lastChild._text += i : s && s.appendChild(new uh(i));
      },
      comment(i) {
      }
    }
  }).parse(t), e;
}
Ja.prototype.setInnerHTML = function(t) {
  const e = LR(t);
  this._childNodes = e._childNodes, this._fixChildNodesParent();
};
const IR = (t) => {
  const e = FH(t);
  return (n) => {
    const r = LR(n), i = mf.fromSchema(e).parse(r).toJSON(), s = Tc.fromJSON(e, i);
    return ns.fromSchema(e).serializeFragment(
      s.content,
      {
        document: Ite()
      }
    ).render();
  };
}, lne = (t) => {
  const e = QN({});
  return IR(e)(t);
}, une = (t) => {
  const e = XN({});
  return IR(e)(t);
};
export {
  Gte as ArticleEditor,
  Wte as CommentEditor,
  one as html2md,
  QN as makeArticleEditorExtensions,
  XN as makeCommentEditorExtensions,
  IR as makeNormalizer,
  ane as md2html,
  lne as normalizeArticleHTML,
  une as normalizeCommentHTML,
  sne as sanitizeHTML
};
