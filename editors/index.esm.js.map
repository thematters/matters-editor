{"version":3,"file":"index.esm.js","sources":["../../node_modules/tslib/tslib.es6.js","../../../src/extensions/figureAudio.ts","../../../src/extensions/figureEmbed.ts","../../../src/extensions/figureImage.ts","../../node_modules/linkifyjs/dist/linkify.es.js","../../../src/extensions/link/helpers/autolink.ts","../../../src/extensions/link/index.ts","../../../src/extensions/link/helpers/clickHandler.ts","../../../src/extensions/link/helpers/pasteHandler.ts","../../../src/extensions/mention.ts","../../../src/extensions/bold.ts","../../../src/extensions/index.ts","../../../src/editors/Article.tsx","../../../src/editors/Comment.tsx"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n",null,null,null,"// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3barth4b_ott3vie4c1le2ogado5udhabi7c_ademy5centure6ountant_s9o1tor4d_s1ult4e_g1ro2tna4f_l1rica5g_akhan5ency5i_g1rbus3force5tel5kdn3l_faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m_azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o_l2partments8p_le4q_uarelle8r_ab1mco4chi3my2pa2t_e3s_da2ia2sociates9t_hleta5torney7u_ction5di_ble3o3spost5thor3o_s4vianca6w_s2x_a2z_ure5ba_by2idu3namex3narepublic11d1k2r_celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b_c1t1va3cg1n2d1e_ats2uty4er2ntley5rlin4st_buy5t2f1g1h_arti5i_ble3d1ke2ng_o3o1z2j1lack_friday9ockbuster8g1omberg7ue3m_s1w2n_pparibas9o_ats3ehringer8fa2m1nd2o_k_ing5sch2tik2on4t1utique6x2r_adesco6idgestone9oadway5ker3ther5ussels7s1t1uild_ers6siness6y1zz3v1w1y1z_h3ca_b1fe2l_l1vinklein9m_era3p2non3petown5ital_one8r_avan4ds2e_er_s4s2sa1e1h1ino4t_ering5holic7ba1n1re2s2c1d1enter4o1rn3f_a1d2g1h_anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i_priani6rcle4sco3tadel4i_c2y_eats7k1l_aims4eaning6ick2nic1que6othing5ud3ub_med6m1n1o_ach3des3ffee4llege4ogne5m_cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking_channel11l1p2rsica5untry4pon_s4rses6pa2r_edit_card4union9icket5own3s1uise_s6u_isinella9v1w1x1y_mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e_al_er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si_gn4v2hl2iamonds6et2gital5rect_ory7scount3ver5h2y2j1k1m1np2o_cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c_o2deka3u_cation8e1g1mail3erck5nergy4gineer_ing9terprises10pson4quipment8r_icsson6ni3s_q1tate5t_isalat7u_rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n_s2rm_ers5shion4t3edex3edback6rrari3ero6i_at2delity5o2lm2nal1nce1ial7re_stone6mdale6sh_ing5t_ness6j1k1lickr3ghts4r2orist4wers5y2m1o_o_d_network8tball6rd1ex2sale4um3undation8x2r_ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n_d2rniture7tbol5yi3ga_l_lery3o1up4me_s3p1rden4y2b_iz3d_n2e_a1nt_ing5orge5f1g_ee3h1i_ft_s3ves2ing5l_ass3e1obal2o4m_ail3bh2o1x2n1odaddy5ld_point6f2o_dyear5g_le4p1t1v2p1q1r_ainger5phics5tis4een3ipe3ocery4up4s1t1u_ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc_bank7ealth_care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k_t2m1n1ockey4ldings5iday5medepot5goods5s_ense7nda3rse3spital5t_ing5t_eles2s3mail5use3w2r1sbc3t1u_ghes5yatt3undai7ibm2cbc2e1u2d1e_ee3fm2kano4l1m_amat4db2mo_bilien9n_c1dustries8finiti5o2g1k1stitute6urance4e4t_ernational10uit4vestments10o1piranga7q1r_ish4s_maili5t_anbul7t_au2v3jaguar4va3cb2e_ep2tzt3welry6io2ll2m_p2nj2o_bs1urg4t1y2p_morgan6rs3uegos4niper7kaufen5ddi3e_rryhotels6logistics9properties14fh2g1h1i_a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p_mg2n2r_d1ed3uokgroup8w1y_oto4z2la_caixa5mborghini8er3ncaster5ia3d_rover6xess5salle5t_ino3robe5w_yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i_dl2fe_insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan_s3cker3us3l1ndon4tte1o3ve3pl_financial11r1s1t_d_a3u_ndbeck6xe1ury5v1y2ma_cys3drid4if1son4keup4n_agement7go3p1rket_ing3s4riott5shalls7serati6ttel5ba2c_kinsey7d1e_d_ia3et2lbourne7me1orial6n_u2rckmsd7g1h1iami3crosoft7l1ni1t2t_subishi9k1l_b1s2m_a2n1o_bi_le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to_rcycles9v_ie4p1q1r1s_d2t_n1r2u_seum3ic3tual5v1w1x1y1z2na_b1goya4me2tura4vy3ba2c1e_c1t_bank4flix4work5ustar5w_s2xt_direct7us4f_l2g_o2hk2i_co2ke1on3nja3ssan1y5l1o_kia3rthwesternmutual14on4w_ruz3tv4p1r_a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan_group9dnavy5lo3m_ega4ne1g1l_ine5oo2pen3racle3nge4g_anic5igins6saka4tsuka4t2vh3pa_ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e_t2f_izer5g1h_armacy6d1ilips5one2to_graphy6s4ysio5ics1tet2ures6d1n_g1k2oneer5zza4k1l_ace2y_station9umbing5s3m1n_c2ohl2ker3litie5rn2st3r_america6xi3ess3ime3o_d_uctions8f1gressive8mo2perties3y5tection8u_dential9s1t1ub2w_c2y2qa1pon3uebec3st5racing4dio4e_ad1lestate6tor2y4cipes5d_stone5umbrella9hab3ise_n3t2liance6n_t_als5pair3ort3ublican8st_aurant8view_s5xroth6ich_ardli6oh3l1o1p2o_cher3ks3deo3gers4om3s_vp3u_gby3hr2n2w_e2yukyu6sa_arland6fe_ty4kura4le1on3msclub4ung5ndvik_coromant12ofi4p1rl2s1ve2xo3b_i1s2c_a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e_arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x_y3fr2g1h_angrila6rp2w2ell3ia1ksha5oes2p_ping5uji3w_time7i_lk2na1gles5te3j1k_i_n2y_pe4l_ing4m_art3ile4n_cf3o_ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa_ce3ort2t3r_l2s1t_ada2ples4r1tebank4farm7c_group6ockholm6rage3e3ream4udio2y3yle4u_cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y_dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x_i3c_i2d_k2eam2ch_nology8l1masek5nnis4va3f1g1h_d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j_maxx4x2k_maxx5l1m_all4n1o_day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r_ade1ing4ining5vel_channel7ers_insurance16ust3v2t1ube2i1nes3shu4v_s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va_cations7na1guard7c1e_gas3ntures6risign5mögensberater2ung14sicherung10t2g1i_ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u_elos6wales2mart4ter4ng_gou5tch_es6eather_channel12bcam3er2site5d_ding5ibo2r3f1hoswho6ien2ki2lliamhill9n_dows4e1ners6me2olterskluwer11odside6rk_s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u_tube6t1un3za_ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5تصالات6رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत_म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里_大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\nconst OPENBRACE = 'OPENBRACE'; // {\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10);\n      for (; popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else if (encoded[i] === '_') {\n      words.push(stack.join('')); // found a word, will be followed by another\n      i++;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toFormattedHref(options);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = href;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, EQUALS, HYPHEN, NUM, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port numner\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const UriPrefix = tt(Scheme, COLON); // e.g., 'mailto:' or 'http://'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  tt(SlashSchemeColonSlash, SLASH, UriPrefix);\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(UriPrefix, groups.domain, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n\n  // URL, followed by an opening bracket\n  const UrlOpenbrace = tt(Url$1, OPENBRACE); // URL followed by {\n  const UrlOpenbracket = tt(Url$1, OPENBRACKET); // URL followed by [\n  const UrlOpenanglebracket = tt(Url$1, OPENANGLEBRACKET); // URL followed by <\n  const UrlOpenparen = tt(Url$1, OPENPAREN); // URL followed by (\n\n  tt(UrlNonaccept, OPENBRACE, UrlOpenbrace);\n  tt(UrlNonaccept, OPENBRACKET, UrlOpenbracket);\n  tt(UrlNonaccept, OPENANGLEBRACKET, UrlOpenanglebracket);\n  tt(UrlNonaccept, OPENPAREN, UrlOpenparen);\n\n  // Closing bracket component. This character WILL be included in the URL\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracket, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracket, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparen, CLOSEPAREN, Url$1);\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n\n  // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `UrlOpenbrace` (if the URL only\n  // has a single opening bracket for some reason).\n  const UrlOpenbraceQ = makeState(Url); // URL followed by { and some symbols that the URL can end it\n  const UrlOpenbracketQ = makeState(Url); // URL followed by [ and some symbols that the URL can end it\n  const UrlOpenanglebracketQ = makeState(Url); // URL followed by < and some symbols that the URL can end it\n  const UrlOpenparenQ = makeState(Url); // URL followed by ( and some symbols that the URL can end it\n  ta(UrlOpenbrace, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracket, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracket, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparen, qsAccepting, UrlOpenparenQ);\n  const UrlOpenbraceSyms = makeState(); // UrlOpenbrace followed by some symbols it cannot end it\n  const UrlOpenbracketSyms = makeState(); // UrlOpenbracketQ followed by some symbols it cannot end it\n  const UrlOpenanglebracketSyms = makeState(); // UrlOpenanglebracketQ followed by some symbols it cannot end it\n  const UrlOpenparenSyms = makeState(); // UrlOpenparenQ followed by some symbols it cannot end it\n  ta(UrlOpenbrace, qsNonAccepting);\n  ta(UrlOpenbracket, qsNonAccepting);\n  ta(UrlOpenanglebracket, qsNonAccepting);\n  ta(UrlOpenparen, qsNonAccepting);\n\n  // URL that begins with an opening bracket, followed by some symbols\n  ta(UrlOpenbraceQ, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceQ, qsNonAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsNonAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsNonAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsNonAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketSyms, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenSyms, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsNonAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsNonAccepting, UrlOpenbracketSyms);\n  ta(UrlOpenanglebracketSyms, qsNonAccepting, UrlOpenanglebracketSyms);\n  ta(UrlOpenparenSyms, qsNonAccepting, UrlOpenparenSyms);\n\n  // Close brace/bracket to become regular URL\n  tt(UrlOpenbracketQ, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketQ, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenQ, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceQ, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracketSyms, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketSyms, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenSyms, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceSyms, CLOSEPAREN, Url$1);\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error('linkifyjs: incorrect scheme format.\\n 1. Must only contain digits, lowercase ASCII letters or \"-\"\\n 2. Cannot start or end with \"-\"\\n 3. \"-\" cannot repeat');\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n*/\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n",null,null,null,null,null,null,null,null,null],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","FigureAudio","Node","create","name","group","content","draggable","isolating","addAttributes","src","default","parseHTML","element","_a","querySelector","getAttribute","title","textContent","duration","$duration","dataset","time","tag","contentElement","renderHTML","HTMLAttributes","class","controls","type","contenteditable","addCommands","_this","setFigureAudio","caption","attrs","chain","insertContent","text","command","tr","commands","doc","selection","position","resolve","to","end","setTextSelection","run","addProseMirrorPlugins","Plugin","key","PluginKey","props","transformPastedHTML","html","replace","FigureEmbed","_b","url","inputUrl","fallbackReturn","allowfullscreen","sandbox","URL","hostname","pathname","searchParams","includes","v","get","qs","URLSearchParams","rel","start","toString","id","match","split","concat","provider","slice","parts","filter","Boolean","author","normalizeEmbedURL","loading","join","frameborder","setFigureEmbed","FigureImage","setFigureImage","encodedTlds","encodedUtlds","target","properties","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","groups","addToGroups","flags","k","push","State","token","j","jr","jd","accepts","go","input","state","nextState","regex","test","has","exactOnly","ta","inputs","next","tt","regexp","ts","len","templateState","allFlags","result","c","flagsForToken","WORD","UWORD","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL$1","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","freeze","__proto__","NL","EMOJI","ASCII_LETTER","LETTER","DIGIT","SPACE","EMOJI_VARIATION","EMOJI_JOINER","tlds","utlds","fastts","defaultt","char","decodeTlds","encoded","words","stack","popDigitCount","popCount","parseInt","substring","pop","defaults","defaultProtocol","events","format","noop","formatHref","nl2br","tagName","validate","truncate","Infinity","className","attributes","ignoreTags","render","Options","opts","defaultRender","o","ignoredTags","uppercaseIgnoredTags","toUpperCase","val","MultiToken","value","tokens","createTokenClass","Token","constructor","super","ir","check","operator","isCallable","option","getObj","obj","isLink","toHref","toFormattedString","options","formatted","toFormattedHref","startIndex","endIndex","toObject","protocol","href","toFormattedObject","eventListeners","Email","Text","Nl","Url","hasProtocol","makeState","arg","initMultiToken","Multi","startIdx","endIdx","warn","console","warnAdvice","INIT","scanner","parser","tokenQueue","pluginQueue","customSchemes","initialized","registerCustomProtocol","optionalSlashSlash","Error","init","Start","Num","Word","UWord","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","tld","utld","sort","a","b","sch","init$2","_ref","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","UriPrefix","SlashSchemeColon","SlashSchemeColonSlash","UrlOpenbrace","UrlOpenbracket","UrlOpenanglebracket","UrlOpenparen","UrlOpenbraceQ","UrlOpenbracketQ","UrlOpenanglebracketQ","UrlOpenparenQ","UrlOpenbraceSyms","UrlOpenbracketSyms","UrlOpenanglebracketSyms","UrlOpenparenSyms","init$1","tokenize","str","cursor","multis","textTokens","secondState","multiLength","latestAccepting","sinceAccepts","subtokens","iterable","index","second","first","charCodeAt","stringToArray","toLowerCase","charCount","charCursor","tokenLength","charsSinceAccepts","run$1","find","filtered","autolink","appendTransaction","transactions","oldState","newState","docChanges","some","transaction","docChanged","eq","preventAutolink","getMeta","transform","combineTransactionSteps","from","pack","ar","l","Array","__spreadArray","mapping","getChangedRanges","forEach","oldRange","newRange","getMarksBetween","item","mark","oldMark","newFrom","map","newTo","newMarks","newMark","oldLinkText","textBetween","undefined","newLinkText","wasLink","removeMark","textBlock","textBeforeWhitespace","nodesInChangedRanges","findChildrenInRange","node","isTextblock","pos","nodeSize","endsWith","wordsBeforeWhitespace","lastWordBeforeSpace","lastWordAndBlockOffset_1","lastIndexOf","link","addMark","steps","Link","Mark","keepOnSplit","onCreate","protocols","optionalSlashes","onDestroy","inclusive","addOptions","openOnClick","linkOnPaste","mergeAttributes","setLink","setMark","setMeta","toggleLink","toggleMark","extendEmptyMarkRange","unsetLink","unsetMark","addPasteRules","markPasteRule","data","getAttributes","plugins","handleClick","view","event","button","closest","_c","window","open","handlePaste","empty","editor","pasteHandler","MentionPluginKey","Mention","inline","selectable","atom","suggestion","allowedPrefixes","pluginKey","range","_e","$from","$to","isNewLine","parentOffset","nodeBefore","nodeAfter","hasBeforeSpace","startsWith","hasAfterSpace","focus","insertContentAt","_d","getSelection","collapseToEnd","allow","schema","nodes","parent","contentMatch","matchType","userName","displayName","ref","addKeyboardShortcuts","Backspace","isMention","anchor","nodesBetween","insertText","Suggestion","italicStarInputRegex","italicStarPasteRegex","italicUnderscoreInputRegex","italicUnderscorePasteRegex","boldStarInputRegex","boldStarPasteRegex","boldUnderscoreInputRegex","boldUnderscorePasteRegex","Bold","getAttrs","style","fontWeight","fontStyle","consuming","setBold","toggleBold","unsetBold","addInputRules","markInputRule","makeArticleEditorExtensions","placeholder","mentionSuggestion","Document","History","Gapcursor","Placeholder","configure","Paragraph","Heading","levels","Strike","Code","CodeBlock","Blockquote","HardBreak","HorizontalRule","OrderedList","ListItem","BulletList","makeCommentEditorExtensions","useArticleEdtor","editorProps","useEditor","extensions","useCommentEditor"],"mappings":"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","x_google_ignoreList":[0,4]}